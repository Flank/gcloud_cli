NAME
    gcloud ai-platform versions create - create a new AI Platform version

SYNOPSIS
    gcloud ai-platform versions create VERSION --model=MODEL [--async]
        [--config=CONFIG] [--description=DESCRIPTION] [--framework=FRAMEWORK]
        [--labels=[KEY=VALUE,...]] [--origin=ORIGIN]
        [--python-version=PYTHON_VERSION] [--runtime-version=RUNTIME_VERSION]
        [--staging-bucket=STAGING_BUCKET] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    Creates a new version of an AI Platform model.

    For more details on managing AI Platform models and versions see
    https://cloud.google.com/ml-engine/docs/how-tos/managing-models-jobs

POSITIONAL ARGUMENTS
     VERSION
        Name of the model version.

REQUIRED FLAGS
     --model=MODEL
        Name of the model.

OPTIONAL FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --config=CONFIG
        Path to a YAML configuration file containing configuration parameters
        for the version
        (https://cloud.google.com/ml/reference/rest/v1/projects.models.versions)
        to create.

        The file is in YAML format. Note that not all attributes of a version
        are configurable; available attributes (with example values) are:

            description: A free-form description of the version.
            deploymentUri: gs://path/to/source
            runtimeVersion: '1.0'
            manualScaling:
              nodes: 10  # The number of nodes to allocate for this model.
            autoScaling:
              minNodes: 0  # The minimum number of nodes to allocate for this model.
            labels:
              user-defined-key: user-defined-value

        The name of the version must always be specified via the required
        VERSION argument.

        Only one of manualScaling or autoScaling can be specified. If both are
        specified in same yaml file an error will be returned.

        If an option is specified both in the configuration file and via
        command-line arguments, the command-line arguments override the
        configuration file.

     --description=DESCRIPTION
        The description of the version.

     --framework=FRAMEWORK
        The ML framework used to train this version of the model. If not
        specified, defaults to 'tensorflow'. FRAMEWORK must be one of:
        scikit-learn, tensorflow, xgboost.

     --labels=[KEY=VALUE,...]
        List of label KEY=VALUE pairs to add.

        Keys must start with a lowercase character and contain only hyphens
        (-), underscores (_), lowercase characters, and numbers. Values must
        contain only hyphens (-), underscores (_), lowercase characters, and
        numbers.

     --origin=ORIGIN
        Location of model/ "directory" (as output by
        https://www.tensorflow.org/versions/r0.12/api_docs/python/state_ops.html#Saver).

        This overrides deploymentUri in the --config file. If this flag is not
        passed, deploymentUri must be specified in the file from --config.

        Can be a Google Cloud Storage (gs://) path or local file path (no
        prefix). In the latter case the files will be uploaded to Google Cloud
        Storage and a --staging-bucket argument is required.

     --python-version=PYTHON_VERSION
        Version of Python used when creating the version. If not set, the
        default version is 2.7. Python 3.5 is available when --runtime-version
        is set to 1.4 and above. Python 2.7 works with all supported runtime
        versions.

     --runtime-version=RUNTIME_VERSION
        AI Platform runtime version for this job. Must be specified unless
        --master-image-uri is specified instead. It is defined in documentation
        along with the list of supported versions:
        https://cloud.google.com/ml-engine/docs/tensorflow/runtime-version-list

     --staging-bucket=STAGING_BUCKET
        Bucket in which to stage training archives.

        Required only if a file upload is necessary (that is, other flags
        include local paths) and no other flags implicitly specify an upload
        path.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

EXAMPLES
    To create an AI Platform version model with the version ID 'versionId' and
    with the name 'model-name', run:

        $ gcloud ai-platform versions create versionId --model=model-name

NOTES
    These variants are also available:

        $ gcloud alpha ai-platform versions create
        $ gcloud beta ai-platform versions create

