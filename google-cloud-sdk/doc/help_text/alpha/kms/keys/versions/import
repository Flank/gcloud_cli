NAME
    gcloud alpha kms keys versions import - import a version into an existing
        crypto key

SYNOPSIS
    gcloud alpha kms keys versions import --algorithm=ALGORITHM
        --import-job=IMPORT_JOB [--key=KEY] [--keyring=KEYRING]
        [--location=LOCATION] [--public-key-file=PUBLIC_KEY_FILE]
        [--rsa-aes-wrapped-key-file=RSA_AES_WRAPPED_KEY_FILE]
        [--target-key-file=TARGET_KEY_FILE] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Imports wrapped key material into a new version within an existing
    crypto key following the import procedure documented at
    https://cloud.google.com/kms/docs/importing-a-key.

REQUIRED FLAGS
     --algorithm=ALGORITHM
        The algorithm of the key being imported.
        Seehttps://cloud.google.com/kms/docs/algorithms for guidance on
        choosing an algorithm. ALGORITHM must be one of: ec-sign-p256-sha256,
        ec-sign-p384-sha384, google-symmetric-encryption,
        rsa-decrypt-oaep-2048-sha256, rsa-decrypt-oaep-3072-sha256,
        rsa-decrypt-oaep-4096-sha256, rsa-decrypt-oaep-4096-sha512,
        rsa-sign-pkcs1-2048-sha256, rsa-sign-pkcs1-3072-sha256,
        rsa-sign-pkcs1-4096-sha256, rsa-sign-pkcs1-4096-sha512,
        rsa-sign-pss-2048-sha256, rsa-sign-pss-3072-sha256,
        rsa-sign-pss-4096-sha256, rsa-sign-pss-4096-sha512.

     --import-job=IMPORT_JOB
        Name of the import job to import from.

OPTIONAL FLAGS
     --key=KEY
        The containing key to import into.

     --keyring=KEYRING
        Key ring of the key.

     --location=LOCATION
        Location of the keyring.

     --public-key-file=PUBLIC_KEY_FILE
        Optional path to the public key of the ImportJob, used to wrap the key
        for import. If missing, the public key will be fetched on your behalf.

     --rsa-aes-wrapped-key-file=RSA_AES_WRAPPED_KEY_FILE
        Path to the wrapped RSA AES key file to import.

     --target-key-file=TARGET_KEY_FILE
        Optional path to the target key to import into a KMS key version. If
        specified, the key will be wrapped in the format produced by the
        PKCS#11 mechanism CKM_RSA_AES_KEY_WRAP

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity. Run $ gcloud help for
    details.

EXAMPLES
    The following command will read the files 'path/to/ephemeral/key' and
    'path/to/target/key' and use them to create a new version with algorithm
    'google-symmetric-encryption' within the 'frodo' crypto key, 'fellowship'
    keyring, and 'us-central1' location using import job 'strider' to unwrap
    the provided key material.        $ gcloud alpha kms keys versions import --location=global \
             --keyring=fellowship \
             --key=frodo \
             --import-job=strider \
             --rsa-aes-wrapped-key-file=path/to/target/key \
             --algorithm=google-symmetric-encryption

NOTES
    This command is currently in ALPHA and may change without notice. If this
    command fails with API permission errors despite specifying the right
    project, you may be trying to access an API with an invitation-only early
    access whitelist. This variant is also available:

        $ gcloud beta kms keys versions import

