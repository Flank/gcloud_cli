NAME
    gcloud alpha composer environments update - update properties of a Cloud
        Composer environment

SYNOPSIS
    gcloud alpha composer environments update
        (ENVIRONMENT : --location=LOCATION)
        (--cloud-sql-machine-type=CLOUD_SQL_MACHINE_TYPE
          | --node-count=NODE_COUNT
          | --web-server-machine-type=WEB_SERVER_MACHINE_TYPE
          | --airflow-version=AIRFLOW_VERSION --image-version=IMAGE_VERSION
          | --update-airflow-configs=[KEY=VALUE,...] --clear-airflow-configs
          | --remove-airflow-configs=[KEY,...]
          | --update-env-variables=[NAME=VALUE,...] --clear-env-variables
          | --remove-env-variables=[NAME,...]
          | --update-labels=[KEY=VALUE,...] --clear-labels
          | --remove-labels=[KEY,...]
          | --update-pypi-packages-from-file=UPDATE_PYPI_PACKAGES_FROM_FILE
          | --update-pypi-package=PACKAGE[EXTRAS_LIST]VERSION_SPECIFIER
          --clear-pypi-packages | --remove-pypi-packages=[PACKAGE,...])
        [--async] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Update properties of a Cloud Composer environment.

POSITIONAL ARGUMENTS
     Environment resource - The environment to update. The arguments in this
     group can be used to specify the attributes of this resource. (NOTE) Some
     attributes are not given arguments in this group but can be set in other
     ways. To set the [project] attribute: provide the argument [environment]
     on the command line with a fully specified name; provide the argument
     [--project] on the command line; set the property [core/project]. This
     must be specified.

       ENVIRONMENT
          ID of the environment or fully qualified identifier for the
          environment. This positional must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          Compute Engine region in which to create the environment.

REQUIRED FLAGS
     The update type. Exactly one of these must be specified:

       --cloud-sql-machine-type=CLOUD_SQL_MACHINE_TYPE
          Cloud SQL machine type used by the Airflow database.

       --node-count=NODE_COUNT
          The new number of nodes running the environment. Must be >= 3.

       --web-server-machine-type=WEB_SERVER_MACHINE_TYPE
          machine type used by the Airflow web server. The list of available
          machine types is available here:
          https://cloud.google.com/composer/pricing.

       Group of arguments for performing in-place environment upgrades.

         --airflow-version=AIRFLOW_VERSION
            Upgrade the environment to a later Airflow version in-place.

            Must be of the form X.Y[.Z].

            The Airflow version is a semantic version. The patch version can be
            omitted and the current version will be selected. The version
            numbers that are used will be stored.

         --image-version=IMAGE_VERSION
            Upgrade the environment to a later version in-place.

            The image version encapsulates the versions of both Cloud Composer
            and Apache Airflow. Must be of the form
            composer-A.B.C[-D.E]-airflow-X.Y[.Z].

            The Cloud Composer and Airflow versions are semantic versions.
            latest can be provided instead of an explicit Cloud Composer
            version number indicating that the server will replace latest with
            the current Cloud Composer version. For the Apache Airflow portion,
            the patch version can be omitted and the current version will be
            selected. The version numbers that are used will be stored.

       Group of arguments for modifying the Airflow configuration.

         --update-airflow-configs=[KEY=VALUE,...]
            A list of Airflow config override KEY=VALUE pairs to set. If a
            config override exists, its value is updated; otherwise, a new
            config override is created.

            KEYs should specify the configuration section and property name,
            separated by a hyphen, for example core-print_stats_interval. The
            section may not contain a closing square brace or period. The
            property name must be non-empty and may not contain an equals sign,
            semicolon, or period. By convention, property names are spelled
            with snake_case. VALUEs may contain any character.

         Arguments available for item removal. At most one of these may be
         specified:

           --clear-airflow-configs
              Removes all Airflow config overrides from the environment.

           --remove-airflow-configs=[KEY,...]
              A list of Airflow config override keys to remove.

       Group of arguments for modifying environment variables.

         --update-env-variables=[NAME=VALUE,...]
            A list of environment variable NAME=VALUE pairs to set and provide
            to the Airflow scheduler, worker, and webserver processes. If an
            environment variable exists, its value is updated; otherwise, a new
            environment variable is created.

            NAMEs are the environment variable names and may contain upper and
            lowercase letters, digits, and underscores; they must not begin
            with a digit.

            User-specified environment variables should not be used to set
            Airflow configuration properties. Instead use the
            --update-airflow-configs flag.

         Arguments available for item removal. At most one of these may be
         specified:

           --clear-env-variables
              Removes all environment variables from the environment.

              Environment variables that have system-provided defaults cannot
              be unset with the --remove-env-variables or --clear-env-variables
              flags; only the user-supplied overrides will be removed.

           --remove-env-variables=[NAME,...]
              A list of environment variables to remove.

              Environment variables that have system-provided defaults cannot
              be unset with the --remove-env-variables or --clear-env-variables
              flags; only the user-supplied overrides will be removed.

       Group of arguments for modifying environment labels.

         --update-labels=[KEY=VALUE,...]
            List of label KEY=VALUE pairs to update. If a label exists its
            value is modified, otherwise a new label is created.

            Keys must start with a lowercase character and contain only hyphens
            (-), underscores (_), lowercase characters, and numbers. Values
            must contain only hyphens (-), underscores (_), lowercase
            characters, and numbers.

         At most one of these may be specified:

           --clear-labels
              Remove all labels. If --update-labels is also specified then
              --clear-labels is applied first.

              For example, to remove all labels:

                  $ gcloud alpha composer environments update --clear-labels

              To set the labels to exactly "foo" and "baz":

                  $ gcloud alpha composer environments update --clear-labels \
                    --update-labels foo=bar,baz=qux

           --remove-labels=[KEY,...]
              List of label keys to remove. If a label does not exist it is
              silently ignored. If --update-labels is also specified then
              --remove-labels is applied first.

       Group of arguments for modifying the PyPI package configuration. At most
       one of these may be specified:

         --update-pypi-packages-from-file=UPDATE_PYPI_PACKAGES_FROM_FILE
            The path to a file containing a list of PyPI packages to install in
            the environment. Each line in the file should contain a package
            specification in the format of the update-pypi-package argument
            defined above. The path can be a local file path or a Google Cloud
            Storage file path (Cloud Storage file path starts with 'gs://').

         --update-pypi-package=PACKAGE[EXTRAS_LIST]VERSION_SPECIFIER
            A PyPI package to add to the environment. If a package exists, its
            value is updated; otherwise, a new package is installed.

            The value takes the form of: PACKAGE[EXTRAS_LIST]VERSION_SPECIFIER,
            as one would specify in a pip requirements file.

            PACKAGE is specified as a package name, such as numpy. EXTRAS_LIST
            is a comma-delimited list of PEP 508 distribution extras that may
            be empty, in which case the enclosing square brackets may be
            omitted. VERSION_SPECIFIER is an optional PEP 440 version
            specifier. If both EXTRAS_LIST and VERSION_SPECIFIER are omitted,
            the = and everything to the right may be left empty.

            This is a repeated argument that can be specified multiple times to
            update multiple packages. If PACKAGE appears more than once, the
            last value will be used.

         Arguments available for item removal. At most one of these may be
         specified:

           --clear-pypi-packages
              Removes all PyPI packages from the environment.

              PyPI packages that are required by the environment's core
              software cannot be uninstalled with the --remove-pypi-packages or
              --clear-pypi-packages flags.

           --remove-pypi-packages=[PACKAGE,...]
              A list of PyPI package names to remove.

              PyPI packages that are required by the environment's core
              software cannot be uninstalled with the --remove-pypi-packages or
              --clear-pypi-packages flags.

OPTIONAL FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

EXAMPLES
    To update the Cloud Composer environment named env-1 to have 8 Airflow
    workers, and not have the production label, run:

        $ gcloud alpha composer environments update env-1 --node-count=8 \
            --remove-labels=production

NOTES
    This command is currently in ALPHA and may change without notice. If this
    command fails with API permission errors despite specifying the right
    project, you may be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud composer environments update
        $ gcloud beta composer environments update

