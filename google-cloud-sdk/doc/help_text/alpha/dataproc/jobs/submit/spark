NAME
    gcloud alpha dataproc jobs submit spark - submit a Spark job to a cluster

SYNOPSIS
    gcloud alpha dataproc jobs submit spark --cluster=CLUSTER
        (--class=MAIN_CLASS | --jar=MAIN_JAR) [--archives=[ARCHIVE,...]]
        [--async] [--bucket=BUCKET] [--driver-log-levels=[PACKAGE=LEVEL,...]]
        [--files=[FILE,...]] [--jars=[JAR,...]] [--labels=[KEY=VALUE,...]]
        [--max-failures-per-hour=MAX_FAILURES_PER_HOUR]
        [--properties=[PROPERTY=VALUE,...]] [--region=REGION]
        [GCLOUD_WIDE_FLAG ...] [-- JOB_ARGS ...]

DESCRIPTION
    (ALPHA) Submit a Spark job to a cluster.

POSITIONAL ARGUMENTS
     [-- JOB_ARGS ...]
        Arguments to pass to the driver.

        The '--' argument must be specified between gcloud specific args on the
        left and JOB_ARGS on the right.

REQUIRED FLAGS
     --cluster=CLUSTER
        The Dataproc cluster to submit the job to.

     Exactly one of these must be specified:

       --class=MAIN_CLASS
          The class containing the main method of the driver. Must be in a
          provided jar or jar that is already on the classpath

       --jar=MAIN_JAR
          The HCFS URI of jar file containing the driver jar.

OPTIONAL FLAGS
     --archives=[ARCHIVE,...]
        Comma separated list of archives to be extracted into the working
        directory of each executor. Must be one of the following file formats:
        .zip, .tar, .tar.gz, or .tgz.

     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --bucket=BUCKET
        The Cloud Storage bucket to stage files in. Defaults to the cluster's
        configured bucket.

     --driver-log-levels=[PACKAGE=LEVEL,...]
        List of package to log4j log level pairs to configure driver logging.
        For example: root=FATAL,com.example=INFO

     --files=[FILE,...]
        Comma separated list of files to be placed in the working directory of
        each executor.

     --jars=[JAR,...]
        Comma separated list of jar files to be provided to the executor and
        driver classpaths.

     --labels=[KEY=VALUE,...]
        List of label KEY=VALUE pairs to add.

        Keys must start with a lowercase character and contain only hyphens
        (-), underscores (_), lowercase characters, and numbers. Values must
        contain only hyphens (-), underscores (_), lowercase characters, and
        numbers.

     --max-failures-per-hour=MAX_FAILURES_PER_HOUR
        Specifies maximum number of times a job can be restarted in event of
        failure. Expressed as a per-hour rate. Default is 0 (no failure
        retries).

     --properties=[PROPERTY=VALUE,...]
        List of key value pairs to configure Spark. For a list of available
        properties, see:
        https://spark.apache.org/docs/latest/configuration.html#available-properties.

     --region=REGION
        Cloud Dataproc region to use. Each Cloud Dataproc region constitutes an
        independent resource namespace constrained to deploying instances into
        Compute Engine zones inside the region. Overrides the default
        dataproc/region property value for this command invocation.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

EXAMPLES
    To submit a Spark job that runs the main class of a jar, run:

        $ gcloud alpha dataproc jobs submit spark --cluster=my_cluster \
            --region=us-central1 --jar=my_jar.jar -- arg1 arg2

    To submit a Spark job that runs a specific class of a jar, run:

        $ gcloud alpha dataproc jobs submit spark --cluster=my_cluster \
            --region=us-central1 --class=org.my.main.Class \
            --jars=my_jar1.jar,my_jar2.jar -- arg1 arg2

    To submit a Spark job that runs a jar that is already on the cluster, run:

        $ gcloud alpha dataproc jobs submit spark --cluster=my_cluster \
            --region=us-central1 \
            --class=org.apache.spark.examples.SparkPi \
            --jars=file:///usr/lib/spark/examples/jars/spark-examples.jar \
            -- 1000

NOTES
    This command is currently in ALPHA and may change without notice. If this
    command fails with API permission errors despite specifying the right
    project, you may be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud dataproc jobs submit spark
        $ gcloud beta dataproc jobs submit spark

