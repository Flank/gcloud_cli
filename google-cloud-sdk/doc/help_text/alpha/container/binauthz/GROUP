NAME
    gcloud alpha container binauthz - manage attestations for Binary
        Authorization on Google Cloud Platform

SYNOPSIS
    gcloud alpha container binauthz GROUP | COMMAND [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Binary Authorization is a feature which allows binaries to run on
    Google Cloud Platform only if they are appropriately attested. Binary
    Authorization is configured by creating a policy.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --configuration,
    --flatten, --format, --help, --log-http, --project, --quiet, --trace-token,
    --user-output-enabled, --verbosity. Run $ gcloud help for details.

GROUPS
    GROUP is one of the following:

     attestations
        (ALPHA) Create and manage Google Binary Authorization attestations.

COMMANDS
    COMMAND is one of the following:

     create-signature-payload
        (ALPHA) Create a JSON container image signature object.

EXAMPLES
    This example assumes that you have created a keypair using gpg, usually by
    running gpg --gen-key ..., with Name-Email set to
    attesting_user@example.com for your attesting authority.

    First, some convenience variables for brevity:

        ATTESTING_USER="attesting_user@example.com"
        DIGEST="000000000000000000000000000000000000000000000000000000000000abcd"
        ARTIFACT_URL="gcr.io/example-project/example-image@sha256:${DIGEST}"

    Export your keypair's public key:

        gpg \
            --armor \
            --export "${ATTESTING_USER}" \
            --output build_key1.pgp

    Or if you're creating v2 kind=ATTESTATION_AUTHORITY attestations, export
    your key's fingerprint (note this may differ based on version and
    implementations of gpg):

        gpg \
            --with-colons \
            --with-fingerprint \
            --force-v4-certs \
            --list-keys \
            "${ATTESTING_USER}" | grep fpr | cut --delimiter=':' --fields 10

    This should produce a 40 character, hexidecimal encoded string. See
    https://tools.ietf.org/html/rfc4880#section-12.2 for more information on
    key fingerprints.

    Create your attestation payload:

        gcloud alpha container binauthz create-signature-payload \
            --artifact-url="${ARTIFACT_URL}" \
          > example_payload.txt

    Create a signature from your attestation payload:

        gpg \
          --local-user "${ATTESTING_USER}" \
          --armor \
          --clearsign \
          --output example_signature.pgp \
          example_payload.txt

    Upload the attestation to Container Analysis:

        gcloud alpha container binauthz attestations create \
          --public-key-file=build_key1.pgp \
          --signature-file=example_signature.pgp \
          --artifact-url="${ARTIFACT_URL}"

    Or if you're creating v2 kind=ATTESTATION_AUTHORITY attestations:

        gcloud alpha container binauthz attestations create \
          --pgp-key-fingerprint=${KEY_FINGERPRINT} \
          --signature-file=example_signature.pgp \
          --artifact-url="${ARTIFACT_URL}" \
          --attestation-authority-note=providers/example-prj/notes/note-id

    List the attestation by artifact URL. --format can be passed to output the
    attestations as json or another supported format:

        gcloud alpha container binauthz attestations list \
          --artifact-url="${ARTIFACT_URL}" \
          --format=yaml

          ---
          - |
            -----BEGIN PGP PUBLIC KEY BLOCK-----
            Version: GnuPG v1
            ... SNIP ...
            -----END PGP PUBLIC KEY BLOCK-----
          - |
            -----BEGIN PGP SIGNED MESSAGE-----
            Hash: SHA1
            ... SNIP ...
            -----BEGIN PGP SIGNATURE-----
            Version: GnuPG v1
            ... SNIP ...
            -----END PGP SIGNATURE-----

    List all artifact URLs on the project for which Container Analysis
    Occurrences exist. This list includes the list of all URLs with BinAuthz
    attestations:

        gcloud alpha container binauthz attestations list

          ---
          https://gcr.io/example-project/example-image@sha256:000000000000000000000000000000000000000000000000000000000000abcd
          ...

    Listing also works for kind=ATTESTATION_AUTHORITY attestations, just pass
    the attestation authority note:

        gcloud alpha container binauthz attestations list \
          --artifact-url="${ARTIFACT_URL}" \
          --attestation-authority-note=providers/exmple-prj/notes/note-id \
          --format=yaml

          ...

NOTES
    This command is an internal implementation detail and may change or
    disappear without notice. This command is currently in ALPHA and may change
    without notice. Usually, users of ALPHA commands and flags need to apply
    for access, agree to applicable terms, and have their projects whitelisted.
    Contact Google or sign up on a product's page for ALPHA access. Product
    pages can be found at https://cloud.google.com/products/.

