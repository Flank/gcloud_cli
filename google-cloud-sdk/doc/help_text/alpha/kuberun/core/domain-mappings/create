NAME
    gcloud alpha kuberun core domain-mappings create - creates a domain mapping

SYNOPSIS
    gcloud alpha kuberun core domain-mappings create --domain=DOMAIN
        --service=SERVICE [--namespace=NAMESPACE]
        [--cluster=CLUSTER --cluster-location=CLUSTER_LOCATION
          | --context=CONTEXT --kubeconfig=KUBECONFIG] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Creates a domain mapping.

REQUIRED FLAGS
     --domain=DOMAIN
        The domain mapping to map the service to.

     --service=SERVICE
        The service to map to a domain.

OPTIONAL FLAGS
     --namespace=NAMESPACE
        Kubernetes namespace to operate in.

     At most one of these may be specified:

       --cluster=CLUSTER
          ID of the cluster or fully qualified identifier for the cluster. If
          specified, then --cluster-location is required. Cannot be specified
          together with --context and --kubeconfig. This flag must be specified
          if any of the other arguments in this group are specified.

       --cluster-location=CLUSTER_LOCATION
          Zone in which the cluster is located. If specified, then --cluster is
          required. Cannot be specified together with --context and
          --kubeconfig. This flag must be specified if any of the other
          arguments in this group are specified.

       --context=CONTEXT
          Name of the context in your kubectl config file to use for
          connecting. Cannot be specified together with --cluster and
          --cluster-location.

       --kubeconfig=KUBECONFIG
          Absolute path to your kubectl config file. If not specified, the
          colon- or semicolon-delimited list of paths specified by $KUBECONFIG
          will be used. If $KUBECONFIG is unset, this defaults to
          ~/.kube/config. Cannot be specified together with --cluster and
          --cluster-location.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

EXAMPLES
    To map service myservice in the default namespace to domain example.com,
    run

        $ gcloud alpha kuberun core domain-mappings create \
          --service=myservice --domain=example.com

NOTES
    This command is an internal implementation detail and may change or
    disappear without notice. This command is currently in ALPHA and may change
    without notice. If this command fails with API permission errors despite
    specifying the right project, you may be trying to access an API with an
    invitation-only early access allowlist.

