NAME
    gcloud alpha kuberun clusters services deploy - deploy a Knative service

SYNOPSIS
    gcloud alpha kuberun clusters services deploy SERVICE --image=IMAGE
        [--args=ARGS] [--async] [--command=COMMAND] [--concurrency=CONCURRENCY]
        [--connectivity=CONNECTIVITY] [--cpu=CPU]
        [--max-instances=MAX_INSTANCES] [--memory=MEMORY]
        [--min-instances=MIN_INSTANCES] [--namespace=NAMESPACE] [--port=PORT]
        [--revision-suffix=REVISION_SUFFIX] [--service-account=SERVICE_ACCOUNT]
        [--timeout=TIMEOUT] [--[no-]use-http2]
        [--clear-config-maps | --set-config-maps=SET_CONFIG_MAPS
          | --remove-config-maps=REMOVE_CONFIG_MAPS
          --update-config-maps=UPDATE_CONFIG_MAPS]
        [--clear-env-vars | --set-env-vars=SET_ENV_VARS
          | --remove-env-vars=REMOVE_ENV_VARS
          --update-env-vars=UPDATE_ENV_VARS]
        [--clear-labels | --labels=LABELS
          | --remove-labels=REMOVE_LABELS --update-labels=UPDATE_LABELS]
        [--clear-secrets | --set-secrets=SET_SECRETS
          | --remove-secrets=REMOVE_SECRETS --update-secrets=UPDATE_SECRETS]
        [--cluster=CLUSTER --cluster-location=CLUSTER_LOCATION
          | --context=CONTEXT --kubeconfig=KUBECONFIG] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Deploy a Knative service.

POSITIONAL ARGUMENTS
     SERVICE
        ID of the service or fully qualified identifier for the service.

REQUIRED FLAGS
     --image=IMAGE
        Name of the container image to deploy (e.g.
        gcr.io/cloudrun/hello:latest).

OPTIONAL FLAGS
     --args=ARGS
        Comma-separated arguments passed to the command run by the container
        image. If not specified and no '--command' is provided, the container
        image's default Cmd is used. Otherwise, if not specified, no arguments
        are passed. To reset this field to its default, pass an empty string.

     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --command=COMMAND
        Entrypoint for the container image. If not specified, the container
        image's default Entrypoint is run. To reset this field to its default,
        pass an empty string.

     --concurrency=CONCURRENCY
        Maximum number of concurrent requests allowed per container instance.
        If concurrency is unspecified, any number of concurrent requests are
        allowed. To unset this field, provide the special value "default".

     --connectivity=CONNECTIVITY
        Defaults to 'external'. If 'external', the service can be invoked
        through the internet, in addition to through the cluster network.
        CONNECTIVITY must be one of:

         external
            Visible from outside the cluster.
         internal
            Visible only within the cluster.

     --cpu=CPU
        CPU limit, in Kubernetes cpu units, for the resource.Ex: .5, 500m, 2.

     --max-instances=MAX_INSTANCES
        Maximum number of container instances of the Service to run. Use
        'default' to unset the limit and use the platform default.

     --memory=MEMORY
        Memory limit for the resource. Ex: 1Gi, 512Mi.

     --min-instances=MIN_INSTANCES
        Minimum number of container instances of the Service to run or
        'default' to remove any minimum.

     --namespace=NAMESPACE
        Kubernetes namespace to operate in.

     --port=PORT
        Container port to receive requests at. Also sets the $PORT environment
        variable. Must be a number between 1 and 65535, inclusive. To unset
        this field, pass the special value "default".

     --revision-suffix=REVISION_SUFFIX
        Suffix of the revision name. Revision names always start with the
        service name automatically. For example, specifying
        --revision-suffix=v1 for a service named 'helloworld', would lead to a
        revision named 'helloworld-v1'.

     --service-account=SERVICE_ACCOUNT
        Service account associated with the revision of the service. The
        service account represents the identity of the running revision, and
        determines what permissions the revision has. This is the name of a
        Kubernetes service account in the same namespace as the service. If not
        provided, the revision will use the default Kubernetes namespace
        service account.

     --timeout=TIMEOUT
        Maximum request execution time (timeout). It is specified as a
        duration; for example, "10m5s" is ten minutes and five seconds. If you
        don't specify a unit, seconds is assumed. For example, "10" is 10
        seconds.

     --[no-]use-http2
        If true, uses HTTP/2 for connections to the service. Use --use-http2 to
        enable and --no-use-http2 to disable.

     Config map to mount or provide as environment variables. Keys starting
     with a forward slash '/' are mount paths. All other keys correspond to
     environment variables. The values associated with each of these should be
     in the form CONFIG_MAP_NAME:KEY_IN_CONFIG_MAP; you may omit the key within
     the config map to specify a mount of all keys within the config map. For
     example: --update-config-maps=/my/path=myconfig,ENV=otherconfig:key.json
     will create a volume with config map 'myconfig' and mount that volume at
     '/my/path'. Because no config map key was specified, all keys in
     'myconfig' will be included. An environment variable named ENV will also
     be created whose value is the value of 'key.json' in 'otherconfig'. At
     most one of these may be specified:

       --clear-config-maps
          If true, removes all config-maps.

       --set-config-maps=SET_CONFIG_MAPS
          List of key-value pairs to set as config-maps. All existing
          config-maps will be removed first.

       Only --update-config-maps and --remove-config-maps can be used together.
       If both are specified, --remove-config-maps will be applied first.

         --remove-config-maps=REMOVE_CONFIG_MAPS
            List of config-maps to be removed.

         --update-config-maps=UPDATE_CONFIG_MAPS
            List of key-value pairs to set as config-maps.

     At most one of these may be specified:

       --clear-env-vars
          If true, removes all environment variables.

       --set-env-vars=SET_ENV_VARS
          List of key-value pairs to set as environment variables. All existing
          environment variables will be removed first.

       Only --update-env-vars and --remove-env-vars can be used together. If
       both are specified, --remove-env-vars will be applied first.

         --remove-env-vars=REMOVE_ENV_VARS
            List of environment variables to be removed.

         --update-env-vars=UPDATE_ENV_VARS
            List of key-value pairs to set as environment variables.

     At most one of these may be specified:

       --clear-labels
          If true, removes all labels. If --update-labels is also specified
          then --clear-labels is applied first.

       --labels=LABELS
          List of label KEY=VALUE pairs to add. An alias to --update-labels.

       --remove-labels=REMOVE_LABELS
          List of label keys to remove. If a label does not exist it is
          silently ignored. If --update-labels is also specified then
          --remove-labels is applied first.

       --update-labels=UPDATE_LABELS
          List of label KEY=VALUE pairs to update. If a label exists its value
          is modified, otherwise a new label is created.

     Secrets to mount or provide as environment variables. Keys starting with a
     forward slash '/' are mount paths. All other keys correspond to
     environment variables. The values associated with each of these should be
     in the form SECRET_NAME:KEY_IN_SECRET; you may omit the key within the
     secret to specify a mount of all keys within the secret. For example:
     --update-secrets=/my/path=mysecret,ENV=othersecret:key.json will create a
     volume with secret 'mysecret' and mount that volume at '/my/path'. Because
     no secret key was specified, all keys in 'mysecret' will be included. An
     environment variable named ENV will also be created whose value is the
     value of 'key.json' in 'othersecret'. At most one of these may be
     specified:

       --clear-secrets
          Remove all secrets.

       --set-secrets=SET_SECRETS
          List of key-value pairs to set as secrets. All existing secrets will
          be removed first.

       Only --update-secrets and --remove-secrets can be used together. If both
       are specified, --remove-secrets will be applied first.

         --remove-secrets=REMOVE_SECRETS
            List of secrets to be removed.

         --update-secrets=UPDATE_SECRETS
            List of key-value pairs to set as secrets.

     At most one of these may be specified:

       --cluster=CLUSTER
          ID of the cluster or fully qualified identifier for the cluster. If
          specified, then --cluster-location is required. Cannot be specified
          together with --context and --kubeconfig. This flag must be specified
          if any of the other arguments in this group are specified.

       --cluster-location=CLUSTER_LOCATION
          Zone in which the cluster is located. If specified, then --cluster is
          required. Cannot be specified together with --context and
          --kubeconfig. This flag must be specified if any of the other
          arguments in this group are specified.

       --context=CONTEXT
          Name of the context in your kubectl config file to use for
          connecting. Cannot be specified together with --cluster and
          --cluster-location.

       --kubeconfig=KUBECONFIG
          Absolute path to your kubectl config file. If not specified, the
          colon- or semicolon-delimited list of paths specified by $KUBECONFIG
          will be used. If $KUBECONFIG is unset, this defaults to
          ~/.kube/config. Cannot be specified together with --cluster and
          --cluster-location.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is an internal implementation detail and may change or
    disappear without notice. This command is currently in ALPHA and may change
    without notice. If this command fails with API permission errors despite
    specifying the right project, you may be trying to access an API with an
    invitation-only early access allowlist.

