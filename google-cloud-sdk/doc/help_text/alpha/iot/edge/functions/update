NAME
    gcloud alpha iot edge functions update - update an Edge Function

SYNOPSIS
    gcloud alpha iot edge functions update
        (FUNCTION : --device=DEVICE --region=REGION --registry=REGISTRY)
        [--arch=ARCH] [--description=DESCRIPTION]
        [--device-binding=[DEVICE_BINDING,...]] [--entry-point=ENTRY_POINT]
        [--function-type=FUNCTION_TYPE; default="on-demand"]
        [--gcs-source-staging-dir=GCS_SOURCE_STAGING_DIR]
        [--input-topic=[INPUT_TOPIC,...]] [--memory=MEMORY]
        [--output-topic=[OUTPUT_TOPIC,...]] [--source=SOURCE]
        [--timeout=TIMEOUT; default="540s"]
        [--volume-binding=[VOLUME_BINDING,...]]
        [--clear-env-vars | --env-vars=[KEY=VALUE,...]
          | --env-vars-file=ENV_VARS_FILE
          | --remove-env-vars=[REMOVE_ENV_VARS,...]
          --update-env-vars=[KEY=VALUE,...]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Update an Edge Function.

POSITIONAL ARGUMENTS
     Function resource - The Edge Function you want to update. The arguments in
     this group can be used to specify the attributes of this resource. (NOTE)
     Some attributes are not given arguments in this group but can be set in
     other ways. To set the [project] attribute: provide the argument
     [function] on the command line with a fully specified name; provide the
     argument [--project] on the command line; set the property [core/project].
     This must be specified.

       FUNCTION
          ID of the function or fully qualified identifier for the function.
          This positional must be specified if any of the other arguments in
          this group are specified.

       --device=DEVICE
          The name of the Cloud IoT Edge device.

       --region=REGION
          The name of the Cloud IoT region.

       --registry=REGISTRY
          The name of the Cloud IoT registry.

FLAGS
     --arch=ARCH
        Architecture to build Edge function for. ARCH must be one of: aarch64,
        armhf, x86-64.

     --description=DESCRIPTION
        Description for the Edge Function.

     --device-binding=[DEVICE_BINDING,...]
        Device to expose, provided in SOURCE[:DESTINATION][:CGROUP_PERMS]
        format. (Same as 'docker run' command's --device options.) When
        DESTINATION is not provided, SOURCE path will also be used for it.
        Default value for cgroups permission is 'rwm'.

     --entry-point=ENTRY_POINT
        By default when an Edge Function is triggered, it executes a JavaScript
        function with the same name. Or, if it cannot find a function with the
        same name, it executes a function named function. You can use this flag
        to override the default behavior, by specifying the name of a
        JavaScript function that will be executed when the Edge Function is
        triggered.

     --function-type=FUNCTION_TYPE; default="on-demand"
        Type of the Edge function. An on-demand function is triggered for every
        publish to the input topics, and a stream-processing function listens
        to the input topics, process data, and publishes to the output topics.
        FUNCTION_TYPE must be one of: on-demand, stream-processing.

     --gcs-source-staging-dir=GCS_SOURCE_STAGING_DIR
        A directory in Google Cloud Storage to copy the source used for staging
        the build. If the specified bucket does not exist, Cloud Build will
        create one. If you don't set this field,
        gs://[PROJECT_ID]_cloudbuild/source is used.

     --input-topic=[INPUT_TOPIC,...]
        Input topic(s) for this component. The input topics feed information or
        trigger actions in each components. Multiple topics can be specified by
        using a comma-separated list of topics. Each topic can be specified in
        [NAME:]TOPIC format, which means that an abstract name can optionally
        be given to a topic. The NAME and TOPIC part must not contain any
        colons.

     --memory=MEMORY
        Limit on the amount of memory the Edge function or container can use.
        The memory size can be given by a number followed by unit - e.g. 128MB,
        2GiB. Minimum allowed size for this flag is 1MB. When deploying an
        update to an existing function or container, it will keep its old
        memory limit unless you specify this flag.

     --output-topic=[OUTPUT_TOPIC,...]
        Output topic(s) for this component. The output topics are used to post
        result from component logic execution. Multiple topics can be specified
        by using a comma-separated list of topics. Each topic can be specified
        in [NAME:]TOPIC format, which means that an abstract name can
        optionally be given to a topic. The NAME and TOPIC part must not
        contain any colons.

     --source=SOURCE
        Location of source code to deploy.

        Location of the source can be one of the following:

        * Source code in Google Cloud Storage (must be an archive),
        * Already deployed Edge Function image in Google Container Registry,
        * Local filesystem path (root directory of function source).

    The value of the flag will be interpreted as a Cloud Storage location, if
    it starts with gs://.

    The value will be interpreted as a reference to Container Registry, if it
    starts with [REGION.]gcr.io/. Available values for REGION are: asia, us,
    eu.

    Otherwise, it will be interpreted as the local filesystem path. When
    deploying source from the local filesystem, this command skips files
    specified in the .gcloudignore file (see gcloud topic gcloudignore for more
    information). If the .gcloudignore file doesn't exist, the command will try
    to create it.

    If the source location is not explicitly set, new functions will deploy
    from the current directory. Existing functions keep their old source.

     --timeout=TIMEOUT; default="540s"
        The function execution timeout, e.g. 30s for 30 seconds. Defaults to
        original value for existing function or 60 seconds for new functions.
        Cannot be more than 540s. See $ gcloud topic datetimes for information
        on duration formats.

     --volume-binding=[VOLUME_BINDING,...]
        Volume mounts, provided in [SOURCE:]DESTINATION[:(rw|ro)] format. (Same
        as 'docker run' command's -v/--volume options.) When SOURCE is not
        provided, DESTINATION path will also be used for it. Default value for
        third part is rw, which makes the volume writable. Use ro to mount
        volume in read-only mode.

     At most one of these may be specified:

       --clear-env-vars
          Remove all environment variables.

       --env-vars=[KEY=VALUE,...]
          List of key-value pairs to set as environment variables. All existing
          environment variables will be removed first.

       --env-vars-file=ENV_VARS_FILE
          Path to YAML file with definitions for all environment variables. All
          existing environment variables will be removed before the new
          environment variables are added.

       Only --update-env-vars and --remove-env-vars can be used together. If
       both are specified, --remove-env-vars will be applied first.

         --remove-env-vars=[REMOVE_ENV_VARS,...]
            List of environment variables to be removed.

         --update-env-vars=[KEY=VALUE,...]
            List of key-value pairs to update environment variables.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity. Run $ gcloud help for
    details.

API REFERENCE
    This command uses the edge/v1alpha1 API. The full documentation for this
    API can be found at: https://cloud.google.com/iot-edge/

NOTES
    This command is an internal implementation detail and may change or
    disappear without notice. This command is currently in ALPHA and may change
    without notice. If this command fails with API permission errors despite
    specifying the right project, you may be trying to access an API with an
    invitation-only early access whitelist.

