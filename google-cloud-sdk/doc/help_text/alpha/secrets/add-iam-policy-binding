NAME
    gcloud alpha secrets add-iam-policy-binding - add IAM policy binding to a
        secret

SYNOPSIS
    gcloud alpha secrets add-iam-policy-binding SECRET --member=MEMBER
        --role=ROLE
        [--condition=[KEY=VALUE,...]
          | --condition-from-file=CONDITION_FROM_FILE] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Add an IAM policy binding to the IAM policy of a secret. One
    binding consists of a member, a role and an optional condition.

POSITIONAL ARGUMENTS
     Secret resource - Name of the secret for which to add the IAM policy
     binding. This represents a Cloud resource. (NOTE) Some attributes are not
     given arguments in this group but can be set in other ways. To set the
     [project] attribute: provide the argument [secret] on the command line
     with a fully specified name; set the property [core/project]; provide the
     argument [--project] on the command line. This must be specified.

       SECRET
          ID of the secret or fully qualified identifier for the secret.

REQUIRED FLAGS
     --member=MEMBER
        The member to add the binding for. Should be of the form
        user|group|serviceAccount:email or domain:domain.

        Examples: user:test-user@gmail.com, group:admins@example.com,
        serviceAccount:test123@example.domain.com, or
        domain:example.domain.com.

        Can also be one of the following special values:
        * allUsers - Special identifier that represents anyone who is on the
          internet, with or without a Google account.
        * allAuthenticatedUsers - Special identifier that represents anyone
          who is authenticated with a Google account or a service account.

     --role=ROLE
        Define the role of the member.

OPTIONAL FLAGS
     At most one of these may be specified:

       --condition=[KEY=VALUE,...]
          Condition of the binding to be added. When condition is explicitly
          specified as None (e.g. --condition=None), a binding without a
          condition is added. When --condition is specified and is not a None
          condition, --role cannot be a primitive role. Primitive roles are
          roles/editor, roles/owner, and roles/viewer.

       expression
          (Required) Expression of the condition which evaluates to True or
          False. This uses a subset of Common Expression Language syntax.

       title
          (Required) Title for the expression, i.e. a short string describing
          its purpose.

       description
          (Optional) Description for the expression. This is a longer text
          which describes the expression.

          NOTE: An unsatisfied condition will not allow access via this
          binding.

       --condition-from-file=CONDITION_FROM_FILE
          Path to a local JSON or YAML file that defines the condition. To see
          available fields, see the help for --condition.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity. Run $ gcloud help for
    details.

API REFERENCE
    This command uses the secretmanager/v1alpha API. The full documentation for
    this API can be found at:
    https://cloud.google.com/solutions/secrets-management/

EXAMPLES
    To add an IAM policy binding for the role of
    'roles/secretmanager.secretReader' for the user 'test-user@gmail.com' on
    my-secret, run:

        $ gcloud alpha secrets add-iam-policy-binding my-secret \
            --member='user:test-user@gmail.com' \
            --role='roles/secretmanager.secretReader'

    See https://cloud.google.com/iam/docs/managing-policies for details of
    policy role and member types.

NOTES
    This command is an internal implementation detail and may change or
    disappear without notice. This command is currently in ALPHA and may change
    without notice. If this command fails with API permission errors despite
    specifying the right project, you may be trying to access an API with an
    invitation-only early access whitelist.

