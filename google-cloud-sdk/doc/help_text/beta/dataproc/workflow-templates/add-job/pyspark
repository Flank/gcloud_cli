NAME
    gcloud beta dataproc workflow-templates add-job pyspark - add a PySPark job
        to the workflow template

SYNOPSIS
    gcloud beta dataproc workflow-templates add-job pyspark PY_FILE
        --step-id=STEP_ID --workflow-template=WORKFLOW_TEMPLATE
        [--archives=[ARCHIVE,...]] [--driver-log-levels=[PACKAGE=LEVEL,...]]
        [--files=[FILE,...]] [--jars=[JAR,...]] [--labels=[KEY=VALUE,...]]
        [--properties=[PROPERTY=VALUE,...]] [--py-files=[PY_FILE,...]]
        [--region=REGION] [--start-after=STEP_ID,[STEP_ID,...]]
        [GCLOUD_WIDE_FLAG ...] [-- JOB_ARGS ...]

DESCRIPTION
    (BETA) Add a PySPark job to the workflow template.

POSITIONAL ARGUMENTS
     PY_FILE
        The main .py file to run as the driver.

     [-- JOB_ARGS ...]
        The arguments to pass to the driver.

        The '--' argument must be specified between gcloud specific args on the
        left and JOB_ARGS on the right.

REQUIRED FLAGS
     --step-id=STEP_ID
        The step ID of the job in the workflow template.

     --workflow-template=WORKFLOW_TEMPLATE
        The dataproc workflow template ID.

OPTIONAL FLAGS
     --archives=[ARCHIVE,...]
        Comma separated list of archives to be provided to the job. must be one
        of the following file formats: .zip, .tar, .tar.gz, or .tgz.

     --driver-log-levels=[PACKAGE=LEVEL,...]
        A list of package to log4j log level pairs to configure driver logging.
        For example: root=FATAL,com.example=INFO

     --files=[FILE,...]
        Comma separated list of files to be provided to the job.

     --jars=[JAR,...]
        Comma separated list of jar files to be provided to the executor and
        driver classpaths.

     --labels=[KEY=VALUE,...]
        A list of label KEY=VALUE pairs to add.

     --properties=[PROPERTY=VALUE,...]
        A list of key value pairs to configure PySpark.

     --py-files=[PY_FILE,...]
        Comma separated list of Python files to be provided to the job.Must be
        one of the following file formats" .py, ,.zip, or .egg

     --region=REGION
        Specifies the Cloud Dataproc region to use. Each Cloud Dataproc region
        constitutes an independent resource namespace constrained to deploying
        instances into Google Compute Engine zones inside the region. The
        default value of "global" is a special multi-region namespace which is
        capable of deploying instances into all Google Compute Engine zones
        globally, and is disjoint from other Cloud Dataproc regions. Overrides
        the default dataproc/region property value for this command invocation.

     --start-after=STEP_ID,[STEP_ID,...]
        (Optional) List of step IDs to start this job after.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --configuration,
    --flatten, --format, --help, --log-http, --project, --quiet, --trace-token,
    --user-output-enabled, --verbosity. Run $ gcloud help for details.

NOTES
    This command is currently in BETA and may change without notice.

