NAME
    gcloud beta compute backend-services create - create a backend service

SYNOPSIS
    gcloud beta compute backend-services create BACKEND_SERVICE_NAME
        [--affinity-cookie-ttl=AFFINITY_COOKIE_TTL]
        [--no-cache-key-include-host] [--no-cache-key-include-protocol]
        [--no-cache-key-include-query-string]
        [--connection-draining-timeout=CONNECTION_DRAINING_TIMEOUT]
        [--custom-request-header=CUSTOM_REQUEST_HEADER]
        [--description=DESCRIPTION] [--enable-cdn]
        [--health-checks=HEALTH_CHECK,[...]]
        [--http-health-checks=HTTP_HEALTH_CHECK,[...]]
        [--https-health-checks=HTTPS_HEALTH_CHECK,[...]]
        [--iap=disabled|enabled,[oauth2-client-id=OAUTH2-CLIENT-ID,
          oauth2-client-secret=OAUTH2-CLIENT-SECRET]]
        [--load-balancing-scheme=LOAD_BALANCING_SCHEME; default="EXTERNAL"]
        [--port-name=PORT_NAME] [--protocol=PROTOCOL]
        [--session-affinity=SESSION_AFFINITY]
        [--signed-url-cache-max-age=SIGNED_URL_CACHE_MAX_AGE]
        [--timeout=TIMEOUT; default="30s"]
        [--cache-key-query-string-blacklist=[QUERY_STRING,...]
          | --cache-key-query-string-whitelist=QUERY_STRING,[...]]
        [--global | --region=REGION] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (BETA) gcloud beta compute backend-services create is used to create
    backend services. Backend services define groups of backends that can
    receive traffic. Each backend group has parameters that define the group's
    capacity (e.g. max CPU utilization, max queries per second, ...). URL maps
    define which requests are sent to which backend services.

    Backend services created through this command will start out without any
    backend groups. To add backend groups, use 'gcloud compute backend-services
    add-backend' or 'gcloud compute backend-services edit'.

POSITIONAL ARGUMENTS
     BACKEND_SERVICE_NAME
        The name of the backend service to create.

FLAGS
     --affinity-cookie-ttl=AFFINITY_COOKIE_TTL
        If session-affinity is set to "generated_cookie", this flag sets the
        TTL, in seconds, of the resulting cookie. A setting of 0 indicates that
        the cookie should be transient. See $ gcloud topic datetimes for
        information on duration formats.

     --cache-key-include-host
        Enable including host in cache key. If enabled, requests to different
        hosts will be cached separately. Can only be applied for global
        resources. Enabled by default, use --no-cache-key-include-host to
        disable.

     --cache-key-include-protocol
        Enable including protocol in cache key. If enabled, http and https
        requests will be cached separately. Can only be applied for global
        resources. Enabled by default, use --no-cache-key-include-protocol to
        disable.

     --cache-key-include-query-string
        Enable including query string in cache key. If enabled, the query
        string parameters will be included according to
        --cache-key-query-string-whitelist and
        --cache-key-query-string-blacklist. If neither is set, the entire query
        string will be included. If disabled, then the entire query string will
        be excluded. Can only be applied for global resources. Enabled by
        default, use --no-cache-key-include-query-string to disable.

     --connection-draining-timeout=CONNECTION_DRAINING_TIMEOUT
        Connection draining timeout to be used during removal of VMs from
        instance groups. This guarantees that for the specified time all
        existing connections to a VM will remain untouched, but no new
        connections will be accepted. Set timeout to zero to disable connection
        draining. Enable feature by specifying a timeout of up to one hour. If
        the flag is omitted API default value (0s) will be used. See $ gcloud
        topic datetimes for information on duration formats.

     --custom-request-header=CUSTOM_REQUEST_HEADER
        Specifies a HTTP Header to be added by your load balancer. This flag
        can be repeated to specify multiple headers. For example:

            $ gcloud beta compute backend-services create NAME             \
                --custom-request-header "header-name: value"             \
                --custom-request-header "another-header:"

     --description=DESCRIPTION
        An optional, textual description for the backend service.

     --enable-cdn
        Enable Cloud CDN for the backend service. Cloud CDN can cache HTTP
        responses from a backend service at the edge of the network, close to
        users. Cloud CDN is disabled by default.

     --health-checks=HEALTH_CHECK,[...]
        Specifies a list of health check objects for checking the health of the
        backend service. Health checks need not be for the same protocol as
        that of the backend service.

     --http-health-checks=HTTP_HEALTH_CHECK,[...]
        Specifies a list of HTTP health check objects for checking the health
        of the backend service.

     --https-health-checks=HTTPS_HEALTH_CHECK,[...]
        Specifies a list of HTTPS health check objects for checking the health
        of the backend service.

     --iap=disabled|enabled,[oauth2-client-id=OAUTH2-CLIENT-ID,oauth2-client-secret=OAUTH2-CLIENT-SECRET]
        Configure Identity Aware Proxy (IAP) service. You can configure IAP to
        be 'enabled' or 'disabled' (default). If it is enabled you can provide
        values for 'oauth2-client-id' and 'oauth2-client-secret'. For example,
        '--iap=enabled,oauth2-client-id=foo,oauth2-client-secret=bar' will turn
        IAP on, and '--iap=disabled' will turn it off. See
        https://cloud.google.com/iap/ for more information about this feature.

     --load-balancing-scheme=LOAD_BALANCING_SCHEME; default="EXTERNAL"
        Specifies if this is internal or external load balancer.
        LOAD_BALANCING_SCHEME must be one of: INTERNAL, EXTERNAL.

     --port-name=PORT_NAME
        The name of a service that has been added to an instance group in this
        backend. Instance group services map a name to a port number which is
        used by the load balancing service. Only one port-name may be added to
        a backend service, and that name must exist as a service on all
        instance groups that are a part of this backend service. The port
        number associated with the name may differ between instances. If you do
        not specify this flag, your instance groups must have a service named
        http configured. See also gcloud compute instance-groups
        set-named-ports --help.

     --protocol=PROTOCOL
        The protocol for incoming requests. PROTOCOL must be one of: HTTP,
        HTTPS, SSL, TCP, UDP.

     --session-affinity=SESSION_AFFINITY
        The type of session affinity to use for this backend service.
        SESSION_AFFINITY must be one of:

         CLIENT_IP
            Route requests to instances based on the hash of the client's IP
            address.
         CLIENT_IP_PORT_PROTO
            Connections from the same client IP with the same IP protocol and
            port will go to the same VM in the backend while that VM remains
            healthy. This option cannot be used for HTTP(S) load balancing.
         CLIENT_IP_PROTO
            Connections from the same client IP with the same IP protocol
            willgo to the same VM in the pool while that VM remains healthy.
            This option cannot be used for HTTP(s) load balancing.
         GENERATED_COOKIE
            Route requests to instances based on the contents of the "GCLB"
            cookie set by the load balancer.
         NONE
            Session affinity is disabled.

     --signed-url-cache-max-age=SIGNED_URL_CACHE_MAX_AGE
        The amount of time up to which the response to a signed URL request
        will be cached in the CDN. After this time period, the Signed URL will
        be revalidated before being served. Cloud CDN will internally act as
        though all responses from this backend had a Cache-Control: public,
        max-age=[TTL] header, regardless of any existing Cache-Control header.
        The actual headers served in responses will not be altered. If
        unspecified, the default value is 3600s.

        For example, specifying 12h will cause the responses to signed URL
        requests to be cached in the CDN up to 12 hours. See $ gcloud topic
        datetimes for information on duration formats.

        This flag only affects signed URL requests.

     --timeout=TIMEOUT; default="30s"
        The amount of time to wait for a backend to return a full response for
        the request and for the load balancer to proxy the response to the
        client before considering the request failed.

        For example, specifying 10s gives instances 10 seconds to respond to
        requests. The load balancer will retry GET requests once if the backend
        closes the connection or times out before sending response headers to
        the proxy. If the backend produces any response headers, the load
        balancer does not retry. If the backend does not reply at all, the load
        balancer returns a 502 Bad Gateway error to the client. See $ gcloud
        topic datetimes for information on duration formats.

     At most one of these may be specified:

       --cache-key-query-string-blacklist=[QUERY_STRING,...]
          Specifies a comma separated list of query string parameters to
          exclude in cache keys. All other parameters will be included. Either
          specify --cache-key-query-string-whitelist or
          --cache-key-query-string-blacklist, not both. '&' and '=' will be
          percent encoded and not treated as delimiters. Can only be applied
          for global resources.

       --cache-key-query-string-whitelist=QUERY_STRING,[...]
          Specifies a comma separated list of query string parameters to
          include in cache keys. All other parameters will be excluded. Either
          specify --cache-key-query-string-whitelist or
          --cache-key-query-string-blacklist, not both. '&' and '=' will be
          percent encoded and not treated as delimiters. Can only be applied
          for global resources.

     At most one of these may be specified:

       --global
          If provided, it is assumed the backend service is global.

       --region=REGION
          The region of the backend service to create. Overrides the default
          compute/region property value for this command invocation.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --configuration,
    --flatten, --format, --help, --log-http, --project, --quiet, --trace-token,
    --user-output-enabled, --verbosity. Run $ gcloud help for details.

NOTES
    This command is currently in BETA and may change without notice. These
    variants are also available:

        $ gcloud compute backend-services create
        $ gcloud alpha compute backend-services create

