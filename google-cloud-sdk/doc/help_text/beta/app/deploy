NAME
    gcloud beta app deploy - deploy the local code and/or configuration of your
        app to App Engine

SYNOPSIS
    gcloud beta app deploy [DEPLOYABLES ...] [--bucket=BUCKET] [--no-cache]
        [--image-url=IMAGE_URL] [--no-promote] [--no-stop-previous-version]
        [--version=VERSION, -v VERSION] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (BETA) This command is used to deploy both code and configuration to the
    App Engine server. As an input it takes one or more DEPLOYABLES that should
    be uploaded. A DEPLOYABLE can be a service's .yaml file or a
    configuration's .yaml file (for more information about configuration files
    specific to your App Engine environment, refer to
    https://cloud.google.com/appengine/docs/standard/python/configuration-files
    or
    https://cloud.google.com/appengine/docs/flexible/python/configuration-files).
    Note, for Java Standard apps, you must add the path to the
    appengine-web.xml file inside the WEB-INF directory. gcloud beta app deploy
    skips files specified in the .gcloudignore file (see gcloud topic
    gcloudignore for more information).

POSITIONAL ARGUMENTS
     [DEPLOYABLES ...]
        The yaml files for the services or configurations you want to deploy.
        If not given, defaults to app.yaml in the current directory. If that is
        not found, attempts to automatically generate necessary configuration
        files (such as app.yaml) in the current directory.

FLAGS
     --bucket=BUCKET
        The Google Cloud Storage bucket used to stage files associated with the
        deployment. If this argument is not specified, the application's
        default code bucket is used.

     --no-cache
        Skip caching mechanisms involved in the deployment process, in
        particular do not use cached dependencies during the build step.

     --image-url=IMAGE_URL
        Deploy with a specific Docker image. Docker url must be from one of the
        valid gcr hostnames.

     --promote
        Promote the deployed version to receive all traffic. Overrides the
        default app/promote_by_default property value for this command
        invocation. Use --no-promote to disable.

     --stop-previous-version
        Stop the previously running version when deploying a new version that
        receives all traffic.

        Note that if the version is running on an instance of an auto-scaled
        service in the App Engine Standard environment, using
        --stop-previous-version will not work and the previous version will
        continue to run because auto-scaled service instances are always
        running.

        Overrides the default app/stop_previous_version property value for this
        command invocation. Use --no-stop-previous-version to disable.

     --version=VERSION, -v VERSION
        The version of the app that will be created or replaced by this
        deployment. If you do not specify a version, one will be generated for
        you.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --account, --billing-project,
    --configuration, --flags-file, --flatten, --format, --help,
    --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity. Run $ gcloud help for
    details.

EXAMPLES
    To deploy a single service, run:

        $ gcloud beta app deploy ~/my_app/app.yaml

    To deploy an App Engine Standard Java service, run:

        $ gcloud beta app deploy ~/my_app/WEB-INF/appengine-web.xml

    By default, the service is deployed the current project configured via:

        $ gcloud config set core/project PROJECT

    To override this value for a single deployment, use the --project flag:

        $ gcloud beta app deploy ~/my_app/app.yaml --project=PROJECT

    To deploy multiple services, run:

        $ gcloud beta app deploy ~/my_app/app.yaml \
            ~/my_app/another_service.yaml

    To change the default --promote behavior for your current environment, run:

        $ gcloud config set app/promote_by_default false

NOTES
    This command is currently in BETA and may change without notice. This
    variant is also available:

        $ gcloud app deploy

