
.TH "GCLOUD_ALPHA_FIREBASE_TEST_IOS_LOCALES_DESCRIBE" 1



.SH "NAME"
.HP
gcloud alpha firebase test ios locales describe \- describe an iOS locale



.SH "SYNOPSIS"
.HP
\f5gcloud alpha firebase test ios locales describe\fR \fILOCALE\fR [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Describe an iOS locale.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fILOCALE\fR
The locale to describe, found using $ gcloud alpha firebase test ios locales
list.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To describe an iOS locale, run:

.RS 2m
gcloud alpha firebase test ios locales describe es_419
.RE

To describe an iOS locale in JSON format, run:

.RS 2m
gcloud alpha firebase test ios locales describe es_419 \-\-format=json
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud firebase test ios locales describe
$ gcloud beta firebase test ios locales describe
.RE

