
.TH "GCLOUD_ALPHA_TRACE_SINKS_CREATE" 1



.SH "NAME"
.HP
gcloud alpha trace sinks create \- creates a sink



.SH "SYNOPSIS"
.HP
\f5gcloud alpha trace sinks create\fR \fISINK_NAME\fR \fIDESTINATION\fR [\fB\-\-project\fR=\fIPROJECT\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Creates a sink used to export trace spans to a destination.

The sink's destination must be a BigQuery dataset. The destination must already
exist. The identity created with the sink will need permission to write to the
destination dataset. After creating a sink look for the \fB[writer_identity]\fR
to be populated in the response. With that identity run the following command to
give it permission:

gcloud projects add\-iam\-policy\-binding {bigquery_project_id} \e.RS 2m
\-\-member serviceAccount:{writer_identity from trace_sink} \e
\-\-role roles/bigquery.dataEditor

.RE

You may also find an existing writer identity by describing a sink.

It may take several minutes before trace spans are exported after the sink is
created.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fISINK_NAME\fR
The name for the sink.

.TP 2m
\fIDESTINATION\fR
The destination must be a fully qualified BigQuery resource name. The
destination can be for the same Google Cloud project or for a different Google
Cloud project in the same organization.


.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-project\fR=\fIPROJECT\fR
Create a sink associated with this project. This will override the default
project.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

.RS 2m
$ gcloud alpha trace sinks create my\-sink
bigquery.googleapis.com/projects/my\-project/datasets/my_dataset
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist.

