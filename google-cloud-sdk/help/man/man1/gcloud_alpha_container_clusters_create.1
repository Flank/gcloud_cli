
.TH "GCLOUD_ALPHA_CONTAINER_CLUSTERS_CREATE" 1



.SH "NAME"
.HP
gcloud alpha container clusters create \- create a cluster for running containers



.SH "SYNOPSIS"
.HP
\f5gcloud alpha container clusters create\fR \fINAME\fR [\fB\-\-accelerator\fR=[\fItype\fR=\fITYPE\fR,[\fIcount\fR=\fICOUNT\fR],...]] [\fB\-\-addons\fR=[\fIADDON\fR,...]] [\fB\-\-allow\-route\-overlap\fR] [\fB\-\-async\fR] [\fB\-\-cluster\-ipv4\-cidr\fR=\fICLUSTER_IPV4_CIDR\fR] [\fB\-\-cluster\-secondary\-range\-name\fR=\fINAME\fR] [\fB\-\-cluster\-version\fR=\fICLUSTER_VERSION\fR] [\fB\-\-create\-subnetwork\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-default\-max\-pods\-per\-node\fR=\fIDEFAULT_MAX_PODS_PER_NODE\fR] [\fB\-\-disk\-size\fR=\fIDISK_SIZE\fR] [\fB\-\-disk\-type\fR=\fIDISK_TYPE\fR] [\fB\-\-enable\-autorepair\fR] [\fB\-\-enable\-autoupgrade\fR] [\fB\-\-enable\-binauthz\fR] [\fB\-\-no\-enable\-cloud\-logging\fR] [\fB\-\-no\-enable\-cloud\-monitoring\fR] [\fB\-\-enable\-ip\-alias\fR] [\fB\-\-enable\-kubernetes\-alpha\fR] [\fB\-\-enable\-legacy\-authorization\fR] [\fB\-\-enable\-network\-policy\fR] [\fB\-\-enable\-pod\-security\-policy\fR] [\fB\-\-enable\-stackdriver\-kubernetes\fR] [\fB\-\-enable\-vertical\-pod\-autoscaling\fR] [\fB\-\-image\-type\fR=\fIIMAGE_TYPE\fR] [\fB\-\-issue\-client\-certificate\fR] [\fB\-\-istio\-config\fR=[\fIauth\fR=\fIMTLS_PERMISSIVE\fR,...]] [\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-machine\-type\fR=\fIMACHINE_TYPE\fR,\ \fB\-m\fR\ \fIMACHINE_TYPE\fR] [\fB\-\-maintenance\-window\fR=\fIMAINTENANCE_WINDOW\fR] [\fB\-\-max\-nodes\-per\-pool\fR=\fIMAX_NODES_PER_POOL\fR] [\fB\-\-metadata\fR=\fIKEY\fR=\fIVALUE\fR,[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-metadata\-from\-file\fR=\fIKEY\fR=\fILOCAL_FILE_PATH\fR,[...]] [\fB\-\-min\-cpu\-platform\fR=\fIPLATFORM\fR] [\fB\-\-network\fR=\fINETWORK\fR] [\fB\-\-node\-labels\fR=[\fINODE_LABEL\fR,...]] [\fB\-\-node\-pool\-name\fR=\fINODE_POOL_NAME\fR] [\fB\-\-node\-taints\fR=[\fINODE_TAINT\fR,...]] [\fB\-\-node\-version\fR=\fINODE_VERSION\fR] [\fB\-\-num\-nodes\fR=\fINUM_NODES\fR;\ default=3] [\fB\-\-preemptible\fR] [\fB\-\-services\-ipv4\-cidr\fR=\fICIDR\fR] [\fB\-\-services\-secondary\-range\-name\fR=\fINAME\fR] [\fB\-\-subnetwork\fR=\fISUBNETWORK\fR] [\fB\-\-tags\fR=\fITAG\fR,[\fITAG\fR,...]] [\fB\-\-workload\-metadata\-from\-node\fR=\fIWORKLOAD_METADATA_FROM_NODE\fR] [\fB\-\-additional\-zones\fR=\fIZONE\fR,[\fIZONE\fR,...]\ |\ \fB\-\-node\-locations\fR=\fIZONE\fR,[\fIZONE\fR,...]] [\fB\-\-database\-encryption\-key\fR=\fIDATABASE_ENCRYPTION_KEY\fR\ :\ \fB\-\-database\-encryption\-key\-keyring\fR=\fIDATABASE_ENCRYPTION_KEY_KEYRING\fR\ \fB\-\-database\-encryption\-key\-location\fR=\fIDATABASE_ENCRYPTION_KEY_LOCATION\fR\ \fB\-\-database\-encryption\-key\-project\fR=\fIDATABASE_ENCRYPTION_KEY_PROJECT\fR] [[\fB\-\-enable\-autoprovisioning\fR\ :\ \fB\-\-autoprovisioning\-config\-file\fR=\fIAUTOPROVISIONING_CONFIG_FILE\fR\ |\ [\fB\-\-max\-cpu\fR=\fIMAX_CPU\fR\ \fB\-\-max\-memory\fR=\fIMAX_MEMORY\fR\ :\ \fB\-\-min\-cpu\fR=\fIMIN_CPU\fR\ \fB\-\-min\-memory\fR=\fIMIN_MEMORY\fR\ [\fB\-\-max\-accelerator\fR=[\fItype\fR=\fITYPE\fR,\fIcount\fR=\fICOUNT\fR,...]\ :\ \fB\-\-min\-accelerator\fR=[\fItype\fR=\fITYPE\fR,\fIcount\fR=\fICOUNT\fR,...]]]]] [\fB\-\-enable\-autoscaling\fR\ \fB\-\-max\-nodes\fR=\fIMAX_NODES\fR\ \fB\-\-min\-nodes\fR=\fIMIN_NODES\fR] [\fB\-\-enable\-master\-authorized\-networks\fR\ \fB\-\-master\-authorized\-networks\fR=\fINETWORK\fR,[\fINETWORK\fR,...]] [\fB\-\-enable\-network\-egress\-metering\fR\ \fB\-\-resource\-usage\-bigquery\-dataset\fR=\fIRESOURCE_USAGE_BIGQUERY_DATASET\fR] [\fB\-\-enable\-private\-endpoint\fR\ \fB\-\-enable\-private\-nodes\fR\ \fB\-\-master\-ipv4\-cidr\fR=\fIMASTER_IPV4_CIDR\fR\ \fB\-\-private\-cluster\fR] [\fB\-\-enable\-tpu\fR\ \fB\-\-enable\-tpu\-service\-networking\fR\ |\ \fB\-\-tpu\-ipv4\-cidr\fR=\fICIDR\fR] [\fB\-\-local\-ssd\-count\fR=\fILOCAL_SSD_COUNT\fR\ |\ \fB\-\-local\-ssd\-volumes\fR=[[\fIcount\fR=\fICOUNT\fR],[\fItype\fR=\fITYPE\fR],[\fIformat\fR=\fIFORMAT\fR],...]] [\fB\-\-password\fR=\fIPASSWORD\fR\ \fB\-\-enable\-basic\-auth\fR\ |\ \fB\-\-username\fR=\fIUSERNAME\fR,\ \fB\-u\fR\ \fIUSERNAME\fR] [\fB\-\-region\fR=\fIREGION\fR\ |\ \fB\-\-zone\fR=\fIZONE\fR,\ \fB\-z\fR\ \fIZONE\fR] [\fB\-\-security\-profile\fR=\fISECURITY_PROFILE\fR\ \fB\-\-no\-security\-profile\-runtime\-rules\fR] [\fB\-\-service\-account\fR=\fISERVICE_ACCOUNT\fR\ |\ \fB\-\-no\-enable\-cloud\-endpoints\fR\ \fB\-\-scopes\fR=[\fISCOPE\fR,...];\ default="gke\-default"] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Create a cluster for running containers.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fINAME\fR
The name of the cluster to create.

The name may contain only lowercase alphanumerics and '\-', must start with a
letter and end with an alphanumeric, and must be no longer than 40 characters.


.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-accelerator\fR=[\fItype\fR=\fITYPE\fR,[\fIcount\fR=\fICOUNT\fR],...]
Attaches accelerators (e.g. GPUs) to all nodes.

.RS 2m
.TP 2m
\fBtype\fR
(Required) The specific type (e.g. nvidia\-tesla\-k80 for nVidia Tesla K80) of
accelerator to attach to the instances. Use \f5gcloud compute accelerator\-types
list\fR to learn about all available accelerator types.

.TP 2m
\fBcount\fR
(Optional) The number of accelerators to attach to the instances. The default
value is 1.

.RE
.sp
.TP 2m
\fB\-\-addons\fR=[\fIADDON\fR,...]
Default set of addons includes HttpLoadBalancing, HorizontalPodAutoscaling.
Addons
(https://cloud.google.com/kubernetes\-engine/reference/rest/v1/projects.zones.clusters#AddonsConfig)
are additional Kubernetes cluster components. Addons specified by this flag will
be enabled. The others will be disabled. \fIADDON\fR must be one of:
\fBHttpLoadBalancing\fR, \fBHorizontalPodAutoscaling\fR,
\fBKubernetesDashboard\fR, \fBIstio\fR, \fBNetworkPolicy\fR, \fBCloudRun\fR.

.TP 2m
\fB\-\-allow\-route\-overlap\fR
Allows the provided cluster CIDRs to overlap with existing routes that are less
specific and do not terminate at a VM.

When enabled, \f5\-\-cluster\-ipv4\-cidr\fR must be fully specified (e.g.
\f510.96.0.0/14\fR , but not \f5/14\fR). If \f5\-\-enable\-ip\-alias\fR is also
specified, both \f5\-\-cluster\-ipv4\-cidr\fR and \f5\-\-services\-ipv4\-cidr\fR
must be fully specified.

.TP 2m
\fB\-\-async\fR
Don't wait for the operation to complete.

.TP 2m
\fB\-\-cluster\-ipv4\-cidr\fR=\fICLUSTER_IPV4_CIDR\fR
The IP address range for the pods in this cluster in CIDR notation (e.g.
10.0.0.0/14). Prior to Kubernetes version 1.7.0 this must be a subset of
10.0.0.0/8; however, starting with version 1.7.0 can be any RFC 1918 IP range.

.TP 2m
\fB\-\-cluster\-secondary\-range\-name\fR=\fINAME\fR
Set the secondary range to be used as the source for pod IPs. Alias ranges will
be allocated from this secondary range. NAME must be the name of an existing
secondary range in the cluster subnetwork.

Must be used in conjunction with '\-\-enable\-ip\-alias'. Cannot be used with
\-\-create\-subnetwork.

.TP 2m
\fB\-\-cluster\-version\fR=\fICLUSTER_VERSION\fR
The Kubernetes version to use for the master and nodes. Defaults to
server\-specified.

The default Kubernetes version is available using the following command.

.RS 2m
$ gcloud container get\-server\-config
.RE

.TP 2m
\fB\-\-create\-subnetwork\fR=[\fIKEY\fR=\fIVALUE\fR,...]
Create a new subnetwork for the cluster. The name and range of the subnetwork
can be customized via optional 'name' and 'range' key\-value pairs.

\'name' specifies the name of the subnetwork to be created.

\'range' specifies the IP range for the new subnetwork. This can either be a
netmask size (e.g. '/20') or a CIDR range (e.g. '10.0.0.0/20'). If a netmask
size is specified, the IP is automatically taken from the free space in the
cluster's network.

Examples:

Create a new subnetwork with a default name and size.

.RS 2m
$ gcloud alpha container clusters create \-\-create\-subnetwork ""
.RE

Create a new subnetwork named "my\-subnet" with netmask of size 21.

.RS 2m
$ gcloud alpha container clusters create \e
\-\-create\-subnetwork name=my\-subnet,range=/21
.RE

Create a new subnetwork with a default name with the primary range of
10.100.0.0/16.

.RS 2m
$ gcloud alpha container clusters create \e
\-\-create\-subnetwork range=10.100.0.0/16
.RE

Create a new subnetwork with the name "my\-subnet" with a default range.

.RS 2m
$ gcloud alpha container clusters create \e
\-\-create\-subnetwork name=my\-subnet
.RE

Can not be specified unless '\-\-enable\-ip\-alias' is also specified. Can not
be used in conjunction with the '\-\-subnetwork' option.

.TP 2m
\fB\-\-default\-max\-pods\-per\-node\fR=\fIDEFAULT_MAX_PODS_PER_NODE\fR
The default max number of pods per node for node pools in the cluster.

This flag sets the default max\-pods\-per\-node for node pools in the cluster.
If \-\-max\-pods\-per\-node is not specified explicitly for a node pool, this
flag value will be used.

Must be used in conjunction with '\-\-enable\-ip\-alias'.

.TP 2m
\fB\-\-disk\-size\fR=\fIDISK_SIZE\fR
Size for node VM boot disks. Defaults to 100GB.

.TP 2m
\fB\-\-disk\-type\fR=\fIDISK_TYPE\fR
Type of the node VM boot disk. Defaults to pd\-standard. \fIDISK_TYPE\fR must be
one of: \fBpd\-standard\fR, \fBpd\-ssd\fR.

.TP 2m
\fB\-\-enable\-autorepair\fR
Enable node autorepair feature for a cluster's default node\-pool(s).

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-enable\-autorepair
.RE

Node autorepair is enabled by default for clusters using COS as a base image,
use \-\-no\-enable\-autorepair to disable.

See https://cloud.google.com/kubernetes\-engine/docs/how\-to/node\-auto\-repair
for more info.

.TP 2m
\fB\-\-enable\-autoupgrade\fR
Sets autoupgrade feature for a cluster's default node\-pool(s).

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-enable\-autoupgrade
.RE

See https://cloud.google.com/kubernetes\-engine/docs/node\-management for more
info.

.TP 2m
\fB\-\-enable\-binauthz\fR
Enable Binary Authorization for this cluster.

.TP 2m
\fB\-\-enable\-cloud\-logging\fR
Automatically send logs from the cluster to the Google Cloud Logging API.
Enabled by default, use \fB\-\-no\-enable\-cloud\-logging\fR to disable.

.TP 2m
\fB\-\-enable\-cloud\-monitoring\fR
Automatically send metrics from pods in the cluster to the Google Cloud
Monitoring API. VM metrics will be collected by Google Compute Engine regardless
of this setting. Enabled by default, use \fB\-\-no\-enable\-cloud\-monitoring\fR
to disable.

.TP 2m
\fB\-\-enable\-ip\-alias\fR
Enable use of alias IPs (https://cloud.google.com/compute/docs/alias\-ip/) for
pod IPs. This will create two secondary ranges, one for the pod IPs and another
to reserve space for the services range.

.TP 2m
\fB\-\-enable\-kubernetes\-alpha\fR
Enable Kubernetes alpha features on this cluster. Selecting this option will
result in the cluster having all Kubernetes alpha API groups and features turned
on. Cluster upgrades (both manual and automatic) will be disabled and the
cluster will be automatically deleted after 30 days.

Alpha clusters are not covered by the Kubernetes Engine SLA and should not be
used for production workloads.

.TP 2m
\fB\-\-enable\-legacy\-authorization\fR
Enables the legacy ABAC authentication for the cluster. User rights are granted
through the use of policies which combine attributes together. For a detailed
look at these properties and related formats, see
https://kubernetes.io/docs/admin/authorization/abac/. To use RBAC permissions
instead, create or update your cluster with the option
\f5\-\-no\-enable\-legacy\-authorization\fR.

.TP 2m
\fB\-\-enable\-network\-policy\fR
Enable network policy enforcement for this cluster. If you are enabling network
policy on an existing cluster the network policy addon must first be enabled on
the master by using \-\-update\-addons=NetworkPolicy=ENABLED flag.

.TP 2m
\fB\-\-enable\-pod\-security\-policy\fR
Enables the pod security policy admission controller for the cluster. The pod
security policy admission controller adds fine\-grained pod create and update
authorization controls through the PodSecurityPolicy API objects. For more
information, see
https://cloud.google.com/kubernetes\-engine/docs/how\-to/pod\-security\-policies.

.TP 2m
\fB\-\-enable\-stackdriver\-kubernetes\fR
Enable Stackdriver Kubernetes monitoring and logging.

.TP 2m
\fB\-\-enable\-vertical\-pod\-autoscaling\fR
Enables vertical pod autoscaling for a cluster.

.TP 2m
\fB\-\-image\-type\fR=\fIIMAGE_TYPE\fR
The image type to use for the cluster. Defaults to server\-specified.

Image Type specifies the base OS that the nodes in the cluster will run on. If
an image type is specified, that will be assigned to the cluster and all future
upgrades will use the specified image type. If it is not specified the server
will pick the default image type.

The default image type and the list of valid image types are available using the
following command.

.RS 2m
$ gcloud container get\-server\-config
.RE

.TP 2m
\fB\-\-issue\-client\-certificate\fR
Issue a TLS client certificate with admin permissions.

When enabled, the certificate and private key pair will be present in MasterAuth
field of the Cluster object. For cluster versions before 1.12, a client
certificate will be issued by default. As of 1.12, client certificates are
disabled by default.

.TP 2m
\fB\-\-istio\-config\fR=[\fIauth\fR=\fIMTLS_PERMISSIVE\fR,...]
Configurations for Istio addon, requires \-\-addons contains Istio for create,
or \-\-update\-addons Istio=ENABLED for update.

.RS 2m
.TP 2m
\fBauth\fR
Optional Type of auth MTLS_PERMISSIVE or MTLS_STRICT Example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-istio\-config=auth=MTLS_PERMISSIVE
.RE

.RE
.sp
.TP 2m
\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]
Labels to apply to the Google Cloud resources in use by the Kubernetes Engine
cluster. These are unrelated to Kubernetes labels. Example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-labels=label_a=value1,label_b=,label_c=value3
.RE

.TP 2m
\fB\-\-machine\-type\fR=\fIMACHINE_TYPE\fR, \fB\-m\fR \fIMACHINE_TYPE\fR
The type of machine to use for nodes. Defaults to n1\-standard\-1. The list of
predefined machine types is available using the following command:

.RS 2m
$ gcloud compute machine\-types list
.RE

You can also specify custom machine types with the string "custom\-CPUS\-RAM"
where \f5CPUS\fR is the number of virtual CPUs and \f5RAM\fR is the amount of
RAM in MiB.

For example, to create a node pool using custom machines with 2 vCPUs and 12 GB
of RAM:

.RS 2m
$ gcloud alpha container clusters create high\-mem\-pool \e
    \-\-machine\-type=custom\-2\-12288
.RE

.TP 2m
\fB\-\-maintenance\-window\fR=\fIMAINTENANCE_WINDOW\fR
Set a time of day when you prefer maintenance to start on this cluster. For
example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-maintenance\-window=12:43
.RE

The time corresponds to the UTC time zone, and must be in HH:MM format.

.TP 2m
\fB\-\-max\-nodes\-per\-pool\fR=\fIMAX_NODES_PER_POOL\fR
The maximum number of nodes to allocate per default initial node pool.
Kubernetes Engine will automatically create enough nodes pools such that each
node pool contains less than \-\-max\-nodes\-per\-pool nodes. Defaults to 1000
nodes, but can be set as low as 100 nodes per pool on initial create.

.TP 2m
\fB\-\-metadata\fR=\fIKEY\fR=\fIVALUE\fR,[\fIKEY\fR=\fIVALUE\fR,...]
Compute Engine metadata to be made available to the guest operating system
running on nodes within the node pool.

Each metadata entry is a key/value pair separated by an equals sign. Metadata
keys must be unique and less than 128 bytes in length. Values must be less than
or equal to 32,768 bytes in length. The total size of all keys and values must
be less than 512 KB. Multiple arguments can be passed to this flag. For example:

\f5\fI\-\-metadata key\-1=value\-1,key\-2=value\-2,key\-3=value\-3\fR\fR

Additionally, the following keys are reserved for use by Kubernetes Engine:

.RS 2m
.IP "\(em" 2m
\f5\fIcluster\-location\fR\fR
.IP "\(em" 2m
\f5\fIcluster\-name\fR\fR
.IP "\(em" 2m
\f5\fIcluster\-uid\fR\fR
.IP "\(em" 2m
\f5\fIconfigure\-sh\fR\fR
.IP "\(em" 2m
\f5\fIenable\-os\-login\fR\fR
.IP "\(em" 2m
\f5\fIgci\-update\-strategy\fR\fR
.IP "\(em" 2m
\f5\fIgci\-ensure\-gke\-docker\fR\fR
.IP "\(em" 2m
\f5\fIinstance\-template\fR\fR
.IP "\(em" 2m
\f5\fIkube\-env\fR\fR
.IP "\(em" 2m
\f5\fIstartup\-script\fR\fR
.IP "\(em" 2m
\f5\fIuser\-data\fR\fR

.RE
.RE
.sp
See also Compute Engine's documentation
(https://cloud.google.com/compute/docs/storing\-retrieving\-metadata) on storing
and retrieving instance metadata.

.RS 2m
.TP 2m
\fB\-\-metadata\-from\-file\fR=\fIKEY\fR=\fILOCAL_FILE_PATH\fR,[...]
Same as \f5\fI\-\-metadata\fR\fR except that the value for the entry will be
read from a local file.

.TP 2m
\fB\-\-min\-cpu\-platform\fR=\fIPLATFORM\fR
When specified, the nodes for the new cluster's default node pool will be
scheduled on host with specified CPU architecture or a newer one.

Examples:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-min\-cpu\-platform=PLATFORM
.RE

To list available CPU platforms in given zone, run:

.RS 2m
$ gcloud beta compute zones describe ZONE \e
    \-\-format="value(availableCpuPlatforms)"
.RE

CPU platform selection is available only in selected zones.

.TP 2m
\fB\-\-network\fR=\fINETWORK\fR
The Compute Engine Network that the cluster will connect to. Google Kubernetes
Engine will use this network when creating routes and firewalls for the
clusters. Defaults to the 'default' network.

.TP 2m
\fB\-\-node\-labels\fR=[\fINODE_LABEL\fR,...]
Applies the given kubernetes labels on all nodes in the new node\-pool. Example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-node\-labels=label\-a=value1,label\-2=value2
.RE

New nodes, including ones created by resize or recreate, will have these labels
on the kubernetes API node object and can be used in nodeSelectors. See
http://kubernetes.io/docs/user\-guide/node\-selection/ for examples.

Note that kubernetes labels, intended to associate cluster components and
resources with one another and manage resource lifecycles, are different from
Kubernetes Engine labels that are used for the purpose of tracking billing and
usage information.

.TP 2m
\fB\-\-node\-pool\-name\fR=\fINODE_POOL_NAME\fR
Name of the initial node pool that will be created for the cluster.

Specifies the name to use for the initial node pool that will be created with
the cluster. If the settings specified require multiple node pools to be
created, the name for each pool will be prefixed by this name. For example
running the following will result in three node pools being created,
example\-node\-pool\-0, example\-node\-pool\-1 and example\-node\-pool\-2:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-num\-nodes 9 \-\-max\-nodes\-per\-pool 3     \e
    \-\-node\-pool\-name example\-node\-pool
.RE

.TP 2m
\fB\-\-node\-taints\fR=[\fINODE_TAINT\fR,...]
Applies the given kubernetes taints on all nodes in default node\-pool(s) in new
cluster, which can be used with tolerations for pod scheduling. Example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-node\-taints=key1=val1:NoSchedule,key2=val2:PreferNoSchedule
.RE

Note, this feature uses \f5gcloud beta\fR commands. To use gcloud beta commands,
you must configure \f5gcloud\fR to use the v1beta1 API as described here:
https://cloud.google.com/kubernetes\-engine/docs/reference/api\-organization#beta.
To read more about node\-taints, see
https://cloud.google.com/kubernetes\-engine/docs/node\-taints.

.TP 2m
\fB\-\-node\-version\fR=\fINODE_VERSION\fR
The Kubernetes version to use for nodes. Defaults to server\-specified.

The default Kubernetes version is available using the following command.

.RS 2m
$ gcloud container get\-server\-config
.RE

.TP 2m
\fB\-\-num\-nodes\fR=\fINUM_NODES\fR; default=3
The number of nodes to be created in each of the cluster's zones.

.TP 2m
\fB\-\-preemptible\fR
Create nodes using preemptible VM instances in the new cluster.

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-preemptible
.RE

New nodes, including ones created by resize or recreate, will use preemptible VM
instances. See https://cloud.google.com/kubernetes\-engine/docs/preemptible\-vm
for more information on how to use Preemptible VMs with Kubernetes Engine.

.TP 2m
\fB\-\-services\-ipv4\-cidr\fR=\fICIDR\fR
Set the IP range for the services IPs.

Can be specified as a netmask size (e.g. '/20') or as in CIDR notion (e.g.
\'10.100.0.0/20'). If given as a netmask size, the IP range will be chosen
automatically from the available space in the network.

If unspecified, the services CIDR range will be chosen with a default mask size.

Can not be specified unless '\-\-enable\-ip\-alias' is also specified.

.TP 2m
\fB\-\-services\-secondary\-range\-name\fR=\fINAME\fR
Set the secondary range to be used for services (e.g. ClusterIPs). NAME must be
the name of an existing secondary range in the cluster subnetwork.

Must be used in conjunction with '\-\-enable\-ip\-alias'. Cannot be used with
\-\-create\-subnetwork.

.TP 2m
\fB\-\-subnetwork\fR=\fISUBNETWORK\fR
The Google Compute Engine subnetwork
(https://cloud.google.com/compute/docs/subnetworks) to which the cluster is
connected. The subnetwork must belong to the network specified by \-\-network.

Cannot be used with the "\-\-create\-subnetwork" option.

.TP 2m
\fB\-\-tags\fR=\fITAG\fR,[\fITAG\fR,...]
Applies the given Compute Engine tags (comma separated) on all nodes in the new
node\-pool. Example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-tags=tag1,tag2
.RE

New nodes, including ones created by resize or recreate, will have these tags on
the Compute Engine API instance object and can be used in firewall rules. See
https://cloud.google.com/sdk/gcloud/reference/compute/firewall\-rules/create for
examples.

.TP 2m
\fB\-\-workload\-metadata\-from\-node\fR=\fIWORKLOAD_METADATA_FROM_NODE\fR
Sets the node metadata option for workload metadata configuration. This feature
is scheduled to be deprecated in the future and later removed.
\fIWORKLOAD_METADATA_FROM_NODE\fR must be one of:

.RS 2m
.TP 2m
\fBEXPOSED\fR
Exposes all VM metadata to workloads.
.TP 2m
\fBSECURE\fR
Prevents workloads not in hostNetwork from accessing certain VM metadata,
specifically kube\-env, which contains Kubelet credentials, and the instance
identity token. This is a temporary security solution available while the
bootstrapping process for cluster nodes is being redesigned with significant
security improvements.
.TP 2m
\fBUNSPECIFIED\fR
Chooses the default.
.RE
.sp


.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-additional\-zones\fR=\fIZONE\fR,[\fIZONE\fR,...]
(DEPRECATED) The set of additional zones in which the specified node footprint
should be replicated. All zones must be in the same region as the cluster's
primary zone. If additional\-zones is not specified, all nodes will be in the
cluster's primary zone.

Note that \f5NUM_NODES\fR nodes will be created in each zone, such that if you
specify \f5\-\-num\-nodes=4\fR and choose one additional zone, 8 nodes will be
created.

Multiple locations can be specified, separated by commas. For example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-zone us\-central1\-a \e
    \-\-additional\-zones us\-central1\-b,us\-central1\-c
.RE

This flag is deprecated. Use \-\-node\-locations=PRIMARY_ZONE,[ZONE,...]
instead.

.TP 2m
\fB\-\-node\-locations\fR=\fIZONE\fR,[\fIZONE\fR,...]
The set of zones in which the specified node footprint should be replicated. All
zones must be in the same region as the cluster's master(s), specified by the
\f5\-\-zone\fR or \f5\-\-region\fR flag. Additionally, for zonal clusters,
\f5\-\-node\-locations\fR must contain the cluster's primary zone. If not
specified, all nodes will be in the cluster's primary zone (for zonal clusters)
or spread across three randomly chosen zones within the cluster's region (for
regional clusters).

Note that \f5NUM_NODES\fR nodes will be created in each zone, such that if you
specify \f5\-\-num\-nodes=4\fR and choose two locations, 8 nodes will be
created.

Multiple locations can be specified, separated by commas. For example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-zone us\-central1\-a \e
    \-\-node\-locations us\-central1\-a,us\-central1\-b
.RE

.RE
.sp
.TP 2m

Key resource \- The Cloud KMS (Key Management Service) cryptokey that will be
used to protect the cluster. The 'Compute Engine Service Agent' service account
must hold permission 'Cloud KMS CryptoKey Encrypter/Decrypter'. The arguments in
this group can be used to specify the attributes of this resource.

.RS 2m
.TP 2m
\fB\-\-database\-encryption\-key\fR=\fIDATABASE_ENCRYPTION_KEY\fR
ID of the key or fully qualified identifier for the key. This flag must be
specified if any of the other arguments in this group are specified.

.TP 2m
\fB\-\-database\-encryption\-key\-keyring\fR=\fIDATABASE_ENCRYPTION_KEY_KEYRING\fR
The KMS keyring of the key.

.TP 2m
\fB\-\-database\-encryption\-key\-location\fR=\fIDATABASE_ENCRYPTION_KEY_LOCATION\fR
The Cloud location for the key.

.TP 2m
\fB\-\-database\-encryption\-key\-project\fR=\fIDATABASE_ENCRYPTION_KEY_PROJECT\fR
The Cloud project for the key.

.RE
.sp
.TP 2m

Node autoprovisioning

.RS 2m
.TP 2m
\fB\-\-enable\-autoprovisioning\fR
Enables node autoprovisioning for a cluster.

Cluster Autoscaler will be able to create new node pools. Requires maximum CPU
and memory limits to be specified. This flag must be specified if any of the
other arguments in this group are specified.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-autoprovisioning\-config\-file\fR=\fIAUTOPROVISIONING_CONFIG_FILE\fR
Path of the JSON/YAML file which contains information about the cluster's
autoscaling configuration. Currently it only contains a list of resource limits
of the cluster.

Each resource limits definition contains three fields: resourceType, maximum and
minimum. Resource type can be "cpu", "memory" or an accelerator (e.g.
"nvidia\-tesla\-k80" for nVidia Tesla K80). Use gcloud compute
accelerator\-types list to learn about available accelerator types. Maximum is
the maximum allowed amount with the unit of the resource. Minimum is the minimum
allowed amount with the unit of the resource.

.TP 2m

Flags to configure resource limits:

.RS 2m
.TP 2m
\fB\-\-max\-cpu\fR=\fIMAX_CPU\fR
Maximum number of cores in the cluster.

Maximum number of cores to which the cluster can scale. This flag must be
specified if any of the other arguments in this group are specified.

.TP 2m
\fB\-\-max\-memory\fR=\fIMAX_MEMORY\fR
Maximum memory in the cluster.

Maximum number of gigabytes of memory to which the cluster can scale. This flag
must be specified if any of the other arguments in this group are specified.

.TP 2m
\fB\-\-min\-cpu\fR=\fIMIN_CPU\fR
Minimum number of cores in the cluster.

Minimum number of cores to which the cluster can scale.

.TP 2m
\fB\-\-min\-memory\fR=\fIMIN_MEMORY\fR
Minimum memory in the cluster.

Minimum number of gigabytes of memory to which the cluster can scale.

.TP 2m

Arguments to set limits on accelerators:

.RS 2m
.TP 2m
\fB\-\-max\-accelerator\fR=[\fItype\fR=\fITYPE\fR,\fIcount\fR=\fICOUNT\fR,...]
Sets maximum limit for a single type of accelerators (e.g. GPUs) in cluster.

.RE
.RE
.RE
.sp
.TP 2m
\fBtype\fR
(Required) The specific type (e.g. nvidia\-tesla\-k80 for nVidia Tesla K80) of
accelerator for which the limit is set. Use \f5gcloud compute accelerator\-types
list\fR to learn about all available accelerator types.

.TP 2m
\fBcount\fR
(Required) The maximum number of accelerators to which the cluster can be
scaled. This flag must be specified if any of the other arguments in this group
are specified.

.RS 2m
.TP 2m
\fB\-\-min\-accelerator\fR=[\fItype\fR=\fITYPE\fR,\fIcount\fR=\fICOUNT\fR,...]
Sets minimum limit for a single type of accelerators (e.g. GPUs) in cluster.
Defaults to 0 for all accelerator types if it isn't set.

.RE
.sp
.TP 2m
\fBtype\fR
(Required) The specific type (e.g. nvidia\-tesla\-k80 for nVidia Tesla K80) of
accelerator for which the limit is set. Use \f5gcloud compute accelerator\-types
list\fR to learn about all available accelerator types.

.TP 2m
\fBcount\fR
(Required) The minimum number of accelerators to which the cluster can be
scaled.

.RE
.sp
.TP 2m

Cluster autoscaling

.RS 2m
.TP 2m
\fB\-\-enable\-autoscaling\fR
Enables autoscaling for a node pool.

Enables autoscaling in the node pool specified by \-\-node\-pool or the default
node pool if \-\-node\-pool is not provided.

.TP 2m
\fB\-\-max\-nodes\fR=\fIMAX_NODES\fR
Maximum number of nodes in the node pool.

Maximum number of nodes to which the node pool specified by \-\-node\-pool (or
default node pool if unspecified) can scale. Ignored unless
\-\-enable\-autoscaling is also specified.

.TP 2m
\fB\-\-min\-nodes\fR=\fIMIN_NODES\fR
Minimum number of nodes in the node pool.

Minimum number of nodes to which the node pool specified by \-\-node\-pool (or
default node pool if unspecified) can scale. Ignored unless
\-\-enable\-autoscaling is also specified.

.RE
.sp
.TP 2m

Master Authorized Networks

.RS 2m
.TP 2m
\fB\-\-enable\-master\-authorized\-networks\fR
Allow only specified set of CIDR blocks (specified by the
\f5\-\-master\-authorized\-networks\fR flag) to connect to Kubernetes master
through HTTPS. Besides these blocks, the following have access as well:

.RS 2m
1) The private network the cluster connects to if
`\-\-enable\-private\-nodes` is specified.
2) Google Compute Engine Public IPs if `\-\-enable\-private\-nodes` is not
specified.
.RE

Use \f5\-\-no\-enable\-master\-authorized\-networks\fR to disable. When
disabled, public internet (0.0.0.0/0) is allowed to connect to Kubernetes master
through HTTPS.

.TP 2m
\fB\-\-master\-authorized\-networks\fR=\fINETWORK\fR,[\fINETWORK\fR,...]
The list of CIDR blocks (up to 20) that are allowed to connect to Kubernetes
master through HTTPS. Specified in CIDR notation (e.g. 1.2.3.4/30). Can not be
specified unless \f5\-\-enable\-master\-authorized\-networks\fR is also
specified.

.RE
.sp
.TP 2m

Exports cluster's usage of cloud resources

.RS 2m
.TP 2m
\fB\-\-enable\-network\-egress\-metering\fR
\f5 Enable network egress metering on this cluster.

When enabled, a DaemonSet is deployed into the cluster. Each DaemonSet pod
meters network egress traffic by collecting data from the conntrack table, and
exports the metered metrics to the specified destination.

Network egress metering is disabled if this flag is omitted, or when
\fR\-\-no\-enable\-network\-egress\-metering\f5 is set.

.TP 2m
\fB\-\-resource\-usage\-bigquery\-dataset\fR=\fIRESOURCE_USAGE_BIGQUERY_DATASET\fR
The name of the BigQuery dataset to which the cluster's usage of cloud resources
is exported. A table will be created in the specified dataset to store cluster
resource usage. The resulting table can be joined with BigQuery Billing Export
to produce a fine\-grained cost breakdown.

Example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-resource\-usage\-bigquery\-dataset=example_bigquery_dataset_name
.RE

.RE
.sp
.TP 2m

Private Clusters

.RS 2m
.TP 2m
\fB\-\-enable\-private\-endpoint\fR
Cluster is managed using the private IP address of the master API endpoint.

.TP 2m
\fB\-\-enable\-private\-nodes\fR
Cluster is created with no public IP addresses on the cluster nodes.

.TP 2m
\fB\-\-master\-ipv4\-cidr\fR=\fIMASTER_IPV4_CIDR\fR
IPv4 CIDR range to use for the master network. This should have a netmask of
size /28 and should be used in conjunction with the \-\-enable\-private\-nodes
flag.

.TP 2m
\fB\-\-private\-cluster\fR
(DEPRECATED) Cluster is created with no public IP addresses on the cluster
nodes.

The \-\-private\-cluster flag is deprecated and will be removed in a future
release. Use \-\-enable\-private\-nodes instead.

.RE
.sp
.TP 2m

Flags relating to Cloud TPUs:

.RS 2m
.TP 2m
\fB\-\-enable\-tpu\fR
Enable Cloud TPUs for this cluster.

Can not be specified unless \fR\-\-enable\-kubernetes\-alpha\f5 and
\fR\-\-enable\-ip\-alias\f5 are also specified.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-enable\-tpu\-service\-networking\fR
Enable Cloud TPU's Service Networking mode. In this mode, the CIDR blocks used
by the Cloud TPUs will be allocated and managed by Service Networking, instead
of Kubernetes Engine.

This cannot be specified if \fRtpu\-ipv4\-cidr\f5 is specified.

.TP 2m
\fB\-\-tpu\-ipv4\-cidr\fR=\fICIDR\fR
Set the IP range for the Cloud TPUs.

Can be specified as a netmask size (e.g. '/20') or as in CIDR notion (e.g.
\'10.100.0.0/20'). If given as a netmask size, the IP range will be chosen
automatically from the available space in the network.

If unspecified, the TPU CIDR range will use automatic default '/20'.

Can not be specified unless '\-\-enable\-tpu' and '\-\-enable\-ip\-alias' are
also specified.

.RE
.RE
.sp
.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-local\-ssd\-count\fR=\fILOCAL_SSD_COUNT\fR
\-\-local\-ssd\-volumes enables the ability to request local SSD with variable
count, interfaces, and format

\-\-local\-ssd\-count is the equivalent of using \-\-local\-ssd\-volumes with
type=scsi,format=fs

The number of local SSD disks to provision on each node.

Local SSDs have a fixed 375 GB capacity per device. The number of disks that can
be attached to an instance is limited by the maximum number of disks available
on a machine, which differs by compute zone. See
https://cloud.google.com/compute/docs/disks/local\-ssd for more information.

.TP 2m
\fB\-\-local\-ssd\-volumes\fR=[[\fIcount\fR=\fICOUNT\fR],[\fItype\fR=\fITYPE\fR],[\fIformat\fR=\fIFORMAT\fR],...]
\-\-local\-ssd\-volumes enables the ability to request local SSD with variable
count, interfaces, and format

\-\-local\-ssd\-count is the equivalent of using \-\-local\-ssd\-volumes with
type=scsi,format=fs

Adds the requested local SSDs on all nodes in default node\-pool(s) in new
cluster. Example:

.RS 2m
$ gcloud alpha container clusters create example_cluster \e
    \-\-local\-ssd\-volumes count=2,type=nvme,format=fs
.RE

\'count' must be between 1\-8

\'type' must be either scsi or nvme

\'format' must be either fs or block

New nodes, including ones created by resize or recreate, will have these local
SSDs.

Local SSDs have a fixed 375 GB capacity per device. The number of disks that can
be attached to an instance is limited by the maximum number of disks available
on a machine, which differs by compute zone. See
https://cloud.google.com/compute/docs/disks/local\-ssd for more information.

.RE
.sp
.TP 2m

Basic auth

.RS 2m
.TP 2m
\fB\-\-password\fR=\fIPASSWORD\fR
The password to use for cluster auth. Defaults to a server\-specified
randomly\-generated string.

.TP 2m

Options to specify the username. At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-enable\-basic\-auth\fR
Enable basic (username/password) auth for the cluster.
\fR\-\-enable\-basic\-auth\f5 is an alias for \fR\-\-username=admin\f5;
\fR\-\-no\-enable\-basic\-auth\f5 is an alias for \fR\-\-username=""\f5. Use
\fR\-\-password\f5 to specify a password; if not, the server will randomly
generate one. For cluster versions before 1.12, if neither
\fR\-\-enable\-basic\-auth\f5 nor \fR\-\-username\f5 is specified,
\fR\-\-enable\-basic\-auth\f5 will default to \fRtrue\f5. After 1.12,
\fR\-\-enable\-basic\-auth\f5 will default to \fRfalse\f5.

.TP 2m
\fB\-\-username\fR=\fIUSERNAME\fR, \fB\-u\fR \fIUSERNAME\fR
The user name to use for basic auth for the cluster. Use \fR\-\-password\f5 to
specify a password; if not, the server will randomly generate one.

.RE
.RE
.sp
.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-region\fR=\fIREGION\fR
Compute region (e.g. us\-central1) for the cluster.

.TP 2m
\fB\-\-zone\fR=\fIZONE\fR, \fB\-z\fR \fIZONE\fR
Compute zone (e.g. us\-central1\-a) for the cluster. Overrides the default
\fBcompute/zone\fR property value for this command invocation.

.RE
.sp
.TP 2m

Flags for Security Profile:

.RS 2m
.TP 2m
\fB\-\-security\-profile\fR=\fISECURITY_PROFILE\fR
Name and version of the security profile to be applied to the cluster.

Example:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-security\-profile=default\-1.0\-gke.0
.RE

.TP 2m
\fB\-\-security\-profile\-runtime\-rules\fR
Apply runtime rules in the specified security profile to the cluster. When
enabled (by default), a security profile controller and webhook are deployed on
the cluster to enforce the runtime rules. If
\-\-no\-security\-profile\-runtime\-rules is specified to disable this feature,
only bootstrapping rules are applied, and no security profile controller or
webhook are installed. Enabled by default, use
\fB\-\-no\-security\-profile\-runtime\-rules\fR to disable.

.RE
.sp
.TP 2m

Options to specify the node identity. At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-service\-account\fR=\fISERVICE_ACCOUNT\fR
The Google Cloud Platform Service Account to be used by the node VMs. If a
service account is specified, the cloud\-platform and userinfo.email scopes are
used. If no Service Account is specified, the project default service account is
used.

.TP 2m

Scopes options.

.RS 2m
.TP 2m
\fB\-\-enable\-cloud\-endpoints\fR
(REMOVED) Automatically enable Google Cloud Endpoints to take advantage of API
management features by adding service\-control and service\-management scopes.

If \fR\-\-no\-enable\-cloud\-endpoints\f5 is set, remove service\-control and
service\-management scopes, even if they are implicitly (via default) or
explicitly set via \fR\-\-scopes\f5.

\fR\-\-[no\-]enable\-cloud\-endpoints\f5 is not allowed if
\fRcontainer/new_scopes_behavior\f5 property is set to true.

Flag \-\-[no\-]enable\-cloud\-endpoints has been removed.

Enabled by default, use \fB\-\-no\-enable\-cloud\-endpoints\fR to disable.

.TP 2m
\fB\-\-scopes\fR=[\fISCOPE\fR,...]; default="gke\-default"
Specifies scopes for the node instances. Examples:

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-scopes=https://www.googleapis.com/auth/devstorage.read_only
.RE

.RS 2m
$ gcloud alpha container clusters create example\-cluster \e
    \-\-scopes=bigquery,storage\-rw,compute\-ro
.RE

Multiple SCOPEs can be specified, separated by commas. \fRlogging\-write\f5
and/or \fRmonitoring\f5 are added unless Cloud Logging and/or Cloud Monitoring
are disabled (see \fR\-\-enable\-cloud\-logging\f5 and
\fR\-\-enable\-cloud\-monitoring\f5 for more information).

Unless container/new_scopes_behavior property is true, compute\-rw and
storage\-ro are always added, even if not explicitly specified, and
\-\-enable\-cloud\-endpoints (by default) adds service\-control and
service\-management scopes.

If container/new_scopes_behavior property is true, none of the above scopes are
added (though storage\-ro, service\-control, and service\-management are all
included in the default scopes. In a future release, this will be the default
behavior.

SCOPE can be either the full URI of the scope or an alias. \fBdefault\fR scopes
are assigned to all instances. Available aliases are:


.TS
tab(	);
lB lB
l l.
Alias	URI
bigquery	https://www.googleapis.com/auth/bigquery
cloud-platform	https://www.googleapis.com/auth/cloud-platform
cloud-source-repos	https://www.googleapis.com/auth/source.full_control
cloud-source-repos-ro	https://www.googleapis.com/auth/source.read_only
compute-ro	https://www.googleapis.com/auth/compute.readonly
compute-rw	https://www.googleapis.com/auth/compute
datastore	https://www.googleapis.com/auth/datastore
default	https://www.googleapis.com/auth/devstorage.read_only
	https://www.googleapis.com/auth/logging.write
	https://www.googleapis.com/auth/monitoring.write
	https://www.googleapis.com/auth/pubsub
	https://www.googleapis.com/auth/service.management.readonly
	https://www.googleapis.com/auth/servicecontrol
	https://www.googleapis.com/auth/trace.append
gke-default	https://www.googleapis.com/auth/devstorage.read_only
	https://www.googleapis.com/auth/logging.write
	https://www.googleapis.com/auth/monitoring
	https://www.googleapis.com/auth/service.management.readonly
	https://www.googleapis.com/auth/servicecontrol
	https://www.googleapis.com/auth/trace.append
logging-write	https://www.googleapis.com/auth/logging.write
monitoring	https://www.googleapis.com/auth/monitoring
monitoring-write	https://www.googleapis.com/auth/monitoring.write
pubsub	https://www.googleapis.com/auth/pubsub
service-control	https://www.googleapis.com/auth/servicecontrol
service-management	https://www.googleapis.com/auth/service.management.readonly
sql (deprecated)	https://www.googleapis.com/auth/sqlservice
sql-admin	https://www.googleapis.com/auth/sqlservice.admin
storage-full	https://www.googleapis.com/auth/devstorage.full_control
storage-ro	https://www.googleapis.com/auth/devstorage.read_only
storage-rw	https://www.googleapis.com/auth/devstorage.read_write
taskqueue	https://www.googleapis.com/auth/taskqueue
trace	https://www.googleapis.com/auth/trace.append
userinfo-email	https://www.googleapis.com/auth/userinfo.email
.TE

DEPRECATION WARNING: https://www.googleapis.com/auth/sqlservice account scope
and \fRsql\f5 alias do not provide SQL instance management capabilities and have
been deprecated. Please, use https://www.googleapis.com/auth/sqlservice.admin or
\fRsql\-admin\f5 to manage your Google SQL Service instances.



\fR
.RE
.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-configuration,
\-\-flags\-file, \-\-flatten, \-\-format, \-\-help, \-\-log\-http, \-\-project,
\-\-quiet, \-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity. Run \fB$
gcloud help\fR for details.



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you will have to apply for early access and have your projects registered on the
API whitelist to use it. To do so, contact Support at
https://cloud.google.com/support/. These variants are also available:

.RS 2m
$ gcloud container clusters create
$ gcloud beta container clusters create
.RE

