
.TH "GCLOUD_ALPHA_COMPOSER_ENVIRONMENTS_RUN" 1



.SH "NAME"
.HP
gcloud alpha composer environments run \- run an Airflow sub\-command remotely in a Cloud Composer environment



.SH "SYNOPSIS"
.HP
\f5gcloud alpha composer environments run\fR (\fIENVIRONMENT\fR\ :\ \fB\-\-location\fR=\fILOCATION\fR) \fISUBCOMMAND\fR [\fIGCLOUD_WIDE_FLAG\ ...\fR] [\-\-\ \fICMD_ARGS\fR\ ...]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Executes an Airflow CLI sub\-command remotely in an environment.
If the sub\-command takes flags, separate the environment name from the
sub\-command and its flags with ``\-\-''. This command waits for the
sub\-command to complete; its exit code will match the sub\-command's exit code.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

Environment resource \- The environment in which to run an Airflow command. The
arguments in this group can be used to specify the attributes of this resource.
(NOTE) Some attributes are not given arguments in this group but can be set in
other ways. To set the [project] attribute: provide the argument [environment]
on the command line with a fully specified name; provide the argument
[\-\-project] on the command line; set the property [core/project]. This must be
specified.

.RS 2m
.TP 2m
\fIENVIRONMENT\fR
ID of the environment or fully qualified identifier for the environment. This
positional must be specified if any of the other arguments in this group are
specified.

.TP 2m
\fB\-\-location\fR=\fILOCATION\fR
Compute Engine region in which to create the environment.

.RE
.sp
.TP 2m
\fISUBCOMMAND\fR
The Airflow CLI subcommand to run. Available subcommands include: backfill,
clear, connections, dag_state, delete_dag, kerberos, list_dag_runs, list_dags,
list_tasks, next_execution, pause, pool, render, run, task_failed_deps,
task_state, test, trigger_dag, unpause, variables, version (see
https://airflow.apache.org/cli.html for more info). Note that delete_dag is
available from Airflow 1.10.1, and list_dag_runs, next_execution are available
from Airflow 1.10.2.

.TP 2m
[\-\- \fICMD_ARGS\fR ...]
Command line arguments to the subcommand.

The '\-\-' argument must be specified between gcloud specific args on the left
and CMD_ARGS on the right. Example:

gcloud alpha composer environments run myenv trigger_dag \-\- some_dag
\-\-run_id=foo


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

The following command:

.RS 2m
gcloud alpha composer environments run myenv trigger_dag \-\- some_dag \-\-run_id=foo
.RE

is equivalent to running the following command from a shell inside the
\fBmy\-environment\fR environment:

.RS 2m
airflow trigger_dag some_dag \-\-run_id=foo
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud composer environments run
$ gcloud beta composer environments run
.RE

