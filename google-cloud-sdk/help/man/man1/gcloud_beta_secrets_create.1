
.TH "GCLOUD_BETA_SECRETS_CREATE" 1



.SH "NAME"
.HP
gcloud beta secrets create \- create a new secret



.SH "SYNOPSIS"
.HP
\f5gcloud beta secrets create\fR \fISECRET\fR [\fB\-\-data\-file\fR=\fIPATH\fR] [\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-replication\-policy\-file\fR=\fIREPLICATION\-POLICY\-FILE\fR\ |\ \fB\-\-kms\-key\-name\fR=\fIKMS\-KEY\-NAME\fR\ \fB\-\-locations\fR=[\fILOCATION\fR,...]\ \fB\-\-replication\-policy\fR=\fIPOLICY\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(BETA)\fR Create a secret with the given name and creates a secret version
with the given data, if any. Note, the created secret ends with a newline. If a
secret already exists with the given name, this command will return an error.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

Secret resource \- The secret to create. This represents a Cloud resource.
(NOTE) Some attributes are not given arguments in this group but can be set in
other ways. To set the [project] attribute: provide the argument [SECRET] on the
command line with a fully specified name; provide the argument [\-\-project] on
the command line; set the property [core/project]. This must be specified.

.RS 2m
.TP 2m
\fISECRET\fR
ID of the secret or fully qualified identifier for the secret.


.RE
.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-data\-file\fR=\fIPATH\fR
File path from which to read secret data. Set this to "\-" to read the secret
data from stdin.

.TP 2m
\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]
List of label KEY=VALUE pairs to add.

Keys must start with a lowercase character and contain only hyphens (\f5\-\fR),
underscores (\f5_\fR), lowercase characters, and numbers. Values must contain
only hyphens (\f5\-\fR), underscores (\f5_\fR), lowercase characters, and
numbers.

.TP 2m

Replication policy. At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-replication\-policy\-file\fR=\fIREPLICATION\-POLICY\-FILE\fR
JSON or YAML file to use to read the replication policy. The file must conform
to
https://cloud.google.com/secret\-manager/docs/reference/rest/v1/projects.secrets#replication.Set
this to "\-" to read from stdin.

.TP 2m

Inline replication arguments.

.RS 2m
.TP 2m
\fB\-\-kms\-key\-name\fR=\fIKMS\-KEY\-NAME\fR
Global KMS key with which to encrypt and decrypt the secret. Only valid for
secrets with an automatic replication policy.

.TP 2m
\fB\-\-locations\fR=[\fILOCATION\fR,...]
Comma\-separated list of locations in which the secret should be replicated.

.TP 2m
\fB\-\-replication\-policy\fR=\fIPOLICY\fR
The type of replication policy to apply to this secret. Allowed values are
"automatic" and "user\-managed". If user\-managed then \-\-locations must also
be provided.


.RE
.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

Create a secret with an automatic replication policy without creating any
versions:

.RS 2m
$ gcloud beta secrets create my\-secret
.RE

Create a new secret named 'my\-secret' with an automatic replication policy and
data from a file:

.RS 2m
$ gcloud beta secrets create my\-secret \-\-data\-file=/tmp/secret
.RE

Create a new secret named 'my\-secret' in 'us\-central1' with data from a file:

.RS 2m
$ gcloud beta secrets create my\-secret \-\-data\-file=/tmp/secret
\-\-replication\-policy=user\-managed \e
    \-\-locations=us\-central1
.RE

Create a new secret named 'my\-secret' in 'us\-central1' and 'us\-east1' with
the value "s3cr3t":

.RS 2m
$ printf "s3cr3t" | gcloud beta secrets create my\-secret \e
    \-\-data\-file=\- \-\-replication\-policy=user\-managed \e
    \-\-locations=us\-central1,us\-east1
.RE

Create a new secret named 'my\-secret' in 'us\-central1' and 'us\-east1' with
the value "s3cr3t" in PowerShell (Note: PowerShell will add a newline to the
resulting secret):

.RS 2m
$ Write\-Output "s3cr3t" | gcloud beta secrets create my\-secret \e
    \-\-data\-file=\- \-\-replication\-policy=user\-managed \e
    \-\-locations=us\-central1,us\-east1
.RE



.SH "NOTES"

This command is currently in BETA and may change without notice. This variant is
also available:

.RS 2m
$ gcloud secrets create
.RE

