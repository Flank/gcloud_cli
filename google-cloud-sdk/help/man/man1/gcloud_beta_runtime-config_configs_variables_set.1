
.TH "GCLOUD_BETA_RUNTIME\-CONFIG_CONFIGS_VARIABLES_SET" 1



.SH "NAME"
.HP
gcloud beta runtime\-config configs variables set \- create or update variable resources



.SH "SYNOPSIS"
.HP
\f5gcloud beta runtime\-config configs variables set\fR \fINAME\fR [\fIVALUE\fR] \fB\-\-config\-name\fR=\fICONFIG_NAME\fR [\fB\-\-is\-text\fR] [\fB\-\-fail\-if\-absent\fR\ |\ \fB\-\-fail\-if\-present\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(BETA)\fR This command creates or updates a variable resource, setting its
value to the specified string or file contents.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fINAME\fR
The variable name.

.TP 2m
[\fIVALUE\fR]
The variable value. If absent, the value will be read from stdin. The value is
automatically base64\-encoded, unless \-\-is\-text flag is set.


.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-config\-name\fR=\fICONFIG_NAME\fR
The name of the configuration resource to use.


.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-is\-text\fR
If True, send and store the value as text. Can be used if the value contains
only text (UTF\-8 encoded). This affects how the variable is transmitted on the
wire and requires less quota on the backend.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-fail\-if\-absent\fR
Fail if a variable with the specified name does not exist.

.TP 2m
\fB\-\-fail\-if\-present\fR
Fail if a variable with the specified name already exists.


.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity. Run \fB$ gcloud
help\fR for details.



.SH "EXAMPLES"

To create or update a variable named "my\-var", run:

.RS 2m
$ gcloud beta runtime\-config configs variables set \e
    \-\-config\-name my\-config my\-var "my value"
.RE

To create or update a variable with a hierarchical name, such as
"results/task1", run:

.RS 2m
$ gcloud beta runtime\-config configs variables set \e
    \-\-config\-name my\-config results/task1 "my value"
.RE

To create a variable, but fail if it already exists, run:

.RS 2m
$ gcloud beta runtime\-config configs variables set \e
    \-\-config\-name my\-config my\-var "my\-value" \-\-fail\-if\-present
.RE

To update a variable, but fail if it does not exist, run:

.RS 2m
$ gcloud beta runtime\-config configs variables set \e
    \-\-config\-name my\-config my\-var "my\-value" \-\-fail\-if\-absent
.RE

It is possible to provide \-\-is\-text flag if the value contains only text
(UTF\-8 encoded). This affects how the variable is transmitted on the wire and
requires less quota on the backend.

.RS 2m
$ gcloud beta runtime\-config configs variables set \e
    \-\-config\-name my\-config \-\-is\-text my\-var "my value"
.RE

If the variable's value parameter is not specified, the value will be read from
standard input. This allows setting variables to large values or values that
contain non\-printable characters. The variable value will be automatically
base64\-encoded. For example, to set a variable's value to the contents of a
file, run:

.RS 2m
$ cat my\-file | gcloud beta runtime\-config configs variables set \e
    \-\-config\-name my\-config my\-var
.RE



.SH "NOTES"

This command is currently in BETA and may change without notice.

