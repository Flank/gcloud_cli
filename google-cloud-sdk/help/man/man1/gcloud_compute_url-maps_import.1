
.TH "GCLOUD_COMPUTE_URL\-MAPS_IMPORT" 1



.SH "NAME"
.HP
gcloud compute url\-maps import \- import a URL map



.SH "SYNOPSIS"
.HP
\f5gcloud compute url\-maps import\fR \fIURL_MAP\fR [\fB\-\-source\fR=\fISOURCE\fR] [\fB\-\-global\fR\ |\ \fB\-\-region\fR=\fIREGION\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

Imports a URL map's configuration from a file.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fIURL_MAP\fR
Name of the URL map to import.


.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-source\fR=\fISOURCE\fR
Path to a YAML file containing configuration export data. The YAML file must not
contain any output\-only fields. Alternatively, you may omit this flag to read
from standard input. A schema describing the export/import format can be found
in: $CLOUDSDKROOT/lib/googlecloudsdk/schemas/compute/v1/UrlMap.yaml.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-global\fR
If set, the URL map is global.

.TP 2m
\fB\-\-region\fR=\fIREGION\fR
Region of the URL map to import. If not specified, you may be prompted to select
a region.

To avoid prompting when this flag is omitted, you can set the
\f5\fIcompute/region\fR\fR property:

.RS 2m
$ gcloud config set compute/region REGION
.RE

A list of regions can be fetched by running:

.RS 2m
$ gcloud compute regions list
.RE

To unset the property, run:

.RS 2m
$ gcloud config unset compute/region
.RE

Alternatively, the region can be stored in the environment variable
\f5\fICLOUDSDK_COMPUTE_REGION\fR\fR.


.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

A URL map can be imported by running:

.RS 2m
$ gcloud compute url\-maps import NAME \-\-source=<path\-to\-file>
.RE



.SH "NOTES"

These variants are also available:

.RS 2m
$ gcloud alpha compute url\-maps import
$ gcloud beta compute url\-maps import
.RE

