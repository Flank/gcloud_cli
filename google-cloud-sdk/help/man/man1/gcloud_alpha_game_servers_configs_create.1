
.TH "GCLOUD_ALPHA_GAME_SERVERS_CONFIGS_CREATE" 1



.SH "NAME"
.HP
gcloud alpha game servers configs create \- create a Game Server Config



.SH "SYNOPSIS"
.HP
\f5gcloud alpha game servers configs create\fR (\fICONFIG\fR\ :\ \fB\-\-deployment\fR=\fIDEPLOYMENT\fR\ \fB\-\-location\fR=\fILOCATION\fR) \fB\-\-fleet\-configs\-file\fR=\fIFLEET_CONFIGS_FILE\fR [\fB\-\-async\fR] [\fB\-\-description\fR=\fIDESCRIPTION\fR] [\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-scaling\-configs\-file\fR=\fISCALING_CONFIGS_FILE\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Create a Cloud Game Server Config for a Game Server Deployment.


.SH "EXAMPLES"

To create Game Server Config 'my\-config' in project 'my\-project', deployment
\'my\-deployment', and location in 'global'(configs only support the 'global'
location) run:

.RS 2m
$ gcloud alpha game servers configs create my\-config \e
    \-\-project=my\-project \-\-deployment=my\-deployment \e
    \-\-location=global \e
    \-\-deployment=my\-deployment \-\-description=description \-\-labels=a=x,b=y \e
    \-\-fleet\-configs\-file=fleet_configs.json
.RE



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

Game server config resource \- Cloud Game Server Config to create. The arguments
in this group can be used to specify the attributes of this resource. (NOTE)
Some attributes are not given arguments in this group but can be set in other
ways. To set the [project] attribute: provide the argument [config] on the
command line with a fully specified name; set the property [core/project];
provide the argument [\-\-project] on the command line. This must be specified.

.RS 2m
.TP 2m
\fICONFIG\fR
ID of the game server config or fully qualified identifier for the game server
config. This positional must be specified if any of the other arguments in this
group are specified.

.TP 2m
\fB\-\-deployment\fR=\fIDEPLOYMENT\fR
Cloud Game Servers Deployment.

.TP 2m
\fB\-\-location\fR=\fILOCATION\fR
Google Cloud location.


.RE
.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-fleet\-configs\-file\fR=\fIFLEET_CONFIGS_FILE\fR
Path to a JSON or YAML file that contains fleet configs. The fleet spec field in
configs file follows Agones Fleet custom resource. Please see
https://github.com/googleforgames/agones/blob/master/examples/simple\-udp/fleet.yaml
for example and https://agones.dev/site/docs/reference/fleet/ for Fleet Spec
definition.


.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-description\fR=\fIDESCRIPTION\fR
Game server config description.

.TP 2m
\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]
List of label KEY=VALUE pairs to add.

Keys must start with a lowercase character and contain only hyphens (\f5\-\fR),
underscores (\f5_\fR), lowercase characters, and numbers. Values must contain
only hyphens (\f5\-\fR), underscores (\f5_\fR), lowercase characters, and
numbers.

.TP 2m
\fB\-\-scaling\-configs\-file\fR=\fISCALING_CONFIGS_FILE\fR
Path to a JSON or YAML file that contains scaling configs. The fleet autoscaler
spec field in configs file follows Agones Fleet Autoscaler custom resource.
Please see
https://github.com/googleforgames/agones/blob/master/examples/simple\-udp/fleetautoscaler.yaml
for example and https://agones.dev/site/docs/reference/fleetautoscaler/ for
Fleet Autoscaler Spec definition. Scaling config file can also specifies
schedules. Contents of a sample yaml file:

.RS 2m
  \- fleetAutoscalerSpec:
      policy:
        type: Buffer
        buffer:
          bufferSize: 10
          minReplicas: 10
          maxReplicas: 20
    name: scaling\-config\-2
    schedules:
    \- startTime: '2020\-01\-01T01:00:00Z'
      endTime: '2020\-01\-02T01:00:00Z'
      cronSpec: '0 9 * * *'
      cronJobDuration: 3600s
  \- fleetAutoscalerSpec:
      policy:
        type: Buffer
        buffer:
          bufferSize: 2
          minReplicas: 2
          maxReplicas: 4
    name: scaling\-config\-1
.RE


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "API REFERENCE"

This command uses the \fBgameservices/v1alpha\fR API. The full documentation for
this API can be found at: https://cloud.google.com/solutions/gaming/



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud game servers configs create
$ gcloud beta game servers configs create
.RE

