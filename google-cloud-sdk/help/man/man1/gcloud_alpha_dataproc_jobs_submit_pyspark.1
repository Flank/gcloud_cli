
.TH "GCLOUD_ALPHA_DATAPROC_JOBS_SUBMIT_PYSPARK" 1



.SH "NAME"
.HP
gcloud alpha dataproc jobs submit pyspark \- submit a PySpark job to a cluster



.SH "SYNOPSIS"
.HP
\f5gcloud alpha dataproc jobs submit pyspark\fR \fIPY_FILE\fR \fB\-\-cluster\fR=\fICLUSTER\fR [\fB\-\-archives\fR=[\fIARCHIVE\fR,...]] [\fB\-\-async\fR] [\fB\-\-bucket\fR=\fIBUCKET\fR] [\fB\-\-driver\-log\-levels\fR=[\fIPACKAGE\fR=\fILEVEL\fR,...]] [\fB\-\-files\fR=[\fIFILE\fR,...]] [\fB\-\-jars\fR=[\fIJAR\fR,...]] [\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-max\-failures\-per\-hour\fR=\fIMAX_FAILURES_PER_HOUR\fR] [\fB\-\-properties\fR=[\fIPROPERTY\fR=\fIVALUE\fR,...]] [\fB\-\-py\-files\fR=[\fIPY_FILE\fR,...]] [\fB\-\-region\fR=\fIREGION\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR] [\-\-\ \fIJOB_ARGS\fR\ ...]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Submit a PySpark job to a cluster.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fIPY_FILE\fR
Main .py file to run as the driver.

.TP 2m
[\-\- \fIJOB_ARGS\fR ...]
Arguments to pass to the driver.

The '\-\-' argument must be specified between gcloud specific args on the left
and JOB_ARGS on the right.


.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-cluster\fR=\fICLUSTER\fR
The Dataproc cluster to submit the job to.


.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-archives\fR=[\fIARCHIVE\fR,...]
Comma separated list of archives to be extracted into the working directory of
each executor. Must be one of the following file formats: .zip, .tar, .tar.gz,
or .tgz.

.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-bucket\fR=\fIBUCKET\fR
The Cloud Storage bucket to stage files in. Defaults to the cluster's configured
bucket.

.TP 2m
\fB\-\-driver\-log\-levels\fR=[\fIPACKAGE\fR=\fILEVEL\fR,...]
List of key value pairs to configure driver logging, where key is a package and
value is the log4j log level. For example: root=FATAL,com.example=INFO

.TP 2m
\fB\-\-files\fR=[\fIFILE\fR,...]
Comma separated list of files to be placed in the working directory of each
executor.

.TP 2m
\fB\-\-jars\fR=[\fIJAR\fR,...]
Comma separated list of jar files to be provided to the executor and driver
classpaths.

.TP 2m
\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]
List of label KEY=VALUE pairs to add.

Keys must start with a lowercase character and contain only hyphens (\f5\-\fR),
underscores (\f5_\fR), lowercase characters, and numbers. Values must contain
only hyphens (\f5\-\fR), underscores (\f5_\fR), lowercase characters, and
numbers.

.TP 2m
\fB\-\-max\-failures\-per\-hour\fR=\fIMAX_FAILURES_PER_HOUR\fR
Specifies maximum number of times a job can be restarted in event of failure.
Expressed as a per\-hour rate. Default is 0 (no failure retries).

.TP 2m
\fB\-\-properties\fR=[\fIPROPERTY\fR=\fIVALUE\fR,...]
List of key value pairs to configure PySpark. For a list of available
properties, see:
https://spark.apache.org/docs/latest/configuration.html#available\-properties.

.TP 2m
\fB\-\-py\-files\fR=[\fIPY_FILE\fR,...]
Comma separated list of Python files to be provided to the job. Must be one of
the following file formats ".py, .zip, or .egg".

.TP 2m
\fB\-\-region\fR=\fIREGION\fR
Cloud Dataproc region to use. Each Cloud Dataproc region constitutes an
independent resource namespace constrained to deploying instances into Compute
Engine zones inside the region. Overrides the default \fBdataproc/region\fR
property value for this command invocation.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To submit a PySpark job with a local script and custom flags, run:

.RS 2m
$ gcloud alpha dataproc jobs submit pyspark \-\-cluster=my_cluster \e
    my_script.py \-\- \-\-custom\-flag
.RE

To submit a Spark job that runs a script that is already on the cluster, run:

.RS 2m
$ gcloud alpha dataproc jobs submit pyspark \-\-cluster=my_cluster \e
    file:///usr/lib/spark/examples/src/main/python/pi.py 100
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud dataproc jobs submit pyspark
$ gcloud beta dataproc jobs submit pyspark
.RE

