
.TH "GCLOUD_ALPHA_FIRESTORE_INDEXES_COMPOSITE_CREATE" 1



.SH "NAME"
.HP
gcloud alpha firestore indexes composite create \- create a new composite index



.SH "SYNOPSIS"
.HP
\f5gcloud alpha firestore indexes composite create\fR \fB\-\-collection\-group\fR=\fICOLLECTION_GROUP\fR \fB\-\-field\-config\fR=\fIFIELD_CONFIG\fR [\fB\-\-async\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Create a new composite index.



.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m

Collection group resource \- Collection group of the index. This represents a
Cloud resource. (NOTE) Some attributes are not given arguments in this group but
can be set in other ways. To set the [project] attribute: provide the argument
[\-\-collection\-group] on the command line with a fully specified name; set the
property [core/project]; provide the argument [\-\-project] on the command line.
To set the [database] attribute: provide the argument [\-\-collection\-group] on
the command line with a fully specified name; provide the argument
[\-\-database] on the command line (currently '(default)' is the only supported
value). This must be specified.


.RS 2m
.TP 2m
\fB\-\-collection\-group\fR=\fICOLLECTION_GROUP\fR
ID of the collection group or fully qualified identifier for the collection
group.

.RE
.sp
.TP 2m
\fB\-\-field\-config\fR=\fIFIELD_CONFIG\fR
Configuration for a field.

This flag must be repeated to provide the ordered list of field configurations
comprising the composite index. For example:

.RS 2m
$ gcloud alpha firestore indexes composite create \e
    \-\-collection\-group=Events \e
    \-\-field\-config field\-path=tags,array\-config=contains \e
    \-\-field\-config field\-path=user_id,order=descending \e
    \-\-field\-config field\-path=timestamp,order=descending
.RE

The following keys are allowed:

.RS 2m
.TP 2m
\fBfield\-path\fR
Specifies the field path (e.g. 'address.city'). This is required.

.TP 2m
\fBorder\fR
Specifies the order. Valid options are: 'ascending', 'descending'. Exactly one
of order or array\-config must be specified.

.TP 2m
\fBarray\-config\fR
Specifies the configuration for an array field. The only valid option is
\'contains'. Exactly one of 'order' or 'array\-config' must be specified.


.RE
.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "API REFERENCE"

This command uses the \fBfirestore/v1\fR API. The full documentation for this
API can be found at: https://cloud.google.com/firestore



.SH "EXAMPLES"

The following command creates a composite index with fields \f5user_id\fR (in
descending order) followed by \f5timestamp\fR (in descending order) in the
\f5Events\fR collection group.

.RS 2m
$ gcloud alpha firestore indexes composite create \e
    \-\-collection\-group=Events \e
    \-\-field\-config=field\-path=user\-id,order=descending \e
    \-\-field\-config=field\-path=timestamp,order=descending
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud firestore indexes composite create
$ gcloud beta firestore indexes composite create
.RE

