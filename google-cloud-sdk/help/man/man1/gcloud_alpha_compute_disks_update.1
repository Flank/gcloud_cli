
.TH "GCLOUD_ALPHA_COMPUTE_DISKS_UPDATE" 1



.SH "NAME"
.HP
gcloud alpha compute disks update \- update a Google Compute Engine persistent disk



.SH "SYNOPSIS"
.HP
\f5gcloud alpha compute disks update\fR \fIDISK_NAME\fR [\fB\-\-update\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-clear\-labels\fR\ |\ \fB\-\-remove\-labels\fR=[\fIKEY\fR,...]] [\fB\-\-region\fR=\fIREGION\fR\ |\ \fB\-\-zone\fR=\fIZONE\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR \fBgcloud alpha compute disks update\fR updates a Google Compute
Engine persistent disk. For example:

.RS 2m
$ gcloud alpha compute disks update example\-disk \e
    \-\-zone us\-central1\-a \e
  \-\-update\-labels=k0=value1,k1=value2 \-\-remove\-labels=k3
.RE

will add/update labels \f5\fIk0\fR\fR and \f5\fIk1\fR\fR and remove labels with
key \f5\fIk3\fR\fR.

Labels can be used to identify the disk and to filter them as in

.RS 2m
$ gcloud alpha compute disks list \-\-filter='labels.k1:value2'
.RE

To list existing labels

.RS 2m
$ gcloud alpha compute disks describe example\-disk \e
    \-\-format='default(labels)'
.RE



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fIDISK_NAME\fR
Name of the disk to update.


.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-update\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]
A list of label KEY=VALUE pairs to update. If a label exists its value is
modified, otherwise a new label is created.

Keys must start with a lowercase character and contain only hyphens (\f5\-\fR),
underscores (\f5_\fR), lowercase characters, and numbers. Values must contain
only hyphens (\f5\-\fR), underscores (\f5_\fR), lowercase characters, and
numbers.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-clear\-labels\fR
Removes all labels. If \f5\-\-update\-labels\fR is also specified then
\f5\-\-clear\-labels\fR is applied first.

For example, to remove all labels:

.RS 2m
$ gcloud alpha compute disks update \-\-clear\-labels
.RE

To set the labels to exactly "foo" and "baz":

.RS 2m
$ gcloud alpha compute disks update \-\-clear\-labels \e
  \-\-update\-labels foo=bar,baz=qux
.RE

.TP 2m
\fB\-\-remove\-labels\fR=[\fIKEY\fR,...]
A list of label keys to remove. If a label does not exist it is silently
ignored.

.RE
.sp
.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-region\fR=\fIREGION\fR
Region of the disk to update. If not specified, you may be prompted to select a
region.

To avoid prompting when this flag is omitted, you can set the
\f5\fIcompute/region\fR\fR property:

.RS 2m
$ gcloud config set compute/region REGION
.RE

A list of regions can be fetched by running:

.RS 2m
$ gcloud compute regions list
.RE

To unset the property, run:

.RS 2m
$ gcloud config unset compute/region
.RE

Alternatively, the region can be stored in the environment variable
\f5\fICLOUDSDK_COMPUTE_REGION\fR\fR.

.TP 2m
\fB\-\-zone\fR=\fIZONE\fR
Zone of the disk to update. If not specified and the \f5\fIcompute/zone\fR\fR
property isn't set, you may be prompted to select a zone.

To avoid prompting when this flag is omitted, you can set the
\f5\fIcompute/zone\fR\fR property:

.RS 2m
$ gcloud config set compute/zone ZONE
.RE

A list of zones can be fetched by running:

.RS 2m
$ gcloud compute zones list
.RE

To unset the property, run:

.RS 2m
$ gcloud config unset compute/zone
.RE

Alternatively, the zone can be stored in the environment variable
\f5\fICLOUDSDK_COMPUTE_ZONE\fR\fR.


.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-configuration,
\-\-flatten, \-\-format, \-\-help, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity. Run \fB$ gcloud
help\fR for details.



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you will have to apply for early access and have your projects registered on the
API whitelist to use it. To do so, contact Support at
https://cloud.google.com/support/. These variants are also available:

.RS 2m
$ gcloud compute disks update
$ gcloud beta compute disks update
.RE

