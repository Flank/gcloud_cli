
.TH "GCLOUD_BETA_CONTAINER_HUB_MEMBERSHIPS_REGISTER" 1



.SH "NAME"
.HP
gcloud beta container hub memberships register \- register a cluster with Hub



.SH "SYNOPSIS"
.HP
\f5gcloud beta container hub memberships register\fR \fICLUSTER_NAME\fR (\fB\-\-gke\-cluster\fR=\fILOCATION\fR/\fICLUSTER_NAME\fR\ |\ \fB\-\-gke\-uri\fR=\fIGKE_URI\fR\ |\ [\fB\-\-context\fR=\fICONTEXT\fR\ :\ \fB\-\-kubeconfig\fR=\fIKUBECONFIG\fR]) (\fB\-\-service\-account\-key\-file\fR=\fISERVICE_ACCOUNT_KEY_FILE\fR\ |\ [\fB\-\-enable\-workload\-identity\fR\ :\ \fB\-\-public\-issuer\-url\fR=\fIPUBLIC_ISSUER_URL\fR]) [\fB\-\-manifest\-output\-file\fR=\fIMANIFEST_OUTPUT_FILE\fR] [\fB\-\-proxy\fR=\fIPROXY\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(BETA)\fR This command registers a cluster with the Hub by:

.RS 2m
1. Creating a Hub Membership resource corresponding to the cluster.
2. Adding in\-cluster Kubernetes Resources that make the cluster exclusive
   to one Hub.
3. Installing the Connect Agent into this cluster.
.RE

A successful registration implies that the cluster is now exclusive to a single
Hub.

For more information about Connect Agent, go to:
https://cloud.google.com/anthos/multicluster\-management/connect/overview/

To register a non\-GKE or GKE On\-Prem cluster use \-\-context flag (with an
optional \-\-kubeconfig flag).

To register a GKE cluster use \-\-gke\-cluster or \-\-gke\-uri flag (no
\-\-kubeconfig flag is required).

In all cases, the Connect Agent that is installed in the target cluster must
authenticate to Google using a \f5\-\-service\-account\-key\-file\fR that
corresponds to a service account that has been granted \f5gkehub.connect\fR
permissions.

If the cluster is already registered to another Hub, the registration is not
successful.

Rerunning this command against the same cluster with the same CLUSTER_NAME and
target GKEHub is successful and upgrades the Connect Agent if a new agent is
available.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fICLUSTER_NAME\fR
The membership name that you choose to uniquely represents the cluster being
registered on the Hub.


.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m

Cluster identifier. Exactly one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-gke\-cluster\fR=\fILOCATION\fR/\fICLUSTER_NAME\fR
The location/name of the GKE cluster. The location can be a zone or a region for
e.g \f5us\-central1\-a/my\-cluster\fR.

.TP 2m
\fB\-\-gke\-uri\fR=\fIGKE_URI\fR
The URI of the GKE cluster; for example,
\'https://container.googleapis.com/projects/my\-project/locations/us\-central1\-a/clusters/my\-cluster'
The URI can obtain by calling: gcloud container clusters list \-\-uri This is
only valid if the represented cluster is a GKE cluster. The provided URI will be
validated to confirm that it maps to the valid GKE cluster.

.TP 2m

Non\-GKE cluster identifier.

.RS 2m
.TP 2m
\fB\-\-context\fR=\fICONTEXT\fR
The cluster context as it appears in the kubeconfig file. You can get this value
from the command line by running command: \f5kubectl config current\-context\fR.
This flag must be specified if any of the other arguments in this group are
specified.

.TP 2m
\fB\-\-kubeconfig\fR=\fIKUBECONFIG\fR
The kubeconfig file containing an entry for the cluster. Defaults to $KUBECONFIG
if it is set in the environment, otherwise defaults to $HOME/.kube/config.

.RE
.RE
.sp
.TP 2m

Exactly one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-service\-account\-key\-file\fR=\fISERVICE_ACCOUNT_KEY_FILE\fR
The JSON file of a Google Cloud service account private key. This service
account key is stored as a secret named \f5\fIcreds\-gcp\fR\fR in gke\-connect
namespace. To update the \f5\fIcreds\-gcp\fR\fR secret in gke\-connect namespace
with a new service account key file, run the following command:

kubectl delete secret creds\-gcp \-n gke\-connect

kubectl create secret generic creds\-gcp \-n gke\-connect
\-\-from\-file=creds\-gcp.json=/path/to/file

.TP 2m

Workload Identity

.RS 2m
.TP 2m
\fB\-\-enable\-workload\-identity\fR
Enable Workload Identity when registering the cluster with Hub. Requires gcloud
alpha or beta. \-\-service_account_key_file flag should not be set if this is
set. This flag must be specified if any of the other arguments in this group are
specified.

.TP 2m
\fB\-\-public\-issuer\-url\fR=\fIPUBLIC_ISSUER_URL\fR
Skip auto\-discovery and register the cluster with this issuer URL. Use this
option when the OpenID Provider Configuration and associated JSON Web Key Set
for validating the cluster's service account JWTs are served at a public
endpoint different from the cluster API server. Requires gcloud alpha or beta
and \-\-enable\-workload\-identity.


.RE
.RE
.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-manifest\-output\-file\fR=\fIMANIFEST_OUTPUT_FILE\fR
The full path of the file into which the Connect Agent installation manifest
should be stored. If this option is provided, then the manifest will be written
to this file and will not be deployed into the cluster by gcloud, and it will
need to be deployed manually.

.TP 2m
\fB\-\-proxy\fR=\fIPROXY\fR
The proxy address in the format of http[s]://{hostname}. The proxy must support
the HTTP CONNECT method in order for this connection to succeed.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

Register a non\-GKE or GKE On\-Prem cluster referenced from a specific
kubeconfig file, and install the Connect Agent:

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-context=my\-cluster\-context \e
  \-\-kubeconfig=/home/user/custom_kubeconfig \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Register a non\-GKE or GKE On\-Prem cluster referenced from the default
kubeconfig file, and install the Connect Agent:

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-context=my\-cluster\-context \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Register a non\-GKE or GKE On\-Prem cluster, and install a specific version of
the Connect Agent:

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-context=my\-cluster\-context \e
  \-\-version=gkeconnect_20190802_02_00 \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Register a non\-GKE or GKE On\-Prem cluster and output a manifest that can be
used to install the Connect Agent:

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-context=my\-cluster\-context \e
  \-\-manifest\-output\-file=/tmp/manifest.yaml \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Register a GKE cluster referenced from a GKE URI, and install the Connect Agent:

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-gke\-uri=my\-cluster\-gke\-uri \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Register a GKE cluster referenced from a GKE Cluster location and name, and
install the Connect Agent:

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-gke\-cluster=my\-cluster\-region\-or\-zone/my\-cluster \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Register a GKE cluster, and install a specific version of the Connect Agent:

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-gke\-uri=my\-cluster\-gke\-uri \e
  \-\-version=gkeconnect_20190802_02_00 \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-gke\-cluster=my\-cluster\-region\-or\-zone/my\-cluster \e
  \-\-version=gkeconnect_20190802_02_00 \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Register a GKE cluster and output a manifest that can be used to install the
Connect Agent:

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-gke\-uri=my\-cluster\-gke\-uri \e
  \-\-manifest\-output\-file=/tmp/manifest.yaml \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

.RS 2m
$ gcloud beta container hub memberships register my\-cluster \e
  \-\-gke\-cluster=my\-cluster\-region\-or\-zone/my\-cluster \e
  \-\-manifest\-output\-file=/tmp/manifest.yaml \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE



.SH "NOTES"

This command is currently in BETA and may change without notice. These variants
are also available:

.RS 2m
$ gcloud container hub memberships register
$ gcloud alpha container hub memberships register
.RE

