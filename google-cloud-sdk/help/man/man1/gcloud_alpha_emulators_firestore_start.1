
.TH "GCLOUD_ALPHA_EMULATORS_FIRESTORE_START" 1



.SH "NAME"
.HP
gcloud alpha emulators firestore start \- start a local firestore emulator



.SH "SYNOPSIS"
.HP
\f5gcloud alpha emulators firestore start\fR [\fB\-\-host\-port\fR=\fIHOST_PORT\fR] [\fB\-\-rules\fR=\fIRULES\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR This command starts a local firestore emulator.



.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-host\-port\fR=\fIHOST_PORT\fR
The host:port to which the emulator should be bound. Can take the form of a
single address (hostname, IPv4, or IPv6) and/or port:

.RS 2m
[ADDRESS][:PORT]
.RE

In this format you must enclose IPv6 addresses in square brackets: e.g.

.RS 2m
[2001:db8:0:0:0:ff00:42:8329]:8080
.RE

The default value is localhost:8080.

.TP 2m
\fB\-\-rules\fR=\fIRULES\fR
If set, all projects will use the security rules in this file


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To start a local firestore emulator, run:

.RS 2m
$ gcloud alpha emulators firestore start
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. This variant is also available:

.RS 2m
$ gcloud beta emulators firestore start
.RE

