
.TH "GCLOUD_AUTH_APPLICATION\-DEFAULT_LOGIN" 1



.SH "NAME"
.HP
gcloud auth application\-default login \- acquire new user credentials to use for Application Default Credentials



.SH "SYNOPSIS"
.HP
\f5gcloud auth application\-default login\fR [\fB\-\-add\-quota\-project\fR] [\fB\-\-client\-id\-file\fR=\fICLIENT_ID_FILE\fR] [\fB\-\-no\-launch\-browser\fR] [\fB\-\-scopes\fR=\fISCOPES\fR,[\fISCOPES\fR,...]] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

Obtains user access credentials via a web flow and puts them in the well\-known
location for Application Default Credentials (ADC).

This command is useful when you are developing code that would normally use a
service account but need to run the code in a local development environment
where it's easier to provide user credentials. The credentials will apply to all
API calls that make use of the Application Default Credentials client library.
Do not set the \f5GOOGLE_APPLICATION_CREDENTIALS\fR environment variable if you
want to use the credentials generated by this command in your local development.
This command tries to find a quota project from gcloud's context and write it to
ADC so that Google client libraries can use it for billing and quota.
Alternatively, you can use the \f5\-\-client\-id\-file\fR flag. In this case,
the project owning the client id will be used for billing and quota. You can
create the client\-id\-file at
https://console.cloud.google.com/apis/credentials.

This command has no effect on the user account(s) set up by the \f5gcloud auth
login\fR command.

Any credentials previously generated by \f5gcloud auth application\-default
login\fR will be overwritten.

\fBTroubleshooting tip:\fR If you encounter permission issues after running this
command, you will require 'Owner' or 'Editor' permissions for the current
project (run \f5gcloud config get\-value project\fR to verify your current
project). Otherwise, you'll need the \f5services.serviceusages.usage\fR IAM
permission. If you cannot obtain either of these permissions, rerun this command
without specifying \f5\-\-add\-quota\-project\fR.



.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-add\-quota\-project\fR
Read the project from the context of the gcloud command\-line tool and write it
to application default credentials as the quota project.

.TP 2m
\fB\-\-client\-id\-file\fR=\fICLIENT_ID_FILE\fR
A file containing your own client id to use to login. If \-\-client\-id\-file is
specified, the quota project will not be written to ADC.

.TP 2m
\fB\-\-launch\-browser\fR
Launch a browser for authorization. If not enabled or DISPLAY variable is not
set, prints a URL to standard output to be copied. Enabled by default, use
\fB\-\-no\-launch\-browser\fR to disable.

.TP 2m
\fB\-\-scopes\fR=\fISCOPES\fR,[\fISCOPES\fR,...]
The names of the scopes to authorize for. By default
https://www.googleapis.com/auth/userinfo.email,
https://www.googleapis.com/auth/cloud\-platform scopes are used. The list of
possible scopes can be found at:
https://developers.google.com/identity/protocols/googlescopes.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

If you want your local application to temporarily use your own user credentials
for API access, run:

.RS 2m
$ gcloud auth application\-default login
.RE

If you'd like to login by passing in a file containing your own client id, run:

.RS 2m
$ gcloud auth application\-default login \e
    \-\-client\-id\-file=clientid.json
.RE



.SH "NOTES"

This variant is also available:

.RS 2m
$ gcloud beta auth application\-default login
.RE

