
.TH "GCLOUD_ALPHA_CODE" 1



.SH "NAME"
.HP
gcloud alpha code \- create and manage a local development environment for Cloud Run



.SH "SYNOPSIS"
.HP
\f5gcloud alpha code\fR \fICOMMAND\fR [\fB\-\-build\-context\-directory\fR=\fIBUILD_CONTEXT_DIRECTORY\fR] [\fB\-\-builder\fR=\fIBUILDER\fR] [\fB\-\-cloudsql\-instances\fR=[\fICLOUDSQL_INSTANCE\fR,...]] [\fB\-\-cpu\-limit\fR=\fICPU_LIMIT\fR] [\fB\-\-dockerfile\fR=\fIDOCKERFILE\fR;\ default="Dockerfile"] [\fB\-\-image\-name\fR=\fIIMAGE_NAME\fR] [\fB\-\-local\-port\fR=\fILOCAL_PORT\fR] [\fB\-\-memory\-limit\fR=\fIMEMORY_LIMIT\fR] [\fB\-\-service\-account\fR=\fISERVICE_ACCOUNT\fR] [\fB\-\-service\-name\fR=\fISERVICE_NAME\fR] [\fB\-\-env\-vars\fR=[\fIKEY\fR=\fIVALUE\fR,...]\ |\ \fB\-\-env\-vars\-file\fR=\fIFILE_PATH\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR This set of commands can be used create or change a local
development setup.



.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-build\-context\-directory\fR=\fIBUILD_CONTEXT_DIRECTORY\fR
If set, use this as the context directory when building the container image.
Otherwise, the directory of the Dockerfile will be used.

.TP 2m
\fB\-\-builder\fR=\fIBUILDER\fR
Build with a given Cloud Native Computing Foundation Buildpack builder.

.TP 2m
\fB\-\-cloudsql\-instances\fR=[\fICLOUDSQL_INSTANCE\fR,...]
Cloud SQL instance connection strings. Must be in the form
<project>:<region>:<instance>.

.TP 2m
\fB\-\-cpu\-limit\fR=\fICPU_LIMIT\fR
Container CPU limit. Limit is expressed as a number of CPUs. Fractional CPU
limits are allowed (e.g. 1.5).

.TP 2m
\fB\-\-dockerfile\fR=\fIDOCKERFILE\fR; default="Dockerfile"
Dockerfile for the service image.

.TP 2m
\fB\-\-image\-name\fR=\fIIMAGE_NAME\fR
Name for the built docker image.

.TP 2m
\fB\-\-local\-port\fR=\fILOCAL_PORT\fR
Local port to which the service connection is forwarded. If this flag is not
set, then a random port is chosen.

.TP 2m
\fB\-\-memory\-limit\fR=\fIMEMORY_LIMIT\fR
Container memory limit. Limit is expressed either as an integer representing the
number of bytes or an integer followed by a unit suffix. Valid unit suffixes are
"B", "KB", "MB", "GB", "TB", "KiB", "MiB", "GiB", "TiB", or "PiB".

.TP 2m
\fB\-\-service\-account\fR=\fISERVICE_ACCOUNT\fR
When connecting to Google Cloud Platform services, use a service account key.

.TP 2m
\fB\-\-service\-name\fR=\fISERVICE_NAME\fR
Name of the service.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-env\-vars\fR=[\fIKEY\fR=\fIVALUE\fR,...]
List of key\-value pairs to set as environment variables.

.TP 2m
\fB\-\-env\-vars\-file\fR=\fIFILE_PATH\fR
Path to a local YAML file with definitions for all environment variables.


.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "COMMANDS"

\f5\fICOMMAND\fR\fR is one of the following:

.RS 2m
.TP 2m
\fBdev\fR
\fB(ALPHA)\fR Run a service in a development environment.

.TP 2m
\fBexport\fR
\fB(ALPHA)\fR Writes skaffold and kubernetes files for local development.


.RE
.sp

.SH "EXAMPLES"

To set up a local development environment, run:

.RS 2m
$ gcloud alpha code setup
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
whitelist.

