
.TH "GCLOUD_DEBUG_LOGPOINTS_CREATE" 1



.SH "NAME"
.HP
gcloud debug logpoints create \- add debug logpoints to a Cloud Debugger debug target (debuggee)



.SH "SYNOPSIS"
.HP
\f5gcloud debug logpoints create\fR \fILOCATION\fR \fILOG_FORMAT_STRING\fR [\fB\-\-condition\fR=\fICONDITION\fR] [\fB\-\-log\-level\fR=\fILOG_LEVEL\fR;\ default="info"] [\fB\-\-target\fR=(\fIID\fR|\fIDESCRIPTION_REGEXP\fR)] [\fB\-\-wait\fR=\fIWAIT\fR;\ default=10] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fBgcloud debug logpoints create\fR is used to add a debug logpoint to a debug
target (debuggee). Logpoints add logging to your running service without
changing your code or restarting your application. When you create a logpoint,
the message you specify will be added to your logs whenever any instance of your
service executes the specified line of code.

The default lifetime of a logpoint is 24 hours from creation, and the output
will go to the standard log for the programming language of the target
(\f5\fIjava.logging\fR\fR for Java, \f5\fIlogging\fR\fR for Python, etc.)



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fILOCATION\fR
The logpoint location. Locations are of the form FILE:LINE, where FILE can be
simply the file name, or the file name preceded by enough path components to
differentiate it from other files with the same name. It is an error to provide
a file name that is not unique in the debug target.

.TP 2m
\fILOG_FORMAT_STRING\fR
A format string which will be logged every time the logpoint location is
executed. If the string contains curly braces ('{' and '}'), any text within the
curly braces will be interpreted as a run\-time expression in the debug target's
language, which will be evaluated when the logpoint is hit.

The value of the expression will then replace the {} expression in the resulting
log output. For example, if you specify the format string "a={a}, b={b}", and
the logpoint is hit when local variable a is 1 and b is 2, the resulting log
output would be "a=1, b=2".


.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-condition\fR=\fICONDITION\fR
A condition to restrict when the log output is generated. When the logpoint is
hit, the condition will be evaluated, and the log output will be generated only
if the condition is true.

.TP 2m
\fB\-\-log\-level\fR=\fILOG_LEVEL\fR; default="info"
The logging level to use when producing the log message. \fILOG_LEVEL\fR must be
one of: \fBinfo\fR, \fBwarning\fR, \fBerror\fR.

.TP 2m
\fB\-\-target\fR=(\fIID\fR|\fIDESCRIPTION_REGEXP\fR)
The debug target. It may be a target ID or name obtained from 'debug targets
list', or it may be a regular expression uniquely specifying a debuggee based on
its description or name. For App Engine projects, if not specified, the default
target is the most recent deployment of the default module and version.

.TP 2m
\fB\-\-wait\fR=\fIWAIT\fR; default=10
The number of seconds to wait to ensure that no error is returned from a
debugger agent when creating the logpoint. When a logpoint is created, there
will be a delay before the agents see and apply the logpoint. Until at least one
agent has attempted to enable the logpoint, it cannot be determined if the
logpoint is valid.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To add a logpoint with no conditions that will print the value of the variable
\'name' at line 41 of file main.py of a debug target (debuggee), run:

.RS 2m
$ gcloud debug logpoints create main.py:41 "Variable name={name}" \e
    \-\-target=<debuggee_id>
.RE

To add a logpoint that will print the value of the variable 'name' at line 41 of
file main.py on a debug target (debuggee) that will only trigger if the length
of 'name' is greater than 3, run:

.RS 2m
$ gcloud debug logpoints create main.py:41 "Variable name={name}" \e
    \-\-target=<debuggee_id> \-\-condition="len(name) > 3"
.RE

To add a logpoint with a log level of error at line 35 of file main.py on a
debug target (debuggee), run:

.RS 2m
$ gcloud debug logpoints create main.py:35 "Unexpected path" \e
    \-\-target=<debuggee_id> \-\-log\-level=error
.RE



.SH "NOTES"

This variant is also available:

.RS 2m
$ gcloud beta debug logpoints create
.RE

