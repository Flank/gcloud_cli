
.TH "GCLOUD_ALPHA_IOT_DEVICES_CREATE" 1



.SH "NAME"
.HP
gcloud alpha iot devices create \- create a new device



.SH "SYNOPSIS"
.HP
\f5gcloud alpha iot devices create\fR (\fIDEVICE\fR\ :\ \fB\-\-region\fR=\fIREGION\fR\ \fB\-\-registry\fR=\fIREGISTRY\fR) [\fB\-\-auth\-method\fR=\fIAUTH_METHOD\fR] [\fB\-\-blocked\fR] [\fB\-\-device\-type\fR=\fIDEVICE_TYPE\fR] [\fB\-\-log\-level\fR=\fILOG_LEVEL\fR] [\fB\-\-metadata\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-metadata\-from\-file\fR=[\fIKEY\fR=\fIPATH\fR,...]] [\fB\-\-public\-key\fR=[\fIpath\fR=\fIPATH\fR,\fItype\fR=\fITYPE\fR,[\fIexpiration\-time\fR=\fIEXPIRATION\-TIME\fR],...]] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Create a new device.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

Device resource \- The device you want to create. The arguments in this group
can be used to specify the attributes of this resource. (NOTE) Some attributes
are not given arguments in this group but can be set in other ways. To set the
[project] attribute: provide the argument [device] on the command line with a
fully specified name; provide the argument [\-\-project] on the command line;
set the property [core/project]. This must be specified.

.RS 2m
.TP 2m
\fIDEVICE\fR
ID of the device or fully qualified identifier for the device. This positional
must be specified if any of the other arguments in this group are specified.

.TP 2m
\fB\-\-region\fR=\fIREGION\fR
The name of the Cloud IoT region.

.TP 2m
\fB\-\-registry\fR=\fIREGISTRY\fR
The name of the Cloud IoT registry.


.RE
.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-auth\-method\fR=\fIAUTH_METHOD\fR
The authorization/authentication method used by devices in relation to the
gateway. This property is set only on gateways. If left unspecified, devices
will not be able to access the gateway. \fIAUTH_METHOD\fR must be one of:

.RS 2m
.TP 2m
\fBassociation\-and\-device\-auth\-token\fR
The device is authenticated through both device credentials and gateway
association.
.TP 2m
\fBassociation\-only\fR
The device is authenticated through the gateway association only. Device
credentials are ignored if provided.
.TP 2m
\fBdevice\-auth\-token\-only\fR
The device is authenticated through its own credentials. Gateway association is
not checked.
.RE
.sp


.TP 2m
\fB\-\-blocked\fR
If blocked, connections from this device will fail.

Can be used to temporarily prevent the device from connecting if, for example,
the sensor is generating bad data and needs maintenance.



Connections to device is not blocked by default.

.TP 2m
\fB\-\-device\-type\fR=\fIDEVICE_TYPE\fR
Whether this device is a gateway. If unspecified, non\-gateway is assumed.
\fIDEVICE_TYPE\fR must be one of: \fBgateway\fR, \fBnon\-gateway\fR.

.TP 2m
\fB\-\-log\-level\fR=\fILOG_LEVEL\fR
The default logging verbosity for activity from devices in this registry. The
verbosity level can be overridden by setting a specific device's log level.
\fILOG_LEVEL\fR must be one of:

.RS 2m
.TP 2m
\fBdebug\fR
All events will be logged.
.TP 2m
\fBerror\fR
Error events will be logged.
.TP 2m
\fBinfo\fR
Informational events will be logged, such as connections and disconnections.
Also includes error events.
.TP 2m
\fBnone\fR
Disables logging.
.RE
.sp


.TP 2m
\fB\-\-metadata\fR=[\fIKEY\fR=\fIVALUE\fR,...]
The metadata key/value pairs assigned to devices. This metadata is not
interpreted or indexed by Cloud IoT Core. It can be used to add contextual
information for the device.

Keys should only contain the following characters \f5[a\-zA\-Z0\-9\-_]\fR and be
fewer than 128 bytes in length. Values are free\-form strings. Each value must
be fewer than or equal to 32 KB in size.

The total size of all keys and values must be less than 256 KB, and the maximum
number of key\-value pairs is 500.

.TP 2m
\fB\-\-metadata\-from\-file\fR=[\fIKEY\fR=\fIPATH\fR,...]
Same as \-\-metadata, but the metadata values will be read from the file
specified by path.

.TP 2m
\fB\-\-public\-key\fR=[\fIpath\fR=\fIPATH\fR,\fItype\fR=\fITYPE\fR,[\fIexpiration\-time\fR=\fIEXPIRATION\-TIME\fR],...]
Specify a public key.

Supports four key types:

.RS 2m
.IP "\(em" 2m
\f5rsa\-x509\-pem\fR: As RSA_PEM, but wrapped in an X.509v3 certificate (RFC5280
(https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by
\f5\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-\fR and \f5\-\-\-\-\-END
CERTIFICATE\-\-\-\-\-\fR.
.IP "\(em" 2m
\f5rsa\-pem\fR: An RSA public key encoded in base64, and wrapped by
\f5\-\-\-\-\-BEGIN PUBLIC KEY\-\-\-\-\-\fR and \f5\-\-\-\-\-END PUBLIC
KEY\-\-\-\-\-\fR. This can be used to verify \f5RS256\fR signatures in JWT
tokens (RFC7518 (https://www.ietf.org/rfc/rfc7518.txt)).
.IP "\(em" 2m
\f5rs256\fR: Deprecated name for \f5rsa\-x509\-pem\fR
.IP "\(em" 2m
\f5es256\-x509\-pem\fR: As ES256_PEM, but wrapped in an X.509v3 certificate
(RFC5280 (https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped
by \f5\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-\fR and \f5\-\-\-\-\-END
CERTIFICATE\-\-\-\-\-\fR.
.IP "\(em" 2m
\f5es256\-pem\fR: Public key for the ECDSA algorithm using P\-256 and SHA\-256,
encoded in base64, and wrapped by \f5\-\-\-\-\-BEGIN PUBLIC KEY\-\-\-\-\-\fR and
\f5\-\-\-\-\-END PUBLIC KEY\-\-\-\-\-\fR. This can be used to verify JWT tokens
with the \f5ES256\fR algorithm (RFC7518 (https://www.ietf.org/rfc/rfc7518.txt)).
This curve is defined in OpenSSL (https://www.openssl.org/) as the
\f5prime256v1\fR curve.
.IP "\(em" 2m
\f5es256\fR: Deprecated nmame for \f5es256\-pem\fR

.RE
.RE
.sp
The key specification is given via the following sub\-arguments:

.RS 2m
.IP "\(bu" 2m
\fBpath\fR: Required. The path on disk to the file containing the key.
.IP "\(bu" 2m
\fBtype\fR: Required. One of [\f5es256\fR, \f5es256\-pem\fR,
\f5es256\-x509\-pem\fR, \f5rs256\fR, \f5rsa\-pem\fR, \f5rsa\-x509\-pem\fR]. The
type of the key.
.IP "\(bu" 2m
\fBexpiration\-time\fR: Optional. The expiration time for the key. See $ gcloud
topic datetimes for information on time formats.

.RE
.sp
For example:

.RS 2m
\-\-public\-key \e
    path=/path/to/id_rsa.pem,type=RSA_PEM,expiration\-time=2017\-01\-01T00:00\-05
.RE

This flag may be provide multiple times to provide multiple keys (maximum 3).



.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "API REFERENCE"

This command uses the \fBcloudiot/v1\fR API. The full documentation for this API
can be found at: https://cloud.google.com/iot



.SH "EXAMPLES"

To create a new device 'my\-device' in device registry 'my\-registry' and region
\'us\-central1', run:

.RS 2m
$ gcloud alpha iot devices create my\-device \-\-region=us\-central1 \e
    \-\-registry=my\-registry
.RE

The following command creates a new non\-gateway device 'my\-device' in device
registry 'my\-registry' and region 'us\-central1', blocks the device, and sets
metadata values.

.RS 2m
$ gcloud alpha iot devices create my\-device \-\-region=us\-central1 \e
    \-\-registry=my\-registry \-\-blocked \-\-device\-type=non\-gateway \e
    \-\-metadata=key1=value1,key2=value2
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud iot devices create
$ gcloud beta iot devices create
.RE

