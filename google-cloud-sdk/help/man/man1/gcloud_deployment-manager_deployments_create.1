
.TH "GCLOUD_DEPLOYMENT\-MANAGER_DEPLOYMENTS_CREATE" 1



.SH "NAME"
.HP
gcloud deployment\-manager deployments create \- create a deployment



.SH "SYNOPSIS"
.HP
\f5gcloud deployment\-manager deployments create\fR \fIDEPLOYMENT_NAME\fR (\fB\-\-composite\-type\fR=\fICOMPOSITE_TYPE\fR\ |\ \fB\-\-config\fR=\fICONFIG\fR\ |\ \fB\-\-template\fR=\fITEMPLATE\fR) [\fB\-\-description\fR=\fIDESCRIPTION\fR] [\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-preview\fR] [\fB\-\-properties\fR=[\fIPROPERTIES\fR,...]] [\fB\-\-async\fR\ |\ \fB\-\-automatic\-rollback\-on\-error\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

This command inserts (creates) a new deployment based on a provided config file.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fIDEPLOYMENT_NAME\fR
Deployment name.


.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m

Exactly one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-composite\-type\fR=\fICOMPOSITE_TYPE\fR
Name of a composite type to deploy.

.TP 2m
\fB\-\-config\fR=\fICONFIG\fR
Filename of a top\-level yaml config that specifies resources to deploy.

.TP 2m
\fB\-\-template\fR=\fITEMPLATE\fR
Filename of a top\-level jinja or python config template.


.RE
.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-description\fR=\fIDESCRIPTION\fR
Optional description of the deployment to insert.

.TP 2m
\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]
A list of label KEY=VALUE pairs to add.

Keys must start with a lowercase character and contain only hyphens (\f5\-\fR),
underscores (\f5_\fR), lowercase characters, and numbers. Values must contain
only hyphens (\f5\-\fR), underscores (\f5_\fR), lowercase characters, and
numbers.

.TP 2m
\fB\-\-preview\fR
Preview the requested create without actually instantiating the underlying
resources. (default=False)

.TP 2m
\fB\-\-properties\fR=[\fIPROPERTIES\fR,...]
A comma separated, key:value, map to be used when deploying a template file or
composite type directly.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-async\fR
Return immediately and print information about the Operation in progress rather
than waiting for the Operation to complete. (default=False)

.TP 2m
\fB\-\-automatic\-rollback\-on\-error\fR
If the create request results in a deployment with resource errors, delete that
deployment immediately after creation. (default=False)


.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-configuration,
\-\-flatten, \-\-format, \-\-help, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity. Run \fB$ gcloud
help\fR for details.



.SH "EXAMPLES"

To create a new deployment from a top\-level yaml file, run:

.RS 2m
$ gcloud deployment\-manager deployments create my\-deployment \e
    \-\-config config.yaml \-\-description "My deployment"
.RE

To create a new deployment from a top\-level template file, run:

.RS 2m
$ gcloud deployment\-manager deployments create my\-deployment       \e
          \-\-template template.{jinja|py}             \e
    \-\-properties "string\-key:'string\-value',integer\-key:12345"
.RE

To create a new deployment directly from a composite type, run:

.RS 2m
$ gcloud deployment\-manager deployments create my\-deployment       \e
          \-\-composite\-type <project\-id>/composite:<type\-name>      \e
           \e
    \-\-properties "string\-key:'string\-value',integer\-key:12345"
.RE

To preview a deployment without actually creating resources, run:

.RS 2m
$ gcloud deployment\-manager deployments create my\-new\-deployment \e
    \-\-config config.yaml \-\-preview
.RE

To instantiate a deployment that has been previewed, issue an update command for
that deployment without specifying a config file.

More information is available at
https://cloud.google.com/deployment\-manager/docs/configuration/.



.SH "NOTES"

These variants are also available:

.RS 2m
$ gcloud alpha deployment\-manager deployments create
$ gcloud beta deployment\-manager deployments create
.RE

