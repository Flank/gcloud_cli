
.TH "GCLOUD_BETA_BUILDS_SUBMIT" 1



.SH "NAME"
.HP
gcloud beta builds submit \- submit a build using Google Cloud Build



.SH "SYNOPSIS"
.HP
\f5gcloud beta builds submit\fR [[\fISOURCE\fR]\ \fB\-\-no\-source\fR] [\fB\-\-async\fR] [\fB\-\-no\-cache\fR] [\fB\-\-disk\-size\fR=\fIDISK_SIZE\fR] [\fB\-\-gcs\-log\-dir\fR=\fIGCS_LOG_DIR\fR] [\fB\-\-gcs\-source\-staging\-dir\fR=\fIGCS_SOURCE_STAGING_DIR\fR] [\fB\-\-ignore\-file\fR=\fIIGNORE_FILE\fR] [\fB\-\-machine\-type\fR=\fIMACHINE_TYPE\fR] [\fB\-\-region\fR=\fIREGION\fR] [\fB\-\-substitutions\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-timeout\fR=\fITIMEOUT\fR] [\fB\-\-worker\-pool\fR=\fIWORKER_POOL\fR] [\fB\-\-config\fR=\fICONFIG\fR;\ default="cloudbuild.yaml"\ |\ \fB\-\-tag\fR=\fITAG\fR,\ \fB\-t\fR\ \fITAG\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(BETA)\fR Submit a build using Google Cloud Build.

When the \f5builds/use_kaniko\fR property is \f5True\fR, builds submitted with
\f5\-\-tag\fR will use Kaniko (https://github.com/GoogleContainerTools/kaniko)
to execute builds. Kaniko executes directives in a Dockerfile, with remote layer
caching for faster builds. By default, Kaniko will cache layers for 6 hours. To
override this, set the \f5builds/kaniko_cache_ttl\fR property.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
[\fISOURCE\fR]
The location of the source to build. The location can be a directory on a local
disk or a gzipped archive file (.tar.gz) in Google Cloud Storage. If the source
is a local directory, this command skips the files specified in the
\f5\-\-ignore\-file\fR. If \f5\-\-ignore\-file\fR is not specified,
use\f5.gcloudignore\fR file. If a \f5.gcloudignore\fR file is absent and a
\f5.gitignore\fR file is present in the local source directory, gcloud will use
a generated Git\-compatible \f5.gcloudignore\fR file that respects your
.gitignored files. The global \f5.gitignore\fR is not respected. For more
information on \f5.gcloudignore\fR, see \f5gcloud topic gcloudignore\fR.

.TP 2m
\fB\-\-no\-source\fR
Specify that no source should be uploaded with this build.


.RE
.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-no\-cache\fR
If set, disable layer caching when building with Kaniko.

This has the same effect as setting the builds/kaniko_cache_ttl property to 0
for this build. This can be useful in cases where Dockerfile builds are
non\-deterministic and a non\-deterministic result should not be cached.

.TP 2m
\fB\-\-disk\-size\fR=\fIDISK_SIZE\fR
Machine disk size (GB) to run the build.

.TP 2m
\fB\-\-gcs\-log\-dir\fR=\fIGCS_LOG_DIR\fR
A directory in Google Cloud Storage to hold build logs. If this field is not
set, \f5gs://[PROJECT_NUMBER].cloudbuild\-logs.googleusercontent.com/\fR will be
created and used.

.TP 2m
\fB\-\-gcs\-source\-staging\-dir\fR=\fIGCS_SOURCE_STAGING_DIR\fR
A directory in Google Cloud Storage to copy the source used for staging the
build. If the specified bucket does not exist, Cloud Build will create one. If
you don't set this field, \f5gs://[PROJECT_ID]_cloudbuild/source\fR is used.

.TP 2m
\fB\-\-ignore\-file\fR=\fIIGNORE_FILE\fR
Override the \f5.gcloudignore\fR file and use the specified file instead.

.TP 2m
\fB\-\-machine\-type\fR=\fIMACHINE_TYPE\fR
Machine type used to run the build. \fIMACHINE_TYPE\fR must be one of:
\fBn1\-highcpu\-32\fR, \fBn1\-highcpu\-8\fR.

.TP 2m
\fB\-\-region\fR=\fIREGION\fR
The region of the Cloud Build Service to use. Must be set to us\-central\-1. If
unset, the global service is used. The global service is isolated from all
regional services.

.TP 2m
\fB\-\-substitutions\fR=[\fIKEY\fR=\fIVALUE\fR,...]
Parameters to be substituted in the build specification.

For example (using some nonsensical substitution keys; all keys must begin with
an underscore):

.RS 2m
$ gcloud builds submit . \-\-config config.yaml \e
    \-\-substitutions _FAVORITE_COLOR=blue,_NUM_CANDIES=10
.RE

This will result in a build where every occurrence of \f5${_FAVORITE_COLOR}\fR
in certain fields is replaced by "blue", and similarly for \f5${_NUM_CANDIES}\fR
and "10".

Only the following built\-in variables can be specified with the
\f5\-\-substitutions\fR flag: REPO_NAME, BRANCH_NAME, TAG_NAME, REVISION_ID,
COMMIT_SHA, SHORT_SHA.

For more details, see:
https://cloud.google.com/cloud\-build/docs/api/build\-requests#substitutions

.TP 2m
\fB\-\-timeout\fR=\fITIMEOUT\fR
Maximum time a build is run before it is failed as \f5TIMEOUT\fR. It is
specified as a duration; for example, "2h15m5s" is two hours, fifteen minutes,
and five seconds. If you don't specify a unit, seconds is assumed. For example,
"10" is 10 seconds. Overrides the default \fBbuilds/timeout\fR property value
for this command invocation.

.TP 2m
\fB\-\-worker\-pool\fR=\fIWORKER_POOL\fR
Specify a worker pool for the build to run in. Format:
projects/{project}/locations/{region}/workerPools/{workerPool}. This field is
restricted to custom workers beta users.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-config\fR=\fICONFIG\fR; default="cloudbuild.yaml"
The YAML or JSON file to use as the build configuration file.

.TP 2m
\fB\-\-tag\fR=\fITAG\fR, \fB\-t\fR \fITAG\fR
The tag to use with a "docker build" image creation. Cloud Build will run a
remote "docker build \-t $TAG .", where $TAG is the tag provided by this flag.
The tag must be in the gcr.io/* or *.gcr.io/* namespaces. Specify a tag if you
want Cloud Build to build using a Dockerfile instead of a build config file. If
you specify a tag in this command, your source must include a Dockerfile. For
instructions on building using a Dockerfile see
https://cloud.google.com/cloud\-build/docs/quickstart\-build.


.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To submit a build with source located at storage URL
\f5gs://bucket/object.zip\fR:

.RS 2m
$ gcloud beta builds submit  `gs://bucket/object.zip` \e
   \-\-tag=gcr.io/my\-project/image
.RE

To submit a build with source located at storage URL
\f5gs://bucket/object.zip\fR using config file \f5config.yaml\fR:

.RS 2m
$ gcloud beta builds submit `gs://bucket/object.zip` \e
    \-\-tag=gcr.io/my\-project/image \-\-config=config.yaml
.RE

To submit a build with local source \f5source.tgz\fR asynchronously:

.RS 2m
$ gcloud beta builds submit `source.tgz` \e
    \-\-tag=gcr.io/my\-project/image \-\-async
.RE



.SH "NOTES"

You can also run a build locally using the separate component: \f5gcloud
components install cloud\-build\-local\fR.

This command is currently in BETA and may change without notice. These variants
are also available:

.RS 2m
$ gcloud builds submit
$ gcloud alpha builds submit
.RE

