
.TH "GCLOUD_ALPHA_CONTAINER_HUB" 1



.SH "NAME"
.HP
gcloud alpha container hub \- registers a cluster with Google Cloud Platform



.SH "SYNOPSIS"
.HP
\f5gcloud alpha container hub\fR \fIGROUP\fR | \fICOMMAND\fR [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Manage clusters registered with Google Cloud Platform.



.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity. Run \fB$ gcloud
help\fR for details.



.SH "EXAMPLES"

Register a cluster referenced from the default kubeconfig file, installing the
Connect agent:

.RS 2m
$ gcloud alpha container hub register\-cluster my\-cluster           \e
    \-\-context=my\-cluster\-context             \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Upgrade the Connect agent in a cluster:

.RS 2m
$ gcloud alpha container hub register\-cluster my\-cluster           \e
    \-\-context=my\-cluster\-context             \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE

Register a cluster and output a manifest that can be used to install the Connect
agent:

.RS 2m
$ gcloud alpha container hub register\-cluster my\-cluster           \e
    \-\-context=my\-cluster\-context             \e
  \-\-manifest\-output\-file=/tmp/manifest.yaml             \e
  \-\-service\-account\-key\-file=/tmp/keyfile.json
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
whitelist. This variant is also available:

.RS 2m
$ gcloud beta container hub
.RE

