
.TH "GCLOUD_BETA_TASKS_QUEUES_CREATE\-APP\-ENGINE\-QUEUE" 1



.SH "NAME"
.HP
gcloud beta tasks queues create\-app\-engine\-queue \- create an App Engine queue



.SH "SYNOPSIS"
.HP
\f5gcloud beta tasks queues create\-app\-engine\-queue\fR \fIQUEUE\fR [\fB\-\-max\-attempts\fR=\fIMAX_ATTEMPTS\fR] [\fB\-\-max\-backoff\fR=\fIMAX_BACKOFF\fR] [\fB\-\-max\-concurrent\-tasks\fR=\fIMAX_CONCURRENT_TASKS\fR] [\fB\-\-max\-doublings\fR=\fIMAX_DOUBLINGS\fR] [\fB\-\-max\-retry\-duration\fR=\fIMAX_RETRY_DURATION\fR] [\fB\-\-max\-tasks\-dispatched\-per\-second\fR=\fIMAX_TASKS_DISPATCHED_PER_SECOND\fR] [\fB\-\-min\-backoff\fR=\fIMIN_BACKOFF\fR] [\fB\-\-routing\-override\fR=\fIKEY\fR:\fIVALUE\fR,[...]] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(BETA)\fR An App Engine queue is a push queue sent to an App Engine endpoint.
The flags available to this command represent the fields of an App Engine queue
that are mutable.

If you have early access to Cloud Tasks, refer to the following guide for more
information about the different queue target types:
https://cloud.google.com/cloud\-tasks/docs/queue\-types. For access, sign up
here: https://goo.gl/Ya0AZd



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
\fIQUEUE\fR
The queue to create.



.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-max\-attempts\fR=\fIMAX_ATTEMPTS\fR
The maximum number of attempts per task in the queue.

.TP 2m
\fB\-\-max\-backoff\fR=\fIMAX_BACKOFF\fR
The maximum amount of time to wait before retrying a task after it fails. Must
be a string that ends in 's', such as "5s".

.TP 2m
\fB\-\-max\-concurrent\-tasks\fR=\fIMAX_CONCURRENT_TASKS\fR
The maximum number of concurrent tasks that Cloud Tasks allows to be dispatched
for this queue. After this threshold has been reached, Cloud Tasks stops
dispatching tasks until the number of outstanding requests decreases.

.TP 2m
\fB\-\-max\-doublings\fR=\fIMAX_DOUBLINGS\fR
The time between retries will double maxDoublings times.

A tasks retry interval starts at minBackoff, then doubles maxDoublings times,
then increases linearly, and finally retries retries at intervals of maxBackoff
up to maxAttempts times.

For example, if minBackoff is 10s, maxBackoff is 300s, and maxDoublings is 3,
then the a task will first be retried in 10s. The retry interval will double
three times, and then increase linearly by 2^3 * 10s. Finally, the task will
retry at intervals of maxBackoff until the task has been attempted maxAttempts
times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s,
300s.

.TP 2m
\fB\-\-max\-retry\-duration\fR=\fIMAX_RETRY_DURATION\fR
The time limit for retrying a failed task, measured from when the task was first
run. Once the \f5\-\-max\-retry\-duration\fR time has passed and the task has
been attempted \-\-max\-attempts times, no further attempts will be made and the
task will be deleted.

Must be a string that ends in 's', such as "5s".

.TP 2m
\fB\-\-max\-tasks\-dispatched\-per\-second\fR=\fIMAX_TASKS_DISPATCHED_PER_SECOND\fR
The maximum rate at which tasks are dispatched from this queue.

.TP 2m
\fB\-\-min\-backoff\fR=\fIMIN_BACKOFF\fR
The minimum amount of time to wait before retrying a task after it fails. Must
be a string that ends in 's', such as "5s".

.TP 2m
\fB\-\-routing\-override\fR=\fIKEY\fR:\fIVALUE\fR,[...]
If provided, the specified route is used for all tasks in the queue, no matter
what is set is at the task\-level.

KEY must be at least one of: [service, version, instance]. Any missing keys will
use the default.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-configuration,
\-\-flatten, \-\-format, \-\-help, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity. Run \fB$ gcloud
help\fR for details.



.SH "NOTES"

This command is currently in BETA and may change without notice. This variant is
also available:

.RS 2m
$ gcloud alpha tasks queues create\-app\-engine\-queue
.RE

