
.TH "GCLOUD_ALPHA_NOTEBOOKS_ENVIRONMENTS_CREATE" 1



.SH "NAME"
.HP
gcloud alpha notebooks environments create \- request for creating environments



.SH "SYNOPSIS"
.HP
\f5gcloud alpha notebooks environments create\fR (\fIENVIRONMENT\fR\ :\ \fB\-\-location\fR=\fILOCATION\fR) ([\fB\-\-container\-repository\fR=\fICONTAINER_REPOSITORY\fR\ :\ \fB\-\-container\-tag\fR=\fICONTAINER_TAG\fR]\ |\ [(\fB\-\-vm\-image\-family\fR=\fIVM_IMAGE_FAMILY\fR\ |\ \fB\-\-vm\-image\-name\fR=\fIVM_IMAGE_NAME\fR)\ :\ \fB\-\-vm\-image\-project\fR=\fIVM_IMAGE_PROJECT\fR;\ default="deeplearning\-platform\-release"]) [\fB\-\-async\fR] [\fB\-\-description\fR=\fIDESCRIPTION\fR] [\fB\-\-display\-name\fR=\fIDISPLAY_NAME\fR] [\fB\-\-post\-startup\-script\fR=\fIPOST_STARTUP_SCRIPT\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Request for creating environments.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

Environment resource \- User\-defined unique name of this environment. The
environment name must be 1 to 63 characters long and contain only lowercase
letters, numeric characters, and dashes. The first character must be a
lowercaseletter and the last character cannot be a dash. The arguments in this
group can be used to specify the attributes of this resource. (NOTE) Some
attributes are not given arguments in this group but can be set in other ways.
To set the [project] attribute: provide the argument [environment] on the
command line with a fully specified name; provide the argument [\-\-project] on
the command line; set the property [core/project]. This must be specified.

.RS 2m
.TP 2m
\fIENVIRONMENT\fR
ID of the environment or fully qualified identifier for the environment. This
positional must be specified if any of the other arguments in this group are
specified.

.TP 2m
\fB\-\-location\fR=\fILOCATION\fR
Google Cloud location of this environment
https://cloud.google.com/compute/docs/regions\-zones/#locations.


.RE
.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m

Exactly one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-container\-repository\fR=\fICONTAINER_REPOSITORY\fR
The path to the container image repository. For example:
gcr.io/\f5{project_id}\fR/\f5{image_name}\fR. This flag must be specified if any
of the other arguments in this group are specified.

.TP 2m
\fB\-\-container\-tag\fR=\fICONTAINER_TAG\fR
The tag of the container image. If not specified, this defaults to the latest
tag.

.TP 2m
\fB\-\-vm\-image\-project\fR=\fIVM_IMAGE_PROJECT\fR; default="deeplearning\-platform\-release"
The ID of the Google Cloud project that this VM image belongs to.Format:
projects/\f5{project_id}\fR.

.TP 2m

Exactly one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-vm\-image\-family\fR=\fIVM_IMAGE_FAMILY\fR
Use this VM image family to find the image; the newest image in this family will
be used.

.TP 2m
\fB\-\-vm\-image\-name\fR=\fIVM_IMAGE_NAME\fR
Use this VM image name to find the image.


.RE
.RE
.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-description\fR=\fIDESCRIPTION\fR
A brief description of this environment.

.TP 2m
\fB\-\-display\-name\fR=\fIDISPLAY_NAME\fR
Name to display on the UI.

.TP 2m
\fB\-\-post\-startup\-script\fR=\fIPOST_STARTUP_SCRIPT\fR
Path to a Bash script that automatically runs after a notebook instance fully
boots up. The path must be a URL or Cloud Storage
path(gs://\f5path\-to\-file/\fRfile\-name\f5).


\fR
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To create an environment with id 'example\-environment' in location
\'us\-central1\-a' using a container repository, run:

.RS 2m
$ gcloud alpha notebooks environments create example\-environment \e
    \-\-location=us\-central1\-a \e
    \-\-container\-repository=gcr.io/deeplearning\-platform\-release/\e
base\-cpu \-\-container\-tag=test\-tag \-\-description=test\-description \e
    \-\-post\-startup\-script=gs://path\-to\-file/file\-name \e
    \-\-display\-name=test\-display\-name \-\-async
.RE

To create an environment with id 'example\-environment' in location
\'us\-central1\-a' using a VM Image Family, run:

.RS 2m
$ gcloud alpha notebooks environments create example\-environment \e
    \-\-vm\-image\-project=deeplearning\-platform\-release \e
    \-\-vm\-image\-family=caffe1\-latest\-cpu\-experimental
.RE

To create an environment with id 'example\-environment' in location
\'us\-central1\-a' using a VM Image, run:

.RS 2m
$ gcloud alpha notebooks environments create example\-environment \e
    \-\-location=us\-central1\-a \e
    \-\-vm\-image\-project=deeplearning\-platform\-release \e
    \-\-vm\-image\-name=tf2\-2\-1\-cu101\-notebooks\-20200110
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. This variant is also available:

.RS 2m
$ gcloud beta notebooks environments create
.RE

