
.TH "GCLOUD_ALPHA_SERVICES_API\-KEYS_UPDATE" 1



.SH "NAME"
.HP
gcloud alpha services api\-keys update \- update an API key's metadata



.SH "SYNOPSIS"
.HP
\f5gcloud alpha services api\-keys update\fR \fIKEY\fR [\fB\-\-async\fR] [\fB\-\-display\-name\fR=\fIDISPLAY_NAME\fR] [\fB\-\-clear\-restrictions\fR\ |\ \fB\-\-api\-target\fR=\fIservice\fR=\fISERVICE\fR,[...]\ \fB\-\-allowed\-application\fR=[\fIsha1_fingerprint\fR=\fISHA1_FINGERPRINT\fR,\fIpackage_name\fR=\fIPACKAGE_NAME\fR,...]\ |\ \fB\-\-allowed\-bundle\-ids\fR=[\fIALLOWED_BUNDLE_IDS\fR,...]\ |\ \fB\-\-allowed\-ips\fR=[\fIALLOWED_IPS\fR,...]\ |\ \fB\-\-allowed\-referrers\fR=[\fIALLOWED_REFERRERS\fR,...]] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Update an API key's metadata.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

Key resource \- The name of the key to update. This represents a Cloud resource.
(NOTE) Some attributes are not given arguments in this group but can be set in
other ways. To set the [project] attribute: provide the argument [key] on the
command line with a fully specified name; provide the argument [\-\-project] on
the command line; set the property [core/project]. This must be specified.

.RS 2m
.TP 2m
\fIKEY\fR
ID of the key or fully qualified identifier for the key.


.RE
.RE
.sp

.SH "FLAGS"

.RS 2m
.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-display\-name\fR=\fIDISPLAY_NAME\fR
Display name of the key to update.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-clear\-restrictions\fR
If set, clear all restrictions on the key.

.TP 2m
\fB\-\-api\-target\fR=\fIservice\fR=\fISERVICE\fR,[...]
This flag is repeatable to specify multiple api targets. \f5service\fR and
optionally one or multiple specific \f5methods\fR. Both fields are case
insensitive. If you need to specify methods, it should be specified with the
\f5\-\-flags\-file\fR. See $ gcloud topic flags\-file for details. See the
examples section for how to use \f5\-\-api\-target\fR in \f5\-\-flags\-file\fR.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-allowed\-application\fR=[\fIsha1_fingerprint\fR=\fISHA1_FINGERPRINT\fR,\fIpackage_name\fR=\fIPACKAGE_NAME\fR,...]
This flag is repeatable to specify multiple allowed applications. The accepted
keys are \f5sha1_fingerprint\fR and \f5package_name\fR.

.TP 2m
\fB\-\-allowed\-bundle\-ids\fR=[\fIALLOWED_BUNDLE_IDS\fR,...]
iOS app's bundle ids that are allowed to use the key.

.TP 2m
\fB\-\-allowed\-ips\fR=[\fIALLOWED_IPS\fR,...]
A list of the caller IP addresses that are allowed to make API calls with this
key.

.TP 2m
\fB\-\-allowed\-referrers\fR=[\fIALLOWED_REFERRERS\fR,...]
A list of regular expressions for the referrer URLs that are allowed to make API
calls with this key.


.RE
.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To remove all restrictions of the key:

.RS 2m
$ gcloud alpha services api\-keys update \e
    projects/myproject/keys/my\-key\-id \-\-clear\-restrictions
.RE

To update display name and set allowed ips as server key restrictions:

.RS 2m
$ gcloud alpha services api\-keys update \e
    projects/myproject/keys/my\-key\-id \-\-display\-name="test name" \e
    \-\-allowed\-ips=2620:15c:2c4:203:2776:1f90:6b3b:217,104.133.8.78
.RE

To update key's allowed referrers restriction:

.RS 2m
$ gcloud alpha services api\-keys update \e
    projects/myproject/keys/my\-key\-id \e
    \-\-allowed\-referrers="https://www.example.com/*,http://sub.exampl\e
e.com/*"
.RE

To update key's allowed ios app bundle ids:

.RS 2m
$ gcloud alpha services api\-keys update \e
    projects/myproject/keys/my\-key\-id \-\-allowed\-bundle\-ids=my.app
.RE

To update key's allowed android application:

.RS 2m
$ gcloud alpha services api\-keys update \e
    projects/myproject/keys/my\-key\-id \e
    \-\-allowed\-application=sha1_fingerprint=foo1,package_name=bar1 \e
    \-\-allowed\-application=sha1_fingerprint=foo2,package_name=bar2
.RE

To update keys' allowed api target with multiple services:

.RS 2m
$ gcloud alpha services api\-keys update \e
    projects/myproject/keys/my\-key\-id \e
    \-\-api\-target=service=bar.service.com \e
    \-\-api\-target=service=foo.service.com
.RE

To update keys' allowed api target with service and method:

.RS 2m
$ gcloud alpha services api\-keys update \e
    projects/myproject/keys/my\-key\-id  \-\-flags\-file=my\-flags.yaml
.RE

.RS 2m
The content of 'my\-flags.yaml' is as following:
.RE

.RS 2m
  \- \-\-api\-target:
      service:
        \- "foo.service.com"
  \- \-\-api\-target:
      service:
        \- "bar.service.com"
      methods:
        \- "foomethod"
        \- "barmethod"
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist.

