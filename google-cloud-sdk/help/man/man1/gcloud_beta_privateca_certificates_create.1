
.TH "GCLOUD_BETA_PRIVATECA_CERTIFICATES_CREATE" 1



.SH "NAME"
.HP
gcloud beta privateca certificates create \- create a new certificate



.SH "SYNOPSIS"
.HP
\f5gcloud beta privateca certificates create\fR [[\fICERTIFICATE\fR]\ \fB\-\-issuer\fR=\fIISSUER\fR\ \fB\-\-issuer\-location\fR=\fIISSUER_LOCATION\fR] (\fB\-\-csr\fR=\fICSR\fR\ |\ [\fB\-\-generate\-key\fR\ \fB\-\-key\-output\-file\fR=\fIKEY_OUTPUT_FILE\fR\ (\fB\-\-dns\-san\fR=[\fIDNS_SAN\fR,...]\ \fB\-\-email\-san\fR=[\fIEMAIL_SAN\fR,...]\ \fB\-\-ip\-san\fR=[\fIIP_SAN\fR,...]\ \fB\-\-subject\fR=[\fISUBJECT\fR,...]\ \fB\-\-uri\-san\fR=[\fIURI_SAN\fR,...])\ :\ [\fB\-\-reusable\-config\fR=\fIREUSABLE_CONFIG\fR\ :\ \fB\-\-extended\-key\-usages\fR=[\fIEXTENDED_KEY_USAGES\fR,...]\ \fB\-\-is\-ca\-cert\fR\ \fB\-\-key\-usages\fR=[\fIKEY_USAGES\fR,...]\ \fB\-\-max\-chain\-length\fR=\fIMAX_CHAIN_LENGTH\fR]]) [\fB\-\-cert\-output\-file\fR=\fICERT_OUTPUT_FILE\fR] [\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-validity\fR=\fIVALIDITY\fR;\ default="P30D"] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

CERTIFICATE resource \- The name of the certificate to issue. If the certificate
ID is omitted, a random identifier will be generated according to the following
format: {YYYYMMDD}\-{3 random alphanumeric characters}\-{3 random alphanumeric
characters}. The certificate ID is not required when the issuing CA is in the
DevOps tier. The arguments in this group can be used to specify the attributes
of this resource. (NOTE) Some attributes are not given arguments in this group
but can be set in other ways. To set the [project] attribute: provide the
argument [CERTIFICATE] on the command line with a fully specified name;
certificate id will default to an automatically generated id with a fully
specified name; provide the argument [\-\-project] on the command line; set the
property [core/project].

.RS 2m
.TP 2m
[\fICERTIFICATE\fR]
ID of the CERTIFICATE or fully qualified identifier for the CERTIFICATE.

.TP 2m
\fB\-\-issuer\fR=\fIISSUER\fR
The issuing certificate authority of the CERTIFICATE.

.TP 2m
\fB\-\-issuer\-location\fR=\fIISSUER_LOCATION\fR
The location of the CERTIFICATE. Alternatively, you can set the property
[privateca/location].


.RE
.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m

Certificate generation method. Exactly one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-csr\fR=\fICSR\fR
A PEM\-encoded certificate signing request file path.

.TP 2m

Alternatively, to generate a new key pair, use the following:

.RS 2m
.TP 2m
\fB\-\-generate\-key\fR
Use this flag to have a new RSA\-2048 private key securely generated on your
machine. This flag must be specified if any of the other arguments in this group
are specified.

.TP 2m
\fB\-\-key\-output\-file\fR=\fIKEY_OUTPUT_FILE\fR
The path where the generated private key file should be written (in PEM format).

Note: possession of this key file could allow anybody to act as this
certificate's subject. Please make sure that you store this key file in a secure
location at all times, and ensure that only authorized users have access to it.
This flag must be specified if any of the other arguments in this group are
specified.

.TP 2m

The subject names for the certificate. At least one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-dns\-san\fR=[\fIDNS_SAN\fR,...]
One or more comma\-separated DNS Subject Alternative Names.

.TP 2m
\fB\-\-email\-san\fR=[\fIEMAIL_SAN\fR,...]
One or more comma\-separated email Subject Alternative Names.

.TP 2m
\fB\-\-ip\-san\fR=[\fIIP_SAN\fR,...]
One or more comma\-separated IP Subject Alternative Names.

.TP 2m
\fB\-\-subject\fR=[\fISUBJECT\fR,...]
X.501 name of the certificate subject. Example:\-\-subject
"C=US,ST=California,L=Mountain View,O=Google LLC,CN=google.com"

.TP 2m
\fB\-\-uri\-san\fR=[\fIURI_SAN\fR,...]
One or more comma\-separated URI Subject Alternative Names.

.RE
.sp
.TP 2m

The x509 configuration used for this certificate. At most one of these may be
specified:

.RS 2m
.TP 2m

Reusable config resource \- The Reusable Config containing X.509 values for this
certificate. This represents a Cloud resource. (NOTE) Some attributes are not
given arguments in this group but can be set in other ways. To set the [project]
attribute: provide the argument [\-\-reusable\-config] on the command line with
a fully specified name; project will default to privateca\-data. To set the
[location] attribute: provide the argument [\-\-reusable\-config] on the command
line with a fully specified name; location will default to the same location as
the certificate.

.RS 2m
.TP 2m
\fB\-\-reusable\-config\fR=\fIREUSABLE_CONFIG\fR
ID of the reusable config or fully qualified identifier for the reusable config.

.RE
.sp
.TP 2m
\fB\-\-extended\-key\-usages\fR=[\fIEXTENDED_KEY_USAGES\fR,...]
The list of extended key usages for this certificate. This can only be provided
if \f5\-\-reusable\-config\fR is not provided. \fIEXTENDED_KEY_USAGES\fR must be
one of: \fBserver_auth\fR, \fBclient_auth\fR, \fBcode_signing\fR,
\fBemail_protection\fR, \fBtime_stamping\fR, \fBocsp_signing\fR.

.TP 2m
\fB\-\-is\-ca\-cert\fR
Whether this certificate is for a CertificateAuthority or not. Indicates the
Certificate Authority field in the x509 basic constraints extension.

.TP 2m
\fB\-\-key\-usages\fR=[\fIKEY_USAGES\fR,...]
The list of key usages for this certificate. This can only be provided if
\f5\-\-reusable\-config\fR is not provided. \fIKEY_USAGES\fR must be one of:
\fBdigital_signature\fR, \fBcontent_commitment\fR, \fBkey_encipherment\fR,
\fBdata_encipherment\fR, \fBkey_agreement\fR, \fBcert_sign\fR, \fBcrl_sign\fR,
\fBencipher_only\fR, \fBdecipher_only\fR.

.TP 2m
\fB\-\-max\-chain\-length\fR=\fIMAX_CHAIN_LENGTH\fR
Maximum depth of subordinate CAs allowed under this CA for a CA certificate.
This can only be provided if \f5\-\-reusable\-config\fR is not provided.


.RE
.RE
.RE
.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-cert\-output\-file\fR=\fICERT_OUTPUT_FILE\fR
The path where the resulting PEM\-encoded certificate chain file should be
written (ordered from leaf to root).

.TP 2m
\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]
List of label KEY=VALUE pairs to add.

Keys must start with a lowercase character and contain only hyphens (\f5\-\fR),
underscores (\f5_\fR), lowercase characters, and numbers. Values must contain
only hyphens (\f5\-\fR), underscores (\f5_\fR), lowercase characters, and
numbers.

.TP 2m
\fB\-\-validity\fR=\fIVALIDITY\fR; default="P30D"
The validity of this certificate, as an ISO8601 duration. Defaults to 30 days.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To create a certificate using a CSR:

.RS 2m
$ gcloud beta privateca certificates create frontend\-server\-tls \e
  \-\-issuer=server\-tls\-1 \-\-issuer\-location=us \e
  \-\-csr=./csr.pem \e
  \-\-cert\-output\-file=./cert.pem \e
  \-\-validity=P30D
.RE

.RS 2m
To create a certificate using a client\-generated key:
.RE

.RS 2m
$ gcloud beta privateca certificates create frontend\-server\-tls \e
  \-\-issuer=server\-tls\-1 \-\-issuer\-location=us \e
  \-\-generate\-key \e
  \-\-key\-output\-file=./key \e
  \-\-cert\-output\-file=./cert.pem \e
  \-\-dns\-san=www.joonix.net \e
  \-\-reusable\-config=server\-tls
.RE



.SH "NOTES"

This command is currently in BETA and may change without notice.

