
.TH "GCLOUD_ALPHA_DATAPROC_JOBS_SUBMIT_HADOOP" 1



.SH "NAME"
.HP
gcloud alpha dataproc jobs submit hadoop \- submit a Hadoop job to a cluster



.SH "SYNOPSIS"
.HP
\f5gcloud alpha dataproc jobs submit hadoop\fR  \fB\-\-cluster\fR=\fICLUSTER\fR (\fB\-\-class\fR=\fIMAIN_CLASS\fR\ |\ \fB\-\-jar\fR=\fIMAIN_JAR\fR) [\fB\-\-archives\fR=[\fIARCHIVE\fR,...]] [\fB\-\-async\fR] [\fB\-\-bucket\fR=\fIBUCKET\fR] [\fB\-\-driver\-log\-levels\fR=[\fIPACKAGE\fR=\fILEVEL\fR,...]] [\fB\-\-files\fR=[\fIFILE\fR,...]] [\fB\-\-jars\fR=[\fIJAR\fR,...]] [\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]] [\fB\-\-max\-failures\-per\-hour\fR=\fIMAX_FAILURES_PER_HOUR\fR] [\fB\-\-properties\fR=[\fIPROPERTY\fR=\fIVALUE\fR,...]] [\fB\-\-region\fR=\fIREGION\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR] [\-\-\ \fIJOB_ARGS\fR\ ...]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Submit a Hadoop job to a cluster.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m
[\-\- \fIJOB_ARGS\fR ...]
The arguments to pass to the driver.

The '\-\-' argument must be specified between gcloud specific args on the left
and JOB_ARGS on the right.


.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-cluster\fR=\fICLUSTER\fR
The Dataproc cluster to submit the job to.

.TP 2m

Exactly one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-class\fR=\fIMAIN_CLASS\fR
The class containing the main method of the driver. Must be in a provided jar or
jar that is already on the classpath

.TP 2m
\fB\-\-jar\fR=\fIMAIN_JAR\fR
The HCFS URI of jar file containing the driver jar.


.RE
.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-archives\fR=[\fIARCHIVE\fR,...]
Comma separated list of archives to be provided to the job. must be one of the
following file formats: .zip, .tar, .tar.gz, or .tgz.

.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-bucket\fR=\fIBUCKET\fR
The Cloud Storage bucket to stage files in. Defaults to the cluster's configured
bucket.

.TP 2m
\fB\-\-driver\-log\-levels\fR=[\fIPACKAGE\fR=\fILEVEL\fR,...]
A list of package to log4j log level pairs to configure driver logging. For
example: root=FATAL,com.example=INFO

.TP 2m
\fB\-\-files\fR=[\fIFILE\fR,...]
Comma separated list of file paths to be provided to the job. A file path can
either be a path to a local file or a path to a file already in a Cloud Storage
bucket.

.TP 2m
\fB\-\-jars\fR=[\fIJAR\fR,...]
Comma separated list of jar files to be provided to the MR and driver
classpaths.

.TP 2m
\fB\-\-labels\fR=[\fIKEY\fR=\fIVALUE\fR,...]
List of label KEY=VALUE pairs to add.

Keys must start with a lowercase character and contain only hyphens (\f5\-\fR),
underscores (\f5_\fR), lowercase characters, and numbers. Values must contain
only hyphens (\f5\-\fR), underscores (\f5_\fR), lowercase characters, and
numbers.

.TP 2m
\fB\-\-max\-failures\-per\-hour\fR=\fIMAX_FAILURES_PER_HOUR\fR
Specifies maximum number of times a job can be restarted in event of failure.
Expressed as a per\-hour rate. Default is 0 (no failure retries).

.TP 2m
\fB\-\-properties\fR=[\fIPROPERTY\fR=\fIVALUE\fR,...]
A list of key value pairs to configure Hadoop.

.TP 2m
\fB\-\-region\fR=\fIREGION\fR
Cloud Dataproc region to use. Each Cloud Dataproc region constitutes an
independent resource namespace constrained to deploying instances into Compute
Engine zones inside the region. Overrides the default \fBdataproc/region\fR
property value for this command invocation.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To submit a Hadoop job that runs the main class of a jar, run:

.RS 2m
$ gcloud alpha dataproc jobs submit hadoop \-\-cluster=my_cluster \e
    \-\-jar=my_jar.jar \-\- arg1 arg2
.RE

To submit a Hadoop job that runs a specific class of a jar, run:

.RS 2m
$ gcloud alpha dataproc jobs submit hadoop \-\-cluster=my_cluster \e
    \-\-class=org.my.main.Class \e
    \-\-jars=my_jar1.jar,my_jar2.jar \-\- arg1 arg2
.RE

To submit a Hadoop job that runs a jar that is already on the cluster, run:

.RS 2m
$ gcloud alpha dataproc jobs submit hadoop \-\-cluster=my_cluster \e
    \-\-jar=file:///usr/lib/hadoop\-op/hadoop\-op\-examples.jar \e
    \-\- wordcount gs://my_bucket/my_file.txt gs://my_bucket/output
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud dataproc jobs submit hadoop
$ gcloud beta dataproc jobs submit hadoop
.RE

