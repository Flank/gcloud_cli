
.TH "GCLOUD_ALPHA_COMPUTE_TPUS_CREATE" 1



.SH "NAME"
.HP
gcloud alpha compute tpus create \- create a new Cloud TPU



.SH "SYNOPSIS"
.HP
\f5gcloud alpha compute tpus create\fR (\fITPU\fR\ :\ \fB\-\-zone\fR=\fIZONE\fR) \fB\-\-version\fR=\fIVERSION\fR [\fB\-\-accelerator\-type\fR=\fIACCELERATOR_TYPE\fR;\ default="v2\-8"] [\fB\-\-async\fR] [\fB\-\-description\fR=\fIDESCRIPTION\fR] [\fB\-\-network\fR=\fINETWORK\fR;\ default="default"] [\fB\-\-preemptible\fR] [\fB\-\-range\fR=\fIRANGE\fR] [\fB\-\-reserved\fR] [\fB\-\-use\-service\-networking\fR] [\fB\-\-model\-base\-path\fR=\fIMODEL_BASE_PATH\fR\ \fB\-\-model\-name\fR=\fIMODEL_NAME\fR\ |\ \fB\-\-model\-config\-file\fR=\fIMODEL_CONFIG_FILE\fR\ \fB\-\-platform\-config\-file\fR=\fIPLATFORM_CONFIG_FILE\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Create a new Cloud TPU.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

Tpu resource \- The Cloud TPU you want to create. The arguments in this group
can be used to specify the attributes of this resource. (NOTE) Some attributes
are not given arguments in this group but can be set in other ways. To set the
[project] attribute: provide the argument [tpu] on the command line with a fully
specified name; provide the argument [\-\-project] on the command line; set the
property [core/project]. This must be specified.

.RS 2m
.TP 2m
\fITPU\fR
ID of the tpu or fully qualified identifier for the tpu. This positional must be
specified if any of the other arguments in this group are specified.

.TP 2m
\fB\-\-zone\fR=\fIZONE\fR
The compute/zone of the Cloud TPU.

If not specified, will use \f5default\fR compute/zone.


.RE
.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-version\fR=\fIVERSION\fR
TensorFlow version for the TPU, such as \f51.14\fR. For a list of available
TensorFlow versions please see https://www.tensorflow.org/versions/.


.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-accelerator\-type\fR=\fIACCELERATOR_TYPE\fR; default="v2\-8"
TPU accelerator type for the TPU. If not specified, this defaults to
\f5v2\-8\fR.

For a list of available accelerator types run:

\f5gcloud alpha compute tpus accelerator\-types list\fR

.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-description\fR=\fIDESCRIPTION\fR
Specifies a text description of the TPU.

.TP 2m
\fB\-\-network\fR=\fINETWORK\fR; default="default"
Specifies the network that this TPU will be a part of.

.TP 2m
\fB\-\-preemptible\fR
If provided, the TPU will be preemptible and time\-limited. It may be preempted
to free up resources for standard TPUs, and will only be able to run for a
limited amount of time.

Preemptible TPUs cannot be restarted.

.TP 2m
\fB\-\-range\fR=\fIRANGE\fR
CIDR Range for the TPU.

The IP range that the TPU will select an IP address from. Must be in CIDR
notation and a \f5/29\fR range, for example \f5192.168.0.0/29\fR. Errors will
occur if the CIDR range has already been used for a currently existing TPU, the
CIDR range conflicts with any networks in the user's provided network, or the
provided network is peered with another network that is using that CIDR range.

.TP 2m
\fB\-\-reserved\fR
When specified, will attempt to create the TPU node under reservations made in
the current project. The reservations can be made separately but used in
aggregated form. i.e., the user can make a reservation of 128 V2 TPUs and later
on make another reservation of 128 V2 TPUs then creates a v2\-256 TPU instance.
If there exists no reservation or not sufficient amount of reserved cores under
the project, the request will fail due to lack of capacity.

.TP 2m
\fB\-\-use\-service\-networking\fR
If provided, the TPU will be configured via the Service Networking (SN) API
instead of using a CIDR range. The Service Networking API should be enabled on
the project before creating the TPU.

For more information on Service Networking see
https://cloud.google.com/service\-infrastructure/docs/service\-networking/getting\-started.

.TP 2m

At most one of these may be specified:

.RS 2m
.TP 2m
\fB\-\-model\-base\-path\fR=\fIMODEL_BASE_PATH\fR
Base path to exported saved model. This flag can be used instead of
\'\-\-model\-config\-file' directly to specify the exported saved model's base
path (excluding timestamp), whereas '\-\-model\-config\-file' points to a Google
Cloud Storage path to a ModelServerConfig proto.

.TP 2m
\fB\-\-model\-name\fR=\fIMODEL_NAME\fR
Model name for tensorflow serving to serve to incoming requests. If not
provided, 'serving_default' will be used.

.TP 2m
\fB\-\-model\-config\-file\fR=\fIMODEL_CONFIG_FILE\fR
Google Cloud Storage URI of the configuration file for models to serve. For
example: 'gs://my_bucket/path/to/config.pbtxt'.

The contents of the model configuration file should look something like the
following:

model_config_list: { config: { name: "Model1", base_path:
"gs://my_bucket/path/to/model1", model_platform: "tensorflow" }, config: { name:
"Model2", base_path: "gs://my_other_bucket/path/to/model2", model_platform:
"tensorflow" }, }

.TP 2m
\fB\-\-platform\-config\-file\fR=\fIPLATFORM_CONFIG_FILE\fR
Google Cloud Storage URI of configuration file for platform requirements. For
example: 'gs://my_bucket/path/to/platform.pbtxt'.

The contents of the platform configuration file should look something like the
following:

platform_configs { key: "tensorflow" value { source_adapter_config {
[type.googleapis.com/tensorflow.serving.SavedModelBundleSourceAdapterConfig] {
legacy_config { saved_model_tags: "tpu" saved_model_tags: "serve"
batching_parameters { max_batch_size { value: 8 } batch_timeout_micros { value:
50000 } max_enqueued_batches { value: 10000 } num_batch_threads { value: 8 } } }
} } } }


.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "API REFERENCE"

This command uses the \fBtpu/v1alpha1\fR API. The full documentation for this
API can be found at: https://cloud.google.com/tpu/



.SH "EXAMPLES"

The following command creates a TPU with ID \f5my\-tpu\fR in the default user
project, network and compute/region (with other defaults supplied by API):

.RS 2m
$ gcloud alpha compute tpus create my\-tpu
.RE


The following command creates a TPU with ID \f5my\-tpu\fR with explicit values
for all required and optional parameters:

.RS 2m
$ gcloud alpha compute tpus create my\-tpu \e
    \-\-zone=us\-central1\-a \e
    \-\-range='10.240.0.0/29' \e
    \-\-accelerator\-type='v2\-8' \e
    \-\-network=my\-tf\-network \e
    \-\-description='My TF Node' \e
    \-\-version='1.1'
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud compute tpus create
$ gcloud beta compute tpus create
.RE

