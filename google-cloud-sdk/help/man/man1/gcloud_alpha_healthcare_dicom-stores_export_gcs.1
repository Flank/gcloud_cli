
.TH "GCLOUD_ALPHA_HEALTHCARE_DICOM\-STORES_EXPORT_GCS" 1



.SH "NAME"
.HP
gcloud alpha healthcare dicom\-stores export gcs \- export a Cloud Healthcare API DICOM store to Google Cloud Storage



.SH "SYNOPSIS"
.HP
\f5gcloud alpha healthcare dicom\-stores export gcs\fR (\fIDICOM_STORE\fR\ :\ \fB\-\-dataset\fR=\fIDATASET\fR\ \fB\-\-location\fR=\fILOCATION\fR) \fB\-\-gcs\-uri\-prefix\fR=\fIGCS_URI_PREFIX\fR [\fB\-\-async\fR] [\fB\-\-mime\-type\fR=\fIMIME_TYPE\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Export a Cloud Healthcare API DICOM store to Google Cloud Storage.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

DicomStore resource \- Cloud Healthcare API DICOM store to export. The arguments
in this group can be used to specify the attributes of this resource. (NOTE)
Some attributes are not given arguments in this group but can be set in other
ways. To set the [project] attribute: provide the argument [dicom_store] on the
command line with a fully specified name; provide the argument [\-\-project] on
the command line; set the property [core/project]. This must be specified.

.RS 2m
.TP 2m
\fIDICOM_STORE\fR
ID of the dicomStore or fully qualified identifier for the dicomStore. This
positional must be specified if any of the other arguments in this group are
specified.

.TP 2m
\fB\-\-dataset\fR=\fIDATASET\fR
Cloud Healthcare dataset.

.TP 2m
\fB\-\-location\fR=\fILOCATION\fR
Google Cloud location.


.RE
.RE
.sp

.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-gcs\-uri\-prefix\fR=\fIGCS_URI_PREFIX\fR
URI for a Google Cloud Storage directory to which result files should be written
(for example, \f5gs://bucket\-id/path/to/destination/dir\fR). If there is no
trailing slash, the service will append one when composing the object path. The
user is responsible for creating the Google Cloud Storage bucket referenced in
\f5uri_prefix\fR.


.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-mime\-type\fR=\fIMIME_TYPE\fR
\'MIME types supported by DICOM spec. Each file will be written in the following
format:
\f5.../{study_id}/{series_id}/{instance_id}[/{frame_number}].{extension}\fR The
frame_number component will exist only for multi\-frame instances. Refer to the
DICOM conformance statement for permissible MIME types:
https://cloud.google.com/healthcare/docs/dicom#wado\-rs The following extensions
will be used for output files: application/dicom \-> .dcm image/jpeg \-> .jpg
image/png \-> .png If unspecified, the instances will be exported in their
original DICOM format.'


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "API REFERENCE"

This command uses the \fBhealthcare/v1alpha2\fR API. The full documentation for
this API can be found at: https://cloud.google.com/healthcare



.SH "EXAMPLES"

To export the dicom\-store 'test\-dicom\-store' to the existing bucket
\'testGcsBucket' in the folder 'someFolder', with the mime\-type
\'application/dicom', run:

.RS 2m
$ gcloud alpha healthcare dicom\-stores export gcs test\-dicom\-store \e
    \-\-gcs\-uri\-prefix=gs://testGcsBucket/someFolder \e
    \-\-mime\-type=application/dicom \-\-dataset=test\-dataset
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud healthcare dicom\-stores export gcs
$ gcloud beta healthcare dicom\-stores export gcs
.RE

