
.TH "GCLOUD_ALPHA_KMS_ASYMMETRIC\-SIGN" 1



.SH "NAME"
.HP
gcloud alpha kms asymmetric\-sign \- sign a user input file using an asymmetric\-signing key version



.SH "SYNOPSIS"
.HP
\f5gcloud alpha kms asymmetric\-sign\fR \fB\-\-digest\-algorithm\fR=\fIDIGEST_ALGORITHM\fR \fB\-\-input\-file\fR=\fIINPUT_FILE\fR \fB\-\-signature\-file\fR=\fISIGNATURE_FILE\fR [\fB\-\-key\fR=\fIKEY\fR] [\fB\-\-keyring\fR=\fIKEYRING\fR] [\fB\-\-location\fR=\fILOCATION\fR] [\fB\-\-version\fR=\fIVERSION\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR Creates a digital signature of the input file using the provided
asymmetric\-signing key version and saves the base64 encoded signature.

The required flag \f5signature\-file\fR indicates the path to store signature.



.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-digest\-algorithm\fR=\fIDIGEST_ALGORITHM\fR
The algorithm to digest the input. \fIDIGEST_ALGORITHM\fR must be one of:
\fBsha256\fR, \fBsha384\fR, \fBsha512\fR.

.TP 2m
\fB\-\-input\-file\fR=\fIINPUT_FILE\fR
Path to the input file to sign.

.TP 2m
\fB\-\-signature\-file\fR=\fISIGNATURE_FILE\fR
Path to the signature file to output.


.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-key\fR=\fIKEY\fR
to use for signing.

.TP 2m
\fB\-\-keyring\fR=\fIKEYRING\fR
Key ring of the key.

.TP 2m
\fB\-\-location\fR=\fILOCATION\fR
Location of the keyring.

.TP 2m
\fB\-\-version\fR=\fIVERSION\fR
Version to use for signing.


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

The following command will read the file '/tmp/my/file.to.sign', digest it with
the digest algorithm 'sha256' and sign it using the asymmetric CryptoKey
\f5dont\-panic\fR Version 3, and save the signature in base64 format to
\'/tmp/my/signature'.

.RS 2m
$ gcloud alpha kms asymmetric\-sign \e
\-\-location=us\-central1 \e
\-\-keyring=hitchhiker \e
\-\-key=dont\-panic \e
\-\-version=1 \e
\-\-digest\-algorithm=sha256 \e
\-\-input\-file=/tmp/my/file.to.sign \e
\-\-signature\-file=/tmp/my/signature
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud kms asymmetric\-sign
$ gcloud beta kms asymmetric\-sign
.RE

