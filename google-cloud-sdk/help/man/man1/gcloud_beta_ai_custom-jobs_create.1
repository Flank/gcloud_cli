
.TH "GCLOUD_BETA_AI_CUSTOM\-JOBS_CREATE" 1



.SH "NAME"
.HP
gcloud beta ai custom\-jobs create \- create a new custom job



.SH "SYNOPSIS"
.HP
\f5gcloud beta ai custom\-jobs create\fR \fB\-\-display\-name\fR=\fIDISPLAY_NAME\fR (\fB\-\-config\fR=\fICONFIG\fR\ \fB\-\-worker\-pool\-spec\fR=[\fIWORKER_POOL_SPEC\fR,...]) [\fB\-\-python\-package\-uris\fR=[\fIPYTHON_PACKAGE_URIS\fR,...]] [\fB\-\-region\fR=\fIREGION\fR] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(BETA)\fR A created custom job right away will be attempted to be run.



.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-display\-name\fR=\fIDISPLAY_NAME\fR
Display name of the custom job to create.

.TP 2m

Worker pool specification. At least one of these must be specified:

.RS 2m
.TP 2m
\fB\-\-config\fR=\fICONFIG\fR
Path to the job configuration file. This file should be a YAML document
containing a CustomJobSpec. If an option is specified both in the configuration
file **and** via command line arguments, the command line arguments override the
configuration file. Note that keys with underscore are invalid.

Example(YAML):

.RS 2m
workerPoolSpecs:
  machineSpec:
    machineType: n1\-highmem\-2
  replicaCount: 1
  containerSpec:
    imageUri: gcr.io/ucaip\-test/ucaip\-training\-test
.RE

.TP 2m
\fB\-\-worker\-pool\-spec\fR=[\fIWORKER_POOL_SPEC\fR,...]
Define the worker pool configuration used by the custom job. You can specify
multiple worker pool specs in order to create a custom job with multiple worker
pools.

The spec can contain the following fields, which are listed with corresponding
fields in the WorkerPoolSpec API message:

.TP 2m
\fBmachine\-type\fR
(Required): machineSpec.machineType
.TP 2m
\fBreplica\-count\fR
replicaCount
.TP 2m
\fBcontainer\-image\-uri\fR
containerSpec.imageUri
.TP 2m
\fBpython\-image\-uri\fR
pythonPackageSpec.executorImageUri
.TP 2m
\fBpython\-module\fR
pythonPackageSpec.pythonModule

For example:
\f5\-\-worker\-pool\-spec=replica\-count=1,machine\-type=n1\-highmem\-2,container\-image\-uri=gcr.io/ucaip\-test/ucaip\-training\-test\fR


.RE
.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-python\-package\-uris\fR=[\fIPYTHON_PACKAGE_URIS\fR,...]
The common python package uris that will be used by python image. e.g.
\-\-python\-package\-uri=path1,path2If customizing the python package is needed,
please use config instead.

.TP 2m

Region resource \- Cloud region to create a custom job. This represents a Cloud
resource. (NOTE) Some attributes are not given arguments in this group but can
be set in other ways. To set the [project] attribute: provide the argument
[\-\-region] on the command line with a fully specified name; set the property
[ai/region] with a fully specified name; region with a fully specified name;
provide the argument [\-\-project] on the command line; set the property
[core/project].

.RS 2m
.TP 2m
\fB\-\-region\fR=\fIREGION\fR
ID of the region or fully qualified identifier for the region.


.RE
.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "NOTES"

This command is currently in BETA and may change without notice. This variant is
also available:

.RS 2m
$ gcloud alpha ai custom\-jobs create
.RE

