
.TH "GCLOUD_BETA_PUBSUB_TOPICS_SET\-IAM\-POLICY" 1



.SH "NAME"
.HP
gcloud beta pubsub topics set\-iam\-policy \- set IAM policy for a topic



.SH "SYNOPSIS"
.HP
\f5gcloud beta pubsub topics set\-iam\-policy\fR \fITOPIC\fR \fIPOLICY_FILE\fR [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(BETA)\fR Set the IAM policy for a Cloud Pub/Sub Topic.



.SH "POSITIONAL ARGUMENTS"

.RS 2m
.TP 2m

Topic resource \- Name of the topic to set an IAM policy on. This represents a
Cloud resource. (NOTE) Some attributes are not given arguments in this group but
can be set in other ways. To set the [project] attribute: provide the argument
[topic] on the command line with a fully specified name; provide the argument
[\-\-project] on the command line; set the property [core/project]. This must be
specified.

.RS 2m
.TP 2m
\fITOPIC\fR
ID of the topic or fully qualified identifier for the topic.

.RE
.sp
.TP 2m
\fIPOLICY_FILE\fR
JSON or YAML file with the IAM policy


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-configuration,
\-\-flags\-file, \-\-flatten, \-\-format, \-\-help, \-\-log\-http, \-\-project,
\-\-quiet, \-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity. Run \fB$
gcloud help\fR for details.



.SH "EXAMPLES"

The following command will read an IAM policy defined in a JSON file
\'policy.json' and set it for a topic with identifier 'my\-topic'

.RS 2m
$ gcloud beta pubsub topics set\-iam\-policy my\-topic policy.json
.RE


See https://cloud.google.com/iam/docs/managing\-policies for details of the
policy file format and contents.



.SH "NOTES"

This command is currently in BETA and may change without notice. This variant is
also available:

.RS 2m
$ gcloud alpha pubsub topics set\-iam\-policy
.RE

