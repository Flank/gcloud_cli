
.TH "GCLOUD_ALPHA_SERVICES_VPC\-PEERINGS_CONNECT" 1



.SH "NAME"
.HP
gcloud alpha services vpc\-peerings connect \- connect to a service via VPC peering for a project network



.SH "SYNOPSIS"
.HP
\f5gcloud alpha services vpc\-peerings connect\fR \fB\-\-network\fR=\fINETWORK\fR \fB\-\-ranges\fR=\fIRANGES\fR [\fB\-\-async\fR] [\fB\-\-service\fR=\fISERVICE\fR;\ default="servicenetworking.googleapis.com"] [\fIGCLOUD_WIDE_FLAG\ ...\fR]



.SH "DESCRIPTION"

\fB(ALPHA)\fR This command connects a private service connection to a service
via a VPC network.



.SH "REQUIRED FLAGS"

.RS 2m
.TP 2m
\fB\-\-network\fR=\fINETWORK\fR
The network in the current project to be peered with the service

.TP 2m
\fB\-\-ranges\fR=\fIRANGES\fR
The names of IP CIDR ranges for service to use.


.RE
.sp

.SH "OPTIONAL FLAGS"

.RS 2m
.TP 2m
\fB\-\-async\fR
Return immediately, without waiting for the operation in progress to complete.

.TP 2m
\fB\-\-service\fR=\fISERVICE\fR; default="servicenetworking.googleapis.com"
The service to connect to


.RE
.sp

.SH "GCLOUD WIDE FLAGS"

These flags are available to all commands: \-\-account, \-\-billing\-project,
\-\-configuration, \-\-flags\-file, \-\-flatten, \-\-format, \-\-help,
\-\-impersonate\-service\-account, \-\-log\-http, \-\-project, \-\-quiet,
\-\-trace\-token, \-\-user\-output\-enabled, \-\-verbosity.

Run \fB$ gcloud help\fR for details.



.SH "EXAMPLES"

To connect a network called \f5my\-network\fR on the current project to a
service called \f5your\-service\fR with IP CIDR ranges
\f5google\-range\-1,google\-range\-2\fR for the service to use, run:

.RS 2m
$ gcloud alpha services vpc\-peerings connect \-\-network=my\-network \e
    \-\-service=your\-service \e
    \-\-ranges=google\-range\-1,google\-range\-2
.RE

To run the same command asynchronously (non\-blocking), run:

.RS 2m
$ gcloud alpha services vpc\-peerings connect \-\-network=my\-network \e
    \-\-service=your\-service \e
    \-\-ranges=google\-range\-1,google\-range\-2 \-\-async
.RE



.SH "NOTES"

This command is currently in ALPHA and may change without notice. If this
command fails with API permission errors despite specifying the right project,
you may be trying to access an API with an invitation\-only early access
allowlist. These variants are also available:

.RS 2m
$ gcloud services vpc\-peerings connect
$ gcloud beta services vpc\-peerings connect
.RE

