- release_tracks: [ALPHA]
  help_text:
    brief: Create a new BeyondCorp client connector service.
    description: Create a new BeyondCorp client connector service.
    examples: |
      The following command creates a client connector service with ID ``my-resource'' in the default user project and location us-central1:

        $ {command} my-resource \
            --location=us-central1 --project=${PROJECT_ID} --ingress-config=${INGRESS_CONFIG}\
            --egress-peered-vpc=${PEERED_VPC}

      The following command creates a client connector service with ID ``my-resource'' with configuration from file:

        $ {command} my-resource \
            --project=${PROJECT_ID} \
            --location=us-central1 \
            --config-from-file=${CONFIG_FILE_PATH} \
            --async

  request:
    collection: beyondcorp.projects.locations.clientConnectorServices
    modify_request_hooks:
    - googlecloudsdk.command_lib.beyondcorp.client_connector.services.hooks:ParseConfig

  async:
    collection: beyondcorp.projects.locations.operations

  arguments:
    resource:
      help_text: The BeyondCorp client connector service you want to create.
      spec: !REF googlecloudsdk.command_lib.beyondcorp.client_connector.resources:client_connector_service
    params:
    - group:
        help_text: Client connector service configuration.
        required: true
        mutex: true
        params:
        - _REF_: googlecloudsdk.command_lib.beyondcorp.client_connector.services.flags:config_from_file
        - group:
            params:
            - _REF_: googlecloudsdk.command_lib.beyondcorp.client_connector.services.flags:ingress_config
              required: true
            - _REF_: googlecloudsdk.command_lib.beyondcorp.client_connector.services.flags:egress_peered_vpc
              required: true
            - _REF_: googlecloudsdk.command_lib.beyondcorp.client_connector.services.flags:display_name
