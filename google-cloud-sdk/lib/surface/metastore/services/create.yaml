- release_tracks: [ALPHA, BETA, GA]
  help_text:
    brief: |
      Create a Dataproc Metastore service.
    description: |
      Create a new Dataproc Metastore service with the given name and configurations.

      If run asynchronously with `--async`, exits after printing
      one operation name that can be used to poll the status of the
      creation via:

        {top_command} metastore operations describe
    examples: |
      To create a Dataproc Metastore service with the name `my-metastore-service` in location
      `us-central` using a non default port 9090, run:

          $ {command} my-metastore-service --location=us-central1 --port=9090

      To create a Dataproc Metastore service with the name `my-metastore-service` in location
      `us-central` using a non default network foo, run:

          $ {command} my-metastore-service --location=us-central1 --network=foo

  request:
    ALPHA:
      api_version: v1alpha
    BETA:
      api_version: v1beta
    GA:
      api_version: v1
    collection: metastore.projects.locations.services

  arguments:
    resource:
      help_text: |
        Arguments and flags that specify the Dataproc Metastore service
        you want to create.
      spec: !REF googlecloudsdk.command_lib.metastore.resources:service
    params:
    - arg_name: network
      api_field: service.network
      processor: googlecloudsdk.command_lib.metastore.parsers:ParseNetwork
      default: default
      help_text: |
        The name of the network on which the service can be accessed.
        This can be the network's ID, fully-qualified URL, or relative name in
        the form `projects/{project_id}/global/networks/{network}`.
        If unspecified, the "default" network will be used.
    - arg_name: port
      api_field: service.port
      default: 9083
      processor: googlecloudsdk.command_lib.metastore.validators:ValidatePort
      help_text: |
        The TCP port on which the Metastore service will listen.
        If unspecified, the default port 9083 will be used.
    - arg_name: tier
      api_field: service.tier
      help_text: |
        The tier of the service.
      choices:
      - arg_value: enterprise
        enum_value: ENTERPRISE
        help_text:  |
          The enterprise tier provides multi-zone high availability, and sufficient
          scalability for enterprise-level Dataproc Metastore workloads.
      - arg_value: developer
        enum_value: DEVELOPER
        help_text:  |
          The developer tier provides limited scalability and no fault tolerance.
          Good for low-cost proof-of-concept.
      fallback: googlecloudsdk.core.properties:VALUES.metastore.tier.Get
    - arg_name: hive-metastore-version
      api_field: service.hiveMetastoreConfig.version
      help_text: |
        The Hive metastore schema version. The supported versions of a location are listed via:

          {top_command} metastore locations describe

        If unspecified, the default version chosen by the server will be used.
    - arg_name: data-catalog-sync
      default: false
      api_field: service.metadataIntegration.dataCatalogConfig.enabled
      release_tracks: [ALPHA, BETA]
      help_text: |
        A boolean flag to determine whether Dataproc Metastore metadata sync
        to Data Catalog should be enabled, false if unspecified.
    - arg_name: release-channel
      help_text: |
        The release channel of the service.
      choices:
      - arg_value: stable
        enum_value: STABLE
        help_text:  |
          The `STABLE` release channel contains features that are considered stable
          and have been validated for production use.
      - arg_value: canary
        enum_value: CANARY
        help_text:  |
          The `CANARY` release channel contains the newest features, which may be
          unstable and subject to unresolved issues with no known workarounds.
          Services using the `CANARY` release channel are not subject to any SLAs.
      default: stable
      api_field: service.releaseChannel
    - group:
        help_text: |
          Configuration properties specific to running Hive metastore
          software as the metastore service.
        mutex: true
        params:
        - arg_name: hive-metastore-configs
          api_field: service.hiveMetastoreConfig.configOverrides.additionalProperties
          metavar: KEY=VALUE
          help_text: |
            A mapping of Hive metastore configuration key-value pairs to
            apply to the Hive metastore.
          type:
            arg_dict:
              flatten: true
              spec:
              - api_field: key
              - api_field: value
        - arg_name: hive-metastore-configs-from-file
          api_field: service.hiveMetastoreConfig.configOverrides
          type: "googlecloudsdk.calliope.arg_parsers:FileContents:"
          processor: googlecloudsdk.command_lib.metastore.services.util:LoadHiveMetatsoreConfigsFromXmlFile
          help_text: |
            Path to a XML file containing a mapping of Hive metastore configuration key-value
            pairs to apply to the Hive metastore.

            For example:

              hive-site.xml
                  <configuration>
                    <property>
                      <name>hive.metastore.warehouse.dir</name>
                      <value>${test.warehouse.dir}</value>
                      <description></description>
                    </property>
                  </configuration>
    - group:
        help_text: |
          Information used to configure the Hive metastore service as a service principal
          in a Kerberos realm.
        params:
        - arg_name: kerberos-principal
          api_field: service.hiveMetastoreConfig.kerberosConfig.principal
          processor: googlecloudsdk.command_lib.metastore.validators:ValidateKerberosPrincipal
          help_text: |
            A Kerberos principal that exists in the KDC to authenticate as. A typical principal
            is of the form "primary/instance@REALM", but there is no exact format.
          required: true
        - arg_name: krb5-config
          api_field: service.hiveMetastoreConfig.kerberosConfig.krb5ConfigGcsUri
          processor: googlecloudsdk.command_lib.metastore.validators:ValidateGcsUri:arg_name=--krb5-config
          help_text: |
            A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form
            gs://{bucket_name}/path/krb5.conf, although the file does not need to be named
            krb5.conf explicitly.
          required: true
        - arg_name: keytab
          api_field: service.hiveMetastoreConfig.kerberosConfig.keytab.cloudSecret
          processor: googlecloudsdk.command_lib.metastore.parsers:ParseSecretManagerSecretVersion
          help_text: |
            A Kerberos keytab file that can be used to authenticate a service principal
            with a Kerberos Key Distribution Center. This is a Secret Manager secret version,
            and can be fully-qualified URL, or relative name in the form
            `projects/{project_id}/secrets/{secret_id}/versions/{version_id}`.
          required: true
    - group:
        help_text: |
          The one hour maintenance window that specifies when Dataproc
          Metastore may perform system maintenance operation to the service, in
          UTC time.
        params:
        - arg_name: maintenance-window-day
          api_field: service.maintenanceWindow.dayOfWeek
          required: true
          choices:
          - arg_value: mon
            enum_value: MONDAY
          - arg_value: tue
            enum_value: TUESDAY
          - arg_value: wed
            enum_value: WEDNESDAY
          - arg_value: thu
            enum_value: THURSDAY
          - arg_value: fri
            enum_value: FRIDAY
          - arg_value: sat
            enum_value: SATURDAY
          - arg_value: sun
            enum_value: SUNDAY
          help_text: |
            The day of week when the window starts, e.g., `sun`.
        - arg_name: maintenance-window-hour
          api_field: service.maintenanceWindow.hourOfDay
          required: true
          processor: googlecloudsdk.command_lib.metastore.validators:ValidateHourOfDay
          help_text: |
            The hour of day (0-23) when the window starts.
    labels:
      api_field: service.labels

  async:
    collection: metastore.projects.locations.operations
