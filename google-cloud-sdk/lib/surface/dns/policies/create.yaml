- &GA
  release_tracks: [GA]
  help_text:
    brief: Creates a new Cloud DNS policy.
    description: |
      Creates a new Cloud DNS policy.
      ## EXAMPLES

      To create a new policy with minimal arguments, run:

        $ {command} mypolicy \
        --description='My new policy test policy 5' \
        --networks=''

      To create a new policy with all optional arguments, run:

        $ {command} mypolicy \
        --description='My new policy test policy 5' \
        --networks=network1,network2 \
        --alternative-name-servers=192.168.1.1,192.168.1.2
        --enable-inbound-forwarding
        --enable-logging

  request:
    method: create
    collection: dns.policies
    api_version: v1

  arguments:
    resource:
      help_text: The name of the policy you want to create.
      is_positional: true
      spec: !REF googlecloudsdk.command_lib.dns.resources:policy
    params:
    - api_field: policy.description
      arg_name: description
      required: true
      help_text: A description of the policy.
    - api_field: policy.networks
      arg_name: networks
      required: true
      metavar: URL
      type: googlecloudsdk.command_lib.util.hooks.types:Resource:collection=compute.networks
      processor: googlecloudsdk.command_lib.dns.util:PolicyNetworkProcessor
      help_text: |
          The comma separated list of network names to associate with the policy.
    - api_field: policy.enableInboundForwarding
      arg_name: enable-inbound-forwarding
      action: store_true
      default: false
      help_text: |
          Specifies whether to allow networks bound to this policy to
          receive DNS queries sent by VMs or applications over VPN
          connections. Defaults to False.
    - api_field: policy.alternativeNameServerConfig.targetNameServers
      arg_name: alternative-name-servers
      metavar: IP_ADDRESS
      type:  googlecloudsdk.command_lib.dns.util:TargetNameServerType
      help_text: |
        List of alternative name servers to forward to. Must be a comma separated list of IPv4
        addresses. Non-RFC1918 addresses will forward to the target through the Internet.
        RFC1918 addresses will forward through the VPC.
    - api_field: policy.enableLogging
      arg_name: enable-logging
      action: store_true
      default: false
      help_text: |
        Specifies whether to enable query logging. Defaults to False.

  output:
    format: json

- <<: *GA
  release_tracks: [ALPHA, BETA]
  help_text:
    brief: Creates a new Cloud DNS policy.
    description: |
      Creates a new Cloud DNS policy.
      ## EXAMPLES

      To create a new policy with minimal arguments, run:

        $ {command} mypolicy \
        --description='My new policy test policy 5' \
        --networks=''

      To create a new policy with all optional arguments, run:

        $ {command} mypolicy \
        --description='My new policy test policy 5' \
        --networks=network1,network2 \
        --alternative-name-servers=192.168.1.1,192.168.1.2
        --enable-inbound-forwarding
        --enable-logging
  request:
    method: create
    collection: dns.policies
    api_version: v1beta2

  arguments:
    resource:
      help_text: The name of the policy you want to create.
      is_positional: true
      spec: !REF googlecloudsdk.command_lib.dns.resources:policy
    params:
    - api_field: policy.description
      arg_name: description
      required: true
      help_text: A description of the policy.
    - api_field: policy.networks
      arg_name: networks
      required: true
      metavar: URL
      type: googlecloudsdk.command_lib.util.hooks.types:Resource:collection=compute.networks
      processor: googlecloudsdk.command_lib.dns.util:BetaPolicyNetworkProcessor
      help_text: |
          The comma separated list of network names to associate with the policy.
    - api_field: policy.enableInboundForwarding
      arg_name: enable-inbound-forwarding
      action: store_true
      default: false
      help_text: |
          Specifies whether to allow networks bound to this policy to
          receive DNS queries sent by VMs or applications over VPN
          connections. Defaults to False.
    - api_field: policy.alternativeNameServerConfig.targetNameServers
      arg_name: alternative-name-servers
      metavar: IP_ADDRESS
      type:  googlecloudsdk.command_lib.dns.util:BetaTargetNameServerType
      help_text: |
        List of alternative name servers to forward to. Must be a comma separated list of IPv4
        addresses. Non-RFC1918 addresses will forward to the target through the Internet.
        RFC1918 addresses will forward through the VPC.
    - api_field: policy.enableLogging
      arg_name: enable-logging
      action: store_true
      default: false
      help_text: |
        Specifies whether to enable query logging. Defaults to False.
