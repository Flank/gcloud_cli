title: A test of basic filestore backup functionality.
release_tracks: [BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - command: filestore instances create $$filestore-test-instance1$$ --zone us-east1-c
      --tier STANDARD --file-share=name="my_vol",capacity=1TB --network=name=filestore-net
  - progress_tracker:
    - message: Waiting for [$$operation-basename$$] to finish
    - status: SUCCESS
- execute:
  - command: filestore backups create $$filestore-test-backup1$$ --region us-east1
      --instance $$filestore-test-instance1$$ --instance-zone us-east1-c --file-share="my_vol"
  - stderr: |
      Create request issued
  - progress_tracker:
    - message: Waiting for operation [$$operation$$] to complete
    - status: SUCCESS
  - stderr: |
      Created backup.
- execute:
  - command: filestore backups list --region us-east1 --filter 'name:$$filestore-test-backup1$$'
      --format 'table(name,sourceInstance,sourceFileShare,state)'
  - stdout: |
      NAME                                        SRC_INSTANCE                                                       SRC_FILE_SHARE  STATE
      $$filestore-test-backup1$$  us-east1-c/instances/$$filestore-test-instance1$$  my_vol          READY
- execute:
  - command: filestore backups list --region us-west1 --filter 'name:$$filestore-test-backup1$$'
      --format 'table(name,sourceInstance,sourceFileShare,state)'
- execute:
  - command: filestore backups describe '$$filestore-test-backup1$$' --region us-east1
      --format 'table(name,sourceInstance,sourceFileShare,state)'
  - stdout: |
      NAME                                                                                                          SOURCE_INSTANCE                                                                                                     SOURCE_FILE_SHARE  STATE
      projects/cloud-sdk-integration-testing/locations/us-east1/backups/$$filestore-test-backup1$$  projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance1$$  my_vol             READY
- execute:
  - command: filestore instances create $$filestore-test-instance2$$ --zone us-east1-c
      --tier STANDARD --network=name=filestore-net --file-share=name="my_vol",capacity=1TB,source-backup=$$filestore-test-backup1$$,source-backup-region=us-east1
  - progress_tracker:
    - message: Waiting for [$$operation-basename$$] to finish
    - status: SUCCESS
- execute:
  - command: filestore instances delete $$filestore-test-instance1$$ --zone us-east1-c
      --async
  - prompt:
    - message: |-
        You are about to delete Cloud Filestore instance projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance1$$.
        Are you sure?
    - input: y
  - stderr: |-
      Check the status of the deletion by listing all instances:
        \$ gcloud beta filestore instances list *
      $
- execute:
  - command: filestore backups delete $$filestore-test-backup1$$ --region us-east1
      --async
  - prompt:
    - message: |
        You are about to delete a backup
    - input: y
  - stderr: |-
      Delete request issued
      Check operation \[.+\] for status\.
      $
- execute:
  - command: filestore instances delete $$filestore-test-instance2$$ --zone us-east1-c
      --async
  - prompt:
    - message: |-
        You are about to delete Cloud Filestore instance projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance2$$.
        Are you sure?
    - input: y
  - stderr: |-
      Check the status of the deletion by listing all instances:
        \$ gcloud beta filestore instances list *
      $
actions:
- define_reference:
    reference: api-version
    track_values:
      BETA: v1beta1

- generate_resource_id:
    reference: filestore-test-instance1
    prefix: filestore-test-instance

- execute_command:
    command: filestore instances create $$filestore-test-instance1$$ --zone us-east1-c
      --tier STANDARD --file-share=name="my_vol",capacity=1TB --network=name=filestore-net
    events:
    - api_call:
        expect_request:
          uri: https://file.googleapis.com/$$api-version$$/projects/cloud-sdk-integration-testing/locations/us-east1-c/instances?alt=json&instanceId=$$filestore-test-instance1$$
          method: POST
          headers: {}
          body:
            json:
              fileShares:
              - capacityGb: '1024'
                name: my_vol
              networks:
              - network: filestore-net
              tier: STANDARD
        return_response:
          headers:
            cache-control: private
            content-length: '519'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1-c/operations/operation-1599611459993-5aed690da0007-fcc3b9f8-8ba97a70
            metadata:
              '@type': type.googleapis.com/google.cloud.common.OperationMetadata
              createTime: '2020-09-09T00:31:02.204958119Z'
              target: projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance1$$
              verb: create
              cancelRequested: false
              apiVersion: $$api-version$$
            done: false
          status: 200
        poll_operation: true
    - expect_progress_tracker:
        message: Waiting for [$$operation-basename$$] to finish
        status: SUCCESS
    - expect_exit:
        code: 0
- generate_resource_id:
    reference: filestore-test-backup1
    prefix: filestore-test-backup

- execute_command:
    command: filestore backups create $$filestore-test-backup1$$ --region us-east1
      --instance $$filestore-test-instance1$$ --instance-zone us-east1-c --file-share="my_vol"
    events:
    - api_call:
        expect_request:
          uri: https://file.googleapis.com/$$api-version$$/projects/cloud-sdk-integration-testing/locations/us-east1/backups?alt=json&backupId=$$filestore-test-backup1$$
          method: POST
          headers: {}
          body:
            json:
              sourceFileShare: my_vol
              sourceInstance: projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance1$$
        return_response:
          headers:
            cache-control: private
            content-length: '511'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/operations/operation-1599611667651-5aed69d3a9c58-e788a12c-9d7a34a9
            metadata:
              '@type': type.googleapis.com/google.cloud.common.OperationMetadata
              createTime: '2020-09-09T00:34:27.734576156Z'
              target: projects/cloud-sdk-integration-testing/locations/us-east1/backups/$$filestore-test-backup1$$
              verb: create
              cancelRequested: false
              apiVersion: $$api-version$$
            done: false
          status: 200
        poll_operation: true
    - expect_stderr: |
        Create request issued
    - expect_progress_tracker:
        message: Waiting for operation [$$operation$$] to complete
        status: SUCCESS
    - expect_stderr: |
        Created backup.
    - expect_exit:
        code: 0

- execute_command:
    command: filestore backups list --region us-east1 --filter 'name:$$filestore-test-backup1$$'
      --format 'table(name,sourceInstance,sourceFileShare,state)'
    events:
    - api_call:
        expect_request:
          uri: https://file.googleapis.com/$$api-version$$/projects/cloud-sdk-integration-testing/locations/us-east1/backups?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '550'
            content-type: application/json; charset=UTF-8
          body:
            backups:
            - name: projects/cloud-sdk-integration-testing/locations/us-east1/backups/$$filestore-test-backup1$$
              state: READY
              createTime: '2020-09-09T00:34:27.729016740Z'
              capacityGb: '1024'
              storageBytes: '4193664'
              sourceInstance: projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance1$$
              sourceFileShare: my_vol
              sourceInstanceTier: STANDARD
              downloadBytes: '4256566'
          status: 200
    - expect_stdout: |
        NAME                                        SRC_INSTANCE                                                       SRC_FILE_SHARE  STATE
        $$filestore-test-backup1$$  us-east1-c/instances/$$filestore-test-instance1$$  my_vol          READY
    - expect_exit:
        code: 0
- execute_command:
    command: filestore backups list --region us-west1 --filter 'name:$$filestore-test-backup1$$'
      --format 'table(name,sourceInstance,sourceFileShare,state)'
    events:
    - api_call:
        expect_request:
          uri: https://file.googleapis.com/$$api-version$$/projects/cloud-sdk-integration-testing/locations/us-west1/backups?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
          body: |
            {}
          status: 200
    - expect_exit:
        code: 0
- execute_command:
    command: filestore backups describe '$$filestore-test-backup1$$' --region us-east1
      --format 'table(name,sourceInstance,sourceFileShare,state)'
    events:
    - api_call:
        expect_request:
          uri: https://file.googleapis.com/$$api-version$$/projects/cloud-sdk-integration-testing/locations/us-east1/backups/$$filestore-test-backup1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '483'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/backups/$$filestore-test-backup1$$
            state: READY
            createTime: '2020-09-09T00:34:27.729016740Z'
            capacityGb: '1024'
            storageBytes: '4193664'
            sourceInstance: projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance1$$
            sourceFileShare: my_vol
            sourceInstanceTier: STANDARD
            downloadBytes: '4256566'
          status: 200
    - expect_stdout: |
        NAME                                                                                                          SOURCE_INSTANCE                                                                                                     SOURCE_FILE_SHARE  STATE
        projects/cloud-sdk-integration-testing/locations/us-east1/backups/$$filestore-test-backup1$$  projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance1$$  my_vol             READY
    - expect_exit:
        code: 0

- generate_resource_id:
    reference: filestore-test-instance2
    prefix: filestore-test-instance

- execute_command:
    command: filestore instances create $$filestore-test-instance2$$ --zone us-east1-c
      --tier STANDARD --network=name=filestore-net --file-share=name="my_vol",capacity=1TB,source-backup=$$filestore-test-backup1$$,source-backup-region=us-east1
    events:
    - api_call:
        expect_request:
          uri: https://file.googleapis.com/$$api-version$$/projects/cloud-sdk-integration-testing/locations/us-east1-c/instances?alt=json&instanceId=$$filestore-test-instance2$$
          method: POST
          headers: {}
          body:
            json:
              fileShares:
              - capacityGb: '1024'
                name: my_vol
                sourceBackup: projects/cloud-sdk-integration-testing/locations/us-east1/backups/$$filestore-test-backup1$$
              networks:
              - network: filestore-net
              tier: STANDARD
        return_response:
          headers:
            cache-control: private
            content-length: '519'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1-c/operations/operation-1599611687046-5aed69e628c67-66cf2b57-77a74106
            metadata:
              '@type': type.googleapis.com/google.cloud.common.OperationMetadata
              createTime: '2020-09-09T00:34:49.209508845Z'
              target: projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance2$$
              verb: create
              cancelRequested: false
              apiVersion: $$api-version$$
            done: false
          status: 200
        poll_operation: true
    - expect_progress_tracker:
        message: Waiting for [$$operation-basename$$] to finish
        status: SUCCESS
    - expect_exit:
        code: 0

- execute_command:
    command: filestore instances delete $$filestore-test-instance1$$ --zone us-east1-c
      --async
    cleanup_for: filestore-test-instance1
    validation_only: true
    events:
    - expect_prompt_continue:
        message: |-
          You are about to delete Cloud Filestore instance projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance1$$.
          Are you sure?
        user_input: y
    - expect_stderr:
        matches: |
          Check the status of the deletion by listing all instances:
            \$ gcloud beta filestore instances list *
    - expect_exit:
        code: 0

- execute_command:
    command: filestore backups delete $$filestore-test-backup1$$ --region us-east1
      --async
    cleanup_for: filestore-test-backup1
    validation_only: true
    events:
    - expect_prompt_continue:
        message: |
          You are about to delete a backup
        user_input: y
    - expect_stderr:
        matches: |
          Delete request issued
          Check operation \[.+\] for status\.
    - expect_exit:
        code: 0

- execute_command:
    command: filestore instances delete $$filestore-test-instance2$$ --zone us-east1-c
      --async
    cleanup_for: filestore-test-instance2
    validation_only: true
    events:
    - expect_prompt_continue:
        message: |-
          You are about to delete Cloud Filestore instance projects/cloud-sdk-integration-testing/locations/us-east1-c/instances/$$filestore-test-instance2$$.
          Are you sure?
        user_input: y
    - expect_stderr:
        matches: |
          Check the status of the deletion by listing all instances:
            \$ gcloud beta filestore instances list *
    - expect_exit:
        code: 0
