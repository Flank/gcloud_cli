title: ops-agents policies create, describe, delete.
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: compute instances ops-agents policies create $$ops-agents-policy-id$$
      --description="e2e test ops agents policy" --os-types=short-name=centos,version=7
      --agent-rules="type=logging,version=1.*.*,enable-autoupgrade=true,package-state=installed;type=metrics,version=6.*.*,enable-autoupgrade=false,package-state=installed"
      --instances=zones/$$zone$$/instances/$$instance-id$$ --group-labels="env=prod,product=myapp;env=staging,product=myapp"
      --zones="$$zone$$" --format="yaml(agent_rules,assignment,description,id)"
  - stdout: |
      agent_rules:
      - enable_autoupgrade: true
        package_state: installed
        type: logging
        version: 1.*.*
      - enable_autoupgrade: false
        package_state: installed
        type: metrics
        version: 6.*.*
      assignment:
        group_labels:
        - env: prod
          product: myapp
        - env: staging
          product: myapp
        instances:
        - zones/$$zone$$/instances/$$instance-id$$
        os_types:
        - short_name: centos
          version: '7'
        zones:
        - $$zone$$
      description: e2e test ops agents policy
      id: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
- execute:
  - command: compute instances ops-agents policies describe $$ops-agents-policy-id$$
      --format 'yaml(agent_rules,assignment,description,id)'
  - stdout: |
      agent_rules:
      - enable_autoupgrade: true
        package_state: installed
        type: logging
        version: 1.*.*
      - enable_autoupgrade: false
        package_state: installed
        type: metrics
        version: 6.*.*
      assignment:
        group_labels:
        - env: prod
          product: myapp
        - env: staging
          product: myapp
        instances:
        - zones/$$zone$$/instances/$$instance-id$$
        os_types:
        - short_name: centos
          version: '7'
        zones:
        - $$zone$$
      description: e2e test ops agents policy
      id: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
- execute:
  - command: compute instances ops-agents policies list --filter id:$$ops-agents-policy-id$$
      --format 'yaml(agent_rules,assignment,description,id)'
  - stdout: |
      ---
      agent_rules:
      - enable_autoupgrade: true
        package_state: installed
        type: logging
        version: 1.*.*
      - enable_autoupgrade: false
        package_state: installed
        type: metrics
        version: 6.*.*
      assignment:
        group_labels:
        - env: prod
          product: myapp
        - env: staging
          product: myapp
        instances:
        - zones/$$zone$$/instances/$$instance-id$$
        os_types:
        - short_name: centos
          version: '7'
        zones:
        - $$zone$$
      description: e2e test ops agents policy
      id: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
- execute:
  - command: compute instances ops-agents policies update $$ops-agents-policy-id$$
      --os-types=short-name=centos,version=7 --description="A test policy to install
      agents" --agent-rules="type=logging,package-state=removed" --instances=zones/us-central1-a/instances/test-instance-1
      --group-labels="env=prod,product=myproduct;env=staging,product=myproduct" --clear-zones
      --format="yaml(agent_rules,assignment,description,id)"
  - stdout: |
      agent_rules:
      - enable_autoupgrade: true
        package_state: removed
        type: logging
        version: 1.*.*
      assignment:
        group_labels:
        - env: prod
          product: myproduct
        - env: staging
          product: myproduct
        instances:
        - zones/us-central1-a/instances/test-instance-1
        os_types:
        - short_name: centos
          version: '7'
        zones: []
      description: A test policy to install agents
      id: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
- execute:
  - command: compute instances ops-agents policies delete $$ops-agents-policy-id$$
  - stderr: |-
      Deleted \[$$ops-agents-policy-id$$\].
      $
actions:
- define_reference:
    reference: osconfig-api-version
    track_values:
      ALPHA: v1beta
- define_reference:
    reference: zone
    value: us-central1-f
- generate_resource_id:
    reference: ops-agents-policy-id
    prefix: ops-agents-
- generate_resource_id:
    reference: instance-id
    prefix: ops-agents-policy-instance
    requires_cleanup: false
- execute_command:
    command: compute instances ops-agents policies create $$ops-agents-policy-id$$
      --description="e2e test ops agents policy" --os-types=short-name=centos,version=7
      --agent-rules="type=logging,version=1.*.*,enable-autoupgrade=true,package-state=installed;type=metrics,version=6.*.*,enable-autoupgrade=false,package-state=installed"
      --instances=zones/$$zone$$/instances/$$instance-id$$ --group-labels="env=prod,product=myapp;env=staging,product=myapp"
      --zones="$$zone$$" --format="yaml(agent_rules,assignment,description,id)"
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$osconfig-api-version$$/projects/cloud-sdk-integration-testing/guestPolicies?alt=json&guestPolicyId=$$ops-agents-policy-id$$
          method: POST
          headers: {}
          body:
            json:
              assignment:
                groupLabels:
                - labels:
                    env: prod
                    product: myapp
                - labels:
                    env: staging
                    product: myapp
                instances:
                - zones/$$zone$$/instances/$$instance-id$$
                osTypes:
                - osShortName: centos
                  osVersion: '7'
                zones:
                - $$zone$$
              description: '{"type": "ops-agents", "description": "e2e test ops agents
                policy", "agentRules": [{"enableAutoupgrade": true, "packageState":
                "installed", "type": "logging", "version": "1.*.*"},{"enableAutoupgrade":
                false, "packageState": "installed", "type": "metrics", "version":
                "6.*.*"}]}'
              packageRepositories:
              - yum:
                  baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                  displayName: Google Cloud Logging Agent Repository
                  gpgKeys:
                  - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
                  id: google-cloud-logging
              - yum:
                  baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el7-x86_64-6
                  displayName: Google Cloud Monitoring Agent Repository
                  gpgKeys:
                  - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
                  id: google-cloud-monitoring
              packages:
              - desiredState: UPDATED
                name: google-fluentd
              - desiredState: UPDATED
                name: google-fluentd-catch-all-config
              - desiredState: UPDATED
                name: google-fluentd-start-service
              - desiredState: INSTALLED
                name: stackdriver-agent
              - desiredState: INSTALLED
                name: stackdriver-agent-start-service
              recipes:
              - desiredState: UPDATED
                installSteps:
                - scriptRun:
                    script: |-
                      #!/bin/bash -e
                      sudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true
                      for i in {1..5}; do
                        if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then
                          break
                        fi
                        sleep 1m
                      done
                name: set-google-fluentd-version-0
                version: '0'
              - desiredState: UPDATED
                installSteps:
                - scriptRun:
                    script: |-
                      #!/bin/bash -e
                      sudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true
                      for i in {1..5}; do
                        if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then
                          break
                        fi
                        sleep 1m
                      done
                name: set-stackdriver-agent-version-0
                version: '0'
        return_response:
          omit_fields:
          - createTime
          - updateTime
          - etag
          headers:
            cache-control: private
            content-length: '3057'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
            description: '{"type": "ops-agents", "description": "e2e test ops agents
              policy", "agentRules": [{"enableAutoupgrade": true, "packageState":
              "installed", "type": "logging", "version": "1.*.*"},{"enableAutoupgrade":
              false, "packageState": "installed", "type": "metrics", "version": "6.*.*"}]}'
            assignment:
              groupLabels:
              - labels:
                  env: prod
                  product: myapp
              - labels:
                  env: staging
                  product: myapp
              zones:
              - $$zone$$
              instances:
              - zones/$$zone$$/instances/$$instance-id$$
              osTypes:
              - osShortName: centos
                osVersion: '7'
            packages:
            - name: google-fluentd
              desiredState: UPDATED
            - name: google-fluentd-catch-all-config
              desiredState: UPDATED
            - name: google-fluentd-start-service
              desiredState: UPDATED
            - name: stackdriver-agent
              desiredState: INSTALLED
            - name: stackdriver-agent-start-service
              desiredState: INSTALLED
            packageRepositories:
            - yum:
                id: google-cloud-logging
                displayName: Google Cloud Logging Agent Repository
                baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                gpgKeys:
                - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            - yum:
                id: google-cloud-monitoring
                displayName: Google Cloud Monitoring Agent Repository
                baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el7-x86_64-6
                gpgKeys:
                - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            recipes:
            - name: set-google-fluentd-version-0
              version: '0'
              installSteps:
              - scriptRun:
                  script: |-
                    #!/bin/bash -e
                    sudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true
                    for i in {1..5}; do
                      if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then
                        break
                      fi
                      sleep 1m
                    done
              desiredState: UPDATED
            - name: set-stackdriver-agent-version-0
              version: '0'
              installSteps:
              - scriptRun:
                  script: |-
                    #!/bin/bash -e
                    sudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true
                    for i in {1..5}; do
                      if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then
                        break
                      fi
                      sleep 1m
                    done
              desiredState: UPDATED
    - expect_stdout: |
        agent_rules:
        - enable_autoupgrade: true
          package_state: installed
          type: logging
          version: 1.*.*
        - enable_autoupgrade: false
          package_state: installed
          type: metrics
          version: 6.*.*
        assignment:
          group_labels:
          - env: prod
            product: myapp
          - env: staging
            product: myapp
          instances:
          - zones/$$zone$$/instances/$$instance-id$$
          os_types:
          - short_name: centos
            version: '7'
          zones:
          - $$zone$$
        description: e2e test ops agents policy
        id: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
    - expect_exit:
        code: 0
- execute_command:
    command: compute instances ops-agents policies describe $$ops-agents-policy-id$$
      --format 'yaml(agent_rules,assignment,description,id)'
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$osconfig-api-version$$/projects/cloud-sdk-integration-testing/guestPolicies/$$ops-agents-policy-id$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          omit_fields:
          - createTime
          - updateTime
          - etag
          headers:
            cache-control: private
            content-length: '3057'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
            description: '{"type": "ops-agents", "description": "e2e test ops agents
              policy", "agentRules": [{"enableAutoupgrade": true, "packageState":
              "installed", "type": "logging", "version": "1.*.*"},{"enableAutoupgrade":
              false, "packageState": "installed", "type": "metrics", "version": "6.*.*"}]}'
            assignment:
              groupLabels:
              - labels:
                  env: prod
                  product: myapp
              - labels:
                  env: staging
                  product: myapp
              zones:
              - $$zone$$
              instances:
              - zones/$$zone$$/instances/$$instance-id$$
              osTypes:
              - osShortName: centos
                osVersion: '7'
            packages:
            - name: google-fluentd
              desiredState: UPDATED
            - name: google-fluentd-catch-all-config
              desiredState: UPDATED
            - name: google-fluentd-start-service
              desiredState: UPDATED
            - name: stackdriver-agent
              desiredState: INSTALLED
            - name: stackdriver-agent-start-service
              desiredState: INSTALLED
            packageRepositories:
            - yum:
                id: google-cloud-logging
                displayName: Google Cloud Logging Agent Repository
                baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                gpgKeys:
                - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            - yum:
                id: google-cloud-monitoring
                displayName: Google Cloud Monitoring Agent Repository
                baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el7-x86_64-6
                gpgKeys:
                - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            recipes:
            - name: set-google-fluentd-version-0
              version: '0'
              installSteps:
              - scriptRun:
                  script: |-
                    #!/bin/bash -e
                    sudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true
                    for i in {1..5}; do
                      if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then
                        break
                      fi
                      sleep 1m
                    done
              desiredState: UPDATED
            - name: set-stackdriver-agent-version-0
              version: '0'
              installSteps:
              - scriptRun:
                  script: |-
                    #!/bin/bash -e
                    sudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true
                    for i in {1..5}; do
                      if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then
                        break
                      fi
                      sleep 1m
                    done
              desiredState: UPDATED
    - expect_stdout: |
        agent_rules:
        - enable_autoupgrade: true
          package_state: installed
          type: logging
          version: 1.*.*
        - enable_autoupgrade: false
          package_state: installed
          type: metrics
          version: 6.*.*
        assignment:
          group_labels:
          - env: prod
            product: myapp
          - env: staging
            product: myapp
          instances:
          - zones/$$zone$$/instances/$$instance-id$$
          os_types:
          - short_name: centos
            version: '7'
          zones:
          - $$zone$$
        description: e2e test ops agents policy
        id: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
    - expect_exit:
        code: 0
- execute_command:
    command: compute instances ops-agents policies list --filter id:$$ops-agents-policy-id$$
      --format 'yaml(agent_rules,assignment,description,id)'
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$osconfig-api-version$$/projects/cloud-sdk-integration-testing/guestPolicies?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
          body:
            nextPageToken: '1234'
            guestPolicies:
            - name: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
              description: '{"type": "ops-agents", "description": "e2e test ops agents
                policy", "agentRules": [{"enableAutoupgrade": true, "packageState":
                "installed", "type": "logging", "version": "1.*.*"},{"enableAutoupgrade":
                false, "packageState": "installed", "type": "metrics", "version":
                "6.*.*"}]}'
              assignment:
                groupLabels:
                - labels:
                    env: prod
                    product: myapp
                - labels:
                    env: staging
                    product: myapp
                zones:
                - $$zone$$
                instances:
                - zones/$$zone$$/instances/$$instance-id$$
                osTypes:
                - osShortName: centos
                  osVersion: '7'
              packages:
              - name: google-fluentd
                desiredState: UPDATED
              - name: google-fluentd-catch-all-config
                desiredState: UPDATED
              - name: google-fluentd-start-service
                desiredState: UPDATED
              - name: stackdriver-agent
                desiredState: INSTALLED
              - name: stackdriver-agent-start-service
                desiredState: INSTALLED
              packageRepositories:
              - yum:
                  id: google-cloud-logging
                  displayName: Google Cloud Logging Agent Repository
                  baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                  gpgKeys:
                  - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
              - yum:
                  id: google-cloud-monitoring
                  displayName: Google Cloud Monitoring Agent Repository
                  baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el7-x86_64-6
                  gpgKeys:
                  - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
              recipes:
              - name: set-google-fluentd-version-0
                version: '0'
                installSteps:
                - scriptRun:
                    script: |-
                      #!/bin/bash -e
                      sudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true
                      for i in {1..5}; do
                        if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then
                          break
                        fi
                        sleep 1m
                      done
                desiredState: UPDATED
              - name: set-stackdriver-agent-version-0
                version: '0'
                installSteps:
                - scriptRun:
                    script: |-
                      #!/bin/bash -e
                      sudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true
                      for i in {1..5}; do
                        if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then
                          break
                        fi
                        sleep 1m
                      done
                desiredState: UPDATED
    - expect_stdout: |
        ---
        agent_rules:
        - enable_autoupgrade: true
          package_state: installed
          type: logging
          version: 1.*.*
        - enable_autoupgrade: false
          package_state: installed
          type: metrics
          version: 6.*.*
        assignment:
          group_labels:
          - env: prod
            product: myapp
          - env: staging
            product: myapp
          instances:
          - zones/$$zone$$/instances/$$instance-id$$
          os_types:
          - short_name: centos
            version: '7'
          zones:
          - $$zone$$
        description: e2e test ops agents policy
        id: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
    - api_call:
        expect_request:
          uri:
            matches: https://osconfig.googleapis.com/$$osconfig-api-version$$/projects/cloud-sdk-integration-testing/guestPolicies\?alt=json&pageToken=.*
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
          body: {}
    - expect_exit:
        code: 0
- execute_command:
    command: compute instances ops-agents policies update $$ops-agents-policy-id$$
      --os-types=short-name=centos,version=7 --description="A test policy to install
      agents" --agent-rules="type=logging,package-state=removed" --instances=zones/us-central1-a/instances/test-instance-1
      --group-labels="env=prod,product=myproduct;env=staging,product=myproduct" --clear-zones
      --format="yaml(agent_rules,assignment,description,id)"
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$osconfig-api-version$$/projects/cloud-sdk-integration-testing/guestPolicies/$$ops-agents-policy-id$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          omit_fields:
          - createTime
          - updateTime
          - etag
          headers:
            cache-control: private
            content-length: '3057'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
            description: '{"type": "ops-agents", "description": "e2e test ops agents
              policy", "agentRules": [{"enableAutoupgrade": true, "packageState":
              "installed", "type": "logging", "version": "1.*.*"},{"enableAutoupgrade":
              false, "packageState": "installed", "type": "metrics", "version": "6.*.*"}]}'
            assignment:
              groupLabels:
              - labels:
                  env: prod
                  product: myapp
              - labels:
                  env: staging
                  product: myapp
              zones:
              - $$zone$$
              instances:
              - zones/$$zone$$/instances/$$instance-id$$
              osTypes:
              - osShortName: centos
                osVersion: '7'
            packages:
            - name: google-fluentd
              desiredState: UPDATED
            - name: google-fluentd-catch-all-config
              desiredState: UPDATED
            - name: google-fluentd-start-service
              desiredState: UPDATED
            - name: stackdriver-agent
              desiredState: INSTALLED
            - name: stackdriver-agent-start-service
              desiredState: INSTALLED
            packageRepositories:
            - yum:
                id: google-cloud-logging
                displayName: Google Cloud Logging Agent Repository
                baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                gpgKeys:
                - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            - yum:
                id: google-cloud-monitoring
                displayName: Google Cloud Monitoring Agent Repository
                baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el7-x86_64-6
                gpgKeys:
                - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            recipes:
            - name: set-google-fluentd-version-0
              version: '0'
              installSteps:
              - scriptRun:
                  script: |-
                    #!/bin/bash -e
                    sudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true
                    for i in {1..5}; do
                      if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then
                        break
                      fi
                      sleep 1m
                    done
              desiredState: UPDATED
            - name: set-stackdriver-agent-version-0
              version: '0'
              installSteps:
              - scriptRun:
                  script: |-
                    #!/bin/bash -e
                    sudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true
                    for i in {1..5}; do
                      if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then
                        break
                      fi
                      sleep 1m
                    done
              desiredState: UPDATED
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$osconfig-api-version$$/projects/cloud-sdk-integration-testing/guestPolicies/$$ops-agents-policy-id$$?alt=json
          method: PATCH
          headers: {}
          body:
            json:
              assignment:
                groupLabels:
                - labels:
                    env: prod
                    product: myproduct
                - labels:
                    env: staging
                    product: myproduct
                instances:
                - zones/us-central1-a/instances/test-instance-1
                osTypes:
                - osShortName: centos
                  osVersion: '7'
              description: '{"type": "ops-agents", "description": "A test policy to
                install agents", "agentRules": [{"enableAutoupgrade": true, "packageState":
                "removed", "type": "logging", "version": "1.*.*"}]}'
              packageRepositories:
              - yum:
                  baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                  displayName: Google Cloud Logging Agent Repository
                  gpgKeys:
                  - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
                  id: google-cloud-logging
              packages:
              - desiredState: REMOVED
                name: google-fluentd
              - desiredState: REMOVED
                name: google-fluentd-catch-all-config
              - desiredState: REMOVED
                name: google-fluentd-start-service
              recipes:
              - desiredState: UPDATED
                version: '1'
                installSteps:
                - scriptRun:
                    script: |-
                      #!/bin/bash
                      echo 'Skipping as the package state is [removed].'
                name: set-google-fluentd-version-1
        return_response:
          headers:
            cache-control: private
            content-length: '1954'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
            description: '{"type": "ops-agents", "description": "A test policy to
              install agents", "agentRules": [{"enableAutoupgrade": true, "packageState":
              "removed", "type": "logging", "version": "1.*.*"}]}'
            createTime: '2020-07-10T19:04:02.596Z'
            updateTime: '2020-07-10T19:04:03.955Z'
            assignment:
              groupLabels:
              - labels:
                  env: prod
                  product: myproduct
              - labels:
                  env: staging
                  product: myproduct
              instances:
              - zones/us-central1-a/instances/test-instance-1
              osTypes:
              - osShortName: centos
                osVersion: '7'
            packages:
            - name: google-fluentd
              desiredState: REMOVED
            - name: google-fluentd-catch-all-config
              desiredState: REMOVED
            - name: google-fluentd-start-service
              desiredState: REMOVED
            packageRepositories:
            - yum:
                id: google-cloud-logging
                displayName: Google Cloud Logging Agent Repository
                baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                gpgKeys:
                - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            recipes:
            - name: set-google-fluentd-version-1
              version: '1'
              installSteps:
              - scriptRun:
                  script: |-
                    #!/bin/bash
                    echo 'Skipping as the package state is [removed].'
              desiredState: UPDATED
            etag: b9154b46-7e2c-4ab1-966a-c278fa632648
    - expect_stdout: |
        agent_rules:
        - enable_autoupgrade: true
          package_state: removed
          type: logging
          version: 1.*.*
        assignment:
          group_labels:
          - env: prod
            product: myproduct
          - env: staging
            product: myproduct
          instances:
          - zones/us-central1-a/instances/test-instance-1
          os_types:
          - short_name: centos
            version: '7'
          zones: []
        description: A test policy to install agents
        id: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
    - expect_exit:
        code: 0
- execute_command:
    command: compute instances ops-agents policies delete $$ops-agents-policy-id$$
    cleanup_for: ops-agents-policy-id
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$osconfig-api-version$$/projects/cloud-sdk-integration-testing/guestPolicies/$$ops-agents-policy-id$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          omit_fields:
          - createTime
          - updateTime
          - etag
          headers:
            cache-control: private
            content-length: '1954'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/guestPolicies/$$ops-agents-policy-id$$
            description: '{"type": "ops-agents", "description": "A test policy to
              install agents", "agentRules": [{"enableAutoupgrade": true, "packageState":
              "removed", "type": "logging", "version": "1.*.*"}]}'
            assignment:
              groupLabels:
              - labels:
                  env: prod
                  product: myproduct
              - labels:
                  env: staging
                  product: myproduct
              instances:
              - zones/us-central1-a/instances/test-instance-1
              osTypes:
              - osShortName: centos
                osVersion: '7'
            packages:
            - name: google-fluentd
              desiredState: REMOVED
            - name: google-fluentd-catch-all-config
              desiredState: REMOVED
            - name: google-fluentd-start-service
              desiredState: REMOVED
            packageRepositories:
            - yum:
                id: google-cloud-logging
                displayName: Google Cloud Logging Agent Repository
                baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                gpgKeys:
                - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            recipes:
            - name: set-google-fluentd-version-1
              version: '1'
              installSteps:
              - scriptRun:
                  script: |-
                    #!/bin/bash
                    echo 'Skipping as the package state is [removed].'
              desiredState: UPDATED
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$osconfig-api-version$$/projects/cloud-sdk-integration-testing/guestPolicies/$$ops-agents-policy-id$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
          body: |
            {}
    - expect_stderr:
        matches: |
          Deleted \[$$ops-agents-policy-id$$\].
    - expect_exit:
        code: 0
