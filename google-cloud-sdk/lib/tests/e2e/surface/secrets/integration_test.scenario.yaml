title: cloud secrets integration test
release_tracks: [GA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: secrets create $$a-secret1$$ --replication-policy=automatic --data-file=secret.data1
  - stdout: |
      Created version [1] of the secret [$$a-secret1$$].
- execute:
  - command: secrets list --filter "name:$$a-secret1$$" --format "text(name,replication)"
  - stdout: |
      ---
      name:                  projects/462803083913/secrets/$$a-secret1$$
      replication.automatic: {}
- execute:
  - command: secrets describe $$a-secret1$$ --format "text(labels,name,replication)"
  - stdout: |
      name:                  projects/462803083913/secrets/$$a-secret1$$
      replication.automatic: {}
- execute:
  - command: secrets update $$a-secret1$$ --update-labels="foo=bar"
  - stdout: |
      Updated secret [$$a-secret1$$].
- execute:
  - command: secrets describe $$a-secret1$$ --format "text(labels,name,replication)"
  - stdout: |
      labels.foo:            bar
      name:                  projects/462803083913/secrets/$$a-secret1$$
      replication.automatic: {}
- execute:
  - command: secrets versions add $$a-secret1$$ --data-file=secret.data2
  - stdout: |
      Created version [2] of the secret [$$a-secret1$$].
- execute:
  - command: secrets versions access 1 --secret $$a-secret1$$
  - stdout: |-
      thisissecretdata1
- execute:
  - command: secrets versions access 2 --secret $$a-secret1$$
  - stdout: |-
      thisissecretdata2
- execute:
  - command: secrets versions access latest --secret $$a-secret1$$
  - stdout: |-
      thisissecretdata2
- execute:
  - command: secrets versions list $$a-secret1$$ --format "text(name,state)"
  - stdout: |
      ---
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
      state: ENABLED
      ---
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/1
      state: ENABLED
- execute:
  - command: secrets versions disable 2 --secret=$$a-secret1$$
  - stdout: |
      Disabled version [2] of the secret [$$a-secret1$$].
- execute:
  - command: secrets versions describe 2 --secret=$$a-secret1$$ --format "text(name,state)"
  - stdout: |
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
      state: DISABLED
- execute:
  - command: secrets versions enable 2 --secret=$$a-secret1$$
  - stdout: |
      Enabled version [2] of the secret [$$a-secret1$$].
- execute:
  - command: secrets versions describe 2 --secret=$$a-secret1$$ --format "text(name,state)"
  - stdout: |
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
      state: ENABLED
- execute:
  - command: secrets versions destroy 2 --secret=$$a-secret1$$
  - prompt:
    - message: You are about to destroy version [2] of the secret [$$a-secret1$$].
        This action cannot be reversed.
    - input: y
  - stdout: |
      Destroyed version [2] of the secret [$$a-secret1$$].
- execute:
  - command: secrets versions list $$a-secret1$$ --format "text(name,state)"
  - stdout: |
      ---
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
      state: DESTROYED
      ---
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/1
      state: ENABLED
- execute:
  - command: |
      config set secrets/replication-policy automatic
  - stderr: |
      Updated property [secrets/replication-policy].
- execute:
  - command: |
      config set secrets/replication-policy automatic
  - stderr: |
      Updated property [secrets/replication-policy].
- execute:
  - command: |
      secrets create $$a-secret2$$ --locations=us-central1
  - error: '1: Invalid value for [locations]: The secrets/replication-policy property
      is "automatic" and not overridden so --locations are not allowed. Please remove
      the --locations flag or set the replication-policy to "user-managed".'
- execute:
  - command: |
      config set secrets/locations us-central1
  - stderr: |
      Updated property [secrets/locations].
- execute:
  - command: |
      secrets create $$a-secret2$$
  - error: '1: Invalid value for [replication-policy]: Cannot create a secret with
      an "automatic" replication policy if the secrets/locations property is set.
      Please either use a "user-managed" replication policy or unset secrets/locations.'
- execute:
  - command: |
      config set secrets/replication-policy user-managed
  - stderr: |
      Updated property [secrets/replication-policy].
- execute:
  - command: |
      secrets create $$a-secret2$$ --data-file=secret.data3
  - stdout: |
      Created version [1] of the secret [$$a-secret2$$].
- execute:
  - command: secrets describe $$a-secret2$$ --format "text(name,replication,labels)"
  - stdout: |
      name:                                         projects/462803083913/secrets/$$a-secret2$$
      replication.userManaged.replicas[0].location: us-central1
- execute:
  - command: secrets update $$a-secret2$$ --update-labels "foo=bar"
  - stdout: |
      Updated secret [$$a-secret2$$].
- execute:
  - command: secrets describe $$a-secret2$$ --format "text(name,labels)"
  - stdout: |
      labels.foo: bar
      name:       projects/462803083913/secrets/$$a-secret2$$
- execute:
  - command: secrets update $$a-secret2$$ --clear-labels
  - stdout: |
      Updated secret [$$a-secret2$$].
- execute:
  - command: secrets versions list $$a-secret2$$ --format=value(name,state)
  - stdout: |
      1	enabled
- execute:
  - command: secrets delete $$a-secret2$$ -q
  - stdout: |
      Deleted secret [$$a-secret2$$].
- execute:
  - command: secrets delete $$a-secret1$$ -q
  - stdout: |
      Deleted secret [$$a-secret1$$].
actions:
- generate_resource_id:
    reference: a-secret1
    prefix: secrets
- generate_resource_id:
    reference: a-secret2
    prefix: secrets
- write_file:
    path: secret.data1
    contents: thisissecretdata1
- write_file:
    path: secret.data2
    contents: thisissecretdata2
- write_file:
    path: secret.data3
    contents: thisissecretdata3
- write_file:
    path: secret.data4
    contents: thisissecretdata4
- write_file:
    path: secret.data5
    contents: thisissecretdata5
- execute_command:
    command: secrets create $$a-secret1$$ --replication-policy=automatic --data-file=secret.data1
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets?alt=json&secretId=$$a-secret1$$
          method: POST
          headers: {}
          body:
            json:
              replication: {}
        return_response:
          headers:
            cache-control: private
            content-length: '166'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-03-31T15:13:45.703842Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$:addVersion?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YTE=
        return_response:
          headers:
            cache-control: private
            content-length: '155'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/1
            createTime: '2020-03-31T15:13:46.825992Z'
            state: ENABLED
    - expect_stdout: |
        Created version [1] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets list --filter "name:$$a-secret1$$" --format "text(name,replication)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets?alt=json&pageSize=100
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3663'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            secrets:
            - name: projects/462803083913/secrets/secrets-20191124-083308-lj0y
              replication:
                automatic: {}
              createTime: '2019-11-24T08:33:10.985042Z'
            - name: projects/462803083913/secrets/secrets-20191124-083313-m9ny
              replication:
                automatic: {}
              createTime: '2019-11-24T08:33:14.863309Z'
            - name: projects/462803083913/secrets/secrets-20191124-083952-s308
              replication:
                automatic: {}
              createTime: '2019-11-24T08:39:53.585292Z'
            - name: projects/462803083913/secrets/secrets-20191124-083957-ffdf
              replication:
                automatic: {}
              createTime: '2019-11-24T08:39:57.905207Z'
            - name: projects/462803083913/secrets/secrets-20191124-084924-e4u3
              replication:
                automatic: {}
              createTime: '2019-11-24T08:49:25.665037Z'
              labels:
                foo: bar
            - name: projects/462803083913/secrets/secrets-20191124-084939-n4l3
              replication:
                automatic: {}
              createTime: '2019-11-24T08:49:40.530317Z'
            - name: projects/462803083913/secrets/secrets-20191124-091615-ksrf
              replication:
                automatic: {}
              createTime: '2019-11-24T09:16:18.289171Z'
            - name: projects/462803083913/secrets/secrets-20191124-144137-i73s
              replication:
                automatic: {}
              createTime: '2019-11-24T14:41:38.880753Z'
            - name: projects/462803083913/secrets/secrets-20191124-144143-8yxz
              replication:
                automatic: {}
              createTime: '2019-11-24T14:41:43.900982Z'
            - name: projects/462803083913/secrets/secrets-20191124-152953-2ips
              replication:
                automatic: {}
              createTime: '2019-11-24T15:29:54.184212Z'
            - name: projects/462803083913/secrets/secrets-20191127-170003-jfgi
              replication:
                automatic: {}
              createTime: '2019-11-27T17:00:04.631350Z'
            - name: projects/462803083913/secrets/secrets-20200113-170443-ey0i
              replication:
                automatic: {}
              createTime: '2020-01-13T17:04:44.309090Z'
              labels:
                foo: bar
            - name: projects/462803083913/secrets/secrets-20200113-170443-fvfz
              replication:
                userManaged:
                  replicas:
                  - location: us-central1
              createTime: '2020-01-13T17:04:47.971612Z'
              labels:
                foo: bar
            - name: projects/462803083913/secrets/secrets-20200205-193042-xd6d
              replication:
                automatic: {}
              createTime: '2020-02-05T19:30:42.396907Z'
            - name: projects/462803083913/secrets/secrets-20200213-224615-9r5g
              replication:
                automatic: {}
              createTime: '2020-02-13T22:46:16.182643Z'
            - name: projects/462803083913/secrets/secrets-20200225-090544-133z
              replication:
                automatic: {}
              createTime: '2020-02-25T09:05:44.546867Z'
              labels:
                foo: bar
            - name: projects/462803083913/secrets/$$a-secret1$$
              replication:
                automatic: {}
              createTime: '2020-03-31T15:13:45.703842Z'
            totalSize: 17
    - expect_stdout: |
        ---
        name:                  projects/462803083913/secrets/$$a-secret1$$
        replication.automatic: {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets describe $$a-secret1$$ --format "text(labels,name,replication)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '166'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-03-31T15:13:45.703842Z'
    - expect_stdout: |
        name:                  projects/462803083913/secrets/$$a-secret1$$
        replication.automatic: {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets update $$a-secret1$$ --update-labels="foo=bar"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '166'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-03-31T15:13:45.703842Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json&updateMask=labels
          method: PATCH
          headers: {}
          body:
            json:
              labels:
                foo: bar
        return_response:
          headers:
            cache-control: private
            content-length: '202'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-03-31T15:13:45.703842Z'
            labels:
              foo: bar
    - expect_stdout: |
        Updated secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets describe $$a-secret1$$ --format "text(labels,name,replication)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '202'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-03-31T15:13:45.703842Z'
            labels:
              foo: bar
    - expect_stdout: |
        labels.foo:            bar
        name:                  projects/462803083913/secrets/$$a-secret1$$
        replication.automatic: {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions add $$a-secret1$$ --data-file=secret.data2
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$:addVersion?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YTI=
        return_response:
          headers:
            cache-control: private
            content-length: '155'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-03-31T15:13:51.014255Z'
            state: ENABLED
    - expect_stdout: |
        Created version [2] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions access 1 --secret $$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/1:access?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '145'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/1
            payload:
              data: dGhpc2lzc2VjcmV0ZGF0YTE=
    - expect_stdout: |-
        thisissecretdata1
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions access 2 --secret $$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2:access?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '145'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            payload:
              data: dGhpc2lzc2VjcmV0ZGF0YTI=
    - expect_stdout: |-
        thisissecretdata2
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions access latest --secret $$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/latest:access?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '145'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            payload:
              data: dGhpc2lzc2VjcmV0ZGF0YTI=
    - expect_stdout: |-
        thisissecretdata2
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions list $$a-secret1$$ --format "text(name,state)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '393'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/2
              createTime: '2020-03-31T15:13:51.014255Z'
              state: ENABLED
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/1
              createTime: '2020-03-31T15:13:46.825992Z'
              state: ENABLED
            totalSize: 2
    - expect_stdout: |
        ---
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
        state: ENABLED
        ---
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/1
        state: ENABLED
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions disable 2 --secret=$$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2:disable?alt=json
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '156'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-03-31T15:13:51.014255Z'
            state: DISABLED
    - expect_stdout: |
        Disabled version [2] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions describe 2 --secret=$$a-secret1$$ --format "text(name,state)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '156'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-03-31T15:13:51.014255Z'
            state: DISABLED
    - expect_stdout: |
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
        state: DISABLED
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions enable 2 --secret=$$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2:enable?alt=json
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '155'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-03-31T15:13:51.014255Z'
            state: ENABLED
    - expect_stdout: |
        Enabled version [2] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions describe 2 --secret=$$a-secret1$$ --format "text(name,state)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '155'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-03-31T15:13:51.014255Z'
            state: ENABLED
    - expect_stdout: |
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
        state: ENABLED
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions destroy 2 --secret=$$a-secret1$$
    events:
    - expect_prompt_continue:
        message: You are about to destroy version [2] of the secret [$$a-secret1$$].
          This action cannot be reversed.
        user_input: y
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2:destroy?alt=json
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '208'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-03-31T15:13:51.014255Z'
            destroyTime: '2020-03-31T15:13:55.282287265Z'
            state: DESTROYED
    - expect_stdout: |
        Destroyed version [2] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions list $$a-secret1$$ --format "text(name,state)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '450'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/2
              createTime: '2020-03-31T15:13:51.014255Z'
              destroyTime: '2020-03-31T15:13:55.282287265Z'
              state: DESTROYED
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/1
              createTime: '2020-03-31T15:13:46.825992Z'
              state: ENABLED
            totalSize: 2
    - expect_stdout: |
        ---
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
        state: DESTROYED
        ---
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/1
        state: ENABLED
    - expect_exit:
        code: 0
- execute_command:
    command: |
      config set secrets/replication-policy automatic
    events:
    - expect_stderr: |
        Updated property [secrets/replication-policy].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      config set secrets/replication-policy automatic
    events:
    - expect_stderr: |
        Updated property [secrets/replication-policy].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      secrets create $$a-secret2$$ --locations=us-central1
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [locations]: The secrets/replication-policy property
          is "automatic" and not overridden so --locations are not allowed. Please
          remove the --locations flag or set the replication-policy to "user-managed".'
- execute_command:
    command: |
      config set secrets/locations us-central1
    events:
    - expect_stderr: |
        Updated property [secrets/locations].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      secrets create $$a-secret2$$
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [replication-policy]: Cannot create a secret with
          an "automatic" replication policy if the secrets/locations property is set.
          Please either use a "user-managed" replication policy or unset secrets/locations.'
- execute_command:
    command: |
      config set secrets/replication-policy user-managed
    events:
    - expect_stderr: |
        Updated property [secrets/replication-policy].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      secrets create $$a-secret2$$ --data-file=secret.data3
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets?alt=json&secretId=$$a-secret2$$
          method: POST
          headers: {}
          body:
            json:
              replication: {}
        return_response:
          headers:
            cache-control: private
            content-length: '257'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-03-31T15:13:57.236979Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$:addVersion?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YTM=
        return_response:
          headers:
            cache-control: private
            content-length: '155'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret2$$/versions/1
            createTime: '2020-03-31T15:13:57.940025Z'
            state: ENABLED
    - expect_stdout: |
        Created version [1] of the secret [$$a-secret2$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets describe $$a-secret2$$ --format "text(name,replication,labels)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '257'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-03-31T15:13:57.236979Z'
    - expect_stdout: |
        name:                                         projects/462803083913/secrets/$$a-secret2$$
        replication.userManaged.replicas[0].location: us-central1
    - expect_exit:
        code: 0
- execute_command:
    command: secrets update $$a-secret2$$ --update-labels "foo=bar"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '257'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-03-31T15:13:57.236979Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json&updateMask=labels
          method: PATCH
          headers: {}
          body:
            json:
              labels:
                foo: bar
        return_response:
          headers:
            cache-control: private
            content-length: '293'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-03-31T15:13:57.236979Z'
            labels:
              foo: bar
    - expect_stdout: |
        Updated secret [$$a-secret2$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets describe $$a-secret2$$ --format "text(name,labels)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '293'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-03-31T15:13:57.236979Z'
            labels:
              foo: bar
    - expect_stdout: |
        labels.foo: bar
        name:       projects/462803083913/secrets/$$a-secret2$$
    - expect_exit:
        code: 0
- execute_command:
    command: secrets update $$a-secret2$$ --clear-labels
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '293'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-03-31T15:13:57.236979Z'
            labels:
              foo: bar
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json&updateMask=labels
          method: PATCH
          headers: {}
          body:
            json:
              labels: {}
        return_response:
          headers:
            cache-control: private
            content-length: '257'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-03-31T15:13:57.236979Z'
    - expect_stdout: |
        Updated secret [$$a-secret2$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions list $$a-secret2$$ --format=value(name,state)
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '217'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret2$$/versions/1
              createTime: '2020-03-31T15:13:57.940025Z'
              state: ENABLED
            totalSize: 1
    - expect_stdout: |
        1	enabled
    - expect_exit:
        code: 0
- execute_command:
    command: secrets delete $$a-secret2$$ -q
    cleanup_for: a-secret2
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '217'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret2$$/versions/1
              createTime: '2020-03-31T15:13:57.940025Z'
              state: ENABLED
            totalSize: 1
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stdout: |
        Deleted secret [$$a-secret2$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets delete $$a-secret1$$ -q
    cleanup_for: a-secret1
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '450'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/2
              createTime: '2020-03-31T15:13:51.014255Z'
              destroyTime: '2020-03-31T15:13:55.282287265Z'
              state: DESTROYED
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/1
              createTime: '2020-03-31T15:13:46.825992Z'
              state: ENABLED
            totalSize: 2
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stdout: |
        Deleted secret [$$a-secret1$$].
    - expect_exit:
        code: 0
