title: cloud secrets beta integration test
release_tracks: [BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - command: services identity create --service secretmanager.googleapis.com --project
      cloud-sdk-integration-testing
  - stderr: |
      Service identity created: service-462803083913@gcp-sa-secretmanager.iam.gserviceaccount.com
- execute:
  - command: secrets create $$a-secret1$$ --replication-policy=automatic --data-file=secret.data1
  - stdout: |
      Created version [1] of the secret [$$a-secret1$$].
- execute:
  - command: secrets list --filter "name:$$a-secret1$$" --format "text(name,replication)"
  - stdout: |
      ---
      name:                  projects/462803083913/secrets/$$a-secret1$$
      replication.automatic: {}
- execute:
  - command: secrets describe $$a-secret1$$ --format "text(labels,name,replication)"
  - stdout: |
      name:                  projects/462803083913/secrets/$$a-secret1$$
      replication.automatic: {}
- execute:
  - command: secrets update $$a-secret1$$ --update-labels="foo=bar"
  - stdout: |
      Updated secret [$$a-secret1$$].
- execute:
  - command: secrets describe $$a-secret1$$ --format "text(labels,name,replication)"
  - stdout: |
      labels.foo:            bar
      name:                  projects/462803083913/secrets/$$a-secret1$$
      replication.automatic: {}
- execute:
  - command: secrets versions add $$a-secret1$$ --data-file=secret.data2
  - stdout: |
      Created version [2] of the secret [$$a-secret1$$].
- execute:
  - command: secrets versions access 1 --secret $$a-secret1$$
  - stdout: thisissecretdata1
- execute:
  - command: secrets versions access 2 --secret $$a-secret1$$
  - stdout: thisissecretdata2
- execute:
  - command: secrets versions access latest --secret $$a-secret1$$
  - stdout: thisissecretdata2
- execute:
  - command: secrets versions list $$a-secret1$$ --format "text(name,state)"
  - stdout: |
      ---
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
      state: ENABLED
      ---
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/1
      state: ENABLED
- execute:
  - command: secrets versions disable 2 --secret=$$a-secret1$$
  - stdout: |
      Disabled version [2] of the secret [$$a-secret1$$].
- execute:
  - command: secrets versions describe 2 --secret=$$a-secret1$$ --format "text(name,state)"
  - stdout: |
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
      state: DISABLED
- execute:
  - command: secrets versions enable 2 --secret=$$a-secret1$$
  - stdout: |
      Enabled version [2] of the secret [$$a-secret1$$].
- execute:
  - command: secrets versions describe 2 --secret=$$a-secret1$$ --format "text(name,state)"
  - stdout: |
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
      state: ENABLED
- execute:
  - command: secrets versions destroy 2 --secret=$$a-secret1$$
  - prompt:
    - message: You are about to destroy version [2] of the secret [$$a-secret1$$].
        This action cannot be reversed.
    - input: y
  - stdout: |
      Destroyed version [2] of the secret [$$a-secret1$$].
- execute:
  - command: secrets versions list $$a-secret1$$ --format "text(name,state)"
  - stdout: |
      ---
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
      state: DESTROYED
      ---
      name:  projects/462803083913/secrets/$$a-secret1$$/versions/1
      state: ENABLED
- execute:
  - command: |
      config set secrets/replication-policy automatic
  - stderr: |
      Updated property [secrets/replication-policy].
- execute:
  - command: |
      config set secrets/replication-policy automatic
  - stderr: |
      Updated property [secrets/replication-policy].
- execute:
  - command: |
      secrets create $$a-secret2$$ --locations=us-central1
  - error: '1: Invalid value for [locations]: The secrets/replication-policy property
      is "automatic" and not overridden so --locations are not allowed. Please remove
      the --locations flag or set the replication-policy to "user-managed".'
- execute:
  - command: |
      config set secrets/locations us-central1
  - stderr: |
      Updated property [secrets/locations].
- execute:
  - command: |
      secrets create $$a-secret2$$
  - error: '1: Invalid value for [replication-policy]: Cannot create a secret with
      an "automatic" replication policy if the secrets/locations property is set.
      Please either use a "user-managed" replication policy or unset secrets/locations.'
- execute:
  - command: |
      config set secrets/replication-policy user-managed
  - stderr: |
      Updated property [secrets/replication-policy].
- execute:
  - command: |
      secrets create $$a-secret2$$ --data-file=secret.data3
  - stdout: |
      Created version [1] of the secret [$$a-secret2$$].
- execute:
  - command: secrets describe $$a-secret2$$ --format "text(name,replication,labels)"
  - stdout: |
      name:                                         projects/462803083913/secrets/$$a-secret2$$
      replication.userManaged.replicas[0].location: us-central1
- execute:
  - command: secrets update $$a-secret2$$ --update-labels "foo=bar"
  - stdout: |
      Updated secret [$$a-secret2$$].
- execute:
  - command: secrets describe $$a-secret2$$ --format "text(name,labels)"
  - stdout: |
      labels.foo: bar
      name:       projects/462803083913/secrets/$$a-secret2$$
- execute:
  - command: secrets update $$a-secret2$$ --clear-labels
  - stdout: |
      Updated secret [$$a-secret2$$].
- execute:
  - command: secrets versions list $$a-secret2$$ --format=value(name,state)
  - stdout: |
      1	enabled
- execute:
  - command: secrets delete $$a-secret2$$ -q
  - stdout: |
      Deleted secret [$$a-secret2$$].
- execute:
  - command: secrets delete $$a-secret1$$ -q
  - stdout: |
      Deleted secret [$$a-secret1$$].
- execute:
  - command: secrets create $$a-secret3$$ --replication-policy-file=automatic-with-cmek.yaml
  - stdout: |
      Created secret [$$a-secret3$$].
- execute:
  - command: secrets replication get $$a-secret3$$
  - stdout: |
      automatic:
        customerManagedEncryption:
          kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
- execute:
  - command: secrets replication update $$a-secret3$$ --set-kms-key projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/fake-key
  - error: '1: FAILED_PRECONDITION: Permission denied on Cloud KMS resource [projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/fake-key]
      (or it does not exist).'
- execute:
  - command: secrets replication update $$a-secret3$$ --remove-cmek
  - stdout: |
      Updated replication for secret [$$a-secret3$$].
- execute:
  - command: secrets replication update $$a-secret3$$ --set-kms-key projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
  - stdout: |
      Updated replication for secret [$$a-secret3$$].
- execute:
  - command: secrets delete $$a-secret3$$ -q
  - stdout: |
      Deleted secret [$$a-secret3$$].
- execute:
  - command: secrets create $$a-secret4$$ --replication-policy=user-managed --locations=us-east1,us-central1
  - stdout: |
      Created secret [$$a-secret4$$].
- execute:
  - command: secrets replication get $$a-secret4$$
  - stdout: |
      userManaged:
        replicas:
        - location: us-east1
        - location: us-central1
- execute:
  - command: secrets replication set $$a-secret4$$ --replication-policy-file=misaligned-user-managed-with-cmek.json
  - error: '1: INVALID_ARGUMENT: User-managed replica in location [us-east1] can only
      be configured with Cloud KMS keys in location [us-east1]. Requested: [projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key]'
- execute:
  - command: secrets replication set $$a-secret4$$ --replication-policy-file=user-managed-with-cmek.json
  - stdout: |
      Updated replication for secret [$$a-secret4$$].
- execute:
  - command: secrets replication update $$a-secret4$$ --set-kms-key=projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
      --location=us-central1
  - error: '1: INVALID_ARGUMENT: User-managed replica in location [us-central1] can
      only be configured with Cloud KMS keys in location [us-central1]. Requested:
      [projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key]'
- execute:
  - command: secrets replication update $$a-secret4$$ --set-kms-key=projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
      --location=us-east1
  - stdout: |
      Updated replication for secret [$$a-secret4$$].
- execute:
  - command: secrets replication get $$a-secret4$$
  - stdout: |
      userManaged:
        replicas:
        - customerManagedEncryption:
            kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
          location: us-central1
        - customerManagedEncryption:
            kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
          location: us-east1
- execute:
  - command: secrets replication update $$a-secret4$$ --remove-cmek
  - stdout: |
      Updated replication for secret [$$a-secret4$$].
- execute:
  - command: secrets delete $$a-secret4$$ -q
  - stdout: |
      Deleted secret [$$a-secret4$$].
actions:
- generate_resource_id:
    reference: a-secret1
    prefix: secrets
- generate_resource_id:
    reference: a-secret2
    prefix: secrets
- generate_resource_id:
    reference: a-secret3
    prefix: secrets
- generate_resource_id:
    reference: a-secret4
    prefix: secrets
- write_file:
    path: secret.data1
    contents: thisissecretdata1
- write_file:
    path: secret.data2
    contents: thisissecretdata2
- write_file:
    path: secret.data3
    contents: thisissecretdata3
- write_file:
    path: secret.data4
    contents: thisissecretdata4
- write_file:
    path: secret.data5
    contents: thisissecretdata5
- execute_command:
    command: services identity create --service secretmanager.googleapis.com --project
      cloud-sdk-integration-testing
    validation_only: true
    events:
    - expect_stderr: |
        Service identity created: service-462803083913@gcp-sa-secretmanager.iam.gserviceaccount.com
    - expect_exit:
        code: 0
- execute_command:
    command: secrets create $$a-secret1$$ --replication-policy=automatic --data-file=secret.data1
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets?alt=json&secretId=$$a-secret1$$
          method: POST
          headers: {}
          body:
            json:
              replication:
                automatic: {}
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '166'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-09-14T21:41:26.567646Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$:addVersion?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YTE=
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '205'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/1
            createTime: '2020-09-14T21:41:27.073377Z'
            state: ENABLED
            replicationStatus:
              automatic: {}
    - expect_stdout: |
        Created version [1] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets list --filter "name:$$a-secret1$$" --format "text(name,replication)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets?alt=json&pageSize=100
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '13525'
            content-type: application/json; charset=UTF-8
          body:
            secrets:
            - name: projects/462803083913/secrets/ika-sec
              replication:
                automatic: {}
              createTime: '2020-08-14T15:09:00.167124Z'
            - name: projects/462803083913/secrets/secrets-202006
              replication:
                automatic: {}
              createTime: '2020-07-13T17:12:18.147116Z'
            - name: projects/462803083913/secrets/secrets-20200617-034213-gohq
              replication:
                automatic: {}
              createTime: '2020-06-17T03:42:14.005172Z'
            - name: projects/462803083913/secrets/secrets-20200617-034215-4xrp
              replication:
                automatic: {}
              createTime: '2020-06-17T03:42:15.505612Z'
            - name: projects/462803083913/secrets/secrets-20200617-034216-elka
              replication:
                automatic: {}
              createTime: '2020-06-17T03:42:16.826822Z'
            - name: projects/462803083913/secrets/secrets-20200617-034217-5ito
              replication:
                automatic: {}
              createTime: '2020-06-17T03:42:18.057293Z'
            - name: projects/462803083913/secrets/secrets-20200617-034219-4n5h
              replication:
                automatic: {}
              createTime: '2020-06-17T03:42:19.531185Z'
            - name: projects/462803083913/secrets/secrets-20200617-034220-4w3x
              replication:
                automatic: {}
              createTime: '2020-06-17T03:42:20.770407Z'
            - name: projects/462803083913/secrets/secrets-20200617-034332-h38u
              replication:
                automatic: {}
              createTime: '2020-06-17T03:43:35.827703Z'
            - name: projects/462803083913/secrets/secrets-20200617-034333-0ds9
              replication:
                automatic: {}
              createTime: '2020-06-17T03:43:36.771408Z'
            - name: projects/462803083913/secrets/secrets-20200617-034334-40oj
              replication:
                automatic: {}
              createTime: '2020-06-17T03:43:37.383593Z'
            - name: projects/462803083913/secrets/secrets-20200617-034335-zaqg
              replication:
                automatic: {}
              createTime: '2020-06-17T03:43:38.371723Z'
            - name: projects/462803083913/secrets/secrets-20200617-034336-8x5h
              replication:
                automatic: {}
              createTime: '2020-06-17T03:43:39.232692Z'
            - name: projects/462803083913/secrets/secrets-20200617-034337-1f1q
              replication:
                automatic: {}
              createTime: '2020-06-17T03:43:40.089298Z'
            - name: projects/462803083913/secrets/secrets-20200617-042738-c0n5
              replication:
                automatic: {}
              createTime: '2020-06-17T04:27:39.141949Z'
            - name: projects/462803083913/secrets/secrets-20200617-042740-1eec
              replication:
                automatic: {}
              createTime: '2020-06-17T04:27:41.189278Z'
            - name: projects/462803083913/secrets/secrets-20200617-042742-ce3f
              replication:
                automatic: {}
              createTime: '2020-06-17T04:27:43.074364Z'
            - name: projects/462803083913/secrets/secrets-20200617-042746-crry
              replication:
                automatic: {}
              createTime: '2020-06-17T04:27:46.408722Z'
            - name: projects/462803083913/secrets/secrets-20200617-042748-wobm
              replication:
                automatic: {}
              createTime: '2020-06-17T04:27:48.399210Z'
            - name: projects/462803083913/secrets/secrets-20200617-042750-kdku
              replication:
                automatic: {}
              createTime: '2020-06-17T04:27:50.356609Z'
            - name: projects/462803083913/secrets/secrets-20200617-042943-9kug
              replication:
                automatic: {}
              createTime: '2020-06-17T04:29:45.504420Z'
            - name: projects/462803083913/secrets/secrets-20200617-042945-bo7d
              replication:
                automatic: {}
              createTime: '2020-06-17T04:29:47.748688Z'
            - name: projects/462803083913/secrets/secrets-20200617-042947-3cl9
              replication:
                automatic: {}
              createTime: '2020-06-17T04:29:49.822588Z'
            - name: projects/462803083913/secrets/secrets-20200617-042949-9s9e
              replication:
                automatic: {}
              createTime: '2020-06-17T04:29:51.911179Z'
            - name: projects/462803083913/secrets/secrets-20200617-042951-db3e
              replication:
                automatic: {}
              createTime: '2020-06-17T04:29:53.886300Z'
            - name: projects/462803083913/secrets/secrets-20200617-042953-g63g
              replication:
                automatic: {}
              createTime: '2020-06-17T04:29:55.779495Z'
            - name: projects/462803083913/secrets/secrets-20200617-043252-b1ib
              replication:
                automatic: {}
              createTime: '2020-06-17T04:32:52.579060Z'
            - name: projects/462803083913/secrets/secrets-20200617-043253-z14p
              replication:
                automatic: {}
              createTime: '2020-06-17T04:32:54.410317Z'
            - name: projects/462803083913/secrets/secrets-20200617-043255-nbos
              replication:
                automatic: {}
              createTime: '2020-06-17T04:32:56.096160Z'
            - name: projects/462803083913/secrets/secrets-20200617-043259-qnx2
              replication:
                automatic: {}
              createTime: '2020-06-17T04:32:59.704806Z'
            - name: projects/462803083913/secrets/secrets-20200617-043300-aamo
              replication:
                automatic: {}
              createTime: '2020-06-17T04:33:01.440344Z'
            - name: projects/462803083913/secrets/secrets-20200617-043302-yc1m
              replication:
                automatic: {}
              createTime: '2020-06-17T04:33:03.213109Z'
            - name: projects/462803083913/secrets/secrets-20200617-043405-ajd9
              replication:
                automatic: {}
              createTime: '2020-06-17T04:34:07.634288Z'
            - name: projects/462803083913/secrets/secrets-20200617-043406-tu85
              replication:
                automatic: {}
              createTime: '2020-06-17T04:34:09.199692Z'
            - name: projects/462803083913/secrets/secrets-20200617-043408-jtli
              replication:
                automatic: {}
              createTime: '2020-06-17T04:34:10.879618Z'
            - name: projects/462803083913/secrets/secrets-20200617-043413-fuv6
              replication:
                automatic: {}
              createTime: '2020-06-17T04:34:15.563240Z'
            - name: projects/462803083913/secrets/secrets-20200617-043414-13rq
              replication:
                automatic: {}
              createTime: '2020-06-17T04:34:17.387706Z'
            - name: projects/462803083913/secrets/secrets-20200617-043416-7dgk
              replication:
                automatic: {}
              createTime: '2020-06-17T04:34:19.040976Z'
            - name: projects/462803083913/secrets/secrets-20200617-050133-a220
              replication:
                automatic: {}
              createTime: '2020-06-17T05:01:33.525772Z'
            - name: projects/462803083913/secrets/secrets-20200617-050135-akub
              replication:
                automatic: {}
              createTime: '2020-06-17T05:01:35.223280Z'
            - name: projects/462803083913/secrets/secrets-20200617-050136-z5gl
              replication:
                automatic: {}
              createTime: '2020-06-17T05:01:36.896528Z'
            - name: projects/462803083913/secrets/secrets-20200617-050337-r9h6
              replication:
                automatic: {}
              createTime: '2020-06-17T05:03:39.610513Z'
            - name: projects/462803083913/secrets/secrets-20200617-050339-2st3
              replication:
                automatic: {}
              createTime: '2020-06-17T05:03:42.044569Z'
            - name: projects/462803083913/secrets/secrets-20200617-050339-n832
              replication:
                automatic: {}
              createTime: '2020-06-17T05:03:41.570069Z'
            - name: projects/462803083913/secrets/secrets-20200617-050341-3gj4
              replication:
                automatic: {}
              createTime: '2020-06-17T05:03:43.981448Z'
            - name: projects/462803083913/secrets/secrets-20200617-050341-tk38
              replication:
                automatic: {}
              createTime: '2020-06-17T05:03:44.372621Z'
            - name: projects/462803083913/secrets/secrets-20200617-050344-ymrx
              replication:
                automatic: {}
              createTime: '2020-06-17T05:03:46.510702Z'
            - name: projects/462803083913/secrets/secrets-20200617-050453-s6vy
              replication:
                automatic: {}
              createTime: '2020-06-17T05:04:53.996817Z'
            - name: projects/462803083913/secrets/secrets-20200617-050454-ois1
              replication:
                automatic: {}
              createTime: '2020-06-17T05:04:55.167774Z'
            - name: projects/462803083913/secrets/secrets-20200617-050456-sn4m
              replication:
                automatic: {}
              createTime: '2020-06-17T05:04:56.367742Z'
            - name: projects/462803083913/secrets/secrets-20200617-053450-v6po
              replication:
                automatic: {}
              createTime: '2020-06-17T05:34:51.220672Z'
            - name: projects/462803083913/secrets/secrets-20200617-053452-m3vo
              replication:
                automatic: {}
              createTime: '2020-06-17T05:34:53.131010Z'
            - name: projects/462803083913/secrets/secrets-20200617-053454-pf24
              replication:
                automatic: {}
              createTime: '2020-06-17T05:34:54.910343Z'
            - name: projects/462803083913/secrets/secrets-20200617-053455-gthr
              replication:
                automatic: {}
              createTime: '2020-06-17T05:34:56.028843Z'
            - name: projects/462803083913/secrets/secrets-20200617-053457-t14k
              replication:
                automatic: {}
              createTime: '2020-06-17T05:34:57.797893Z'
            - name: projects/462803083913/secrets/secrets-20200617-053459-av45
              replication:
                automatic: {}
              createTime: '2020-06-17T05:34:59.635059Z'
            - name: projects/462803083913/secrets/secrets-20200617-053542-pz8t
              replication:
                automatic: {}
              createTime: '2020-06-17T05:35:44.424369Z'
            - name: projects/462803083913/secrets/secrets-20200617-053543-f6lc
              replication:
                automatic: {}
              createTime: '2020-06-17T05:35:46.290409Z'
            - name: projects/462803083913/secrets/secrets-20200617-053545-89u0
              replication:
                automatic: {}
              createTime: '2020-06-17T05:35:47.873421Z'
            - name: projects/462803083913/secrets/secrets-20200617-053548-7xsx
              replication:
                automatic: {}
              createTime: '2020-06-17T05:35:51.154022Z'
            - name: projects/462803083913/secrets/secrets-20200617-053550-tbx4
              replication:
                automatic: {}
              createTime: '2020-06-17T05:35:52.835033Z'
            - name: projects/462803083913/secrets/secrets-20200617-053552-hhfg
              replication:
                automatic: {}
              createTime: '2020-06-17T05:35:54.419577Z'
            - name: projects/462803083913/secrets/secrets-20200619-161132-p61j
              replication:
                automatic: {}
              createTime: '2020-06-19T16:11:32.919990Z'
              labels:
                foo: bar
            - name: projects/462803083913/secrets/secrets-20200623-222621-ix1x
              replication:
                automatic: {}
              createTime: '2020-06-23T22:26:21.587782Z'
              labels:
                foo: bar
            - name: projects/462803083913/secrets/secrets-20200730-121109-ut0w
              replication:
                automatic: {}
              createTime: '2020-07-30T12:11:09.532096Z'
            - name: projects/462803083913/secrets/secrets-20200812-201304-04mq
              replication:
                automatic: {}
              createTime: '2020-08-12T20:13:04.518279Z'
              labels:
                foo: bar
            - name: projects/462803083913/secrets/secrets-20200812-201304-r0rg
              replication:
                userManaged:
                  replicas:
                  - location: us-central1
              createTime: '2020-08-12T20:13:08.456842Z'
            - name: projects/462803083913/secrets/$$a-secret1$$
              replication:
                automatic: {}
              createTime: '2020-09-14T21:41:26.567646Z'
            totalSize: 68
          status: 200
    - expect_stdout: |
        ---
        name:                  projects/462803083913/secrets/$$a-secret1$$
        replication.automatic: {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets describe $$a-secret1$$ --format "text(labels,name,replication)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '166'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-09-14T21:41:26.567646Z'
          status: 200
    - expect_stdout: |
        name:                  projects/462803083913/secrets/$$a-secret1$$
        replication.automatic: {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets update $$a-secret1$$ --update-labels="foo=bar"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '166'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-09-14T21:41:26.567646Z'
          status: 200
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json&updateMask=labels
          method: PATCH
          headers: {}
          body:
            json:
              labels:
                foo: bar
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '202'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-09-14T21:41:26.567646Z'
            labels:
              foo: bar
    - expect_stdout: |
        Updated secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets describe $$a-secret1$$ --format "text(labels,name,replication)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '202'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$
            replication:
              automatic: {}
            createTime: '2020-09-14T21:41:26.567646Z'
            labels:
              foo: bar
          status: 200
    - expect_stdout: |
        labels.foo:            bar
        name:                  projects/462803083913/secrets/$$a-secret1$$
        replication.automatic: {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions add $$a-secret1$$ --data-file=secret.data2
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$:addVersion?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YTI=
        return_response:
          headers:
            cache-control: private
            content-length: '205'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-09-14T21:41:30.747735Z'
            state: ENABLED
            replicationStatus:
              automatic: {}
          status: 200
    - expect_stdout: |
        Created version [2] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions access 1 --secret $$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/1:access?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '145'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/1
            payload:
              data: dGhpc2lzc2VjcmV0ZGF0YTE=
          status: 200
    - expect_stdout: thisissecretdata1
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions access 2 --secret $$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2:access?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '145'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            payload:
              data: dGhpc2lzc2VjcmV0ZGF0YTI=
          status: 200
    - expect_stdout: thisissecretdata2
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions access latest --secret $$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/latest:access?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '145'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            payload:
              data: dGhpc2lzc2VjcmV0ZGF0YTI=
          status: 200
    - expect_stdout: thisissecretdata2
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions list $$a-secret1$$ --format "text(name,state)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '517'
            content-type: application/json; charset=UTF-8
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/2
              createTime: '2020-09-14T21:41:30.747735Z'
              state: ENABLED
              replicationStatus:
                automatic: {}
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/1
              createTime: '2020-09-14T21:41:27.073377Z'
              state: ENABLED
              replicationStatus:
                automatic: {}
            totalSize: 2
          status: 200
    - expect_stdout: |
        ---
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
        state: ENABLED
        ---
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/1
        state: ENABLED
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions disable 2 --secret=$$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2:disable?alt=json
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '206'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-09-14T21:41:30.747735Z'
            state: DISABLED
            replicationStatus:
              automatic: {}
          status: 200
    - expect_stdout: |
        Disabled version [2] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions describe 2 --secret=$$a-secret1$$ --format "text(name,state)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '206'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-09-14T21:41:30.747735Z'
            state: DISABLED
            replicationStatus:
              automatic: {}
          status: 200
    - expect_stdout: |
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
        state: DISABLED
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions enable 2 --secret=$$a-secret1$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2:enable?alt=json
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '205'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-09-14T21:41:30.747735Z'
            state: ENABLED
            replicationStatus:
              automatic: {}
          status: 200
    - expect_stdout: |
        Enabled version [2] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions describe 2 --secret=$$a-secret1$$ --format "text(name,state)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '205'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-09-14T21:41:30.747735Z'
            state: ENABLED
            replicationStatus:
              automatic: {}
          status: 200
    - expect_stdout: |
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
        state: ENABLED
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions destroy 2 --secret=$$a-secret1$$
    events:
    - expect_prompt_continue:
        message: You are about to destroy version [2] of the secret [$$a-secret1$$].
          This action cannot be reversed.
        user_input: y
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions/2:destroy?alt=json
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '258'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret1$$/versions/2
            createTime: '2020-09-14T21:41:30.747735Z'
            destroyTime: '2020-09-14T21:41:35.766469339Z'
            state: DESTROYED
            replicationStatus:
              automatic: {}
          status: 200
    - expect_stdout: |
        Destroyed version [2] of the secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions list $$a-secret1$$ --format "text(name,state)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '574'
            content-type: application/json; charset=UTF-8
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/2
              createTime: '2020-09-14T21:41:30.747735Z'
              destroyTime: '2020-09-14T21:41:35.766469339Z'
              state: DESTROYED
              replicationStatus:
                automatic: {}
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/1
              createTime: '2020-09-14T21:41:27.073377Z'
              state: ENABLED
              replicationStatus:
                automatic: {}
            totalSize: 2
          status: 200
    - expect_stdout: |
        ---
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/2
        state: DESTROYED
        ---
        name:  projects/462803083913/secrets/$$a-secret1$$/versions/1
        state: ENABLED
    - expect_exit:
        code: 0
- execute_command:
    command: |
      config set secrets/replication-policy automatic
    events:
    - expect_stderr: |
        Updated property [secrets/replication-policy].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      config set secrets/replication-policy automatic
    events:
    - expect_stderr: |
        Updated property [secrets/replication-policy].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      secrets create $$a-secret2$$ --locations=us-central1
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [locations]: The secrets/replication-policy property
          is "automatic" and not overridden so --locations are not allowed. Please
          remove the --locations flag or set the replication-policy to "user-managed".'
- execute_command:
    command: |
      config set secrets/locations us-central1
    events:
    - expect_stderr: |
        Updated property [secrets/locations].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      secrets create $$a-secret2$$
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [replication-policy]: Cannot create a secret with
          an "automatic" replication policy if the secrets/locations property is set.
          Please either use a "user-managed" replication policy or unset secrets/locations.'
- execute_command:
    command: |
      config set secrets/replication-policy user-managed
    events:
    - expect_stderr: |
        Updated property [secrets/replication-policy].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      secrets create $$a-secret2$$ --data-file=secret.data3
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets?alt=json&secretId=$$a-secret2$$
          method: POST
          headers: {}
          body:
            json:
              replication:
                userManaged:
                  replicas:
                  - location: us-central1
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '257'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-09-14T21:41:39.584297Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$:addVersion?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YTM=
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '296'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret2$$/versions/1
            createTime: '2020-09-14T21:41:40.027341Z'
            state: ENABLED
            replicationStatus:
              userManaged:
                replicas:
                - location: us-central1
    - expect_stdout: |
        Created version [1] of the secret [$$a-secret2$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets describe $$a-secret2$$ --format "text(name,replication,labels)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '257'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-09-14T21:41:39.584297Z'
          status: 200
    - expect_stdout: |
        name:                                         projects/462803083913/secrets/$$a-secret2$$
        replication.userManaged.replicas[0].location: us-central1
    - expect_exit:
        code: 0
- execute_command:
    command: secrets update $$a-secret2$$ --update-labels "foo=bar"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '257'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-09-14T21:41:39.584297Z'
          status: 200
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json&updateMask=labels
          method: PATCH
          headers: {}
          body:
            json:
              labels:
                foo: bar
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '293'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-09-14T21:41:39.584297Z'
            labels:
              foo: bar
    - expect_stdout: |
        Updated secret [$$a-secret2$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets describe $$a-secret2$$ --format "text(name,labels)"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '293'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-09-14T21:41:39.584297Z'
            labels:
              foo: bar
          status: 200
    - expect_stdout: |
        labels.foo: bar
        name:       projects/462803083913/secrets/$$a-secret2$$
    - expect_exit:
        code: 0
- execute_command:
    command: secrets update $$a-secret2$$ --clear-labels
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '293'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-09-14T21:41:39.584297Z'
            labels:
              foo: bar
          status: 200
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json&updateMask=labels
          method: PATCH
          headers: {}
          body:
            json:
              labels: {}
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '257'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret2$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
            createTime: '2020-09-14T21:41:39.584297Z'
    - expect_stdout: |
        Updated secret [$$a-secret2$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets versions list $$a-secret2$$ --format=value(name,state)
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '394'
            content-type: application/json; charset=UTF-8
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret2$$/versions/1
              createTime: '2020-09-14T21:41:40.027341Z'
              state: ENABLED
              replicationStatus:
                userManaged:
                  replicas:
                  - location: us-central1
            totalSize: 1
          status: 200
    - expect_stdout: |
        1	enabled
    - expect_exit:
        code: 0
- execute_command:
    command: secrets delete $$a-secret2$$ -q
    cleanup_for: a-secret2
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '394'
            content-type: application/json; charset=UTF-8
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret2$$/versions/1
              createTime: '2020-09-14T21:41:40.027341Z'
              state: ENABLED
              replicationStatus:
                userManaged:
                  replicas:
                  - location: us-central1
            totalSize: 1
          status: 200
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret2$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
          body: |
            {}
    - expect_stdout: |
        Deleted secret [$$a-secret2$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets delete $$a-secret1$$ -q
    cleanup_for: a-secret1
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '574'
            content-type: application/json; charset=UTF-8
          body:
            versions:
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/2
              createTime: '2020-09-14T21:41:30.747735Z'
              destroyTime: '2020-09-14T21:41:35.766469339Z'
              state: DESTROYED
              replicationStatus:
                automatic: {}
            - name: projects/462803083913/secrets/$$a-secret1$$/versions/1
              createTime: '2020-09-14T21:41:27.073377Z'
              state: ENABLED
              replicationStatus:
                automatic: {}
            totalSize: 2
          status: 200
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret1$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
          body: |
            {}
    - expect_stdout: |
        Deleted secret [$$a-secret1$$].
    - expect_exit:
        code: 0
- write_file:
    path: automatic-with-cmek.yaml
    contents: |
      automatic:
        customerManagedEncryption:
          kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
- execute_command:
    command: secrets create $$a-secret3$$ --replication-policy-file=automatic-with-cmek.yaml
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets?alt=json&secretId=$$a-secret3$$
          method: POST
          headers: {}
          body:
            json:
              replication:
                automatic:
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '359'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret3$$
            replication:
              automatic:
                customerManagedEncryption:
                  kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:46.624309Z'
    - expect_stdout: |
        Created secret [$$a-secret3$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets replication get $$a-secret3$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret3$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '359'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret3$$
            replication:
              automatic:
                customerManagedEncryption:
                  kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:46.624309Z'
    - expect_stdout: |
        automatic:
          customerManagedEncryption:
            kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
    - expect_exit:
        code: 0
- execute_command:
    command: secrets replication update $$a-secret3$$ --remove-cmek
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret3$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '359'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret3$$
            replication:
              automatic:
                customerManagedEncryption:
                  kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:46.624309Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret3$$?alt=json&updateMask=replication
          method: PATCH
          headers: {}
          body:
            json:
              replication:
                automatic: {}
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '166'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret3$$
            replication:
              automatic: {}
            createTime: '2020-09-14T21:41:46.624309Z'
    - expect_stdout: |
        Updated replication for secret [$$a-secret3$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets replication update $$a-secret3$$ --set-kms-key projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret3$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '166'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret3$$
            replication:
              automatic: {}
            createTime: '2020-09-14T21:41:46.624309Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret3$$?alt=json&updateMask=replication
          method: PATCH
          headers: {}
          body:
            json:
              replication:
                automatic:
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '359'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret3$$
            replication:
              automatic:
                customerManagedEncryption:
                  kmsKeyName: projects/cloud-sdk-integration-testing/locations/global/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:46.624309Z'
    - expect_stdout: |
        Updated replication for secret [$$a-secret3$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets delete $$a-secret3$$ -q
    cleanup_for: a-secret3
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret3$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
          body: |
            {}
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret3$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
          body: |
            {}
    - expect_stdout: |
        Deleted secret [$$a-secret3$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets create $$a-secret4$$ --replication-policy=user-managed --locations=us-east1,us-central1
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets?alt=json&secretId=$$a-secret4$$
          method: POST
          headers: {}
          body:
            json:
              replication:
                userManaged:
                  replicas:
                  - location: us-east1
                  - location: us-central1
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '311'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-east1
                - location: us-central1
            createTime: '2020-09-14T21:41:51.521162Z'
    - expect_stdout: |
        Created secret [$$a-secret4$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets replication get $$a-secret4$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '311'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-east1
                - location: us-central1
            createTime: '2020-09-14T21:41:51.521162Z'
    - expect_stdout: |
        userManaged:
          replicas:
          - location: us-east1
          - location: us-central1
    - expect_exit:
        code: 0
- write_file:
    path: user-managed-with-cmek.json
    contents: |
      {
        "userManaged": {
          "replicas": [
            {
              "customerManagedEncryption": {
                "kmsKeyName": "projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key"
              },
              "location": "us-central1"
            },
            {
              "customerManagedEncryption": {
                "kmsKeyName": "projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key"
              },
              "location": "us-east1"
            }
          ]
        }
      }
- execute_command:
    command: secrets replication set $$a-secret4$$ --replication-policy-file=user-managed-with-cmek.json
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '311'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-east1
                - location: us-central1
            createTime: '2020-09-14T21:41:51.521162Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json&updateMask=replication
          method: PATCH
          headers: {}
          body:
            json:
              replication:
                userManaged:
                  replicas:
                  - customerManagedEncryption:
                      kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                    location: us-central1
                  - customerManagedEncryption:
                      kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                    location: us-east1
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '720'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                - location: us-east1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:51.521162Z'
    - expect_stdout: |
        Updated replication for secret [$$a-secret4$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets replication update $$a-secret4$$ --set-kms-key=projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
      --location=us-east1
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '720'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                - location: us-east1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:51.521162Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json&updateMask=replication
          method: PATCH
          headers: {}
          body:
            json:
              replication:
                userManaged:
                  replicas:
                  - customerManagedEncryption:
                      kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                    location: us-central1
                  - customerManagedEncryption:
                      kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                    location: us-east1
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '720'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                - location: us-east1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:51.521162Z'
    - expect_stdout: |
        Updated replication for secret [$$a-secret4$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets replication get $$a-secret4$$
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '720'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                - location: us-east1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:51.521162Z'
    - expect_stdout: |
        userManaged:
          replicas:
          - customerManagedEncryption:
              kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            location: us-central1
          - customerManagedEncryption:
              kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            location: us-east1
    - expect_exit:
        code: 0
- execute_command:
    command: secrets replication update $$a-secret4$$ --remove-cmek
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '720'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
                - location: us-east1
                  customerManagedEncryption:
                    kmsKeyName: projects/cloud-sdk-integration-testing/locations/us-east1/keyRings/do-not-delete-secret-manager-cmek/cryptoKeys/cmek-key
            createTime: '2020-09-14T21:41:51.521162Z'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json&updateMask=replication
          method: PATCH
          headers: {}
          body:
            json:
              replication:
                userManaged:
                  replicas:
                  - location: us-central1
                  - location: us-east1
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '311'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/462803083913/secrets/$$a-secret4$$
            replication:
              userManaged:
                replicas:
                - location: us-central1
                - location: us-east1
            createTime: '2020-09-14T21:41:51.521162Z'
    - expect_stdout: |
        Updated replication for secret [$$a-secret4$$].
    - expect_exit:
        code: 0
- execute_command:
    command: secrets delete $$a-secret4$$ -q
    cleanup_for: a-secret4
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$/versions?alt=json&pageSize=0
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
          body: |
            {}
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/cloud-sdk-integration-testing/secrets/$$a-secret4$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
          body: |
            {}
    - expect_stdout: |
        Deleted secret [$$a-secret4$$].
    - expect_exit:
        code: 0
