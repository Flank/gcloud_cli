filters:
  skip:
    reason: Likely GCR related
    bug: b/163030401
title: Execute a deployment to a GKE cluster
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- set_property: container/use_application_default_credentials True
- execute:
  - command: storage buckets create $$bucket$$
  - stderr: |
      Created bucket [$$bucket$$].
- execute:
  - command: container clusters create $$cluster$$ --zone=$$location$$ -q --num-nodes=1
      --timeout=1080 --no-enable-basic-auth --no-issue-client-certificate --verbosity="none"
      --disk-size=10GB
  - stderr: |
      This will enable the autorepair feature for nodes. Please see https://cloud.google.com/kubernetes-engine/docs/node-auto-repair for more information on node autorepairs.
  - progress_tracker:
    - message: Creating cluster $$cluster$$ in $$location$$
    - status: SUCCESS
  - write_file: ~/.kube/config
  - write_file: ~/.kube/config
  - stderr: |
      Created [https://container.googleapis.com/v1alpha1/projects/$$project$$/zones/$$location$$/clusters/$$cluster$$].
      To inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/$$location$$/$$cluster$$?project=$$project$$
      kubeconfig entry generated for $$cluster$$.
  - stdout: .*$$cluster$$\s+$$location$$.*RUNNING.*$
- execute:
  - command: builds deploy gke --cluster=$$cluster$$ --location=$$location$$ --image=gcr.io/google-containers/nginx
      --app-name=my-nginx --app-version=1.0.0 --namespace=my-namespace --expose=80
      --gcs-staging-dir=gs://$$bucket$$/deploy --timeout=4m -q
  - stderr: |-
      Starting Cloud Build to build and deploy to the target Google Kubernetes Engine cluster...

      Created \[https://cloudbuild.googleapis.com/.*$$project$$/.+\].
      Logs are available at \[https://console.cloud.google.com/.+\].
      $
  - stdout: |-
      .*DONE
      .*
      $
  - stderr: |-
      Successfully deployed to your Google Kubernetes Engine cluster.

      You can find the configuration files of the deployed Kubernetes objects stored at gs://$$bucket$$/deploy/config/.*/expanded or by visiting https://console.cloud.google.com/storage/browser/$$bucket$$/deploy/config/.*/expanded/.

      You can also find suggested base Kubernetes configuration files at gs://$$bucket$$/deploy/config/.*/suggested or by visiting https://console.cloud.google.com/storage/browser/$$bucket$$/deploy/config/.*/suggested/.
      $
- execute:
  - command: storage delete gs://$$bucket$$ --recursive
  - stderr: |
      WARNING: Deleting a bucket is irreversible and makes that bucket name available for others to claim.
  - prompt:
    - message: |-
        This command will delete the following buckets:
          $$bucket$$
    - input: y
  - prompt:
    - input: y
  - progress_bar:
    - message: Deleting Files
  - stderr: |2-

      Deleted \[.*\] files.
      Deleted bucket \[gs://$$bucket$$\].
      $
- execute:
  - command: container clusters delete $$cluster$$ --zone=$$location$$ --async -q
actions:
- define_reference:
    reference: project
    value: cloud-sdk-integration-testing

- define_reference:
    reference: location
    value: us-central1-b

- generate_resource_id:
    reference: cluster
    prefix: configure-gke

- generate_resource_id:
    reference: bucket
    prefix: builds-deploy-gke

- set_property:
    # This is needed to create a cluster
    container/use_application_default_credentials: true

- execute_command:
    command: storage buckets create $$bucket$$
    validation_only: true
    events:
    - expect_stderr: |
        Created bucket [$$bucket$$].
    - expect_exit:
        code: 0

- execute_command:
    command: container clusters create $$cluster$$ --zone=$$location$$ -q --num-nodes=1
      --timeout=1080 --no-enable-basic-auth --no-issue-client-certificate --verbosity="none"
      --disk-size=10GB
    validation_only: true
    events:
    - expect_progress_tracker:
        message: Creating cluster $$cluster$$ in $$location$$
        status: SUCCESS
    - expect_file_written:
        path: ~/.kube/config
        contents:
          matches: '.*clusters: \[\].*'
        is_private: true
    - expect_file_written:
        path: ~/.kube/config
        contents:
          matches: '.*name: gke_$$project$$_$$location$$_$$cluster$$.*'
        is_private: true
    - expect_stderr: |
        Created [https://container.googleapis.com/v1alpha1/projects/$$project$$/zones/$$location$$/clusters/$$cluster$$].
        To inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/$$location$$/$$cluster$$?project=$$project$$
        kubeconfig entry generated for $$cluster$$.
    - expect_stdout:
        matches: .*$$cluster$$\s+$$location$$.*RUNNING.*
    - expect_exit:
        code: 0

- execute_command:
    command: builds deploy gke --cluster=$$cluster$$ --location=$$location$$ --image=gcr.io/google-containers/nginx
      --app-name=my-nginx --app-version=1.0.0 --namespace=my-namespace --expose=80
      --gcs-staging-dir=gs://$$bucket$$/deploy --timeout=4m -q
    validate_remote_api_calls: false
    events:
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '713'
            content-type: application/json; charset=UTF-8
            etag: CAE=
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AEnB2UqQTemSJMWPFK2kCeOePjRSOVBNSS6QgpF74aR7UD49LXBXwmY6GGjGpPBpT61zIy6a5H46ZoYO5jsMKhkSVYp_yxPxuw
          body:
            kind: storage#bucket
            id: $$bucket$$
            selfLink: https://storage.googleapis.com/storage/v1/b/$$bucket$$
            projectNumber: '601677740'
            name: $$bucket$$
            metageneration: '1'
            location: US
            versioning:
              enabled: false
            storageClass: STANDARD
            billing:
              requesterPays: false
            etag: CAE=
            iamConfiguration:
              bucketPolicyOnly:
                enabled: false
              uniformBucketLevelAccess:
                enabled: false
            locationType: multi-region
            timeCreated: '2019-10-30T16:30:15.893Z'
            updated: '2019-10-30T16:30:15.893Z'
    - api_call:
        expect_request:
          uri: https://cloudbuild.googleapis.com/v1/projects/$$project$$/builds?alt=json
          method: POST
          headers: {}
          body:
            json:
              artifacts:
                objects:
                  location: gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded
                  paths:
                  - output/expanded/*
              options:
                substitutionOption: ALLOW_LOOSE
              steps:
              - args:
                - prepare
                - --filename=$_K8S_YAML_PATH
                - --image=gcr.io/google-containers/nginx
                - --app=$_APP_NAME
                - --version=1.0.0
                - --namespace=$_K8S_NAMESPACE
                - --output=output
                - --annotation=gcb-build-id=$BUILD_ID,$_K8S_ANNOTATIONS
                - --expose=$_EXPOSE_PORT
                - --create-application-cr
                - --links="Build details=https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
                id: Prepare deploy
                name: gcr.io/cloud-builders/gke-deploy
              - args:
                - -c
                - |2

                  set -e

                  if [[ "$_OUTPUT_BUCKET_PATH" ]]; then
                    gsutil -m cp output/expanded/* gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded
                    echo "Copied expanded configs to gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded"
                    echo "View expanded configs at https://console.cloud.google.com/storage/browser/$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded/"
                    if [[ ! "$_K8S_YAML_PATH" ]]; then
                      gsutil -m cp output/suggested/* gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested
                      echo "Copied suggested base configs to gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested"
                      echo "View suggested base configs at https://console.cloud.google.com/storage/browser/$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested/"
                    fi
                  fi
                entrypoint: bash
                id: Save generated Kubernetes configs
                name: gcr.io/cloud-builders/gsutil
              - args:
                - apply
                - --filename=output/expanded
                - --namespace=$_K8S_NAMESPACE
                - --cluster=$_GKE_CLUSTER
                - --location=$_GKE_LOCATION
                - --timeout=24h
                id: Apply deploy
                name: gcr.io/cloud-builders/gke-deploy
              substitutions:
                _APP_NAME: my-nginx
                _DOCKERFILE_PATH: Dockerfile
                _EXPOSE_PORT: '80'
                _GKE_CLUSTER: $$cluster$$
                _GKE_LOCATION: $$location$$
                _K8S_ANNOTATIONS: ''
                _K8S_NAMESPACE: my-namespace
                _K8S_YAML_PATH: ''
                _OUTPUT_BUCKET_PATH: $$bucket$$/deploy/config
              tags:
              - gcp-cloud-build-deploy
              - gcp-cloud-build-deploy-gcloud
              - my-nginx
              timeout: 240s
        return_response:
          headers:
            cache-control: private
            content-length: '3233'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: operations/build/cbd-test/YTE4NmI4OWMtNTNiNy00N2FkLTk0MGEtY2MyOGNiM2I0YjAw
            metadata:
              '@type': type.googleapis.com/google.devtools.cloudbuild.v1.BuildOperationMetadata
              build:
                artifacts:
                  objects:
                    location: gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded
                    paths:
                    - output/expanded/*
                id: a186b89c-53b7-47ad-940a-cc28cb3b4b00
                status: QUEUED
                createTime: '2019-10-30T16:30:16.833560851Z'
                steps:
                - name: gcr.io/cloud-builders/gke-deploy
                  args:
                  - prepare
                  - --filename=
                  - --image=gcr.io/google-containers/nginx
                  - --app=my-nginx
                  - --version=1.0.0
                  - --namespace=my-namespace
                  - --output=output
                  - --annotation=gcb-build-id=a186b89c-53b7-47ad-940a-cc28cb3b4b00,
                  - --expose=80
                  - --create-application-cr
                  - --links="Build details=https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
                  id: Prepare deploy
                - name: gcr.io/cloud-builders/gsutil
                  args:
                  - -c
                  - |2

                    set -e

                    if [[ "$_OUTPUT_BUCKET_PATH" ]]; then
                      gsutil -m cp output/expanded/* gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded
                      echo "Copied expanded configs to gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded"
                      echo "View expanded configs at https://console.cloud.google.com/storage/browser/$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded/"
                      if [[ ! "$_K8S_YAML_PATH" ]]; then
                        gsutil -m cp output/suggested/* gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested
                        echo "Copied suggested base configs to gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested"
                        echo "View suggested base configs at https://console.cloud.google.com/storage/browser/$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested/"
                      fi
                    fi
                  id: Save generated Kubernetes configs
                  entrypoint: bash
                - name: gcr.io/cloud-builders/gke-deploy
                  args:
                  - apply
                  - --filename=output/expanded
                  - --namespace=my-namespace
                  - --cluster=$$cluster$$
                  - --location=$$location$$
                  - --timeout=24h
                  id: Apply deploy
                timeout: 240s
                projectId: $$project$$
                logsBucket: gs://601677740.cloudbuild-logs.googleusercontent.com
                options:
                  substitutionOption: ALLOW_LOOSE
                  logging: LEGACY
                logUrl: https://console.cloud.google.com/gcr/builds/a186b89c-53b7-47ad-940a-cc28cb3b4b00?project=601677740
                substitutions:
                  _DOCKERFILE_PATH: Dockerfile
                  _K8S_NAMESPACE: my-namespace
                  _K8S_YAML_PATH: ''
                  _EXPOSE_PORT: '80'
                  _K8S_ANNOTATIONS: ''
                  _GKE_CLUSTER: $$cluster$$
                  _OUTPUT_BUCKET_PATH: $$bucket$$/deploy/config
                  _APP_NAME: my-nginx
                  _GKE_LOCATION: $$location$$
                tags:
                - gcp-cloud-build-deploy
                - gcp-cloud-build-deploy-gcloud
                - my-nginx
        poll_operation: true
    - expect_stderr:
        matches: |
          Starting Cloud Build to build and deploy to the target Google Kubernetes Engine cluster...

          Created \[https://cloudbuild.googleapis.com/.*$$project$$/.+\].
          Logs are available at \[https://console.cloud.google.com/.+\].

    - api_call:
        expect_request:
          uri: https://cloudbuild.googleapis.com/v1/projects/$$project$$/builds/a186b89c-53b7-47ad-940a-cc28cb3b4b00?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            artifacts:
              objects:
                location: gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded
                paths:
                - output/expanded/*
            createTime: '2019-10-30T16:30:16.833560851Z'
            substitutions:
              _DOCKERFILE_PATH: Dockerfile
              _APP_NAME: my-nginx
              _K8S_YAML_PATH: ''
              _K8S_NAMESPACE: my-namespace
              _EXPOSE_PORT: '80'
              _GKE_CLUSTER: $$cluster$$
              _GKE_LOCATION: $$location$$
              _OUTPUT_BUCKET_PATH: $$bucket$$/deploy
            steps:
            - args:
              - prepare
              - --filename=$_K8S_YAML_PATH
              - --image=gcr.io/google-containers/nginx
              - --app=$_APP_NAME
              - --version=1.0.0
              - --namespace=$_K8S_NAMESPACE
              - --output=output
              - --annotation=gcb-build-id=$BUILD_ID
              - --expose=$_EXPOSE_PORT
              - --create-application-cr
              - --links="Build details=https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
              id: Prepare deploy
              name: gcr.io/cloud-builders/gke-deploy
            - args:
              - -c
              - |2

                set -e

                if [[ "$_OUTPUT_BUCKET_PATH" ]]; then
                  gsutil -m cp output/expanded/* gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded
                  echo "Copied expanded configs to gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded"
                  echo "View expanded configs at https://console.cloud.google.com/storage/browser/$_OUTPUT_BUCKET_PATH/$BUILD_ID/expanded/"
                  if [[ ! "$_K8S_YAML_PATH" ]]; then
                    gsutil -m cp output/suggested/* gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested
                    echo "Copied suggested base configs to gs://$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested"
                    echo "View suggested base configs at https://console.cloud.google.com/storage/browser/$_OUTPUT_BUCKET_PATH/$BUILD_ID/suggested/"
                  fi
                fi
              entrypoint: bash
              id: Save generated Kubernetes configs
              name: gcr.io/cloud-builders/gsutil
            - args:
              - apply
              - --filename=output/expanded
              - --namespace=$_K8S_NAMESPACE
              - --cluster=$_GKE_CLUSTER
              - --location=$_GKE_LOCATION
              - --timeout=24h
              id: Apply deploy
              name: gcr.io/cloud-builders/gke-deploy
            logUrl: https://console.cloud.google.com/gcr/builds/a186b89c-53b7-47ad-940a-cc28cb3b4b00?project=601677740
            timeout: 240s
            projectId: $$project$$
            status: SUCCESS
            id: a186b89c-53b7-47ad-940a-cc28cb3b4b00
            logsBucket: gs://601677740.cloudbuild-logs.googleusercontent.com
            options:
              logging: LEGACY
            tags:
            - gcp-cloud-build-deploy
            - gcp-cloud-build-deploy-gcloud
            - my-nginx
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/601677740.cloudbuild-logs.googleusercontent.com/log-a186b89c-53b7-47ad-940a-cc28cb3b4b00.txt
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            DONE
    - expect_stdout:
        matches: |
          .*DONE
          .*
    - expect_stderr:
        matches: |
          Successfully deployed to your Google Kubernetes Engine cluster.

          You can find the configuration files of the deployed Kubernetes objects stored at gs://$$bucket$$/deploy/config/.*/expanded or by visiting https://console.cloud.google.com/storage/browser/$$bucket$$/deploy/config/.*/expanded/.

          You can also find suggested base Kubernetes configuration files at gs://$$bucket$$/deploy/config/.*/suggested or by visiting https://console.cloud.google.com/storage/browser/$$bucket$$/deploy/config/.*/suggested/.
    - expect_exit:
        code: 0

- execute_command:
    command: storage delete gs://$$bucket$$ --recursive
    validation_only: true
    cleanup_for: bucket
    events:
    - expect_stderr: |
        WARNING: Deleting a bucket is irreversible and makes that bucket name available for others to claim.
    - expect_prompt_continue:
        message: |-
          This command will delete the following buckets:
            $$bucket$$
        user_input: y
    - expect_prompt_continue:
        user_input: y
    - expect_progress_bar:
        message: Deleting Files
    - expect_stderr:
        matches: |2

          Deleted \[.*\] files.
          Deleted bucket \[gs://$$bucket$$\].
    - expect_exit:
        code: 0

- execute_command:
    command: container clusters delete $$cluster$$ --zone=$$location$$ --async -q
    validation_only: true
    cleanup_for: cluster
    events:
    - expect_exit:
        code: 0
