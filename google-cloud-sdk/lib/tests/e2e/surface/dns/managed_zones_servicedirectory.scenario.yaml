title: Create a managed zone with a service directory config
release_tracks: [BETA]
summary:
# This summary is generated automatically on update and should not be edited.
- set_property: core/project cloud-sdk-integration-testing
- execute:
  - command: service-directory namespaces create $$namespace-name$$ --location us-east1
  - stderr: |
      Created namespace [$$namespace-name$$].
- execute:
  - command: dns managed-zones create $$zone$$ --dns-name $$zone$$.com --description
      ZONE! --visibility private --networks default --service-directory-namespace
      $$namespace-url-prefix$$/$$namespace-name$$
  - stderr: |
      Created [https://$$dns-url$$/projects/cloud-sdk-integration-testing/managedZones/$$zone$$].
- execute:
  - command: dns managed-zones describe $$zone$$ --format 'text(name,description)'
  - stdout: |
      description: ZONE!
      name:        $$zone$$
- execute:
  - command: dns managed-zones delete $$zone$$
  - stderr: |
      Deleted [https://$$dns-url$$/projects/cloud-sdk-integration-testing/managedZones/$$zone$$].
- execute:
  - command: |
      service-directory namespaces delete $$namespace-name$$ --location us-east1
  - stderr: |
      Deleted namespace [$$namespace-name$$].

actions:

- set_property:
    core/project: cloud-sdk-integration-testing

- generate_resource_id:
    reference: zone
    prefix: managed-zones

- generate_resource_id:
    reference: namespace-name
    prefix: managed-zones-test-namespace

- define_reference:
    reference: dns-url
    track_values:
      ALPHA: dns.googleapis.com/dns/v1alpha2
      BETA: dns.googleapis.com/dns/v1beta2

- define_reference:
    reference: compute-url
    value: compute.googleapis.com/compute/v1

- define_reference:
    reference: sd-url
    value: servicedirectory.googleapis.com/v1beta1

- define_reference:
    reference: namespace-url-prefix
    value: https://servicedirectory.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/namespaces

- execute_command:
    command: service-directory namespaces create $$namespace-name$$ --location us-east1
    events:
    - api_call:
        expect_request:
          uri: https://$$sd-url$$/projects/cloud-sdk-integration-testing/locations/us-east1/namespaces?alt=json&namespaceId=$$namespace-name$$
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '135'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/namespaces/$$namespace-name$$
    - expect_stderr: |
        Created namespace [$$namespace-name$$].
    - expect_exit:
        code: 0

- execute_command:
    command: dns managed-zones create $$zone$$ --dns-name $$zone$$.com --description
      ZONE! --visibility private --networks default --service-directory-namespace
      $$namespace-url-prefix$$/$$namespace-name$$
    events:
    - api_call:
        expect_request:
          uri: https://$$dns-url$$/projects/cloud-sdk-integration-testing/managedZones?alt=json
          method: POST
          headers: {}
          body:
            json:
              description: ZONE!
              dnsName: $$zone$$.com.
              name: $$zone$$
              privateVisibilityConfig:
                networks:
                - networkUrl: https://$$compute-url$$/projects/cloud-sdk-integration-testing/global/networks/default
              serviceDirectoryConfig:
                namespace:
                  namespaceUrl: $$namespace-url-prefix$$/$$namespace-name$$
              visibility: private
        return_response:
          headers:
            cache-control: private
            content-length: '1011'
            content-type: application/json; charset=UTF-8
            etag: 0062a7730fe1370800000170b1ddf80b
            status: '200'
          body:
            name: $$zone$$
            dnsName: $$zone$$.com.
            description: ZONE!
            id: '27768660347139848'
            nameServers:
            - ns-gcp-private.googledomains.com.
            creationTime: '2020-03-06T22:01:19.115Z'
            visibility: private
            privateVisibilityConfig:
              networks:
              - networkUrl: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/global/networks/default
                kind: dns#managedZonePrivateVisibilityConfigNetwork
              kind: dns#managedZonePrivateVisibilityConfig
            serviceDirectoryConfig:
              namespace:
                namespaceUrl: $$namespace-url-prefix$$/$$namespace-name$$
                kind: dns#managedZoneServiceDirectoryConfigNamespace
              kind: dns#managedZoneServiceDirectoryConfig
            kind: dns#managedZone
    - expect_stderr: |
        Created [https://$$dns-url$$/projects/cloud-sdk-integration-testing/managedZones/$$zone$$].
    - expect_exit:
        code: 0

- execute_command:
    command: dns managed-zones describe $$zone$$ --format 'text(name,description)'
    events:
    - api_call:
        expect_request:
          uri: https://$$dns-url$$/projects/cloud-sdk-integration-testing/managedZones/$$zone$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '1011'
            content-type: application/json; charset=UTF-8
            etag: 0062a7730fe1370800000170b1ddf80b
            status: '200'
          body:
            name: $$zone$$
            dnsName: $$zone$$.com.
            description: ZONE!
            id: '27768660347139848'
            nameServers:
            - ns-gcp-private.googledomains.com.
            creationTime: '2020-03-06T22:01:19.115Z'
            visibility: private
            privateVisibilityConfig:
              networks:
              - networkUrl: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/global/networks/default
                kind: dns#managedZonePrivateVisibilityConfigNetwork
              kind: dns#managedZonePrivateVisibilityConfig
            serviceDirectoryConfig:
              namespace:
                namespaceUrl: $$namespace-url-prefix$$/$$namespace-name$$
                kind: dns#managedZoneServiceDirectoryConfigNamespace
              kind: dns#managedZoneServiceDirectoryConfig
            kind: dns#managedZone
    - expect_stdout: |
        description: ZONE!
        name:        $$zone$$
    - expect_exit:
        code: 0

- execute_command:
    command: dns managed-zones delete $$zone$$
    cleanup_for: zone
    events:
    - api_call:
        expect_request:
          uri: https://$$dns-url$$/projects/cloud-sdk-integration-testing/managedZones/$$zone$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted [https://$$dns-url$$/projects/cloud-sdk-integration-testing/managedZones/$$zone$$].
    - expect_exit:
        code: 0

- execute_command:
    command: service-directory namespaces delete $$namespace-name$$ --location us-east1
    cleanup_for: namespace-name
    events:
    - api_call:
        expect_request:
          uri: https://$$sd-url$$/projects/cloud-sdk-integration-testing/locations/us-east1/namespaces/$$namespace-name$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted namespace [$$namespace-name$$].
    - expect_exit:
        code: 0
