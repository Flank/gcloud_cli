filters:
  skip:
    reason: different operation IDs for the same operation
    bug: b/163053392
title: Create, describe, list, and delete a composite index
release_tracks: [GA]
summary:
# This summary is generated automatically on update and should not be edited.
- set_property: core/project das-fs-us-c-gcloud
- execute:
  - command: firestore indexes composite create --collection-group $$my-collection-group$$
      --field-config field-path=tags,array-config=contains --field-config field-path=user_id,order=descending
      --field-config field-path=timestamp,order=descending
  - stderr: |
      Create request issued
  - progress_tracker:
    - message: Waiting for operation [$$operation$$] to complete
    - status: SUCCESS
  - stderr: |
      Created index [$$my-index$$].
- execute:
  - command: firestore indexes composite list --filter=COLLECTION_GROUP:$$my-collection-group$$
  - stdout: |
      +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
      |     NAME     |      COLLECTION_GROUP      | QUERY_SCOPE | STATE | FIELD_PATHS |   ORDER    | ARRAY_CONFIG |
      +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
      | $$my-index$$ | $$my-collection-group$$ | COLLECTION  | READY | tags        |            | CONTAINS     |
      |              |                            |             |       | user_id     | DESCENDING |              |
      |              |                            |             |       | timestamp   | DESCENDING |              |
      +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
- execute:
  - command: firestore indexes composite describe $$my-index$$
  - stdout: |
      +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
      |     NAME     |      COLLECTION_GROUP      | QUERY_SCOPE | STATE | FIELD_PATHS |   ORDER    | ARRAY_CONFIG |
      +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
      | $$my-index$$ | $$my-collection-group$$ | COLLECTION  | READY | tags        |            | CONTAINS     |
      |              |                            |             |       | user_id     | DESCENDING |              |
      |              |                            |             |       | timestamp   | DESCENDING |              |
      +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
- execute:
  - command: firestore indexes composite delete $$my-index$$
  - prompt:
    - message: You are about to delete composite index [$$my-index$$]
    - input: y
  - stderr: |
      Deleted composite index [$$my-index$$].
actions:
- set_property:
    # Cloud Datastore and Cloud Firestore indexes can't coexist in the same project, so we have to
    # use this one as opposed to the usual cloud-sdk-integration-tests
    core/project: das-fs-us-c-gcloud
- generate_resource_id:
    # Writing e2e tests for composite indexes is tricky because we have no control over what the
    # resource ID of the index is - it gets assigned by the server. So instead of creating a
    # unique index ID, we generate a unique collection group under which the index can be created.
    # This prevents overlapping test invocations from interfering with each other. Note that this
    # test doesn't actually create or delete a collection group; it just uses the generated name as
    # a workspace of sorts. (Thankfully this works even if there's no data in that collection
    # group!)
    reference: my-collection-group
    prefix: group
- execute_command:
    command: firestore indexes composite create --collection-group $$my-collection-group$$
      --field-config field-path=tags,array-config=contains --field-config field-path=user_id,order=descending
      --field-config field-path=timestamp,order=descending
    events:
    - api_call:
        expect_request:
          uri: https://firestore.googleapis.com/v1/projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/$$my-collection-group$$/indexes?alt=json
          method: POST
          headers: {}
          body:
            json:
              fields:
              - arrayConfig: CONTAINS
                fieldPath: tags
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              queryScope: COLLECTION
        expect_response:
          extract_references:
          - field: metadata.index
            reference: my-index
            modifiers:
              basename: true
          - field: name
            reference: operation
          - field: name
            reference: operation-basename
            modifiers:
              basename: true
          body:
            json:
              metadata:
                state: INITIALIZING
        return_response:
          headers:
            cache-control: private
            content-length: '501'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/das-fs-us-c-gcloud/databases/(default)/operations/S1lwc0lqTGdBQ0lDDCoDIGQ0OTk1MTNmN2VlOC1lNDZhLTY0NzQtOTY1ZC02N2IwMTA0NSQadGx1YWZlZAcSMXJoLXJleGVkbmktbmltZGERClIS
            metadata:
              '@type': type.googleapis.com/google.firestore.admin.v1.IndexOperationMetadata
              startTime: '2018-12-06T09:58:35.759Z'
              index: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/$$my-collection-group$$/indexes/CICAgLjIspYK
              state: INITIALIZING
        # This is necessary to return the final index object in the `response` field of the final
        # operation response (as seen below).
        # TODO(b/128831010) Use `poll_operation: true` once bug is fixed.
        poll_operation: false
    - expect_stderr: |
        Create request issued
    - api_call:
        expect_request:
          uri: https://firestore.googleapis.com/v1/$$operation$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '1203'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/das-fs-us-c-gcloud/databases/(default)/operations/S1lwc0lqTGdBQ0lDDCoDIGQ0OTk1MTNmN2VlOC1lNDZhLTY0NzQtOTY1ZC02N2IwMTA0NSQadGx1YWZlZAcSMXJoLXJleGVkbmktbmltZGERClIS
            metadata:
              '@type': type.googleapis.com/google.firestore.admin.v1.IndexOperationMetadata
              startTime: '2019-03-18T15:03:48Z'
              endTime: '2019-03-18T15:03:51.596919Z'
              index: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/$$my-collection-group$$/indexes/CICAgLjIspYK
              state: SUCCESSFUL
              progressDocuments: {}
            done: true
            response:
              '@type': type.googleapis.com/google.firestore.admin.v1.Index
              name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/$$my-collection-group$$/indexes/CICAgLjIspYK
              queryScope: COLLECTION
              fields:
              - fieldPath: tags
                arrayConfig: CONTAINS
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              - fieldPath: __name__
                order: DESCENDING
              state: READY
        poll_operation: false
        repeatable: true
    - expect_progress_tracker:
        message: Waiting for operation [$$operation$$] to complete
        status: SUCCESS
    - expect_stderr: |
        Created index [$$my-index$$].
    - expect_exit:
        code: 0
- execute_command:
    command: firestore indexes composite list --filter=COLLECTION_GROUP:$$my-collection-group$$
    events:
    - api_call:
        expect_request:
          uri: https://firestore.googleapis.com/v1/projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/-/indexes?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '4068'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            indexes:
            - name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/group-20181206-094908-n7tk/indexes/CICAgPjChIAK
              queryScope: COLLECTION
              fields:
              - fieldPath: tags
                arrayConfig: CONTAINS
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              - fieldPath: __name__
                order: DESCENDING
              state: READY
            - name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/group-20181206-093123-53xs/indexes/CICAgPig2YMK
              queryScope: COLLECTION
              fields:
              - fieldPath: tags
                arrayConfig: CONTAINS
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              - fieldPath: __name__
                order: DESCENDING
              state: READY
            - name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/group-20181206-093739-jmnv/indexes/CICAgLjIpIcK
              queryScope: COLLECTION
              fields:
              - fieldPath: tags
                arrayConfig: CONTAINS
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              - fieldPath: __name__
                order: DESCENDING
              state: READY
            - name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/group-20181206-092154-hz7w/indexes/CICAgNirtJAK
              queryScope: COLLECTION
              fields:
              - fieldPath: tags
                arrayConfig: CONTAINS
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              - fieldPath: __name__
                order: DESCENDING
              state: READY
            - name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/group-20181206-095041-u99j/indexes/CICAgNjp5ZMK
              queryScope: COLLECTION
              fields:
              - fieldPath: tags
                arrayConfig: CONTAINS
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              - fieldPath: __name__
                order: DESCENDING
              state: READY
            - name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/$$my-collection-group$$/indexes/CICAgLjIspYK
              queryScope: COLLECTION
              fields:
              - fieldPath: tags
                arrayConfig: CONTAINS
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              - fieldPath: __name__
                order: DESCENDING
              state: READY
            - name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/group-20181206-091517-oj1q/indexes/CICAgLix4JsK
              queryScope: COLLECTION
              fields:
              - fieldPath: tags
                arrayConfig: CONTAINS
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              - fieldPath: __name__
                order: DESCENDING
              state: READY
    - expect_stdout: |
        +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
        |     NAME     |      COLLECTION_GROUP      | QUERY_SCOPE | STATE | FIELD_PATHS |   ORDER    | ARRAY_CONFIG |
        +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
        | $$my-index$$ | $$my-collection-group$$ | COLLECTION  | READY | tags        |            | CONTAINS     |
        |              |                            |             |       | user_id     | DESCENDING |              |
        |              |                            |             |       | timestamp   | DESCENDING |              |
        +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
    - expect_exit:
        code: 0
- execute_command:
    command: firestore indexes composite describe $$my-index$$
    events:
    - api_call:
        expect_request:
          uri: https://firestore.googleapis.com/v1/projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/-/indexes/$$my-index$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '485'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/$$my-collection-group$$/indexes/CICAgLjIspYK
            queryScope: COLLECTION
            fields:
            - fieldPath: tags
              arrayConfig: CONTAINS
            - fieldPath: user_id
              order: DESCENDING
            - fieldPath: timestamp
              order: DESCENDING
            - fieldPath: __name__
              order: DESCENDING
            state: READY
    - expect_stdout: |
        +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
        |     NAME     |      COLLECTION_GROUP      | QUERY_SCOPE | STATE | FIELD_PATHS |   ORDER    | ARRAY_CONFIG |
        +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
        | $$my-index$$ | $$my-collection-group$$ | COLLECTION  | READY | tags        |            | CONTAINS     |
        |              |                            |             |       | user_id     | DESCENDING |              |
        |              |                            |             |       | timestamp   | DESCENDING |              |
        +--------------+----------------------------+-------------+-------+-------------+------------+--------------+
    - expect_exit:
        code: 0
- execute_command:
    command: firestore indexes composite delete $$my-index$$
    cleanup_for: my-collection-group
    events:
    - expect_prompt_continue:
        message: You are about to delete composite index [$$my-index$$]
        user_input: y
    - api_call:
        expect_request:
          uri: https://firestore.googleapis.com/v1/projects/das-fs-us-c-gcloud/databases/(default)/collectionGroups/-/indexes/$$my-index$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted composite index [$$my-index$$].
    - expect_exit:
        code: 0
