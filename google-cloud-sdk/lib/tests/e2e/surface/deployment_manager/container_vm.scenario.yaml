title: IntegrationTest
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: --no-user-output-enabled config set project cloud-sdk-integration-testing
- execute:
  - command: |
      deployment-manager deployments create $$dm1$$ --config container_vm.yaml
      --format "text(resources[0].name,resources[1].name)"
  - stderr: The fingerprint of the deployment is.*$
  - progress_tracker:
    - message: Waiting for create [$$operation-basename$$]
    - status: SUCCESS
  - stderr: |
      Create operation $$operation-basename$$ completed successfully.
  - stdout: |
      resources[0].name: my-container-vm-$$dm1$$
- execute:
  - command: |
      deployment-manager deployments describe $$dm1$$
      --format "text(resources[0].name,resources[1].name)"
  - stdout: |
      resources[0].name: my-container-vm-$$dm1$$
- execute:
  - command: deployment-manager deployments delete -q --async $$dm1$$ --format "text(kind)"
  - stdout: |
      ---
      kind: deploymentmanager#operationoperation.*$
actions:
- define_reference:
    reference: my-zone
    value: us-central1-f
- generate_resource_id:
    reference: dm1
    prefix: dm
- load_resource:
    path: tests/lib/surface/deployment_manager/test_data/container_vm/container_manifest.yaml
- load_resource:
    path: tests/e2e/surface/deployment_manager/test_data/container_vm.yaml
- load_resource:
    path: tests/lib/surface/deployment_manager/test_data/container_vm/container_vm.py
- execute_command:
    # testContainerVm
    command: --no-user-output-enabled config set project cloud-sdk-integration-testing
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/cloud-sdk-integration-testing?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '350'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            projectNumber: '462803083913'
            projectId: cloud-sdk-integration-testing
            lifecycleState: ACTIVE
            name: Cloud SDK Integration Testing
            labels:
              service-account-downloaded-notification-opt-out: 'true'
            createTime: '2014-09-30T14:51:18.935Z'
            parent:
              type: folder
              id: '396521612403'
    - expect_exit:
        code: 0
- execute_command:
    # testContainerVm
    command: |
      deployment-manager deployments create $$dm1$$ --config container_vm.yaml
      --format "text(resources[0].name,resources[1].name)"
    events:
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments?alt=json&createPolicy=CREATE_OR_ACQUIRE&preview=False
          method: POST
          headers: {}
          body:
            json:
              name: $$dm1$$
              target:
                config:
                  content: |+
                    imports:
                    - path: container_manifest.yaml
                    - path: container_vm.py

                    resources:
                    - name: my-container-vm
                      type: container_vm.py
                      properties:
                        zone: $$my-zone$$
                        containerImage: debian-9
                        containerManifest: container_manifest.yaml
                imports:
                - content: |
                    # Copyright 2015 Google LLC. All Rights Reserved.
                    #
                    # Licensed under the Apache License, Version 2.0 (the "License");
                    # you may not use this file except in compliance with the License.
                    # You may obtain a copy of the License at
                    #
                    #    http://www.apache.org/licenses/LICENSE-2.0
                    #
                    # Unless required by applicable law or agreed to in writing, software
                    # distributed under the License is distributed on an "AS IS" BASIS,
                    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    # See the License for the specific language governing permissions and
                    # limitations under the License.

                    #% description: Creates a Container VM with the provided Container manifest.
                    #% parameters:
                    #% - name: zone
                    #%   type: string
                    #%   description: Zone in which this VM will run
                    #%   required: true
                    #% - name: containerImage
                    #%   type: string
                    #%   description: Name of the Google Cloud Container VM Image
                    #%     (e.g., container-vm-v20150317).
                    #%   required: true
                    #% - name: containerManifest
                    #%   type: string
                    #%   description: String containing the Container Manifest in YAML
                    #%   required: true

                    """Creates a Container VM with the provided Container manifest.
                    """

                    from __future__ import absolute_import
                    from __future__ import division
                    from __future__ import unicode_literals

                    import yaml


                    def GenerateConfig(context):
                      # Loading the container manifest into a YAML object model so that it will be
                      # serialized as a single JSON-like object when converted to string.
                      manifest = yaml.load(context.imports[context.properties["containerManifest"]])

                      return """
                    resources:
                      - type: compute.v1.instance
                        name: %(name)s
                        properties:
                          zone: %(zone)s
                          machineType: https://www.googleapis.com/compute/v1/projects/%(project)s/zones/%(zone)s/machineTypes/n1-standard-1
                          metadata:
                            items:
                              - key: google-container-manifest
                                value: "%(manifest)s"
                          disks:
                            - deviceName: boot
                              type: PERSISTENT
                              boot: true
                              autoDelete: true
                              initializeParams:
                                diskName: %(name)s-disk
                                sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/%(containerImage)s
                          networkInterfaces:
                            - accessConfigs:
                                - name: external-nat
                                  type: ONE_TO_ONE_NAT
                              network: https://www.googleapis.com/compute/v1/projects/%(project)s/global/networks/default
                    """ % {"name": context.env["name"] + "-" + context.env["deployment"],
                           "project": context.env["project"],
                           "zone": context.properties["zone"],
                           "containerImage": context.properties["containerImage"],
                           "manifest": manifest}
                  name: container_vm.py
                - content: |+
                    # Copyright 2015 Google LLC. All rights reserved.
                    #
                    # Licensed under the Apache License, Version 2.0 (the "License");
                    # you may not use this file except in compliance with the License.
                    # You may obtain a copy of the License at
                    #
                    #     http://www.apache.org/licenses/LICENSE-2.0
                    #
                    # Unless required by applicable law or agreed to in writing, software
                    # distributed under the License is distributed on an "AS IS" BASIS,
                    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    # See the License for the specific language governing permissions and
                    # limitations under the License.

                    # This is a container manifest, as described here:
                    #   https://cloud.google.com/compute/docs/containers/container_vms
                    version: v1beta2
                    containers:
                      - name: simple-echo
                        image: busybox
                        command: ['nc', '-p', '8080', '-l', '-l', '-e', 'echo', 'hello world!']
                        ports:
                          - name: nc-echo
                            hostPort: 8080
                            containerPort: 8080

                  name: container_manifest.yaml
        return_response:
          headers:
            cache-control: no-cache, no-store, max-age=0, must-revalidate
            content-length: '703'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/HSKrELlZ1d2F39ElRNQsJG-cOBI"'
            pragma: no-cache
            status: '200'
          body:
            kind: deploymentmanager#operation
            id: '3663914556619232445'
            name: operation-1543613010153-57be869240e28-350d9b9f-f0ed517a
            operationType: insert
            targetLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$
            targetId: '273047802096653501'
            status: PENDING
            user: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
            progress: 0
            insertTime: '2018-11-30T13:23:30.327-08:00'
            selfLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/operations/operation-1543613010153-57be869240e28-350d9b9f-f0ed517a
        poll_operation: true
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$?alt=json
          method: GET
          headers: {}
          body: null
        expect_response:
          extract_references:
          - reference: manifest1
            field: update.manifest
          body:
            json: {}
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '1232'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/mxLW4WGTh2Zf5pfYv8mJZcZJmSU"'
            status: '200'
          body:
            id: '273047802096653501'
            insertTime: '2018-11-30T13:23:30.267-08:00'
            selfLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$
            name: $$dm1$$
            operation:
              kind: deploymentmanager#operation
              id: '3663914556619232445'
              name: operation-1543613010153-57be869240e28-350d9b9f-f0ed517a
              operationType: insert
              targetLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$
              targetId: '273047802096653501'
              status: PENDING
              user: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
              progress: 0
              insertTime: '2018-11-30T13:23:30.327-08:00'
              selfLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/operations/operation-1543613010153-57be869240e28-350d9b9f-f0ed517a
            fingerprint: zNLPaFrxlIiscs-x9y5Y0g==
            update:
              manifest: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$/manifests/manifest-1543613010278
    - expect_stderr:
        matches: The fingerprint of the deployment is.*
    - expect_progress_tracker:
        message: Waiting for create [$$operation-basename$$]
        status: SUCCESS
    - expect_stderr: |
        Create operation $$operation-basename$$ completed successfully.
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$/resources?alt=json&maxResults=500
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '2632'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/GpPVncfgYcIK1ItM8XVSpglgKOE"'
            status: '200'
          body:
            resources:
            - id: '7989386986688091320'
              insertTime: '2018-11-30T13:23:35.614-08:00'
              updateTime: '2018-11-30T13:24:30.932-08:00'
              name: my-container-vm-$$dm1$$
              type: compute.v1.instance
              manifest: $$manifest1$$
              url: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$my-zone$$/instances/my-container-vm-$$dm1$$
              properties: |
                disks:
                - autoDelete: true
                  boot: true
                  deviceName: boot
                  initializeParams:
                    diskName: my-container-vm-$$dm1$$-disk
                    sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/debian-9
                  type: PERSISTENT
                machineType: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$my-zone$$/machineTypes/n1-standard-1
                metadata:
                  items:
                  - key: google-container-manifest
                    value: '{''containers'': [{''name'': ''simple-echo'', ''ports'': [{''containerPort'':
                      8080, ''name'': ''nc-echo'', ''hostPort'': 8080}], ''command'': [''nc'', ''-p'',
                      ''8080'', ''-l'', ''-l'', ''-e'', ''echo'', ''hello world!''], ''image'': ''busybox''}],
                      ''version'': ''v1beta2''}'
                networkInterfaces:
                - accessConfigs:
                  - name: external-nat
                    type: ONE_TO_ONE_NAT
                  network: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/global/networks/default
                zone: $$my-zone$$
              finalProperties: |
                disks:
                - autoDelete: true
                  boot: true
                  deviceName: boot
                  initializeParams:
                    diskName: my-container-vm-$$dm1$$-disk
                    sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/debian-9
                  type: PERSISTENT
                machineType: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$my-zone$$/machineTypes/n1-standard-1
                metadata:
                  items:
                  - key: google-container-manifest
                    value: '{''containers'': [{''name'': ''simple-echo'', ''ports'': [{''containerPort'':
                      8080, ''name'': ''nc-echo'', ''hostPort'': 8080}], ''command'': [''nc'', ''-p'',
                      ''8080'', ''-l'', ''-l'', ''-e'', ''echo'', ''hello world!''], ''image'': ''busybox''}],
                      ''version'': ''v1beta2''}'
                networkInterfaces:
                - accessConfigs:
                  - name: external-nat
                    type: ONE_TO_ONE_NAT
                  network: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/global/networks/default
                zone: $$my-zone$$
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '1308'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/mzacAiXfex2lUJgdVdtalqj9upo"'
            status: '200'
          body:
            id: '273047802096653501'
            insertTime: '2018-11-30T13:23:30.267-08:00'
            selfLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$
            name: $$dm1$$
            operation:
              kind: deploymentmanager#operation
              id: '3663914556619232445'
              name: operation-1543613010153-57be869240e28-350d9b9f-f0ed517a
              operationType: insert
              targetLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$
              targetId: '273047802096653501'
              status: DONE
              user: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
              progress: 100
              insertTime: '2018-11-30T13:23:30.327-08:00'
              startTime: '2018-11-30T13:23:31.307-08:00'
              endTime: '2018-11-30T13:24:31.561-08:00'
              selfLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/operations/operation-1543613010153-57be869240e28-350d9b9f-f0ed517a
            fingerprint: zNLPaFrxlIiscs-x9y5Y0g==
            manifest: $$manifest1$$
    - api_call:
        expect_request:
          uri: $$manifest1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '6595'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/EMFsc1Gl-cVeYnN0eHGg8aLIaFk"'
            status: '200'
          body:
            id: '1527575206291051709'
            selfLink: $$manifest1$$
            insertTime: '2018-11-30T13:23:30.290-08:00'
            name: manifest-1543613010278
            config:
              content: |+
                imports:
                - path: container_manifest.yaml
                - path: container_vm.py

                resources:
                  - name: my-container-vm
                    type: container_vm.py
                    properties:
                      zone: $$my-zone$$
                      containerImage: debian-9
                      containerManifest: container_manifest.yaml

            imports:
            - name: container_manifest.yaml
              content: |+
                version: v1beta2
                containers:
                  - name: simple-echo
                    image: busybox
                    command: ['nc', '-p', '8080', '-l', '-l', '-e', 'echo', 'hello world!']
                    ports:
                      - name: nc-echo
                        hostPort: 8080
                        containerPort: 8080

            - name: container_vm.py
              content: |
                """Creates a Container VM with the provided Container manifest.
                """

                from __future__ import absolute_import
                from __future__ import division
                from __future__ import unicode_literals

                import yaml


                def GenerateConfig(context):
                  # Loading the container manifest into a YAML object model so that it will be
                  # serialized as a single JSON-like object when converted to string.
                  manifest = yaml.load(context.imports[context.properties["containerManifest"]])

                  return """
                resources:
                  - type: compute.v1.instance
                    name: %(name)s
                    properties:
                      zone: %(zone)s
                      machineType: https://www.googleapis.com/compute/v1/projects/%(project)s/zones/%(zone)s/machineTypes/n1-standard-1
                      metadata:
                        items:
                          - key: google-container-manifest
                            value: "%(manifest)s"
                      disks:
                        - deviceName: boot
                          type: PERSISTENT
                          boot: true
                          autoDelete: true
                          initializeParams:
                            diskName: %(name)s-disk
                            sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/%(containerImage)s
                      networkInterfaces:
                        - accessConfigs:
                            - name: external-nat
                              type: ONE_TO_ONE_NAT
                          network: https://www.googleapis.com/compute/v1/projects/%(project)s/global/networks/default
                """ % {"name": context.env["name"] + "-" + context.env["deployment"],
                       "project": context.env["project"],
                       "zone": context.properties["zone"],
                       "containerImage": context.properties["containerImage"],
                       "manifest": manifest}
            expandedConfig: |
              resources:
              - name: my-container-vm-$$dm1$$
                properties:
                  disks:
                  - autoDelete: true
                    boot: true
                    deviceName: boot
                    initializeParams:
                      diskName: my-container-vm-$$dm1$$-disk
                      sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/debian-9
                    type: PERSISTENT
                  machineType: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$my-zone$$/machineTypes/n1-standard-1
                  metadata:
                    items:
                    - key: google-container-manifest
                      value: '{''containers'': [{''name'': ''simple-echo'', ''ports'': [{''containerPort'':
                        8080, ''name'': ''nc-echo'', ''hostPort'': 8080}], ''command'': [''nc'',
                        ''-p'', ''8080'', ''-l'', ''-l'', ''-e'', ''echo'', ''hello world!''], ''image'':
                        ''busybox''}], ''version'': ''v1beta2''}'
                  networkInterfaces:
                  - accessConfigs:
                    - name: external-nat
                      type: ONE_TO_ONE_NAT
                    network: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/global/networks/default
                  zone: $$my-zone$$
                type: compute.v1.instance
            layout: |
              resources:
              - name: my-container-vm
                properties:
                  containerImage: debian-9
                  containerManifest: container_manifest.yaml
                  zone: $$my-zone$$
                resources:
                - name: my-container-vm-$$dm1$$
                  type: compute.v1.instance
                type: container_vm.py
    - expect_stdout: |
        resources[0].name: my-container-vm-$$dm1$$
    - expect_exit:
        code: 0
- execute_command:
    # testContainerVm
    command: |
      deployment-manager deployments describe $$dm1$$
      --format "text(resources[0].name,resources[1].name)"
    events:
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '1308'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/mzacAiXfex2lUJgdVdtalqj9upo"'
            status: '200'
          body:
            id: '273047802096653501'
            insertTime: '2018-11-30T13:23:30.267-08:00'
            selfLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$
            name: $$dm1$$
            operation:
              kind: deploymentmanager#operation
              id: '3663914556619232445'
              name: operation-1543613010153-57be869240e28-350d9b9f-f0ed517a
              operationType: insert
              targetLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$
              targetId: '273047802096653501'
              status: DONE
              user: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
              progress: 100
              insertTime: '2018-11-30T13:23:30.327-08:00'
              startTime: '2018-11-30T13:23:31.307-08:00'
              endTime: '2018-11-30T13:24:31.561-08:00'
              selfLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/operations/operation-1543613010153-57be869240e28-350d9b9f-f0ed517a
            fingerprint: zNLPaFrxlIiscs-x9y5Y0g==
            manifest: $$manifest1$$
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$/resources?alt=json&maxResults=500
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '2632'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/GpPVncfgYcIK1ItM8XVSpglgKOE"'
            status: '200'
          body:
            resources:
            - id: '7989386986688091320'
              insertTime: '2018-11-30T13:23:35.614-08:00'
              updateTime: '2018-11-30T13:24:30.932-08:00'
              name: my-container-vm-$$dm1$$
              type: compute.v1.instance
              manifest: $$manifest1$$
              url: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$my-zone$$/instances/my-container-vm-$$dm1$$
              properties: |
                disks:
                - autoDelete: true
                  boot: true
                  deviceName: boot
                  initializeParams:
                    diskName: my-container-vm-$$dm1$$-disk
                    sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/debian-9
                  type: PERSISTENT
                machineType: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$my-zone$$/machineTypes/n1-standard-1
                metadata:
                  items:
                  - key: google-container-manifest
                    value: '{''containers'': [{''name'': ''simple-echo'', ''ports'': [{''containerPort'':
                      8080, ''name'': ''nc-echo'', ''hostPort'': 8080}], ''command'': [''nc'', ''-p'',
                      ''8080'', ''-l'', ''-l'', ''-e'', ''echo'', ''hello world!''], ''image'': ''busybox''}],
                      ''version'': ''v1beta2''}'
                networkInterfaces:
                - accessConfigs:
                  - name: external-nat
                    type: ONE_TO_ONE_NAT
                  network: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/global/networks/default
                zone: $$my-zone$$
              finalProperties: |
                disks:
                - autoDelete: true
                  boot: true
                  deviceName: boot
                  initializeParams:
                    diskName: my-container-vm-$$dm1$$-disk
                    sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/debian-9
                  type: PERSISTENT
                machineType: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$my-zone$$/machineTypes/n1-standard-1
                metadata:
                  items:
                  - key: google-container-manifest
                    value: '{''containers'': [{''name'': ''simple-echo'', ''ports'': [{''containerPort'':
                      8080, ''name'': ''nc-echo'', ''hostPort'': 8080}], ''command'': [''nc'', ''-p'',
                      ''8080'', ''-l'', ''-l'', ''-e'', ''echo'', ''hello world!''], ''image'': ''busybox''}],
                      ''version'': ''v1beta2''}'
                networkInterfaces:
                - accessConfigs:
                  - name: external-nat
                    type: ONE_TO_ONE_NAT
                  network: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/global/networks/default
                zone: $$my-zone$$
    - api_call:
        expect_request:
          uri: $$manifest1$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '6595'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/EMFsc1Gl-cVeYnN0eHGg8aLIaFk"'
            status: '200'
          body:
            id: '1527575206291051709'
            selfLink: $$manifest1$$
            insertTime: '2018-11-30T13:23:30.290-08:00'
            name: manifest-1543613010278
            config:
              content: |+
                imports:
                - path: container_manifest.yaml
                - path: container_vm.py

                resources:
                  - name: my-container-vm
                    type: container_vm.py
                    properties:
                      zone: $$my-zone$$
                      containerImage: debian-9
                      containerManifest: container_manifest.yaml

            imports:
            - name: container_manifest.yaml
              content: |+
                version: v1beta2
                containers:
                  - name: simple-echo
                    image: busybox
                    command: ['nc', '-p', '8080', '-l', '-l', '-e', 'echo', 'hello world!']
                    ports:
                      - name: nc-echo
                        hostPort: 8080
                        containerPort: 8080

            - name: container_vm.py
              content: |
                """Creates a Container VM with the provided Container manifest.
                """

                from __future__ import absolute_import
                from __future__ import division
                from __future__ import unicode_literals

                import yaml


                def GenerateConfig(context):
                  # Loading the container manifest into a YAML object model so that it will be
                  # serialized as a single JSON-like object when converted to string.
                  manifest = yaml.load(context.imports[context.properties["containerManifest"]])

                  return """
                resources:
                  - type: compute.v1.instance
                    name: %(name)s
                    properties:
                      zone: %(zone)s
                      machineType: https://www.googleapis.com/compute/v1/projects/%(project)s/zones/%(zone)s/machineTypes/n1-standard-1
                      metadata:
                        items:
                          - key: google-container-manifest
                            value: "%(manifest)s"
                      disks:
                        - deviceName: boot
                          type: PERSISTENT
                          boot: true
                          autoDelete: true
                          initializeParams:
                            diskName: %(name)s-disk
                            sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/%(containerImage)s
                      networkInterfaces:
                        - accessConfigs:
                            - name: external-nat
                              type: ONE_TO_ONE_NAT
                          network: https://www.googleapis.com/compute/v1/projects/%(project)s/global/networks/default
                """ % {"name": context.env["name"] + "-" + context.env["deployment"],
                       "project": context.env["project"],
                       "zone": context.properties["zone"],
                       "containerImage": context.properties["containerImage"],
                       "manifest": manifest}
            expandedConfig: |
              resources:
              - name: my-container-vm-$$dm1$$
                properties:
                  disks:
                  - autoDelete: true
                    boot: true
                    deviceName: boot
                    initializeParams:
                      diskName: my-container-vm-$$dm1$$-disk
                      sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/debian-9
                    type: PERSISTENT
                  machineType: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$my-zone$$/machineTypes/n1-standard-1
                  metadata:
                    items:
                    - key: google-container-manifest
                      value: '{''containers'': [{''name'': ''simple-echo'', ''ports'': [{''containerPort'':
                        8080, ''name'': ''nc-echo'', ''hostPort'': 8080}], ''command'': [''nc'',
                        ''-p'', ''8080'', ''-l'', ''-l'', ''-e'', ''echo'', ''hello world!''], ''image'':
                        ''busybox''}], ''version'': ''v1beta2''}'
                  networkInterfaces:
                  - accessConfigs:
                    - name: external-nat
                      type: ONE_TO_ONE_NAT
                    network: https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/global/networks/default
                  zone: $$my-zone$$
                type: compute.v1.instance
            layout: |
              resources:
              - name: my-container-vm
                properties:
                  containerImage: debian-9
                  containerManifest: container_manifest.yaml
                  zone: $$my-zone$$
                resources:
                - name: my-container-vm-$$dm1$$
                  type: compute.v1.instance
                type: container_vm.py
    - expect_stdout: |
        resources[0].name: my-container-vm-$$dm1$$
    - expect_exit:
        code: 0
- execute_command:
    # testContainerVm
    cleanup_for: dm1
    command: deployment-manager deployments delete -q --async $$dm1$$ --format "text(kind)"
    events:
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$?alt=json&deletePolicy=DELETE
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: no-cache, no-store, max-age=0, must-revalidate
            content-length: '703'
            content-type: application/json; charset=UTF-8
            etag: '"Vxh6o-OFZqLzeHY8wNpu0tRDqhI/P149Im5kaa69LIm992rbe_D1EKo"'
            pragma: no-cache
            status: '200'
          body:
            kind: deploymentmanager#operation
            id: '3901994845923447933'
            name: operation-1543613074069-57be86cf3560b-6184dcb4-a81677c2
            operationType: delete
            targetLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/deployments/$$dm1$$
            targetId: '273047802096653501'
            status: PENDING
            user: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
            progress: 0
            insertTime: '2018-11-30T13:24:34.215-08:00'
            selfLink: https://www.googleapis.com/deploymentmanager/v2/projects/cloud-sdk-integration-testing/global/operations/operation-1543613074069-57be86cf3560b-6184dcb4-a81677c2
        poll_operation: true
    - expect_stdout: |
        ---
        kind: deploymentmanager#operation
    - expect_exit:
        code: 0
