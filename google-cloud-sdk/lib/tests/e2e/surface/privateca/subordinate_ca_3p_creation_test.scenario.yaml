title: Issue a subordinate CA, sign its csr, activate it and delete it.
release_tracks: [BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - command: privateca roots create $$root-ca-id$$ --kms-key-version $$kms-key$$/cryptoKeyVersions/1
      --subject "CN=Certificate Issuance E2E Test, O=Google LLC" --reusable-config
      root-unconstrained --bucket $$bucket$$
  - progress_tracker: []
  - stderr: |
      Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$].
- execute:
  - command: privateca subordinates create $$ca-id$$ --create-csr --csr-output-file
      csr.pem --subject "CN=Scenario Test,O=Google LLC" --kms-key-version $$kms-key$$/cryptoKeyVersions/1
      --reusable-config subordinate-mtls-pathlen-0 --bucket $$bucket$$
  - progress_tracker:
    - message: Creating Certificate Authority.
    - status: SUCCESS
  - write_file: csr.pem
  - stderr: |
      Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$] and saved CSR to 'csr.pem'.
- execute:
  - command: privateca certificates create subordinate-$$ca-id$$ --csr csr.pem --issuer
      $$root-ca-id$$ --issuer-location $$location$$
  - stderr: |
      Created Certificate [$$cert-name$$].
- execute:
  - command: privateca certificates describe subordinate-$$ca-id$$ --issuer $$root-ca-id$$
      --issuer-location $$location$$ --format "value[delimiter='',separator=''](pemCertificate,
      pemCertificateChain)"
  - stdout: |
      $$pem-cert$$$$pem-chain$$
- execute:
  - command: privateca subordinates activate $$ca-id$$ --location $$location$$ --pem-chain
      chain.crt
  - progress_tracker:
    - message: Activating Certificate Authority.
    - status: SUCCESS
- execute:
  - command: privateca subordinates describe $$ca-id$$ --location $$location$$ --format
      "value[delimiter=',',separator=','](pemCaCertificates, state)"
  - stdout: |
      $$pem-cert$$,$$pem-chain$$,ENABLED
- execute:
  - command: privateca certificates revoke --certificate $$cert-name$$
  - prompt:
    - message: You are about to revoke Certificate [$$cert-name$$]
    - input: y
  - stderr: |-
      Revoked certificate \[$$cert-name$$\] at [-0-9TZ:.]+\.
      $
- execute:
  - command: privateca subordinates disable $$ca-id$$ --location $$location$$
  - progress_tracker:
    - message: Disabling Subordinate CA
    - status: SUCCESS
  - stderr: |
      Disabled Subordinate CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$].
- execute:
  - command: privateca subordinates delete $$ca-id$$ --location $$location$$
  - prompt:
    - message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$]
        for deletion in 30 days
    - input: y
  - progress_tracker:
    - message: Scheduling Subordinate CA for deletion
    - status: SUCCESS
  - stderr: |-
      Scheduled Subordinate CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$\] for deletion at [-0-9TZ:]+\.
      $
- execute:
  - command: privateca roots disable $$root-ca-id$$ --location $$location$$
  - progress_tracker:
    - message: Disabling Root CA
    - status: SUCCESS
  - stderr: |
      Disabled Root CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$].
- execute:
  - command: privateca roots delete $$root-ca-id$$ --location $$location$$
  - prompt:
    - message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$]
        for deletion in 30 days
    - input: y
  - progress_tracker:
    - message: Scheduling Root CA for deletion
    - status: SUCCESS
  - stderr: |-
      Scheduled Root CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$\] for deletion at [-0-9TZ:.]+\.
      $
actions:
- define_reference:
    reference: project
    value: cloud-sdk-integration-testing
- define_reference:
    reference: location
    value: us-central1
- define_reference:
    reference: kms-key
    value: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-keyring/cryptoKeys/do-not-delete-key-rsa-2048
- define_reference:
    reference: bucket
    value: do-not-delete-privateca-gcloud-tests
- generate_resource_id:
    reference: root-ca-id
    prefix: gcloud-e2e
    delimiter: '-'
- generate_resource_id:
    reference: ca-id
    prefix: e2e
    delimiter: '-'
- set_property:
    privateca/location: us-central1
- execute_command:
    command: privateca roots create $$root-ca-id$$ --kms-key-version $$kms-key$$/cryptoKeyVersions/1
      --subject "CN=Certificate Issuance E2E Test, O=Google LLC" --reusable-config
      root-unconstrained --bucket $$bucket$$
    validation_only: true
    validate_remote_api_calls: false
    events:
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - expect_progress_tracker:
      - message: Creating Certificate Authority.
      - status: SUCCESS
    - expect_stderr: |
        Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create $$ca-id$$ --create-csr --csr-output-file
      csr.pem --subject "CN=Scenario Test,O=Google LLC" --kms-key-version $$kms-key$$/cryptoKeyVersions/1
      --reusable-config subordinate-mtls-pathlen-0 --bucket $$bucket$$
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '514'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            locations:
            - name: projects/$$project$$/locations/europe-west1
              locationId: europe-west1
            - name: projects/$$project$$/locations/us-central1
              locationId: us-central1
            - name: projects/$$project$$/locations/us-east1
              locationId: us-east1
            - name: projects/$$project$$/locations/us-west1
              locationId: us-west1
        repeatable: true
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/$$project$$:testIamPermissions?alt=json
          method: POST
          headers: {}
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            cache-control: private
            content-length: '103'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            cache-control: private
            content-length: '66'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$?alt=json&projection=full
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '2666'
            content-type: application/json; charset=UTF-8
            etag: CBw=
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUnu173L2odj_IxgTs02BCG5CICPnUEAcB_itfcIKBzCfHnZAAkp6Hze96Ym1diRQkRc9v2bo37jZ5kydVw3E7Q9vCmUzw
          body:
            kind: storage#bucket
            selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$
            id: $$bucket$$
            name: $$bucket$$
            projectNumber: '166289904856'
            metageneration: '28'
            location: US-CENTRAL1
            storageClass: STANDARD
            etag: CBw=
            timeCreated: '2020-06-01T21:43:18.118Z'
            updated: '2020-06-01T22:32:15.735Z'
            acl:
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-editors-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-editors-166289904856
              bucket: $$bucket$$
              entity: project-editors-166289904856
              role: OWNER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: editors
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-owners-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-owners-166289904856
              bucket: $$bucket$$
              entity: project-owners-166289904856
              role: OWNER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: owners
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-viewers-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-viewers-166289904856
              bucket: $$bucket$$
              entity: project-viewers-166289904856
              role: READER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: viewers
            defaultObjectAcl:
            - kind: storage#objectAccessControl
              entity: allUsers
              role: READER
              etag: CBw=
            owner:
              entity: project-owners-166289904856
            versioning:
              enabled: true
            iamConfiguration:
              bucketPolicyOnly:
                enabled: false
              uniformBucketLevelAccess:
                enabled: false
            locationType: region
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/$$project$$/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '290'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: operations/finished.DONE_OPERATION
            done: true
            response:
              '@type': type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity
              email: service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
              uniqueId: '100826546240526346186'
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '295'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            version: 1
            etag: BwWnDV3jSU0=
            bindings:
            - role: roles/cloudkms.signerVerifier
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/viewer
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        # Skipped if the existing IAM policy has correct IAM bindings.
        optional: true
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:setIamPolicy?alt=json
          method: POST
          body:
            json: {}
        return_response:
          headers:
            cache-control: private
            content-length: '295'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            version: 1
            etag: BwWnDio4DvY=
            bindings:
            - role: roles/cloudkms.signerVerifier
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/viewer
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$/iam?alt=json&optionsRequestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '904'
            content-type: application/json; charset=UTF-8
            etag: CBw=
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUkjCg0tHYOD4vLTSWyJa-pUpPiuE9DAojhS9WQdCH6av-oZseHjerN1qNsxVTi4JQQaenqIQdk3QtUstL4ETo08iwOhrg
          body:
            kind: storage#policy
            resourceId: projects/_/buckets/$$bucket$$
            version: 1
            etag: CBw=
            bindings:
            - role: roles/storage.legacyBucketOwner
              members:
              - projectEditor:$$project$$
              - projectOwner:$$project$$
            - role: roles/storage.legacyBucketReader
              members:
              - projectViewer:$$project$$
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/storage.objectAdmin
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        # Skipped if the existing IAM policy has correct IAM bindings.
        optional: true
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$/iam?alt=json
          method: PUT
          body:
            json: {}
        return_response:
          headers:
            cache-control: no-cache, no-store, max-age=0, must-revalidate
            content-length: '904'
            content-type: application/json; charset=UTF-8
            etag: CB0=
            pragma: no-cache
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUk_6_hf_92nmdN5LL9wGdr8EWQddZlyvODDxl1B28sru025a2PnpsoWwHnYGzvzVPu97tGVRik6BYdN0V6kfG0xwHA_mA
          body:
            kind: storage#policy
            resourceId: projects/_/buckets/$$bucket$$
            version: 1
            etag: CB0=
            bindings:
            - role: roles/storage.legacyBucketOwner
              members:
              - projectEditor:$$project$$
              - projectOwner:$$project$$
            - role: roles/storage.legacyBucketReader
              members:
              - projectViewer:$$project$$
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/storage.objectAdmin
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        poll_operation: true
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities\?alt=json&certificateAuthorityId=$$ca-id$$&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: $$kms-key$$/cryptoKeyVersions/1
              gcsBucket: $$bucket$$
              config:
                reusableConfig:
                  reusableConfig: projects/privateca-data/locations/$$location$$/reusableConfigs/subordinate-mtls-pathlen-0
                subjectConfig:
                  commonName: Scenario Test
                  subject:
                    organization: Google LLC
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: true
              type: SUBORDINATE
              lifetime: 315569261s
        return_response:
          headers:
            cache-control: private
            content-length: '550'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1591054164105-5a70e2a451942-846895d2-79ba46cc
            metadata:
              '@type': type.googleapis.com/google.cloud.security.privateca.v1beta1.OperationMetadata
              createTime: '2020-06-01T23:29:24.115774362Z'
              target: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
              verb: create
              requestedCancellation: false
              apiVersion: v1beta1
            done: false
    - expect_progress_tracker:
        message: Creating Certificate Authority.
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIICxjCCAa4CAQAwLTETMBEGA1UEChMKR29vZ2xlIExMQzEWMBQGA1UEAxMNU2Nl
              bmFyaW8gVGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMO3FK7v
              6FnvAkbarR5J0mQe4HjMhgpAByNCEmyHx3c4WurU/ITfEjX83T+W5j2Qn/R8S2BG
              BSPB8F18zMwK6qAKzz/riqJEZGzj2RfSJQYIUQbbzCbtqHxjxhuOOmFC/HBhvuUt
              uv6ecYl4F+y+r9xeD0QGmc4amrHCrBXtHi61lg8yHbNXldc+pyT4PEWgw2Yduieg
              PrnCB8jCaJ8iQMGcwP8v84uvDficNoQi+CTaX7NF0G/4+K4Iv+0BO6evClQYWPUs
              /+Q7F3Bg4mFBO1JblYAvRzNOg5iEp4iYv7xdHSURShu5g289Ga3nXVadx2wJfia8
              iZR8m0qjN7fmquECAwEAAaBUMFIGCSqGSIb3DQEJDjFFMEMwDgYDVR0PAQH/BAQD
              AgEGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjASBgNVHRMBAf8ECDAG
              AQH/AgEAMA0GCSqGSIb3DQEBCwUAA4IBAQAzv2tmBPBqfRi0qUU8lSJZs76TvNnc
              1aoCWdW2iIlDcmFkfSaLNgWw2st0oCTN3jrGOyGoEWW6zenRmiDJRdIA06sy6EsP
              6xuP2jfCTjfPv58fUG+s+l6YtIgTK0oYLf+lIcep69lrdzb1W2xkoqs9XCGGAU67
              4MpBr42AVkCuu7zxoJZkR6MdZaMF8i/2H8VOsyQwYc6UarINzJZXmTKDzFLHO1WC
              uOek1PuJsD+CKejiAUnlkdgJ7YvASX5rTY1HMnJitIDLCwfL4rF9DiIvdYFnbc1n
              JzrrFSyXNeJI3/CH3XkH8sis6KWJO922ZV9zi7BUXn7yvHvoNwINJu47
              -----END CERTIFICATE REQUEST-----
    - expect_file_written:
        path: csr.pem
        contents:
          matches: '-----BEGIN CERTIFICATE REQUEST-----.*-----END CERTIFICATE REQUEST-----\n'
    - expect_stderr: |
        Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$] and saved CSR to 'csr.pem'.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca certificates create subordinate-$$ca-id$$ --csr csr.pem --issuer
      $$root-ca-id$$ --issuer-location $$location$$
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$
            tier: ENTERPRISE
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificates for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$/certificates\?alt=json&certificateId=subordinate-$$ca-id$$&requestId=[^&]+$
          method: POST
          body:
            json: {}
        return_response:
          headers:
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$/certificates/subordinate-$$ca-id$$
            pemCertificate: |
              -----BEGIN CERTIFICATE-----
              MIIEKDCCAtygAwIBAgIVAKDKBUAIdi0prnBNNn/6cS/r1mfIMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTk0MTIwWhcN
              MzAwMzExMDU0OTAxWjBnMQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxGDAW
              BgNVBAMTD1NlcnZlciBUTFMgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
              AQoCggEBAI0nmjtcKAI009Yh0x8w/niLDqpNcsp1gD1rAR1p5AvE2js95E0z8/P6
              afZGWunE2hO2diMsUgp3EaF1o9LEFDtoUsUK6XojagTuZuaBVFL8UITzNBgZAPjN
              HbymYvfmoJ5FYDHGibD96dFHmPhVTGRz7VZULmWNiNP4rTiUCC2/chBPfS7TbEoK
              sQMtIF2QyBZ5BNvTTk/BdKnVDHjp5zayujBktTDifHqVQrC+44RQdD0G/SpsnLBe
              MVyR+RyJz8vuW3INYD8ksL8n7qr+dCSAPCuVJLSVkRy8ghG4/24AomOGjePz//tT
              j11bWXARNwdZuB4WcX08TWR+rYE/lJMCAwEAAaNWMFQwEgYDVR0TAQH/BAgwBgEB
              /wIBADAdBgNVHQ4EFgQUJ62PA7yyHcai2nLdvYrKnPf2mKIwHwYDVR0jBBgwFoAU
              J62PA7yyHcai2nLdvYrKnPf2mKIwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQME
              AgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQBIYFii
              PWUOqvxuwS+Anvanp6E8rrG8RuDEihVYNPMT4spodIJxP59RyU2JWYxZ6IDnX8oJ
              CLaJMDW6GQKxfbj4pjCJOYk3BinrN2Ie7s7Sxtve9twturIura2wCpZtDzb8Dp1d
              gsN4HtE7XRQbNlK4oZ5ehHzEoChMB2wosiuff7jvCiXtfakmZdA0iy15OyJTJlMD
              axp9I3CHs3mOw+AngGRp8AgJtynTV2bEBaaP7pPz8xZryIyONmvFI7djI8qcnnyl
              cdfxf+99tenQXw24EifjaEbGAT7zu23MRJAMpt7lacPgdcKtZNLXlzcS/RGenjMN
              YhSedspfcIJw/STP
              -----END CERTIFICATE-----
            lifetime: 2592000s
            pemCertificateChain:
            - |
              -----BEGIN CERTIFICATE-----
              MIIENTCCAumgAwIBAgIVAKph5dh4fJiGQHCPRaCattongQLwMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTgxNDQ4WhcN
              MzAwMzExMDQyMjI5WjB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAj
              BgNVBAMTHFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3
              DQEBAQUAA4IBDwAwggEKAoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEd
              aeQLxNo7PeRNM/Pz+mn2RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbm
              gVRS/FCE8zQYGQD4zR28pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04
              lAgtv3IQT30u02xKCrEDLSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKw
              vuOEUHQ9Bv0qbJywXjFckfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIR
              uP9uAKJjho3j8//7U49dW1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGjVjBUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCetjwO8sh3Gotpy3b2Kypz39pii
              MB8GA1UdIwQYMBaAFCetjwO8sh3Gotpy3b2Kypz39piiMEEGCSqGSIb3DQEBCjA0
              oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIBBQCi
              AwIBIAOCAQEANqKeGZY7oDdsyPC8lP2ZR6ogaUX6KBLGLspfZ6Lb3RKCoe0NQoc7
              GEAaunoGJnj7wTW1WoqBYdmRQBEBy6nVT40giuDHFGHIMwF7dBoxsTc60yHpyJid
              HKBGWXo8Lsald+xalmjLLW3dmV0SF5j6pnHeIgWc2VCikInFDrD3wDvMBMuJFIsX
              NbgncmafjGPvMyNueOrgZDJ9MQNYN53Fvx5owqtAMhbG6yHvT6ytoQ44WZP8svYr
              Cxik0WWaDMtDTKP2uJ/dNAkVKQ5xRxtRt9Zzax4kTbLCWbC4+ugH1tyhzcuMJkJN
              poYZu+i6CrUTys/chYitvwy2aAaz5Csf5Q==
              -----END CERTIFICATE-----
        expect_response:
          body:
            json: {}
          extract_references:
          - field: name
            reference: cert-name
    - expect_stderr: |
        Created Certificate [$$cert-name$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca certificates describe subordinate-$$ca-id$$ --issuer $$root-ca-id$$
      --issuer-location $$location$$ --format "value[delimiter='',separator=''](pemCertificate,
      pemCertificateChain)"
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$/certificates/subordinate-$$ca-id$$?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$/certificates/subordinate-$$ca-id$$
            pemCertificate: |
              -----BEGIN CERTIFICATE-----
              MIIEejCCA2KgAwIBAgIUQP/iU02mqn96kJVqm4NaLPZoTRAwDQYJKoZIhvcNAQEL
              BQAwKzETMBEGA1UEChMKZ29vZ2xlLmNvbTEUMBIGA1UEAwwLZ2Nsb3VkX3Rlc3Qw
              HhcNMjAwNjEyMTgzNzUyWhcNMjAwNzEyMTgzNzUyWjAtMRMwEQYDVQQKEwpHb29n
              bGUgTExDMRYwFAYDVQQDEw1TY2VuYXJpbyBUZXN0MIIBIjANBgkqhkiG9w0BAQEF
              AAOCAQ8AMIIBCgKCAQEAw7cUru/oWe8CRtqtHknSZB7geMyGCkAHI0ISbIfHdzha
              6tT8hN8SNfzdP5bmPZCf9HxLYEYFI8HwXXzMzArqoArPP+uKokRkbOPZF9IlBghR
              BtvMJu2ofGPGG446YUL8cGG+5S26/p5xiXgX7L6v3F4PRAaZzhqascKsFe0eLrWW
              DzIds1eV1z6nJPg8RaDDZh26J6A+ucIHyMJonyJAwZzA/y/zi68N+Jw2hCL4JNpf
              s0XQb/j4rgi/7QE7p68KVBhY9Sz/5DsXcGDiYUE7UluVgC9HM06DmISniJi/vF0d
              JRFKG7mDbz0ZreddVp3HbAl+JryJlHybSqM3t+aq4QIDAQABo4IBkjCCAY4wDgYD
              VR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjASBgNV
              HRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRm8TT8IrjTJlmXDU8YZ/0Q3NC/ETAf
              BgNVHSMEGDAWgBTYuXpp+XKRBclH6h9dj3CKIbTvMzCBiAYIKwYBBQUHAQEEfDB6
              MHgGCCsGAQUFBzAChmxodHRwOi8vcHJpdmF0ZWNhX2NvbnRlbnRfMTM4M2NiYTct
              MmY3ZC00ZGRjLWIyM2ItN2YwNWFlMGIzMmE1LnN0b3JhZ2UuZ29vZ2xlYXBpcy5j
              b20vLnByaXZhdGVfY2FfZGF0YS9jYS5jcnQwfgYDVR0fBHcwdTBzoHGgb4ZtaHR0
              cDovL3ByaXZhdGVjYV9jb250ZW50XzEzODNjYmE3LTJmN2QtNGRkYy1iMjNiLTdm
              MDVhZTBiMzJhNS5zdG9yYWdlLmdvb2dsZWFwaXMuY29tLy5wcml2YXRlX2NhX2Rh
              dGEvY3JsLmNybDANBgkqhkiG9w0BAQsFAAOCAQEAT6r4dc7e3E7CyzhHq03a3PGm
              Bl+Hh2MGuvU+twn67y2y1sGxb5fnJVTtkb3Wms/OdwEHw8s2HRe9qC7RbjhfLh5X
              zEN4ZlQIcxxP2M12o944L34gKCwDsIaVfndKe9POAjMdmroJnTlONRbUQUwXflJI
              Fzu11CV0Wkib1wKP9jTHWbBl8s7lL+eAQwxObvg6gIyY1vU2Hn09S537USIEJzeY
              QsoZTIYFvfxuOENoRYxClk01RntcEbFqUoPjaDigWVaC/M10qVcTSkRYVdxirLMX
              F1AVoIHrN/uS7SBVkwr3XiIArv3kWu0p0LoDX5/4uv/FLbY3rQuHx6iHoy5SgA==
              -----END CERTIFICATE-----
            pemCertificateChain:
            - |
                -----BEGIN CERTIFICATE-----
                MIIDSzCCAjOgAwIBAgIVAP9SX1s6YIvPOzs5OVi6oM/RKp7RMA0GCSqGSIb3DQEB
                CwUAMCsxEzARBgNVBAoTCmdvb2dsZS5jb20xFDASBgNVBAMMC2djbG91ZF90ZXN0
                MB4XDTIwMDMyNjE4MTIxNVoXDTMwMDMyNzA0MTk1NlowKzETMBEGA1UEChMKZ29v
                Z2xlLmNvbTEUMBIGA1UEAwwLZ2Nsb3VkX3Rlc3QwggEiMA0GCSqGSIb3DQEBAQUA
                A4IBDwAwggEKAoIBAQC8VXSinTG8OL24SNqvmdV2+povvtyC8SLGf2TDYVRlG8v7
                hMyNAwOdChX5f2DZk71YJF3WoRMa7rq7TldUF8lelKRUs/D648Ymq47lUpd3Hxsv
                o2+KSivhtF5dKQe/fLZ4NSge0x6GPgpTPwEs/awjDmQySEb2JEWTyjhL9tbf4jFX
                KG92ErNfSmeW0qNpL7aRJ6qVmlewWP52sLwinY8il56KHtun3IUyMUZP7FZlSLQM
                yCp1StjKZyefRZp4G4S6zE1zf34j7VpJU/zDcQGX737wIzEMVBRnICLhNgmach2r
                5RAkdlPbKVtpbdbF37ZBU9djJ8uHwuBPq8AEYZJtAgMBAAGjZjBkMA4GA1UdDwEB
                /wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTYuXpp+XKRBclH
                6h9dj3CKIbTvMzAfBgNVHSMEGDAWgBTYuXpp+XKRBclH6h9dj3CKIbTvMzANBgkq
                hkiG9w0BAQsFAAOCAQEADNdIfPg/IvPTzUePm4bp5FMNbpVXnYxKiHGTf36Tfz4R
                PA8m7QTdIxFh2PHHV7xJa86Q+7Dq5v+bvMLVTmzEmXjRXsXQhL/NgYL4ozG0L2eA
                ODMu6yike+aWfogt4MjvfK+YzcIQ2FYMQlhIKGOFR1OHGRrN8btQfdK8CZk2PsD3
                bcfQaG7f4F4UubcwuNbS6LkUnn1817wGv35oGnQRcJhrivNQKhNC2OuygMjlUz7z
                lu9+t42SRBQOGseNMnyQ9tV1aUKLAOcY8oHuk6FcbyG+qCn6CixayoRyWC/MZoHU
                MatGmvmM+USBO7iC3hIHKHYtuQ1zw822gLon0o6z6g==
                -----END CERTIFICATE-----
        expect_response:
          body:
            json: {}
          extract_references:
          - field: pemCertificate
            reference: pem-cert
          - field: pemCertificateChain[0]
            reference: pem-chain
    - expect_stdout: |
        $$pem-cert$$$$pem-chain$$
    - expect_exit:
        code: 0
- write_file:
    path: chain.crt
    contents: |
      $$pem-cert$$$$pem-chain$$
- execute_command:
    command: privateca subordinates activate $$ca-id$$ --location $$location$$ --pem-chain
      chain.crt
    events:
    - api_call:
        poll_operation: false
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$:activate?alt=json
          method: POST
          body:
            json:
              pemCaCertificate: $$pem-cert$$
              subordinateConfig:
                pemIssuerChain:
                  pemCertificates:
                  - $$pem-chain$$
        return_response:
          headers:
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-19369660-e9a1-4a5a-9250-31a5fb9a1d5d
            done: false
        expect_response:
          body:
            json: {}
          extract_references:
          - field: name
            reference: operation
    - api_call:
        repeatable: true
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/$$operation$$?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1600222751405-5af64e4a8b4d1-5e297186-e919cb9a
            done: true
    - expect_progress_tracker:
        message: Activating Certificate Authority.
        status: SUCCESS
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates describe $$ca-id$$ --location $$location$$ --format
      "value[delimiter=',',separator=','](pemCaCertificates, state)"
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            state: ENABLED
            type: SUBORDINATE
            pemCaCertificates:
            - $$pem-cert$$
            - $$pem-chain$$
    - expect_stdout: |
        $$pem-cert$$,$$pem-chain$$,ENABLED
    - expect_exit:
        code: 0
- execute_command:
    command: privateca certificates revoke --certificate $$cert-name$$
    validation_only: true
    validate_remote_api_calls: false
    events:
    - expect_prompt_continue:
        message: You are about to revoke Certificate [$$cert-name$$]
        user_input: y
    - expect_stderr:
        matches: |
          Revoked certificate \[$$cert-name$$\] at [-0-9TZ:.]+\.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates disable $$ca-id$$ --location $$location$$
    validation_only: true
    validate_remote_api_calls: false
    events:
    - expect_progress_tracker:
        message: Disabling Subordinate CA
        status: SUCCESS
    - expect_stderr: |
        Disabled Subordinate CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates delete $$ca-id$$ --location $$location$$
    cleanup_for: ca-id
    events:
    - expect_prompt_continue:
        message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$]
          for deletion in 30 days
        user_input: y
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '4579'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
            type: SUBORDINATE
            state: ENABLED
    - api_call:
        poll_operation: false
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$:scheduleDelete?alt=json
          method: POST
          headers: {}
          body:
            text:
              matches: '.*"requestId": "[a-f0-9-]+".*'
        return_response:
          headers:
            cache-control: private
            content-length: '550'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1591054167231-5a70e2a74cabe-edadc0c5-2a155be1
            done: false
        expect_response:
          extract_references:
          - field: name
            reference: operation
          body:
            json: {}
    - api_call:
        repeatable: true
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/$$operation$$?alt=json
          method: GET
          body: none
        return_response:
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1591054167231-5a70e2a74cabe-edadc0c5-2a155be1
            done: true
            response:
              name: $$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
              deleteTime: '2018-10-17T15:14:00.105-07:00'
    - expect_progress_tracker:
        message: Scheduling Subordinate CA for deletion
        status: SUCCESS
    - expect_stderr:
        matches: |
          Scheduled Subordinate CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$\] for deletion at [-0-9TZ:]+\.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots disable $$root-ca-id$$ --location $$location$$
    validation_only: true
    validate_remote_api_calls: false
    events:
    - expect_progress_tracker:
        message: Disabling Root CA
        status: SUCCESS
    - expect_stderr: |
        Disabled Root CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots delete $$root-ca-id$$ --location $$location$$
    validation_only: true
    validate_remote_api_calls: false
    cleanup_for: root-ca-id
    events:
    - expect_prompt_continue:
        message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$]
          for deletion in 30 days
        user_input: y
    - expect_progress_tracker:
        message: Scheduling Root CA for deletion
        status: SUCCESS
    - expect_stderr:
        matches: |
          Scheduled Root CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$\] for deletion at [-0-9TZ:.]+\.
    - expect_exit:
        code: 0
