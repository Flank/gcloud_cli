filters:
  skipAlways:
    reason: E2E tests will fail during beta command migration
    bug: b/168122371
    locally: true
title: Issue a certificate from an existing root, describe it, and revoke it.
release_tracks: [BETA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: privateca roots create $$ca-name$$ --subject "CN=Scenario Test,O=Google
      LLC" --kms-key-version $$kms-key$$/cryptoKeyVersions/1 --reusable-config root-unconstrained
      --bucket $$bucket$$
  - progress_tracker:
    - message: Creating Certificate Authority.
    - status: SUCCESS
  - stderr: |
      Creating the initial Certificate Revocation List.
      Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$].
- execute:
  - command: privateca roots disable $$ca-name$$ --location $$location$$
  - progress_tracker:
    - message: Disabling Root CA
    - status: SUCCESS
  - stderr: |
      Disabled Root CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$].
- execute:
  - command: privateca roots delete $$ca-name$$ --location $$location$$
  - prompt:
    - message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$]
        for deletion in 30 days
    - input: y
  - progress_tracker:
    - message: Scheduling Root CA for deletion
    - status: SUCCESS
  - stderr: Scheduled Root CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$\]
      for deletion at [0-9-:TZ]+\.$
actions:
- define_reference:
    reference: project
    value: cloud-sdk-integration-testing
- define_reference:
    reference: location
    value: us-central1
- define_reference:
    reference: kms-key
    value: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-keyring/cryptoKeys/do-not-delete-key-rsa-2048
- define_reference:
    reference: bucket
    value: do-not-delete-privateca-gcloud-tests
- generate_resource_id:
    reference: ca-name
    prefix: gcloud-test
    delimiter: '-'
- execute_command:
    command: privateca roots create $$ca-name$$ --subject "CN=Scenario Test,O=Google
      LLC" --kms-key-version $$kms-key$$/cryptoKeyVersions/1 --reusable-config root-unconstrained
      --bucket $$bucket$$
    validation_only: true
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '514'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            locations:
            - name: projects/$$project$$/locations/europe-west1
              locationId: europe-west1
            - name: projects/$$project$$/locations/$$location$$
              locationId: $$location$$
            - name: projects/$$project$$/locations/us-east1
              locationId: us-east1
            - name: projects/$$project$$/locations/us-west1
              locationId: us-west1
        repeatable: true
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/$$project$$:testIamPermissions?alt=json
          method: POST
          headers: {}
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
              - storage.buckets.create
        return_response:
          headers:
            cache-control: private
            content-length: '103'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
            - storage.buckets.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            cache-control: private
            content-length: '66'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/$$project$$/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '290'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: operations/finished.DONE_OPERATION
            done: true
            response:
              '@type': type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity
              email: service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
              uniqueId: '100826546240526346186'
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$?alt=json&projection=full
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '2666'
            content-type: application/json; charset=UTF-8
            etag: CBw=
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUnu173L2odj_IxgTs02BCG5CICPnUEAcB_itfcIKBzCfHnZAAkp6Hze96Ym1diRQkRc9v2bo37jZ5kydVw3E7Q9vCmUzw
          body:
            kind: storage#bucket
            selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$
            id: $$bucket$$
            name: $$bucket$$
            projectNumber: '166289904856'
            metageneration: '28'
            location: US-CENTRAL1
            storageClass: STANDARD
            etag: CBw=
            timeCreated: '2020-06-01T21:43:18.118Z'
            updated: '2020-06-01T22:32:15.735Z'
            acl:
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-editors-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-editors-166289904856
              bucket: $$bucket$$
              entity: project-editors-166289904856
              role: OWNER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: editors
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-owners-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-owners-166289904856
              bucket: $$bucket$$
              entity: project-owners-166289904856
              role: OWNER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: owners
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-viewers-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-viewers-166289904856
              bucket: $$bucket$$
              entity: project-viewers-166289904856
              role: READER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: viewers
            defaultObjectAcl:
            - kind: storage#objectAccessControl
              entity: allUsers
              role: READER
              etag: CBw=
            owner:
              entity: project-owners-166289904856
            versioning:
              enabled: true
            iamConfiguration:
              bucketPolicyOnly:
                enabled: false
              uniformBucketLevelAccess:
                enabled: false
            locationType: region
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '295'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            version: 1
            etag: BwWnDV3jSU0=
            bindings:
            - role: roles/cloudkms.signerVerifier
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/viewer
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:setIamPolicy?alt=json
          method: POST
          body:
            json: {}
        return_response:
          headers:
            cache-control: private
            content-length: '295'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            version: 1
            etag: BwWnDio4DvY=
            bindings:
            - role: roles/cloudkms.signerVerifier
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/viewer
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$/iam?alt=json&optionsRequestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '904'
            content-type: application/json; charset=UTF-8
            etag: CBw=
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUkjCg0tHYOD4vLTSWyJa-pUpPiuE9DAojhS9WQdCH6av-oZseHjerN1qNsxVTi4JQQaenqIQdk3QtUstL4ETo08iwOhrg
          body:
            kind: storage#policy
            resourceId: projects/_/buckets/$$bucket$$
            version: 1
            etag: CBw=
            bindings:
            - role: roles/storage.legacyBucketOwner
              members:
              - projectEditor:$$project$$
              - projectOwner:$$project$$
            - role: roles/storage.legacyBucketReader
              members:
              - projectViewer:$$project$$
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/storage.objectAdmin
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$/iam?alt=json
          method: PUT
          body:
            json: {}
        return_response:
          headers:
            cache-control: no-cache, no-store, max-age=0, must-revalidate
            content-length: '904'
            content-type: application/json; charset=UTF-8
            etag: CB0=
            pragma: no-cache
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUk_6_hf_92nmdN5LL9wGdr8EWQddZlyvODDxl1B28sru025a2PnpsoWwHnYGzvzVPu97tGVRik6BYdN0V6kfG0xwHA_mA
          body:
            kind: storage#policy
            resourceId: projects/_/buckets/$$bucket$$
            version: 1
            etag: CB0=
            bindings:
            - role: roles/storage.legacyBucketOwner
              members:
              - projectEditor:$$project$$
              - projectOwner:$$project$$
            - role: roles/storage.legacyBucketReader
              members:
              - projectViewer:$$project$$
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/storage.objectAdmin
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        poll_operation: true
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities\?alt=json&certificateAuthorityId=$$ca-name$$&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              cloudKmsKeyVersion: $$kms-key$$/cryptoKeyVersions/1
              gcsBucket: $$bucket$$
              config:
                reusableConfig:
                  reusableConfig: projects/privateca-data/locations/$$location$$/reusableConfigs/root-unconstrained
                subjectConfig:
                  commonName: Scenario Test
                  subject:
                    organization: Google LLC
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: true
              type: SELF_SIGNED
              lifetime: 315569261s
        return_response:
          headers:
            cache-control: private
            content-length: '550'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1591054164105-5a70e2a451942-846895d2-79ba46cc
            metadata:
              '@type': type.googleapis.com/google.cloud.security.privateca.v1beta1.OperationMetadata
              createTime: '2020-06-01T23:29:24.115774362Z'
              target: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$
              verb: create
              requestedCancellation: false
              apiVersion: v1beta1
            done: false
    - expect_progress_tracker:
        message: Creating Certificate Authority.
        status: SUCCESS
    - expect_stderr: |
        Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots disable $$ca-name$$ --location $$location$$
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '4525'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$
            type: SELF_SIGNED
            config:
              subjectConfig:
                subject:
                  organization: Google LLC
                commonName: Scenario Test
                subjectAltName: {}
              reusableConfig:
                reusableConfig: projects/privateca-data/locations/$$location$$/reusableConfigs/root-unconstrained
            lifetime: 315569261s
            cloudKmsKeyVersion: $$kms-key$$/cryptoKeyVersions/1
            issuingOptions:
              includeCaCertUrl: true
              includeCrlAccessUrl: true
            pemIssuerCertChain:
            - |
              -----BEGIN CERTIFICATE-----
              MIIDSzCCAjOgAwIBAgIUDoA+0+mCre4ckaMRLR1nNgY15M8wDQYJKoZIhvcNAQEL
              BQAwLTETMBEGA1UEChMKR29vZ2xlIExMQzEWMBQGA1UEAxMNU2NlbmFyaW8gVGVz
              dDAeFw0yMDA4MDMyMjE2MzFaFw0zMDA4MDQwODI0MTJaMC0xEzARBgNVBAoTCkdv
              b2dsZSBMTEMxFjAUBgNVBAMTDVNjZW5hcmlvIFRlc3QwggEiMA0GCSqGSIb3DQEB
              AQUAA4IBDwAwggEKAoIBAQDDtxSu7+hZ7wJG2q0eSdJkHuB4zIYKQAcjQhJsh8d3
              OFrq1PyE3xI1/N0/luY9kJ/0fEtgRgUjwfBdfMzMCuqgCs8/64qiRGRs49kX0iUG
              CFEG28wm7ah8Y8YbjjphQvxwYb7lLbr+nnGJeBfsvq/cXg9EBpnOGpqxwqwV7R4u
              tZYPMh2zV5XXPqck+DxFoMNmHbonoD65wgfIwmifIkDBnMD/L/OLrw34nDaEIvgk
              2l+zRdBv+PiuCL/tATunrwpUGFj1LP/kOxdwYOJhQTtSW5WAL0czToOYhKeImL+8
              XR0lEUobuYNvPRmt511WncdsCX4mvImUfJtKoze35qrhAgMBAAGjYzBhMA4GA1Ud
              DwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRm8TT8IrjTJlmX
              DU8YZ/0Q3NC/ETAfBgNVHSMEGDAWgBRm8TT8IrjTJlmXDU8YZ/0Q3NC/ETANBgkq
              hkiG9w0BAQsFAAOCAQEAP0yQ90+vhcdwI8FhAEm4DTHZqZfwBUksZdMUJXbtrNGB
              woZifBIOvf8/5hZ/DlQcLazf5jjvRFt6LH5gaVxlxrgT8QBeRBiayQ3LRIATZz8B
              0UNWcKnpZ3Sj7Y1goSsJZ1/S92DzkFaR/EYJUjUxAjjHw54o3aLvv9g8Lz/iJgHt
              +9cGQFvtnLkWN6nZ7ngzhWbRO9k9h6ogmii7jWiaoIfQklfY1ihAN7vA1I4RXqog
              n1n8/KM4CNlkjojLODxX+QY3sig+zlrHMFcaNXDYhuOXtc+Rni8E8uWv/DODfklm
              bBnPGtOZQ/e8zhdbOMmo4s+tL6ty0ci868SRMYPNmQ==
              -----END CERTIFICATE-----
            state: ENABLED
            pemCert: |
              -----BEGIN CERTIFICATE-----
              MIIDSzCCAjOgAwIBAgIUDoA+0+mCre4ckaMRLR1nNgY15M8wDQYJKoZIhvcNAQEL
              BQAwLTETMBEGA1UEChMKR29vZ2xlIExMQzEWMBQGA1UEAxMNU2NlbmFyaW8gVGVz
              dDAeFw0yMDA4MDMyMjE2MzFaFw0zMDA4MDQwODI0MTJaMC0xEzARBgNVBAoTCkdv
              b2dsZSBMTEMxFjAUBgNVBAMTDVNjZW5hcmlvIFRlc3QwggEiMA0GCSqGSIb3DQEB
              AQUAA4IBDwAwggEKAoIBAQDDtxSu7+hZ7wJG2q0eSdJkHuB4zIYKQAcjQhJsh8d3
              OFrq1PyE3xI1/N0/luY9kJ/0fEtgRgUjwfBdfMzMCuqgCs8/64qiRGRs49kX0iUG
              CFEG28wm7ah8Y8YbjjphQvxwYb7lLbr+nnGJeBfsvq/cXg9EBpnOGpqxwqwV7R4u
              tZYPMh2zV5XXPqck+DxFoMNmHbonoD65wgfIwmifIkDBnMD/L/OLrw34nDaEIvgk
              2l+zRdBv+PiuCL/tATunrwpUGFj1LP/kOxdwYOJhQTtSW5WAL0czToOYhKeImL+8
              XR0lEUobuYNvPRmt511WncdsCX4mvImUfJtKoze35qrhAgMBAAGjYzBhMA4GA1Ud
              DwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRm8TT8IrjTJlmX
              DU8YZ/0Q3NC/ETAfBgNVHSMEGDAWgBRm8TT8IrjTJlmXDU8YZ/0Q3NC/ETANBgkq
              hkiG9w0BAQsFAAOCAQEAP0yQ90+vhcdwI8FhAEm4DTHZqZfwBUksZdMUJXbtrNGB
              woZifBIOvf8/5hZ/DlQcLazf5jjvRFt6LH5gaVxlxrgT8QBeRBiayQ3LRIATZz8B
              0UNWcKnpZ3Sj7Y1goSsJZ1/S92DzkFaR/EYJUjUxAjjHw54o3aLvv9g8Lz/iJgHt
              +9cGQFvtnLkWN6nZ7ngzhWbRO9k9h6ogmii7jWiaoIfQklfY1ihAN7vA1I4RXqog
              n1n8/KM4CNlkjojLODxX+QY3sig+zlrHMFcaNXDYhuOXtc+Rni8E8uWv/DODfklm
              bBnPGtOZQ/e8zhdbOMmo4s+tL6ty0ci868SRMYPNmQ==
              -----END CERTIFICATE-----
            caCertificateDescription:
              subjectDescription:
                subject:
                  organization: Google LLC
                commonName: Scenario Test
                subjectAltName: {}
                hexSerialNumber: 0e803ed3e982adee1c91a3112d1d67360635e4cf
                lifetime: 315569261s
                notBeforeTime: '2020-08-03T22:16:31.664700270Z'
                notAfterTime: '2030-08-04T08:24:12.664700270Z'
              configValues:
                keyUsage:
                  baseKeyUsage:
                    certSign: true
                    crlSign: true
                caOptions:
                  isCa: true
              publicKey: {}
              subjectKeyId:
                keyId: 66f134fc22b8d32659970d4f1867fd10dcd0bf11
              authorityKeyId:
                keyId: 66f134fc22b8d32659970d4f1867fd10dcd0bf11
            gcsBucket: $$bucket$$
            accessUrls:
              caCertificateAccessUrl: http://$$bucket$$.storage.googleapis.com/975f3e773812284a61ea/ca.crt
              crlAccessUrl: http://$$bucket$$.storage.googleapis.com/975f3e773812284a61ea/crl.crl
            createTime: '2020-08-03T22:16:31.632807239Z'
            updateTime: '2020-08-03T22:16:32.598144915Z'
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$:disable?alt=json
          method: POST
          headers: {}
          body:
            text:
              matches: '.*"requestId": "[a-f0-9-]+".*'
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '551'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1596492994545-5ac007dd388fb-73abbfe3-0ce17924
            metadata:
              '@type': type.googleapis.com/google.cloud.security.privateca.v1beta1.OperationMetadata
              createTime: '2020-08-03T22:16:34.559716832Z'
              target: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$
              verb: disable
              requestedCancellation: false
              apiVersion: v1beta1
            done: false
        poll_operation: true
    - expect_progress_tracker:
        message: Disabling Root CA
        status: SUCCESS
    - expect_stderr: |
        Disabled Root CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots delete $$ca-name$$ --location $$location$$
    cleanup_for: ca-name
    events:
    - expect_prompt_continue:
        message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$]
          for deletion in 30 days
        user_input: y
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '4526'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$
            type: SELF_SIGNED
            config:
              subjectConfig:
                subject:
                  organization: Google LLC
                commonName: Scenario Test
                subjectAltName: {}
              reusableConfig:
                reusableConfig: projects/privateca-data/locations/$$location$$/reusableConfigs/root-unconstrained
            lifetime: 315569261s
            cloudKmsKeyVersion: $$kms-key$$/cryptoKeyVersions/1
            issuingOptions:
              includeCaCertUrl: true
              includeCrlAccessUrl: true
            pemIssuerCertChain:
            - |
              -----BEGIN CERTIFICATE-----
              MIIDSzCCAjOgAwIBAgIUDoA+0+mCre4ckaMRLR1nNgY15M8wDQYJKoZIhvcNAQEL
              BQAwLTETMBEGA1UEChMKR29vZ2xlIExMQzEWMBQGA1UEAxMNU2NlbmFyaW8gVGVz
              dDAeFw0yMDA4MDMyMjE2MzFaFw0zMDA4MDQwODI0MTJaMC0xEzARBgNVBAoTCkdv
              b2dsZSBMTEMxFjAUBgNVBAMTDVNjZW5hcmlvIFRlc3QwggEiMA0GCSqGSIb3DQEB
              AQUAA4IBDwAwggEKAoIBAQDDtxSu7+hZ7wJG2q0eSdJkHuB4zIYKQAcjQhJsh8d3
              OFrq1PyE3xI1/N0/luY9kJ/0fEtgRgUjwfBdfMzMCuqgCs8/64qiRGRs49kX0iUG
              CFEG28wm7ah8Y8YbjjphQvxwYb7lLbr+nnGJeBfsvq/cXg9EBpnOGpqxwqwV7R4u
              tZYPMh2zV5XXPqck+DxFoMNmHbonoD65wgfIwmifIkDBnMD/L/OLrw34nDaEIvgk
              2l+zRdBv+PiuCL/tATunrwpUGFj1LP/kOxdwYOJhQTtSW5WAL0czToOYhKeImL+8
              XR0lEUobuYNvPRmt511WncdsCX4mvImUfJtKoze35qrhAgMBAAGjYzBhMA4GA1Ud
              DwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRm8TT8IrjTJlmX
              DU8YZ/0Q3NC/ETAfBgNVHSMEGDAWgBRm8TT8IrjTJlmXDU8YZ/0Q3NC/ETANBgkq
              hkiG9w0BAQsFAAOCAQEAP0yQ90+vhcdwI8FhAEm4DTHZqZfwBUksZdMUJXbtrNGB
              woZifBIOvf8/5hZ/DlQcLazf5jjvRFt6LH5gaVxlxrgT8QBeRBiayQ3LRIATZz8B
              0UNWcKnpZ3Sj7Y1goSsJZ1/S92DzkFaR/EYJUjUxAjjHw54o3aLvv9g8Lz/iJgHt
              +9cGQFvtnLkWN6nZ7ngzhWbRO9k9h6ogmii7jWiaoIfQklfY1ihAN7vA1I4RXqog
              n1n8/KM4CNlkjojLODxX+QY3sig+zlrHMFcaNXDYhuOXtc+Rni8E8uWv/DODfklm
              bBnPGtOZQ/e8zhdbOMmo4s+tL6ty0ci868SRMYPNmQ==
              -----END CERTIFICATE-----
            state: DISABLED
            pemCert: |
              -----BEGIN CERTIFICATE-----
              MIIDSzCCAjOgAwIBAgIUDoA+0+mCre4ckaMRLR1nNgY15M8wDQYJKoZIhvcNAQEL
              BQAwLTETMBEGA1UEChMKR29vZ2xlIExMQzEWMBQGA1UEAxMNU2NlbmFyaW8gVGVz
              dDAeFw0yMDA4MDMyMjE2MzFaFw0zMDA4MDQwODI0MTJaMC0xEzARBgNVBAoTCkdv
              b2dsZSBMTEMxFjAUBgNVBAMTDVNjZW5hcmlvIFRlc3QwggEiMA0GCSqGSIb3DQEB
              AQUAA4IBDwAwggEKAoIBAQDDtxSu7+hZ7wJG2q0eSdJkHuB4zIYKQAcjQhJsh8d3
              OFrq1PyE3xI1/N0/luY9kJ/0fEtgRgUjwfBdfMzMCuqgCs8/64qiRGRs49kX0iUG
              CFEG28wm7ah8Y8YbjjphQvxwYb7lLbr+nnGJeBfsvq/cXg9EBpnOGpqxwqwV7R4u
              tZYPMh2zV5XXPqck+DxFoMNmHbonoD65wgfIwmifIkDBnMD/L/OLrw34nDaEIvgk
              2l+zRdBv+PiuCL/tATunrwpUGFj1LP/kOxdwYOJhQTtSW5WAL0czToOYhKeImL+8
              XR0lEUobuYNvPRmt511WncdsCX4mvImUfJtKoze35qrhAgMBAAGjYzBhMA4GA1Ud
              DwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRm8TT8IrjTJlmX
              DU8YZ/0Q3NC/ETAfBgNVHSMEGDAWgBRm8TT8IrjTJlmXDU8YZ/0Q3NC/ETANBgkq
              hkiG9w0BAQsFAAOCAQEAP0yQ90+vhcdwI8FhAEm4DTHZqZfwBUksZdMUJXbtrNGB
              woZifBIOvf8/5hZ/DlQcLazf5jjvRFt6LH5gaVxlxrgT8QBeRBiayQ3LRIATZz8B
              0UNWcKnpZ3Sj7Y1goSsJZ1/S92DzkFaR/EYJUjUxAjjHw54o3aLvv9g8Lz/iJgHt
              +9cGQFvtnLkWN6nZ7ngzhWbRO9k9h6ogmii7jWiaoIfQklfY1ihAN7vA1I4RXqog
              n1n8/KM4CNlkjojLODxX+QY3sig+zlrHMFcaNXDYhuOXtc+Rni8E8uWv/DODfklm
              bBnPGtOZQ/e8zhdbOMmo4s+tL6ty0ci868SRMYPNmQ==
              -----END CERTIFICATE-----
            caCertificateDescription:
              subjectDescription:
                subject:
                  organization: Google LLC
                commonName: Scenario Test
                subjectAltName: {}
                hexSerialNumber: 0e803ed3e982adee1c91a3112d1d67360635e4cf
                lifetime: 315569261s
                notBeforeTime: '2020-08-03T22:16:31.664700270Z'
                notAfterTime: '2030-08-04T08:24:12.664700270Z'
              configValues:
                keyUsage:
                  baseKeyUsage:
                    certSign: true
                    crlSign: true
                caOptions:
                  isCa: true
              publicKey: {}
              subjectKeyId:
                keyId: 66f134fc22b8d32659970d4f1867fd10dcd0bf11
              authorityKeyId:
                keyId: 66f134fc22b8d32659970d4f1867fd10dcd0bf11
            gcsBucket: $$bucket$$
            accessUrls:
              caCertificateAccessUrl: http://$$bucket$$.storage.googleapis.com/975f3e773812284a61ea/ca.crt
              crlAccessUrl: http://$$bucket$$.storage.googleapis.com/975f3e773812284a61ea/crl.crl
            createTime: '2020-08-03T22:16:31.632807239Z'
            updateTime: '2020-08-03T22:16:32.598144915Z'
          status: 200
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$:scheduleDelete?alt=json
          method: POST
          headers: {}
          body:
            text:
              matches: '.*"requestId": "[a-f0-9-]+".*'
        return_response:
          headers:
            cache-control: private
            content-length: '558'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1596492996093-5ac007deb2623-d2e896ed-267b8cfe
            metadata:
              '@type': type.googleapis.com/google.cloud.security.privateca.v1beta1.OperationMetadata
              createTime: '2020-08-03T22:16:36.106792004Z'
              target: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$
              verb: scheduleDelete
              requestedCancellation: false
              apiVersion: v1beta1
            done: false
          status: 200
    - expect_progress_tracker:
        message: Scheduling Root CA for deletion
        status: SUCCESS
    - expect_stderr:
        matches: Scheduled Root CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-name$$\]
          for deletion at [0-9-:TZ]+\.
    - expect_exit:
        code: 0
