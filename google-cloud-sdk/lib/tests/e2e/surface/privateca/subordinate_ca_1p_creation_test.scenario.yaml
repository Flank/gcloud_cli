title: Issue a certificate from an existing root, describe it, and revoke it.
release_tracks: [BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - command: privateca roots create $$root-ca-id$$ --kms-key-version $$kms-key$$/cryptoKeyVersions/1
      --subject "CN=Certificate Issuance E2E Test, O=Google LLC" --reusable-config
      root-unconstrained --bucket $$bucket$$
  - progress_tracker: []
  - stderr: |
      Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$].
- execute:
  - command: privateca subordinates create $$ca-id$$ --issuer $$root-ca-id$$ --issuer-location
      $$location$$ --subject "CN=Scenario Test,O=Google LLC" --kms-key-version $$kms-key$$/cryptoKeyVersions/1
      --reusable-config subordinate-mtls-pathlen-0 --bucket $$bucket$$
  - progress_tracker:
    - message: Creating Certificate Authority.
    - status: SUCCESS
  - progress_tracker:
    - message: Activating CA.
    - status: SUCCESS
  - stderr: |
      Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$].
- execute:
  - command: privateca subordinates disable $$ca-id$$ --location $$location$$
  - progress_tracker:
    - message: Disabling Subordinate CA
    - status: SUCCESS
  - stderr: |
      Disabled Subordinate CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$].
- execute:
  - command: privateca subordinates delete $$ca-id$$ --location $$location$$
  - prompt:
    - message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$]
        for deletion in 30 days
    - input: y
  - progress_tracker:
    - message: Scheduling Subordinate CA for deletion
    - status: SUCCESS
  - stderr: |-
      Scheduled Subordinate CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$\] for deletion at [-0-9TZ:]+\.
      $
- execute:
  - command: privateca certificates revoke --certificate $$subordinate-cert-name$$
  - prompt:
    - message: You are about to revoke Certificate [$$subordinate-cert-name$$]
    - input: y
  - stderr: |-
      Revoked certificate \[$$subordinate-cert-name$$\] at [-0-9TZ:.]+\.
      $
- execute:
  - command: privateca roots disable $$root-ca-id$$ --location $$location$$
  - progress_tracker:
    - message: Disabling Root CA
    - status: SUCCESS
  - stderr: |
      Disabled Root CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$].
- execute:
  - command: privateca roots delete $$root-ca-id$$ --location $$location$$
  - prompt:
    - message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$]
        for deletion in 30 days
    - input: y
  - progress_tracker:
    - message: Scheduling Root CA for deletion
    - status: SUCCESS
  - stderr: |-
      Scheduled Root CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$\] for deletion at [-0-9TZ:.]+\.
      $
actions:
- define_reference:
    reference: project
    value: cloud-sdk-integration-testing
- define_reference:
    reference: location
    value: us-central1
- define_reference:
    reference: kms-key
    value: projects/cloud-sdk-integration-testing/locations/us-central1/keyRings/do-not-delete-keyring/cryptoKeys/do-not-delete-key-rsa-2048
- define_reference:
    reference: bucket
    value: do-not-delete-privateca-gcloud-tests
- generate_resource_id:
    reference: root-ca-id
    prefix: gcloud-e2e
    delimiter: '-'
- generate_resource_id:
    reference: ca-id
    prefix: e2e
    delimiter: '-'
- set_property:
    privateca/location: us-central1
- execute_command:
    command: privateca roots create $$root-ca-id$$ --kms-key-version $$kms-key$$/cryptoKeyVersions/1
      --subject "CN=Certificate Issuance E2E Test, O=Google LLC" --reusable-config
      root-unconstrained --bucket $$bucket$$
    validation_only: true
    validate_remote_api_calls: false
    events:
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - expect_progress_tracker:
      - message: Creating Certificate Authority.
      - status: SUCCESS
    - expect_stderr: |
        Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create $$ca-id$$ --issuer $$root-ca-id$$ --issuer-location
      $$location$$ --subject "CN=Scenario Test,O=Google LLC" --kms-key-version $$kms-key$$/cryptoKeyVersions/1
      --reusable-config subordinate-mtls-pathlen-0 --bucket $$bucket$$
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '514'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            locations:
            - name: projects/$$project$$/locations/europe-west1
              locationId: europe-west1
            - name: projects/$$project$$/locations/us-central1
              locationId: us-central1
            - name: projects/$$project$$/locations/us-east1
              locationId: us-east1
            - name: projects/$$project$$/locations/us-west1
              locationId: us-west1
        repeatable: true
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/$$project$$:testIamPermissions?alt=json
          method: POST
          headers: {}
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            cache-control: private
            content-length: '103'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            cache-control: private
            content-length: '66'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificates.create
        return_response:
          headers:
            cache-control: private
            content-length: '66'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            permissions:
            - privateca.certificates.create
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/certificateAuthorities/prod-root
            state: ENABLED
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$?alt=json&projection=full
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '2666'
            content-type: application/json; charset=UTF-8
            etag: CBw=
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUnu173L2odj_IxgTs02BCG5CICPnUEAcB_itfcIKBzCfHnZAAkp6Hze96Ym1diRQkRc9v2bo37jZ5kydVw3E7Q9vCmUzw
          body:
            kind: storage#bucket
            selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$
            id: $$bucket$$
            name: $$bucket$$
            projectNumber: '166289904856'
            metageneration: '28'
            location: US-CENTRAL1
            storageClass: STANDARD
            etag: CBw=
            timeCreated: '2020-06-01T21:43:18.118Z'
            updated: '2020-06-01T22:32:15.735Z'
            acl:
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-editors-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-editors-166289904856
              bucket: $$bucket$$
              entity: project-editors-166289904856
              role: OWNER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: editors
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-owners-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-owners-166289904856
              bucket: $$bucket$$
              entity: project-owners-166289904856
              role: OWNER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: owners
            - kind: storage#bucketAccessControl
              id: $$bucket$$/project-viewers-166289904856
              selfLink: https://www.googleapis.com/storage/v1/b/$$bucket$$/acl/project-viewers-166289904856
              bucket: $$bucket$$
              entity: project-viewers-166289904856
              role: READER
              etag: CBw=
              projectTeam:
                projectNumber: '166289904856'
                team: viewers
            defaultObjectAcl:
            - kind: storage#objectAccessControl
              entity: allUsers
              role: READER
              etag: CBw=
            owner:
              entity: project-owners-166289904856
            versioning:
              enabled: true
            iamConfiguration:
              bucketPolicyOnly:
                enabled: false
              uniformBucketLevelAccess:
                enabled: false
            locationType: region
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/$$project$$/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '290'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: operations/finished.DONE_OPERATION
            done: true
            response:
              '@type': type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity
              email: service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
              uniqueId: '100826546240526346186'
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '295'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            version: 1
            etag: BwWnDV3jSU0=
            bindings:
            - role: roles/cloudkms.signerVerifier
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/viewer
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        # Skipped if the existing IAM policy has correct IAM bindings.
        optional: true
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/$$kms-key$$:setIamPolicy?alt=json
          method: POST
          body:
            json: {}
        return_response:
          headers:
            cache-control: private
            content-length: '295'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            version: 1
            etag: BwWnDio4DvY=
            bindings:
            - role: roles/cloudkms.signerVerifier
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/viewer
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$/iam?alt=json&optionsRequestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            cache-control: private, max-age=0, must-revalidate, no-transform
            content-length: '904'
            content-type: application/json; charset=UTF-8
            etag: CBw=
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUkjCg0tHYOD4vLTSWyJa-pUpPiuE9DAojhS9WQdCH6av-oZseHjerN1qNsxVTi4JQQaenqIQdk3QtUstL4ETo08iwOhrg
          body:
            kind: storage#policy
            resourceId: projects/_/buckets/$$bucket$$
            version: 1
            etag: CBw=
            bindings:
            - role: roles/storage.legacyBucketOwner
              members:
              - projectEditor:$$project$$
              - projectOwner:$$project$$
            - role: roles/storage.legacyBucketReader
              members:
              - projectViewer:$$project$$
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/storage.objectAdmin
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - api_call:
        # Skipped if the existing IAM policy has correct IAM bindings.
        optional: true
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/$$bucket$$/iam?alt=json
          method: PUT
          body:
            json: {}
        return_response:
          headers:
            cache-control: no-cache, no-store, max-age=0, must-revalidate
            content-length: '904'
            content-type: application/json; charset=UTF-8
            etag: CB0=
            pragma: no-cache
            status: '200'
            x-guploader-customer: apiary_cloudstorage_metadata
            x-guploader-request-result: success
            x-guploader-upload-result: success
            x-guploader-uploadid: AAANsUk_6_hf_92nmdN5LL9wGdr8EWQddZlyvODDxl1B28sru025a2PnpsoWwHnYGzvzVPu97tGVRik6BYdN0V6kfG0xwHA_mA
          body:
            kind: storage#policy
            resourceId: projects/_/buckets/$$bucket$$
            version: 1
            etag: CB0=
            bindings:
            - role: roles/storage.legacyBucketOwner
              members:
              - projectEditor:$$project$$
              - projectOwner:$$project$$
            - role: roles/storage.legacyBucketReader
              members:
              - projectViewer:$$project$$
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
            - role: roles/storage.objectAdmin
              members:
              - serviceAccount:service-462803083913@gcp-sa-privateca.iam.gserviceaccount.com
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        poll_operation: true
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities\?alt=json&certificateAuthorityId=$$ca-id$$&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: $$kms-key$$/cryptoKeyVersions/1
              gcsBucket: $$bucket$$
              config:
                reusableConfig:
                  reusableConfig: projects/privateca-data/locations/$$location$$/reusableConfigs/subordinate-mtls-pathlen-0
                subjectConfig:
                  commonName: Scenario Test
                  subject:
                    organization: Google LLC
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: true
              type: SUBORDINATE
              lifetime: 94670778s
        return_response:
          headers:
            cache-control: private
            content-length: '550'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1591054164105-5a70e2a451942-846895d2-79ba46cc
            metadata:
              '@type': type.googleapis.com/google.cloud.security.privateca.v1beta1.OperationMetadata
              createTime: '2020-06-01T23:29:24.115774362Z'
              target: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
              verb: create
              requestedCancellation: false
              apiVersion: v1beta1
            done: false
    - expect_progress_tracker:
        message: Creating Certificate Authority.
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
              MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
              VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
              RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
              pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
              LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
              kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
              W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
              AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
              3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
              VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
              uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
              gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
              MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
              kI5YH9kEOVOu
              -----END CERTIFICATE REQUEST-----
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$/certificates\?alt=json&certificateId=subordinate-\d{8}-[A-Z0-9]{3}-[A-Z0-9]{3}&requestId=[^&]+$
          method: POST
          body:
            text:
              matches: .*projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$/certificates/subordinate-\d{8}-[A-Z0-9]{3}-[A-Z0-9]{3}.*
            json:
              lifetime: 94670778s
        return_response:
          headers:
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$/certificates/subordinate-20200220-ABC-DEF
            pemCertificate: |
              -----BEGIN CERTIFICATE-----
              MIIEKDCCAtygAwIBAgIVAKDKBUAIdi0prnBNNn/6cS/r1mfIMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTk0MTIwWhcN
              MzAwMzExMDU0OTAxWjBnMQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxGDAW
              BgNVBAMTD1NlcnZlciBUTFMgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
              AQoCggEBAI0nmjtcKAI009Yh0x8w/niLDqpNcsp1gD1rAR1p5AvE2js95E0z8/P6
              afZGWunE2hO2diMsUgp3EaF1o9LEFDtoUsUK6XojagTuZuaBVFL8UITzNBgZAPjN
              HbymYvfmoJ5FYDHGibD96dFHmPhVTGRz7VZULmWNiNP4rTiUCC2/chBPfS7TbEoK
              sQMtIF2QyBZ5BNvTTk/BdKnVDHjp5zayujBktTDifHqVQrC+44RQdD0G/SpsnLBe
              MVyR+RyJz8vuW3INYD8ksL8n7qr+dCSAPCuVJLSVkRy8ghG4/24AomOGjePz//tT
              j11bWXARNwdZuB4WcX08TWR+rYE/lJMCAwEAAaNWMFQwEgYDVR0TAQH/BAgwBgEB
              /wIBADAdBgNVHQ4EFgQUJ62PA7yyHcai2nLdvYrKnPf2mKIwHwYDVR0jBBgwFoAU
              J62PA7yyHcai2nLdvYrKnPf2mKIwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQME
              AgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQBIYFii
              PWUOqvxuwS+Anvanp6E8rrG8RuDEihVYNPMT4spodIJxP59RyU2JWYxZ6IDnX8oJ
              CLaJMDW6GQKxfbj4pjCJOYk3BinrN2Ie7s7Sxtve9twturIura2wCpZtDzb8Dp1d
              gsN4HtE7XRQbNlK4oZ5ehHzEoChMB2wosiuff7jvCiXtfakmZdA0iy15OyJTJlMD
              axp9I3CHs3mOw+AngGRp8AgJtynTV2bEBaaP7pPz8xZryIyONmvFI7djI8qcnnyl
              cdfxf+99tenQXw24EifjaEbGAT7zu23MRJAMpt7lacPgdcKtZNLXlzcS/RGenjMN
              YhSedspfcIJw/STP
              -----END CERTIFICATE-----
            pemCertificateChain:
            - |
              -----BEGIN CERTIFICATE-----
              MIIENTCCAumgAwIBAgIVAKph5dh4fJiGQHCPRaCattongQLwMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTgxNDQ4WhcN
              MzAwMzExMDQyMjI5WjB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAj
              BgNVBAMTHFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3
              DQEBAQUAA4IBDwAwggEKAoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEd
              aeQLxNo7PeRNM/Pz+mn2RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbm
              gVRS/FCE8zQYGQD4zR28pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04
              lAgtv3IQT30u02xKCrEDLSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKw
              vuOEUHQ9Bv0qbJywXjFckfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIR
              uP9uAKJjho3j8//7U49dW1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGjVjBUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCetjwO8sh3Gotpy3b2Kypz39pii
              MB8GA1UdIwQYMBaAFCetjwO8sh3Gotpy3b2Kypz39piiMEEGCSqGSIb3DQEBCjA0
              oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIBBQCi
              AwIBIAOCAQEANqKeGZY7oDdsyPC8lP2ZR6ogaUX6KBLGLspfZ6Lb3RKCoe0NQoc7
              GEAaunoGJnj7wTW1WoqBYdmRQBEBy6nVT40giuDHFGHIMwF7dBoxsTc60yHpyJid
              HKBGWXo8Lsald+xalmjLLW3dmV0SF5j6pnHeIgWc2VCikInFDrD3wDvMBMuJFIsX
              NbgncmafjGPvMyNueOrgZDJ9MQNYN53Fvx5owqtAMhbG6yHvT6ytoQ44WZP8svYr
              Cxik0WWaDMtDTKP2uJ/dNAkVKQ5xRxtRt9Zzax4kTbLCWbC4+ugH1tyhzcuMJkJN
              poYZu+i6CrUTys/chYitvwy2aAaz5Csf5Q==
              -----END CERTIFICATE-----
        expect_response:
          body:
            json: {}
          extract_references:
          - field: name
            reference: subordinate-cert-name
          - field: pemCertificateChain[0]
            reference: pem-0
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$:activate?alt=json
          method: POST
          body:
            json: {}
        return_response:
          headers:
            status: '200'
          body:
            name: projects/$$project$$/locations/$$location$$/operations/activate-operation
            done: false
    - expect_progress_tracker:
        message: Activating CA.
        status: SUCCESS
    - expect_stderr: |
        Created Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates disable $$ca-id$$ --location $$location$$
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '6059'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
            type: SUBORDINATE
            state: ENABLED
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$:disable?alt=json
          method: POST
          headers: {}
          body:
            text:
              matches: '.*"requestId": "[a-f0-9-]+".*'
        return_response:
          status: 200
          headers:
            cache-control: private
            content-length: '543'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1599021832702-5ae4d48538875-09ec9060-a6e297ba
            metadata:
              '@type': type.googleapis.com/google.cloud.security.privateca.v1beta1.OperationMetadata
              createTime: '2020-09-02T04:43:52.710886160Z'
              target: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
              verb: disable
              requestedCancellation: false
              apiVersion: v1beta1
            done: false
        poll_operation: true
    - expect_progress_tracker:
        message: Disabling Subordinate CA
        status: SUCCESS
    - expect_stderr: |
        Disabled Subordinate CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates delete $$ca-id$$ --location $$location$$
    cleanup_for: ca-id
    events:
    - expect_prompt_continue:
        message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$]
          for deletion in 30 days
        user_input: y
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '6060'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
            type: SUBORDINATE
            state: DISABLED
          status: 200
    - api_call:
        poll_operation: false
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$:scheduleDelete?alt=json
          method: POST
          headers: {}
          body:
            text:
              matches: '.*"requestId": "[a-f0-9-]+".*'
        return_response:
          headers:
            cache-control: private
            content-length: '550'
            content-type: application/json; charset=UTF-8
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1599021834341-5ae4d486c8e5e-3d958d2d-8dbb28f3
            metadata:
              '@type': type.googleapis.com/google.cloud.security.privateca.v1beta1.OperationMetadata
              createTime: '2020-09-02T04:43:54.354744339Z'
              target: projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
              verb: scheduleDelete
              requestedCancellation: false
              apiVersion: v1beta1
            done: false
            response:
              name: $$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
              deleteTime: '2018-10-17T15:14:00.105-07:00'
          status: 200
        expect_response:
          extract_references:
          - field: name
            reference: operation
          body:
            json: {}
    - api_call:
        repeatable: true
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/$$operation$$?alt=json
          method: GET
          body: none
        return_response:
          body:
            name: projects/$$project$$/locations/$$location$$/operations/operation-1591054167231-5a70e2a74cabe-edadc0c5-2a155be1
            done: true
            response:
              name: $$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$
              deleteTime: '2018-10-17T15:14:00.105-07:00'
    - expect_progress_tracker:
        message: Scheduling Subordinate CA for deletion
        status: SUCCESS
    - expect_stderr:
        matches: |
          Scheduled Subordinate CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$ca-id$$\] for deletion at [-0-9TZ:]+\.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca certificates revoke --certificate $$subordinate-cert-name$$
    validation_only: true
    validate_remote_api_calls: false
    events:
    - expect_prompt_continue:
        message: You are about to revoke Certificate [$$subordinate-cert-name$$]
        user_input: y
    - expect_stderr:
        matches: |
          Revoked certificate \[$$subordinate-cert-name$$\] at [-0-9TZ:.]+\.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots disable $$root-ca-id$$ --location $$location$$
    validation_only: true
    validate_remote_api_calls: false
    events:
    - expect_progress_tracker:
        message: Disabling Root CA
        status: SUCCESS
    - expect_stderr: |
        Disabled Root CA [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots delete $$root-ca-id$$ --location $$location$$
    cleanup_for: root-ca-id
    validation_only: true
    validate_remote_api_calls: false
    events:
    - expect_prompt_continue:
        message: You are about to schedule Certificate Authority [projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$]
          for deletion in 30 days
        user_input: y
    - expect_progress_tracker:
        message: Scheduling Root CA for deletion
        status: SUCCESS
    - expect_stderr:
        matches: |
          Scheduled Root CA \[projects/$$project$$/locations/$$location$$/certificateAuthorities/$$root-ca-id$$\] for deletion at [-0-9TZ:.]+\.
    - expect_exit:
        code: 0
