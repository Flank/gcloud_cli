title: serverless services deploy, describe, update and delete.
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- set_property: run/platform managed
- execute:
  - command: run deploy --region us-central1  --image gcr.io/knative-samples/helloworld-nodejs
      --labels label1=one,label2=two --max-instances default --allow-unauthenticated
      $$service-name2$$
  - stderr: |
      Deploying container to Cloud Run service [$$service-name2$$] in project [cloud-sdk-integration-testing] region [us-central1]
  - staged_progress_tracker:
    - message: Deploying new service...
    - status: SUCCESS
    - succeeded_stages: &id005
      - Setting IAM Policy...
      - Creating Revision...
      - Routing traffic...
  - stderr: |
      Service [$$service-name2$$] revision [$$service2-revision-name$$] has been deployed and is serving 100 percent of traffic.
      Service URL: https://$$service-name2$$-ixwc4imo7a-uc.a.run.app
- execute:
  - command: run services delete $$service-name2$$ --region us-central1 --quiet
  - stderr: |
      Deleted service [$$service-name2$$].
actions:
- set_property:
    run/platform: managed
- generate_resource_id:
    reference: service-name2
    prefix: service-name2
- execute_command:
    command: run deploy --region us-central1  --image gcr.io/knative-samples/helloworld-nodejs
      --labels label1=one,label2=two --max-instances default --allow-unauthenticated
      $$service-name2$$
    events:
    - api_call:
        expect_request:
          uri: https://us-central1-run.googleapis.com/apis/serving.knative.dev/v1/namespaces/cloud-sdk-integration-testing/services/$$service-name2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '1020'
            content-type: application/json; charset=UTF-8
            status: '404'
          body:
            error:
              code: 404
              message: Resource '$$service-name2$$' of kind 'SERVICE' in region 'us-central1'
                in project 'cloud-sdk-integration-testing' does not exist.
              status: NOT_FOUND
              details:
              - '@type': type.googleapis.com/google.rpc.DebugInfo
                detail: |-
                  [ORIGINAL ERROR] generic::not_found: userFacingMessage: Resource '$$service-name2$$' of kind 'SERVICE' in region 'us-central1' in project 'cloud-sdk-integration-testing' does not exist.;
                  com.google.cloud.eventprocessing.serverless.error.NotFoundException: userFacingMessage: Resource '$$service-name2$$' of kind 'SERVICE' in region 'us-central1' in project 'cloud-sdk-integration-testing' does not exist.;  Code: NOT_FOUND [google.rpc.error_details_ext] { message: "Resource \'$$service-name2$$\' of kind \'SERVICE\' in region \'us-central1\' in project \'cloud-sdk-integration-testing\' does not exist." }
    - expect_stderr: |
        Deploying container to Cloud Run service [$$service-name2$$] in project [cloud-sdk-integration-testing] region [us-central1]
    - api_call:
        expect_request:
          uri: https://us-central1-run.googleapis.com/apis/serving.knative.dev/v1/namespaces/cloud-sdk-integration-testing/services?alt=json
          method: POST
          headers: {}
          body:
            json:
              apiVersion: serving.knative.dev/v1
              kind: Service
              metadata:
                annotations:
                  client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
                labels:
                  label1: one
                  label2: two
                name: $$service-name2$$
                namespace: cloud-sdk-integration-testing
              spec:
                template:
                  metadata:
                    labels:
                      label1: one
                      label2: two
                  spec:
                    containers:
                    - image: gcr.io/knative-samples/helloworld-nodejs
              status:
                address: {}
        return_response:
          headers:
            cache-control: private
            content-length: '1761'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            apiVersion: serving.knative.dev/v1
            kind: Service
            metadata:
              name: $$service-name2$$
              namespace: '462803083913'
              selfLink: /apis/serving.knative.dev/v1/namespaces/462803083913/services/$$service-name2$$
              uid: 9429ca22-b30d-4b35-823d-84fecf7ee4fd
              resourceVersion: AAWX3rCfbnE
              generation: 1
              labels:
                label1: one
                label2: two
                cloud.googleapis.com/location: us-central1
              annotations:
                run.googleapis.com/client-name: gcloud
                serving.knative.dev/creator: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                serving.knative.dev/lastModifier: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
              creationTimestamp: '2019-11-21T17:33:05.325681Z'
            spec:
              template:
                metadata:
                  name: service-name2-20191121-173211-265d-00001-qor
                  labels:
                    label1: one
                    label2: two
                  annotations:
                    run.googleapis.com/client-name: gcloud
                    client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
                spec:
                  containerConcurrency: 80
                  containers:
                  - image: gcr.io/knative-samples/helloworld-nodejs
              traffic:
              - percent: 100
                latestRevision: true
            status: {}
    - api_call:
        expect_request:
          uri: https://run.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-central1/services/$$service-name2$$:getIamPolicy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '21'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            etag: ACAB
    - api_call:
        expect_request:
          uri: https://run.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-central1/services/$$service-name2$$:setIamPolicy?alt=json
          method: POST
          headers: {}
          body:
            json:
              policy:
                bindings:
                - members:
                  - allUsers
                  role: roles/run.invoker
                etag: ACAB
        return_response:
          headers:
            cache-control: private
            content-length: '159'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            version: 1
            etag: BwWX3rCt4fY=
            bindings:
            - role: roles/run.invoker
              members:
              - allUsers
    - api_call:
        expect_request:
          uri: https://us-central1-run.googleapis.com/apis/serving.knative.dev/v1/namespaces/cloud-sdk-integration-testing/services/$$service-name2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '2727'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            apiVersion: serving.knative.dev/v1
            kind: Service
            metadata:
              name: $$service-name2$$
              namespace: '462803083913'
              selfLink: /apis/serving.knative.dev/v1/namespaces/462803083913/services/$$service-name2$$
              uid: 9429ca22-b30d-4b35-823d-84fecf7ee4fd
              resourceVersion: AAWX3rF4UyA
              generation: 1
              labels:
                label1: one
                label2: two
                cloud.googleapis.com/location: us-central1
              annotations:
                run.googleapis.com/client-name: gcloud
                serving.knative.dev/creator: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                serving.knative.dev/lastModifier: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
              creationTimestamp: '2019-11-21T17:33:05.325681Z'
            spec:
              template:
                metadata:
                  name: service-name2-20191121-173211-265d-00001-qor
                  labels:
                    label1: one
                    label2: two
                  annotations:
                    run.googleapis.com/client-name: gcloud
                    client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
                spec:
                  containerConcurrency: 80
                  containers:
                  - image: gcr.io/knative-samples/helloworld-nodejs
              traffic:
              - percent: 100
                latestRevision: true
            status:
              observedGeneration: 1
              conditions:
              - type: Ready
                status: 'True'
                lastTransitionTime: '2019-11-21T17:33:19.540Z'
              - type: ConfigurationsReady
                status: 'True'
                lastTransitionTime: '2019-11-21T17:33:19.335Z'
              - type: RoutesReady
                status: 'True'
                lastTransitionTime: '2019-11-21T17:33:19.540Z'
              latestReadyRevisionName: service-name2-20191121-173211-265d-00001-qor
              latestCreatedRevisionName: service-name2-20191121-173211-265d-00001-qor
              traffic:
              - revisionName: service-name2-20191121-173211-265d-00001-qor
                percent: 100
                latestRevision: true
              url: https://$$service-name2$$-ixwc4imo7a-uc.a.run.app
              address:
                url: https://$$service-name2$$-ixwc4imo7a-uc.a.run.app
        repeatable: true
    - expect_staged_progress_tracker:
        message: Deploying new service...
        status: SUCCESS
        succeeded_stages: *id005
    - api_call:
        expect_request:
          uri: https://us-central1-run.googleapis.com/apis/serving.knative.dev/v1/namespaces/cloud-sdk-integration-testing/services/$$service-name2$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '2727'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            apiVersion: serving.knative.dev/v1
            kind: Service
            metadata:
              name: $$service-name2$$
              namespace: '462803083913'
              selfLink: /apis/serving.knative.dev/v1/namespaces/462803083913/services/$$service-name2$$
              uid: 9429ca22-b30d-4b35-823d-84fecf7ee4fd
              resourceVersion: AAWX3rF4UyA
              generation: 1
              labels:
                label1: one
                label2: two
                cloud.googleapis.com/location: us-central1
              annotations:
                run.googleapis.com/client-name: gcloud
                serving.knative.dev/creator: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                serving.knative.dev/lastModifier: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
              creationTimestamp: '2019-11-21T17:33:05.325681Z'
            spec:
              template:
                metadata:
                  name: service-name2-20191121-173211-265d-00001-qor
                  labels:
                    label1: one
                    label2: two
                  annotations:
                    run.googleapis.com/client-name: gcloud
                    client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
                spec:
                  containerConcurrency: 80
                  containers:
                  - image: gcr.io/knative-samples/helloworld-nodejs
              traffic:
              - percent: 100
                latestRevision: true
            status:
              observedGeneration: 1
              conditions:
              - type: Ready
                status: 'True'
                lastTransitionTime: '2019-11-21T17:33:19.540Z'
              - type: ConfigurationsReady
                status: 'True'
                lastTransitionTime: '2019-11-21T17:33:19.335Z'
              - type: RoutesReady
                status: 'True'
                lastTransitionTime: '2019-11-21T17:33:19.540Z'
              latestReadyRevisionName: service-name2-20191121-173211-265d-00001-qor
              latestCreatedRevisionName: service-name2-20191121-173211-265d-00001-qor
              traffic:
              - revisionName: service-name2-20191121-173211-265d-00001-qor
                percent: 100
                latestRevision: true
              url: https://$$service-name2$$-ixwc4imo7a-uc.a.run.app
              address:
                url: https://$$service-name2$$-ixwc4imo7a-uc.a.run.app
        expect_response:
          extract_references:
          - field: status.latestCreatedRevisionName
            reference: service2-revision-name
          body:
            json: {}
    - expect_stderr: |
        Service [$$service-name2$$] revision [$$service2-revision-name$$] has been deployed and is serving 100 percent of traffic.
        Service URL: https://$$service-name2$$-ixwc4imo7a-uc.a.run.app
    - expect_exit:
        code: 0
- execute_command:
    # Clean up the test service
    command: run services delete $$service-name2$$ --region us-central1 --quiet
    cleanup_for: service-name2
    events:
    - api_call:
        expect_request:
          uri: https://us-central1-run.googleapis.com/apis/serving.knative.dev/v1/namespaces/cloud-sdk-integration-testing/services/$$service-name2$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '188'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            status: Success
            details:
              name: $$service-name2$$
              group: v1
              kind: service
              uid: 9429ca22-b30d-4b35-823d-84fecf7ee4fd
    - expect_stderr: |
        Deleted service [$$service-name2$$].
    - expect_exit:
        code: 0
