title: serverless services deploy, describe and delete.
release_tracks: [ALPHA]
skip:
  reason: server message has been changed
  bug: b/120772035
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: run deploy --region us-central1 --image gcr.io/knative-samples/helloworld-nodejs
      $$service-name$$
  - stderr: |
      Deploying container to service [$$service-name$$] in project [cloud-sdk-integration-testing]
  - stderr: |
      Creating new service [$$service-name$$]
  - staged_progress_tracker:
    - message: Deploying...
    - status: SUCCESS
  - stderr: |
      Service [$$service-name$$] revision [$$service-name$$.1] has been deployed and is serving traffic at https://$$service-name$$-qj663q45qq-uc.a.run.app
- execute:
  - command: run services describe $$service-name$$ --region us-central1 --format='text(status.conditions.status)'
  - stdout: |
      status.conditions[0].status: True
      status.conditions[0].type:   Ready
      status.conditions[1].status: True
      status.conditions[1].type:   ConfigurationsReady
      status.conditions[2].status: True
      status.conditions[2].type:   RoutesReady
- execute:
  - command: run services delete $$service-name$$ --region us-central1 --quiet
  - stderr: |
      Deleted service [$$service-name$$].
actions:


- generate_resource_id:
    reference: service-name
    prefix: service-name


- execute_command:
    # Use the prebuilt image as documented in serverless quickstart page: https://cloud.google.com/serverless-engine/docs/quickstarts/prebuilt-deploy
    command: run deploy --region us-central1 --image gcr.io/knative-samples/helloworld-nodejs
      $$service-name$$
    events:
    - expect_stderr: |
        Deploying container to service [$$service-name$$] in project [cloud-sdk-integration-testing]
    - api_call:
        expect_request:
          uri: https://us-central1-serverless.googleapis.com/apis/serving.knative.dev/v1alpha1/namespaces/cloud-sdk-integration-testing/services/$$service-name$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '1512'
            content-type: application/json; charset=UTF-8
            status: '404'
          body:
            error:
              code: 404
              message: Resource '$$service-name$$' of kind 'SERVICE' in region 'us-central1'
                in project 'cloud-sdk-integration-testing' does not exist.
              status: NOT_FOUND
              details:
              - '@type': type.googleapis.com/google.rpc.DebugInfo
                detail: |-
                  [ORIGINAL ERROR] generic::not_found: userFacingMessage: Resource '$$service-name$$' of kind 'SERVICE' in region 'us-central1' in project 'cloud-sdk-integration-testing' does not exist.;
                  com.google.cloud.eventprocessing.serverless.error.NotFoundException: userFacingMessage: Resource '$$service-name$$' of kind 'SERVICE' in region 'us-central1' in project 'cloud-sdk-integration-testing' does not exist.;
                  com.google.apps.framework.request.StatusException: <eye3 title='NOT_FOUND'/> generic::NOT_FOUND: userFacingMessage: Resource '$$service-name$$' of kind 'SERVICE' in region 'us-central1' in project 'cloud-sdk-integration-testing' does not exist.;
                  com.google.cloud.eventprocessing.serverless.error.NotFoundException: userFacingMessage: Resource '$$service-name$$' of kind 'SERVICE' in region 'us-central1' in project 'cloud-sdk-integration-testing' does not exist.;  [google.rpc.error_details_ext] { message: "Resource \'$$service-name$$\' of kind \'SERVICE\' in region \'us-central1\' in project \'cloud-sdk-integration-testing\' does not exist." }
    - expect_stderr: |
        Creating new service [$$service-name$$]
    - api_call:
        expect_request:
          uri: https://us-central1-serverless.googleapis.com/apis/serving.knative.dev/v1alpha1/namespaces/cloud-sdk-integration-testing/services?alt=json
          method: POST
          headers: {}
          body:
            json:
              apiVersion: serving.knative.dev/v1alpha1
              kind: Service
              metadata:
                annotations: {}
                initializers: {}
                labels: {}
                name: $$service-name$$
                namespace: cloud-sdk-integration-testing
              spec:
                runLatest:
                  configuration:
                    revisionTemplate:
                      metadata:
                        annotations: {}
                        initializers: {}
                        labels: {}
                      spec:
                        container:
                          image: gcr.io/knative-samples/helloworld-nodejs
              status: {}
        return_response:
          headers:
            cache-control: private
            content-length: '815'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            apiVersion: serving.knative.dev/v1alpha1
            kind: Service
            metadata:
              name: $$service-name$$
              namespace: cloud-sdk-integration-testing
              selfLink: /apis/serving.knative.dev/v1alpha1/namespaces/us-central1.cloud-sdk-integration-testing/services/$$service-name$$
              uid: 6b35d417-b38b-4752-b1a5-e8dd9cd6d563
              resourceVersion: AAV3WjzNXr8
              generation: 1
              creationTimestamp: '2018-10-03T22:05:34.407359Z'
            spec:
              runLatest:
                configuration:
                  revisionTemplate:
                    metadata: {}
                    spec:
                      container:
                        image: gcr.io/knative-samples/helloworld-nodejs
            status: {}
    - api_call:
        expect_request:
          uri: https://us-central1-serverless.googleapis.com/apis/serving.knative.dev/v1alpha1/namespaces/cloud-sdk-integration-testing/services/$$service-name$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '1302'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            apiVersion: serving.knative.dev/v1alpha1
            kind: Service
            metadata:
              name: $$service-name$$
              namespace: cloud-sdk-integration-testing
              selfLink: /apis/serving.knative.dev/v1alpha1/namespaces/us-central1.cloud-sdk-integration-testing/services/$$service-name$$
              uid: 6b35d417-b38b-4752-b1a5-e8dd9cd6d563
              resourceVersion: AAV3Wj2szf8
              generation: 1
              creationTimestamp: '2018-10-03T22:05:34.407359Z'
            spec:
              runLatest:
                configuration:
                  revisionTemplate:
                    metadata: {}
                    spec:
                      container:
                        image: gcr.io/knative-samples/helloworld-nodejs
            status:
              conditions:
              - type: Ready
                status: 'True'
              - type: ConfigurationsReady
                status: 'True'
              - type: RoutesReady
                status: 'True'
              domain: https://$$service-name$$-qj663q45qq-uc.a.run.app
              observedGeneration: 1
              traffic:
              - revisionName: $$service-name$$.1
                percent: 100
        repeatable: true
    - expect_staged_progress_tracker:
        message: Deploying...
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://us-central1-serverless.googleapis.com/apis/serving.knative.dev/v1alpha1/namespaces/cloud-sdk-integration-testing/services/$$service-name$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '1302'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            apiVersion: serving.knative.dev/v1alpha1
            kind: Service
            metadata:
              name: $$service-name$$
              namespace: cloud-sdk-integration-testing
              selfLink: /apis/serving.knative.dev/v1alpha1/namespaces/us-central1.cloud-sdk-integration-testing/services/$$service-name$$
              uid: 6b35d417-b38b-4752-b1a5-e8dd9cd6d563
              resourceVersion: AAV3Wj2szf8
              generation: 1
              creationTimestamp: '2018-10-03T22:05:34.407359Z'
            spec:
              runLatest:
                configuration:
                  revisionTemplate:
                    metadata: {}
                    spec:
                      container:
                        image: gcr.io/knative-samples/helloworld-nodejs
            status:
              conditions:
              - type: Ready
                status: 'True'
              - type: ConfigurationsReady
                status: 'True'
              - type: RoutesReady
                status: 'True'
              domain: https://$$service-name$$-qj663q45qq-uc.a.run.app
              observedGeneration: 1
              traffic:
              - revisionName: $$service-name$$.1
                percent: 100
    - api_call:
        expect_request:
          uri: https://us-central1-serverless.googleapis.com/apis/serving.knative.dev/v1alpha1/namespaces/cloud-sdk-integration-testing/configurations/$$service-name$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '1483'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            apiVersion: serving.knative.dev/v1alpha1
            kind: Configuration
            metadata:
              name: $$service-name$$
              namespace: cloud-sdk-integration-testing
              selfLink: /apis/serving.knative.dev/v1alpha1/namespaces/us-central1.cloud-sdk-integration-testing/configurations/$$service-name$$
              uid: a4a803c7-64d7-4903-a282-dd114950a518
              resourceVersion: AAV3Wj2ezO8
              generation: 1
              creationTimestamp: '2018-10-03T22:05:35.204095Z'
              labels:
                serving.knative.dev/service: $$service-name$$
                serving.knative.dev/route: $$service-name$$
                serving.knative.dev/routeHash: $$service-name$$
              ownerReferences:
              - kind: Service
                name: $$service-name$$
                uid: 6b35d417-b38b-4752-b1a5-e8dd9cd6d563
                apiVersion: serving.knative.dev/v1alpha1
            spec:
              revisionTemplate:
                metadata: {}
                spec:
                  container:
                    image: gcr.io/knative-samples/helloworld-nodejs
            status:
              latestCreatedRevisionName: $$service-name$$.1
              latestReadyRevisionName: $$service-name$$.1
              conditions:
              - type: Ready
                status: 'True'
              observedGeneration: 1
    - expect_stderr:
        matches: Service \[$$service-name$$\] revision \[$$service-name$$.1\] has been deployed and is serving traffic at https://$$service-name$$-.*-uc.a.run.app
    - expect_exit:
        code: 0

- execute_command:
    # Describe the service we just deployed
    command: run services describe $$service-name$$ --region us-central1 --format='text(status.conditions)'
    events:
    - api_call:
        expect_request:
          uri: https://us-central1-serverless.googleapis.com/apis/serving.knative.dev/v1alpha1/namespaces/cloud-sdk-integration-testing/services/$$service-name$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '1302'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            apiVersion: serving.knative.dev/v1alpha1
            kind: Service
            metadata:
              name: $$service-name$$
              namespace: cloud-sdk-integration-testing
              selfLink: /apis/serving.knative.dev/v1alpha1/namespaces/us-central1.cloud-sdk-integration-testing/services/$$service-name$$
              uid: 6b35d417-b38b-4752-b1a5-e8dd9cd6d563
              resourceVersion: AAV3Wj2szf8
              generation: 1
              creationTimestamp: '2018-10-03T22:05:34.407359Z'
            spec:
              runLatest:
                configuration:
                  revisionTemplate:
                    metadata: {}
                    spec:
                      container:
                        image: gcr.io/knative-samples/helloworld-nodejs
            status:
              conditions:
              - type: Ready
                status: 'True'
              - type: ConfigurationsReady
                status: 'True'
              - type: RoutesReady
                status: 'True'
              domain: https://$$service-name$$-qj663q45qq-uc.a.run.app
              observedGeneration: 1
              traffic:
              - revisionName: $$service-name$$.1
                percent: 100
    - expect_stdout: |
        status.conditions[0].status: True
        status.conditions[0].type:   Ready
        status.conditions[1].status: True
        status.conditions[1].type:   ConfigurationsReady
        status.conditions[2].status: True
        status.conditions[2].type:   RoutesReady

    - expect_exit:
        code: 0


- execute_command:
    # Clean up the test service
    command: run services delete $$service-name$$ --region us-central1 --quiet
    cleanup_for: service-name
    events:
    - api_call:
        expect_request:
          uri: https://us-central1-serverless.googleapis.com/apis/serving.knative.dev/v1alpha1/namespaces/cloud-sdk-integration-testing/services/$$service-name$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted service [$$service-name$$].
    - expect_exit:
        code: 0
