title: serverless domain-mappings create, delete, describe, and list with a gke service.
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- set_property: run/platform gke
- execute:
  - command: run deploy --cluster $$cluster$$ --cluster-location $$cluster-location$$
      --image gcr.io/knative-samples/helloworld-nodejs --quiet $$service-name$$
  - stderr: |
      Deploying container to Cloud Run for Anthos service [$$service-name$$] in namespace [default] of cluster [$$cluster$$]
  - staged_progress_tracker:
    - message: Deploying new service...
    - status: SUCCESS
  - stderr: |
      Service [$$service-name$$] revision [$$service-revision-name$$] has been deployed and is serving 100 percent of traffic.
      Service URL: http://$$service-name$$.default.example.com
- execute:
  - command: run domain-mappings create --service $$service-name$$ --domain $$subdomain$$.$$domain-name$$
      --cluster $$cluster$$ --cluster-location $$cluster-location$$
  - progress_tracker:
    - message: Creating...
    - status: SUCCESS
  - stdout: |
      NAME                               RECORD TYPE  CONTENTS
      $$service-name$$  A            35.238.152.86
- execute:
  - command: run domain-mappings describe --domain $$subdomain$$.$$domain-name$$ --format='text(status.conditions[].status,status.conditions[].type)'
      --cluster $$cluster$$ --cluster-location $$cluster-location$$
  - stdout: |
      status.conditions[0].status: True
      status.conditions[0].type:   GatewayReady
      status.conditions[1].status: True
      status.conditions[1].type:   Ready
      status.conditions[2].status: True
      status.conditions[2].type:   RouteReady
- execute:
  - command: run domain-mappings delete --domain $$subdomain$$.$$domain-name$$ --cluster
      $$cluster$$ --cluster-location $$cluster-location$$
  - stderr: |
      Mappings to [$$subdomain$$.$$domain-name$$] now have been deleted.
- execute:
  - command: run services delete $$service-name$$ -q --cluster $$cluster$$ --cluster-location
      $$cluster-location$$
  - stderr: |
      Deleted service [$$service-name$$].
actions:
# Note that the domain mappings api group (domains.cloudrun.com) only supports v1alpha1 currently.
# So this variable is not used for domain mapping requests in this file and v1alpha1 is explicitly
# used instead.
- define_reference:
    reference: api-version
    value: v1
- set_property:
    run/platform: gke
- define_reference:
    reference: cluster
    value: do-not-delete-knative-test-oldest
- define_reference:
    reference: cluster-location
    value: us-central1-a
- generate_resource_id:
    reference: service-name
    prefix: service-name
# The domain name needs to be verified with the service account running the tests
- define_reference:
    reference: domain-name
    value: abcdefghi.com
- generate_resource_id:
    reference: subdomain
    prefix: e2e-domain-mappings-gke-test

- execute_command:
    # Create test service for working with
    command: run deploy --cluster $$cluster$$ --cluster-location $$cluster-location$$
      --image gcr.io/knative-samples/helloworld-nodejs --quiet $$service-name$$
    events:
    - api_call:
        expect_request:
          uri: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/$$cluster-location$$/clusters/$$cluster$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '8487'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: $$cluster$$
            nodeConfig:
              machineType: n1-standard-2
              diskSizeGb: 100
              oauthScopes:
              - https://www.googleapis.com/auth/cloud-platform
              - https://www.googleapis.com/auth/logging.write
              - https://www.googleapis.com/auth/monitoring.write
              - https://www.googleapis.com/auth/pubsub
              imageType: COS
              serviceAccount: default
              diskType: pd-standard
            masterAuth:
              username: admin
              password: password
              clusterCaCertificate: ==
              clientCertificate: ==
              clientKey: ==
            loggingService: logging.googleapis.com/kubernetes
            monitoringService: monitoring.googleapis.com/kubernetes
            network: default
            clusterIpv4Cidr: 10.64.0.0/14
            addonsConfig:
              httpLoadBalancing:
                disabled: true
              horizontalPodAutoscaling:
                disabled: true
              kubernetesDashboard:
                disabled: true
              networkPolicyConfig:
                disabled: true
            nodePools:
            - name: default-pool
              config:
                machineType: n1-standard-2
                diskSizeGb: 100
                oauthScopes:
                - https://www.googleapis.com/auth/cloud-platform
                - https://www.googleapis.com/auth/logging.write
                - https://www.googleapis.com/auth/monitoring.write
                - https://www.googleapis.com/auth/pubsub
                imageType: COS
                serviceAccount: default
                diskType: pd-standard
              initialNodeCount: 3
              autoscaling:
                enabled: true
                minNodeCount: 1
                maxNodeCount: 10
              management:
                autoRepair: true
              podIpv4CidrSize: 24
              selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$/nodePools/default-pool
              version: 1.11.7-gke.12
              instanceGroupUrls:
              - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
              status: RUNNING
            locations:
            - $$cluster-location$$
            labelFingerprint: a9dc16a7
            legacyAbac: {}
            networkConfig:
              network: projects/cloud-sdk-integration-testing/global/networks/default
            defaultMaxPodsConstraint:
              maxPodsPerNode: '110'
            databaseEncryption:
              state: DECRYPTED
            selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$
            zone: $$cluster-location$$
            endpoint: 35.239.121.203
            initialClusterVersion: 1.11.6-gke.6
            currentMasterVersion: 1.12.9-gke.15
            currentNodeVersion: 1.11.7-gke.12
            createTime: '2019-02-10T22:30:24+00:00'
            status: RUNNING
            nodeIpv4CidrSize: 24
            servicesIpv4Cidr: 10.67.240.0/20
            instanceGroupUrls:
            - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
            currentNodeCount: 3
            location: $$cluster-location$$
    - api_call:
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/serving.knative.dev/$$api-version$$/namespaces/default/services/$$service-name$$\?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '292'
            content-type: application/json
            status: '404'
          body:
            kind: Status
            apiVersion: v1
            metadata: {}
            status: Failure
            message: services.serving.knative.dev "$$service-name$$" not found
            reason: NotFound
            details:
              name: $$service-name$$
              group: serving.knative.dev
              kind: services
            code: 404
    - expect_stderr: |
        Deploying container to Cloud Run for Anthos service [$$service-name$$] in namespace [default] of cluster [$$cluster$$]
    - api_call:
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/serving.knative.dev/$$api-version$$/namespaces/default/services\?alt=json
          method: POST
          headers: {}
          body:
            json:
              apiVersion: serving.knative.dev/$$api-version$$
              kind: Service
              metadata:
                annotations:
                  client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
                labels: {}
                name: $$service-name$$
                namespace: default
              spec: {}
              status:
                address: {}
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '1096'
            content-type: application/json
            status: '201'
          body:
            apiVersion: serving.knative.dev/$$api-version$$
            kind: Service
            metadata:
              annotations:
                client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
                run.googleapis.com/client-name: gcloud
                serving.knative.dev/creator: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                serving.knative.dev/lastModifier: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
              creationTimestamp: '2019-07-23T18:13:29Z'
              generation: 1
              name: $$service-name$$
              namespace: default
              resourceVersion: '51639050'
              selfLink: /apis/serving.knative.dev/$$api-version$$/namespaces/default/services/$$service-name$$
              uid: 92610cc6-ad75-11e9-b545-42010a800168
            spec:
              template:
                metadata:
                  annotations:
                    run.googleapis.com/client-name: gcloud
                  creationTimestamp: '2019-07-23T18:13:29Z'
                  labels:
                    client.knative.dev/nonce: dmwqrjmbba
                spec:
                  containers:
                  - image: gcr.io/knative-samples/helloworld-nodejs
                    name: ''
                    resources: {}
                  timeoutSeconds: 300
              traffic:
              - latestRevision: true
                percent: 100
    - api_call:
        repeatable: true
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/serving.knative.dev/$$api-version$$/namespaces/default/services/$$service-name$$\?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '2014'
            content-type: application/json
            status: '200'
          body:
            apiVersion: serving.knative.dev/$$api-version$$
            kind: Service
            metadata:
              annotations:
                client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
                run.googleapis.com/client-name: gcloud
                serving.knative.dev/creator: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                serving.knative.dev/lastModifier: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
              creationTimestamp: '2019-07-23T18:13:29Z'
              generation: 1
              name: $$service-name$$
              namespace: default
              resourceVersion: '51639050'
              selfLink: /apis/serving.knative.dev/$$api-version$$/namespaces/default/services/$$service-name$$
              uid: 92610cc6-ad75-11e9-b545-42010a800168
            spec:
              template:
                metadata:
                  annotations:
                    run.googleapis.com/client-name: gcloud
                  creationTimestamp: '2019-07-23T18:13:29Z'
                  labels:
                    client.knative.dev/nonce: dmwqrjmbba
                spec:
                  containers:
                  - image: gcr.io/knative-samples/helloworld-nodejs
                    name: ''
                    resources: {}
                  timeoutSeconds: 300
              traffic:
              - latestRevision: true
                percent: 100
            status:
              address:
                hostname: $$service-name$$.default.svc.cluster.local
                url: http://$$service-name$$.default.svc.cluster.local
              conditions:
              - lastTransitionTime: '2019-07-23T20:10:01Z'
                status: 'True'
                type: ConfigurationsReady
              - lastTransitionTime: '2019-07-23T20:10:01Z'
                status: 'True'
                type: Ready
              - lastTransitionTime: '2019-07-23T20:10:01Z'
                status: 'True'
                type: RoutesReady
              domain: $$service-name$$.default.example.com
              domainInternal: $$service-name$$.default.svc.cluster.local
              latestCreatedRevisionName: $$service-name$$-rev01
              latestReadyRevisionName: $$service-name$$-rev01
              observedGeneration: 1
              traffic:
              - latestRevision: true
                percent: 100
                revisionName: $$service-name$$-rev01
              url: http://$$service-name$$.default.example.com
    - expect_staged_progress_tracker:
        message: Deploying new service...
        status: SUCCESS
    - api_call:
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/serving.knative.dev/$$api-version$$/namespaces/default/services/$$service-name$$\?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '2014'
            content-type: application/json
            status: '200'
          body:
            apiVersion: serving.knative.dev/$$api-version$$
            kind: Service
            metadata:
              annotations:
                client.knative.dev/user-image: gcr.io/knative-samples/helloworld-nodejs
                run.googleapis.com/client-name: gcloud
                serving.knative.dev/creator: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
                serving.knative.dev/lastModifier: 462803083913-lak0k1ette3muh3o3kb3pp2im3urj3e9@developer.gserviceaccount.com
              creationTimestamp: '2019-07-23T18:13:29Z'
              generation: 1
              name: $$service-name$$
              namespace: default
              resourceVersion: '51639050'
              selfLink: /apis/serving.knative.dev/$$api-version$$/namespaces/default/services/$$service-name$$
              uid: 92610cc6-ad75-11e9-b545-42010a800168
            spec:
              template:
                metadata:
                  annotations:
                    run.googleapis.com/client-name: gcloud
                  creationTimestamp: '2019-07-23T18:13:29Z'
                  labels:
                    client.knative.dev/nonce: dmwqrjmbba
                spec:
                  containers:
                  - image: gcr.io/knative-samples/helloworld-nodejs
                    name: ''
                    resources: {}
                  timeoutSeconds: 300
              traffic:
              - latestRevision: true
                percent: 100
            status:
              address:
                hostname: $$service-name$$.default.svc.cluster.local
                url: http://$$service-name$$.default.svc.cluster.local
              conditions:
              - lastTransitionTime: '2019-07-23T20:10:02Z'
                status: 'True'
                type: ConfigurationsReady
              - lastTransitionTime: '2019-07-23T20:10:02Z'
                status: 'True'
                type: Ready
              - lastTransitionTime: '2019-07-23T20:10:02Z'
                status: 'True'
                type: RoutesReady
              domain: $$service-name$$.default.example.com
              domainInternal: $$service-name$$.default.svc.cluster.local
              latestCreatedRevisionName: $$service-name$$-rev01
              latestReadyRevisionName: $$service-name$$-rev01
              observedGeneration: 1
              traffic:
              - latestRevision: true
                percent: 100
                revisionName: $$service-name$$-rev01
              url: http://$$service-name$$.default.example.com
        repeatable: true
        expect_response:
          extract_references:
          - field: status.latestCreatedRevisionName
            reference: service-revision-name
          body:
            json: {}
    - expect_stderr: |
        Service [$$service-name$$] revision [$$service-revision-name$$] has been deployed and is serving 100 percent of traffic.
        Service URL: http://$$service-name$$.default.example.com
    - expect_exit:
        code: 0
- execute_command:
    command: run domain-mappings create --service $$service-name$$ --domain $$subdomain$$.$$domain-name$$
      --cluster $$cluster$$ --cluster-location $$cluster-location$$
    events:
    - api_call:
        expect_request:
          uri: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/$$cluster-location$$/clusters/$$cluster$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '8487'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: $$cluster$$
            nodeConfig:
              machineType: n1-standard-2
              diskSizeGb: 100
              oauthScopes:
              - https://www.googleapis.com/auth/cloud-platform
              - https://www.googleapis.com/auth/logging.write
              - https://www.googleapis.com/auth/monitoring.write
              - https://www.googleapis.com/auth/pubsub
              imageType: COS
              serviceAccount: default
              diskType: pd-standard
            masterAuth:
              username: admin
              password: password
              clusterCaCertificate: ==
              clientCertificate: ==
              clientKey: ==
            loggingService: logging.googleapis.com/kubernetes
            monitoringService: monitoring.googleapis.com/kubernetes
            network: default
            clusterIpv4Cidr: 10.64.0.0/14
            addonsConfig:
              httpLoadBalancing:
                disabled: true
              horizontalPodAutoscaling:
                disabled: true
              kubernetesDashboard:
                disabled: true
              networkPolicyConfig:
                disabled: true
            nodePools:
            - name: default-pool
              config:
                machineType: n1-standard-2
                diskSizeGb: 100
                oauthScopes:
                - https://www.googleapis.com/auth/cloud-platform
                - https://www.googleapis.com/auth/logging.write
                - https://www.googleapis.com/auth/monitoring.write
                - https://www.googleapis.com/auth/pubsub
                imageType: COS
                serviceAccount: default
                diskType: pd-standard
              initialNodeCount: 3
              autoscaling:
                enabled: true
                minNodeCount: 1
                maxNodeCount: 10
              management:
                autoRepair: true
              podIpv4CidrSize: 24
              selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$/nodePools/default-pool
              version: 1.11.7-gke.12
              instanceGroupUrls:
              - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
              status: RUNNING
            locations:
            - $$cluster-location$$
            labelFingerprint: a9dc16a7
            legacyAbac: {}
            networkConfig:
              network: projects/cloud-sdk-integration-testing/global/networks/default
            defaultMaxPodsConstraint:
              maxPodsPerNode: '110'
            databaseEncryption:
              state: DECRYPTED
            selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$
            zone: $$cluster-location$$
            endpoint: 35.239.121.203
            initialClusterVersion: 1.11.6-gke.6
            currentMasterVersion: 1.12.9-gke.15
            currentNodeVersion: 1.11.7-gke.12
            createTime: '2019-02-10T22:30:24+00:00'
            status: RUNNING
            nodeIpv4CidrSize: 24
            servicesIpv4Cidr: 10.67.240.0/20
            instanceGroupUrls:
            - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
            currentNodeCount: 3
            location: $$cluster-location$$
    - api_call:
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/domains.cloudrun.com/v1alpha1/namespaces/default/domainmappings\?alt=json
          method: POST
          headers: {}
          body:
            json:
              apiVersion: domains.cloudrun.com/v1alpha1
              kind: DomainMapping
              metadata:
                annotations: {}
                labels: {}
                name: $$subdomain$$.$$domain-name$$
                namespace: default
              spec:
                routeName: $$service-name$$
              status: {}
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '514'
            content-type: application/json
            status: '201'
          body:
            apiVersion: domains.cloudrun.com/v1alpha1
            kind: DomainMapping
            metadata:
              creationTimestamp: '2019-07-23T18:13:29Z'
              generation: 1
              name: $$subdomain$$.$$domain-name$$
              namespace: default
              resourceVersion: '51639050'
              selfLink: /apis/domains.cloudrun.com/v1alpha1/namespaces/default/domainmappings/$$subdomain$$.$$domain-name$$
              uid: 92610cc6-ad75-11e9-b545-42010a800168
            spec:
              routeName: $$service-name$$
    - api_call:
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/domains.cloudrun.com/v1alpha1/namespaces/default/domainmappings/$$subdomain$$\.$$domain-name$$\?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '841'
            content-type: application/json
            status: '200'
          body:
            apiVersion: domains.cloudrun.com/v1alpha1
            kind: DomainMapping
            metadata:
              creationTimestamp: '2019-07-23T18:13:29Z'
              generation: 1
              name: $$subdomain$$.$$domain-name$$
              namespace: default
              resourceVersion: '51639050'
              selfLink: /apis/domains.cloudrun.com/v1alpha1/namespaces/default/domainmappings/$$subdomain$$.$$domain-name$$
              uid: 92610cc6-ad75-11e9-b545-42010a800168
            spec:
              routeName: $$subdomain$$
            status:
              conditions:
              - lastTransitionTime: '2019-07-23T20:10:03Z'
                status: 'True'
                type: GatewayReady
              - lastTransitionTime: '2019-07-23T20:10:03Z'
                status: 'True'
                type: Ready
              - lastTransitionTime: '2019-07-23T20:10:03Z'
                status: 'True'
                type: RouteReady
              resourceRecords:
              - rrdata: 35.238.152.86
                type: A
        repeatable: true
    - expect_progress_tracker:
        message: Creating...
        status: SUCCESS
    - expect_stdout:
        matches: |
          NAME +RECORD TYPE  CONTENTS
          $$subdomain$$  A            .*
    - expect_exit:
        code: 0
- execute_command:
    command: run domain-mappings describe --domain $$subdomain$$.$$domain-name$$ --format='text(status.conditions[].status,status.conditions[].type)'
      --cluster $$cluster$$ --cluster-location $$cluster-location$$
    events:
    - api_call:
        expect_request:
          uri: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/$$cluster-location$$/clusters/$$cluster$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '8487'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: $$cluster$$
            nodeConfig:
              machineType: n1-standard-2
              diskSizeGb: 100
              oauthScopes:
              - https://www.googleapis.com/auth/cloud-platform
              - https://www.googleapis.com/auth/logging.write
              - https://www.googleapis.com/auth/monitoring.write
              - https://www.googleapis.com/auth/pubsub
              imageType: COS
              serviceAccount: default
              diskType: pd-standard
            masterAuth:
              username: admin
              password: password
              clusterCaCertificate: ==
              clientCertificate: ==
              clientKey: ==
            loggingService: logging.googleapis.com/kubernetes
            monitoringService: monitoring.googleapis.com/kubernetes
            network: default
            clusterIpv4Cidr: 10.64.0.0/14
            addonsConfig:
              httpLoadBalancing:
                disabled: true
              horizontalPodAutoscaling:
                disabled: true
              kubernetesDashboard:
                disabled: true
              networkPolicyConfig:
                disabled: true
            nodePools:
            - name: default-pool
              config:
                machineType: n1-standard-2
                diskSizeGb: 100
                oauthScopes:
                - https://www.googleapis.com/auth/cloud-platform
                - https://www.googleapis.com/auth/logging.write
                - https://www.googleapis.com/auth/monitoring.write
                - https://www.googleapis.com/auth/pubsub
                imageType: COS
                serviceAccount: default
                diskType: pd-standard
              initialNodeCount: 3
              autoscaling:
                enabled: true
                minNodeCount: 1
                maxNodeCount: 10
              management:
                autoRepair: true
              podIpv4CidrSize: 24
              selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$/nodePools/default-pool
              version: 1.11.7-gke.12
              instanceGroupUrls:
              - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
              status: RUNNING
            locations:
            - $$cluster-location$$
            labelFingerprint: a9dc16a7
            legacyAbac: {}
            networkConfig:
              network: projects/cloud-sdk-integration-testing/global/networks/default
            defaultMaxPodsConstraint:
              maxPodsPerNode: '110'
            databaseEncryption:
              state: DECRYPTED
            selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$
            zone: $$cluster-location$$
            endpoint: 35.239.121.203
            initialClusterVersion: 1.11.6-gke.6
            currentMasterVersion: 1.12.9-gke.15
            currentNodeVersion: 1.11.7-gke.12
            createTime: '2019-02-10T22:30:24+00:00'
            status: RUNNING
            nodeIpv4CidrSize: 24
            servicesIpv4Cidr: 10.67.240.0/20
            instanceGroupUrls:
            - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
            currentNodeCount: 3
            location: $$cluster-location$$
    - api_call:
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/domains.cloudrun.com/v1alpha1/namespaces/default/domainmappings/$$subdomain$$\.$$domain-name$$\?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '841'
            content-type: application/json
            status: '200'
          body:
            apiVersion: domains.cloudrun.com/v1alpha1
            kind: DomainMapping
            metadata:
              creationTimestamp: '2019-07-23T18:13:29Z'
              generation: 1
              name: $$subdomain$$.$$domain-name$$
              namespace: default
              resourceVersion: '51639050'
              selfLink: /apis/domains.cloudrun.com/v1alpha1/namespaces/default/domainmappings/$$subdomain$$.$$domain-name$$
              uid: 92610cc6-ad75-11e9-b545-42010a800168
            spec:
              routeName: $$service-name$$
            status:
              conditions:
              - lastTransitionTime: '2019-07-23T20:10:04Z'
                status: 'True'
                type: GatewayReady
              - lastTransitionTime: '2019-07-23T20:10:04Z'
                status: 'True'
                type: Ready
              - lastTransitionTime: '2019-07-23T20:10:04Z'
                status: 'True'
                type: RouteReady
              resourceRecords:
              - rrdata: 35.238.152.86
                type: A
    - expect_stdout: |
        status.conditions[0].status: True
        status.conditions[0].type:   GatewayReady
        status.conditions[1].status: True
        status.conditions[1].type:   Ready
        status.conditions[2].status: True
        status.conditions[2].type:   RouteReady
    - expect_exit:
        code: 0
- execute_command:
    command: run domain-mappings delete --domain $$subdomain$$.$$domain-name$$ --cluster
      $$cluster$$ --cluster-location $$cluster-location$$
    cleanup_for: subdomain
    events:
    - api_call:
        expect_request:
          uri: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/$$cluster-location$$/clusters/$$cluster$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '8487'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: $$cluster$$
            nodeConfig:
              machineType: n1-standard-2
              diskSizeGb: 100
              oauthScopes:
              - https://www.googleapis.com/auth/cloud-platform
              - https://www.googleapis.com/auth/logging.write
              - https://www.googleapis.com/auth/monitoring.write
              - https://www.googleapis.com/auth/pubsub
              imageType: COS
              serviceAccount: default
              diskType: pd-standard
            masterAuth:
              username: admin
              password: password
              clusterCaCertificate: ==
              clientCertificate: ==
              clientKey: ==
            loggingService: logging.googleapis.com/kubernetes
            monitoringService: monitoring.googleapis.com/kubernetes
            network: default
            clusterIpv4Cidr: 10.64.0.0/14
            addonsConfig:
              httpLoadBalancing:
                disabled: true
              horizontalPodAutoscaling:
                disabled: true
              kubernetesDashboard:
                disabled: true
              networkPolicyConfig:
                disabled: true
            nodePools:
            - name: default-pool
              config:
                machineType: n1-standard-2
                diskSizeGb: 100
                oauthScopes:
                - https://www.googleapis.com/auth/cloud-platform
                - https://www.googleapis.com/auth/logging.write
                - https://www.googleapis.com/auth/monitoring.write
                - https://www.googleapis.com/auth/pubsub
                imageType: COS
                serviceAccount: default
                diskType: pd-standard
              initialNodeCount: 3
              autoscaling:
                enabled: true
                minNodeCount: 1
                maxNodeCount: 10
              management:
                autoRepair: true
              podIpv4CidrSize: 24
              selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$/nodePools/default-pool
              version: 1.11.7-gke.12
              instanceGroupUrls:
              - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
              status: RUNNING
            locations:
            - $$cluster-location$$
            labelFingerprint: a9dc16a7
            legacyAbac: {}
            networkConfig:
              network: projects/cloud-sdk-integration-testing/global/networks/default
            defaultMaxPodsConstraint:
              maxPodsPerNode: '110'
            databaseEncryption:
              state: DECRYPTED
            selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$
            zone: $$cluster-location$$
            endpoint: 35.239.121.203
            initialClusterVersion: 1.11.6-gke.6
            currentMasterVersion: 1.12.9-gke.15
            currentNodeVersion: 1.11.7-gke.12
            createTime: '2019-02-10T22:30:24+00:00'
            status: RUNNING
            nodeIpv4CidrSize: 24
            servicesIpv4Cidr: 10.67.240.0/20
            instanceGroupUrls:
            - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
            currentNodeCount: 3
            location: $$cluster-location$$
    - api_call:
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/domains.cloudrun.com/v1alpha1/namespaces/default/domainmappings/$$subdomain$$\.$$domain-name$$\?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '254'
            content-type: application/json
            status: '200'
          body:
            kind: Status
            apiVersion: v1
            metadata: {}
            status: Success
            details:
              name: $$subdomain$$.$$domain-name$$
              group: domains.cloudrun.com
              kind: domainmappings
              uid: 92610cc6-ad75-11e9-b545-42010a800168
    - expect_stderr: |
        Mappings to [$$subdomain$$.$$domain-name$$] now have been deleted.
    - expect_exit:
        code: 0
- execute_command:
    command: run services delete $$service-name$$ -q --cluster $$cluster$$ --cluster-location
      $$cluster-location$$
    cleanup_for: service-name
    events:
    - api_call:
        expect_request:
          uri: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/$$cluster-location$$/clusters/$$cluster$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '8487'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: $$cluster$$
            nodeConfig:
              machineType: n1-standard-2
              diskSizeGb: 100
              oauthScopes:
              - https://www.googleapis.com/auth/cloud-platform
              - https://www.googleapis.com/auth/logging.write
              - https://www.googleapis.com/auth/monitoring.write
              - https://www.googleapis.com/auth/pubsub
              imageType: COS
              serviceAccount: default
              diskType: pd-standard
            masterAuth:
              username: admin
              password: password
              clusterCaCertificate: ==
              clientCertificate: ==
              clientKey: ==
            loggingService: logging.googleapis.com/kubernetes
            monitoringService: monitoring.googleapis.com/kubernetes
            network: default
            clusterIpv4Cidr: 10.64.0.0/14
            addonsConfig:
              httpLoadBalancing:
                disabled: true
              horizontalPodAutoscaling:
                disabled: true
              kubernetesDashboard:
                disabled: true
              networkPolicyConfig:
                disabled: true
            nodePools:
            - name: default-pool
              config:
                machineType: n1-standard-2
                diskSizeGb: 100
                oauthScopes:
                - https://www.googleapis.com/auth/cloud-platform
                - https://www.googleapis.com/auth/logging.write
                - https://www.googleapis.com/auth/monitoring.write
                - https://www.googleapis.com/auth/pubsub
                imageType: COS
                serviceAccount: default
                diskType: pd-standard
              initialNodeCount: 3
              autoscaling:
                enabled: true
                minNodeCount: 1
                maxNodeCount: 10
              management:
                autoRepair: true
              podIpv4CidrSize: 24
              selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$/nodePools/default-pool
              version: 1.11.7-gke.12
              instanceGroupUrls:
              - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
              status: RUNNING
            locations:
            - $$cluster-location$$
            labelFingerprint: a9dc16a7
            legacyAbac: {}
            networkConfig:
              network: projects/cloud-sdk-integration-testing/global/networks/default
            defaultMaxPodsConstraint:
              maxPodsPerNode: '110'
            databaseEncryption:
              state: DECRYPTED
            selfLink: https://container.googleapis.com/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/clusters/$$cluster$$
            zone: $$cluster-location$$
            endpoint: 35.239.121.203
            initialClusterVersion: 1.11.6-gke.6
            currentMasterVersion: 1.12.9-gke.15
            currentNodeVersion: 1.11.7-gke.12
            createTime: '2019-02-10T22:30:24+00:00'
            status: RUNNING
            nodeIpv4CidrSize: 24
            servicesIpv4Cidr: 10.67.240.0/20
            instanceGroupUrls:
            - https://www.googleapis.com/compute/v1/projects/cloud-sdk-integration-testing/zones/$$cluster-location$$/instanceGroupManagers/gke-do-not-delete-gke-kn-default-pool-2c29644d-grp
            currentNodeCount: 3
            location: $$cluster-location$$
    - api_call:
        expect_request:
          # The uri hostname varies. With python2 it would be kubernetes.default. With
          # python3 it would be monkey patched into IP address of the gke cluster. For the monkey
          # patch information: CL/217804288.
          uri:
            matches: https://.*/apis/serving.knative.dev/$$api-version$$/namespaces/default/services/$$service-name$$\?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            audit-id: b24852a0-bebf-412f-8432-e7b98289ffbf
            content-length: '217'
            content-type: application/json
            status: '200'
          body:
            kind: Status
            apiVersion: v1
            metadata: {}
            status: Success
            details:
              name: $$service-name$$
              group: serving.knative.dev
              kind: services
              uid: 92610cc6-ad75-11e9-b545-42010a800168
    - expect_stderr: |
        Deleted service [$$service-name$$].
    - expect_exit:
        code: 0
