title: detect product
release_tracks: [BETA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: ml vision product-search product-sets create $$my-product-set$$ --location=us-east1
      --display-name='fancy name'
  - stderr: |
      Created product set [$$my-product-set$$].
- execute:
  - command: ml vision product-search products create $$my-product$$ --location=us-east1
      --category=apparel --description=product-desc --display-name=test-product --product-labels=a=b,a=d,c=g
  - stderr: |
      Created product [$$my-product$$].
- execute:
  - command: ml vision product-search images create $$my-image$$ --location=us-east1
      --product=$$my-product$$ --storage-location=gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
  - stderr: |
      Created reference image [$$my-image$$].
- execute:
  - command: ml vision product-search product-sets add-product $$my-product-set$$
      --location=us-east1 --product=$$my-product$$
  - stdout: |
      {}
- execute:
  - command: ml vision detect-product gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
      --product-set=$$my-product$$ --product-set-location=us-east1 --category=apparel
  - error: '1: Code: [5] Message: [No matching products found.]'
- execute:
  - command: ml vision product-search images delete $$my-image$$ --location=us-east1
      --product=$$my-product$$
  - prompt:
    - message: You are about to delete reference image [$$my-image$$]
    - input: y
  - stderr: |
      Deleted reference image [$$my-image$$].
- execute:
  - command: ml vision product-search product-sets remove-product $$my-product-set$$
      --location=us-east1 --product=$$my-product$$
  - stdout: |
      {}
- execute:
  - command: ml vision product-search products delete --location=us-east1 $$my-product$$
  - prompt:
    - message: You are about to delete product [$$my-product$$]
    - input: y
  - stderr: |
      Deleted product [$$my-product$$].
- execute:
  - command: ml vision product-search product-sets delete $$my-product-set$$ --location=us-east1
  - prompt:
    - message: You are about to delete product set [$$my-product-set$$]
    - input: y
  - stderr: |
      Deleted product set [$$my-product-set$$].
actions:
- generate_resource_id:
    reference: my-product-set
    prefix: product-set-in-product-search
- generate_resource_id:
    reference: my-product
    prefix: product-in-product-search
- generate_resource_id:
    reference: my-image
    prefix: image-in-product-search

- execute_command:
    command: ml vision product-search product-sets create $$my-product-set$$ --location=us-east1
      --display-name='fancy name'
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/productSets?alt=json&productSetId=$$my-product-set$$
          method: POST
          headers: {}
          body:
            json:
              displayName: fancy name
        return_response:
          headers:
            cache-control: private
            content-length: '168'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/productSets/$$my-product-set$$
            displayName: fancy name
    - expect_stderr: |
        Created product set [$$my-product-set$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search products create $$my-product$$ --location=us-east1
      --category=apparel --description=product-desc --display-name=test-product --product-labels=a=b,a=d,c=g
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products?alt=json&productId=$$my-product$$
          method: POST
          headers: {}
          body:
            json:
              description: product-desc
              displayName: test-product
              productCategory: apparel
              productLabels:
              - key: a
                value: b
              - key: a
                value: d
              - key: c
                value: g
        return_response:
          headers:
            cache-control: private
            content-length: '403'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
            displayName: test-product
            description: product-desc
            productCategory: apparel
            productLabels:
            - key: a
              value: b
            - key: a
              value: d
            - key: c
              value: g
    - expect_stderr: |
        Created product [$$my-product$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search images create $$my-image$$ --location=us-east1
      --product=$$my-product$$ --storage-location=gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages?alt=json&referenceImageId=$$my-image$$
          method: POST
          headers: {}
          body:
            json:
              uri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
        return_response:
          headers:
            cache-control: private
            content-length: '266'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$
            uri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
    - expect_stderr: |
        Created reference image [$$my-image$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search product-sets add-product $$my-product-set$$
      --location=us-east1 --product=$$my-product$$
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/productSets/$$my-product-set$$:addProduct?alt=json
          method: POST
          headers: {}
          body:
            json:
              product: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stdout: |
        {}
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision detect-product gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
      --product-set=$$my-product$$ --product-set-location=us-east1 --category=apparel
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/images:annotate?alt=json
          method: POST
          headers: {}
          body:
            json:
              requests:
              - features:
                - type: PRODUCT_SEARCH
                image:
                  source:
                    imageUri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
                imageContext:
                  productSearchParams:
                    productCategories:
                    - apparel
                    productSet: projects/cloud-sdk-integration-testing/locations/us-east1/productSets/$$my-product$$
        return_response:
          headers:
            cache-control: private
            content-length: '130'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            responses:
            - error:
                code: 5
                message: No matching products found.
    - expect_exit:
        code: 1
        message:
          matches: .*No matching products found.*
- execute_command:
    command: ml vision product-search images delete $$my-image$$ --location=us-east1
      --product=$$my-product$$
    cleanup_for: my-image
    events:
    - expect_prompt_continue:
        message: You are about to delete reference image [$$my-image$$]
        user_input: y
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted reference image [$$my-image$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search product-sets remove-product $$my-product-set$$
      --location=us-east1 --product=$$my-product$$
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/productSets/$$my-product-set$$:removeProduct?alt=json
          method: POST
          headers: {}
          body:
            json:
              product: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stdout: |
        {}
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search products delete --location=us-east1 $$my-product$$
    cleanup_for: my-product
    events:
    - expect_prompt_continue:
        message: You are about to delete product [$$my-product$$]
        user_input: y
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted product [$$my-product$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search product-sets delete $$my-product-set$$ --location=us-east1
    cleanup_for: my-product-set
    events:
    - expect_prompt_continue:
        message: You are about to delete product set [$$my-product-set$$]
        user_input: y
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/productSets/$$my-product-set$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted product set [$$my-product-set$$].
    - expect_exit:
        code: 0
