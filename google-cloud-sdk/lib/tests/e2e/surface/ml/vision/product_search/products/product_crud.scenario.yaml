title: CRUD of products
release_tracks: [BETA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: ml vision product-search products create $$my-product$$ --location=us-east1
      --category=apparel --description=product-desc --display-name=test-product --product-labels=a=b,a=d,c=g
  - stderr: |
      Created product [$$my-product$$].
- execute:
  - command: ml vision product-search products update $$my-product$$ --location=us-east1
      --description=new-product-desc --display-name=new-test-product --remove-product-labels=a=b
      --add-product-labels=m=n
  - stderr: |
      Updated product [$$my-product$$].
  - stdout: |
      description: new-product-desc
      displayName: new-test-product
      name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
      productCategory: apparel
      productLabels:
      - key: a
        value: d
      - key: c
        value: g
      - key: m
        value: n
- execute:
  - command: ml vision product-search products describe $$my-product$$ --location=us-east1
  - stdout: |
      description: new-product-desc
      displayName: new-test-product
      name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
      productCategory: apparel
      productLabels:
      - key: a
        value: d
      - key: c
        value: g
      - key: m
        value: n
- execute:
  - command: ml vision product-search products list --location=us-east1 --filter=name=projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
  - stdout: |
      NAME                                            LOCATION  DISPLAY_NAME
      $$my-product$$  us-east1  new-test-product
- execute:
  - command: ml vision product-search products delete --location=us-east1 $$my-product$$
  - prompt:
    - message: You are about to delete product [$$my-product$$]
    - input: y
  - stderr: |
      Deleted product [$$my-product$$].
actions:
- generate_resource_id:
    reference: my-product
    prefix: product-in-product-search
- execute_command:
    command: ml vision product-search products create $$my-product$$ --location=us-east1
      --category=apparel --description=product-desc --display-name=test-product --product-labels=a=b,a=d,c=g
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products?alt=json&productId=$$my-product$$
          method: POST
          headers: {}
          body:
            json:
              description: product-desc
              displayName: test-product
              productCategory: apparel
              productLabels:
              - key: a
                value: b
              - key: a
                value: d
              - key: c
                value: g
        return_response:
          headers:
            cache-control: private
            content-length: '403'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
            displayName: test-product
            description: product-desc
            productCategory: apparel
            productLabels:
            - key: a
              value: b
            - key: a
              value: d
            - key: c
              value: g
    - expect_stderr: |
        Created product [$$my-product$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search products update $$my-product$$ --location=us-east1
      --description=new-product-desc --display-name=new-test-product --remove-product-labels=a=b
      --add-product-labels=m=n
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '403'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
            displayName: test-product
            description: product-desc
            productCategory: apparel
            productLabels:
            - key: a
              value: b
            - key: a
              value: d
            - key: c
              value: g
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$?alt=json&updateMask=description%2CdisplayName%2CproductLabels
          method: PATCH
          headers: {}
          body:
            json:
              description: new-product-desc
              displayName: new-test-product
              productLabels:
              - key: a
                value: d
              - key: c
                value: g
              - key: m
                value: n
        return_response:
          headers:
            cache-control: private
            content-length: '411'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
            displayName: new-test-product
            description: new-product-desc
            productCategory: apparel
            productLabels:
            - key: a
              value: d
            - key: c
              value: g
            - key: m
              value: n
    - expect_stderr: |
        Updated product [$$my-product$$].
    - expect_stdout: |
        description: new-product-desc
        displayName: new-test-product
        name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
        productCategory: apparel
        productLabels:
        - key: a
          value: d
        - key: c
          value: g
        - key: m
          value: n
    - expect_exit:
        code: 0

- execute_command:
    command: ml vision product-search products describe $$my-product$$ --location=us-east1
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '411'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
            displayName: new-test-product
            description: new-product-desc
            productCategory: apparel
            productLabels:
            - key: a
              value: d
            - key: c
              value: g
            - key: m
              value: n
    - expect_stdout: |
        description: new-product-desc
        displayName: new-test-product
        name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
        productCategory: apparel
        productLabels:
        - key: a
          value: d
        - key: c
          value: g
        - key: m
          value: n
    - expect_exit:
        code: 0

- execute_command:
    command: ml vision product-search products list --location=us-east1 --filter=name=projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
    events:
    - api_call:
        repeatable: true
        expect_request:
          uri:
            matches: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products\?alt=json.*
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '515'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            products:
            - name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
              displayName: new-test-product
              description: new-product-desc
              productCategory: apparel
              productLabels:
              - key: a
                value: d
              - key: c
                value: g
              - key: m
                value: n
    - expect_stdout: |
        NAME                                            LOCATION  DISPLAY_NAME
        $$my-product$$  us-east1  new-test-product
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search products delete --location=us-east1 $$my-product$$
    cleanup_for: my-product
    events:
    - expect_prompt_continue:
        message: You are about to delete product [$$my-product$$]
        user_input: y
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted product [$$my-product$$].
    - expect_exit:
        code: 0
