title: CRUD of reference image
release_tracks: [BETA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: ml vision product-search products create $$my-product$$ --location=us-east1
      --category=apparel --display-name=test-product
  - stderr: |
      Created product [$$my-product$$].
- execute:
  - command: ml vision product-search images create $$my-image$$ --location=us-east1
      --product=$$my-product$$ --storage-location=gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
  - stderr: |
      Created reference image [$$my-image$$].
- execute:
  - command: ml vision product-search images describe $$my-image$$ --location=us-east1
      --product=$$my-product$$
  - stdout: |
      name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$
      uri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
- execute:
  - command: ml vision product-search images list --location=us-east1 --product=$$my-product$$
      --filter=name=projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$
  - stdout: |
      NAME                                          PRODUCT                                         IMAGE_LOCATION
      $$my-image$$  $$my-product$$  gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
- execute:
  - command: ml vision product-search images delete $$my-image$$ --location=us-east1
      --product=$$my-product$$
  - prompt:
    - message: You are about to delete reference image [$$my-image$$]
    - input: y
  - stderr: |
      Deleted reference image [$$my-image$$].
- execute:
  - command: ml vision product-search products delete $$my-product$ --location=us-east1
  - prompt:
    - message: You are about to delete product [$$my-product$$]
    - input: y
  - stderr: |
      Deleted product [$$my-product$$].
actions:
- generate_resource_id:
    reference: my-product
    prefix: product-in-product-search
- generate_resource_id:
    reference: my-image
    prefix: image-in-product-search
- execute_command:
    command: ml vision product-search products create $$my-product$$ --location=us-east1
      --category=apparel --display-name=test-product
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products?alt=json&productId=$$my-product$$
          method: POST
          headers: {}
          body:
            json:
              displayName: test-product
              productCategory: apparel
        return_response:
          headers:
            cache-control: private
            content-length: '195'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$
            displayName: test-product
            productCategory: apparel
    - expect_stderr: |
        Created product [$$my-product$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search images create $$my-image$$ --location=us-east1
      --product=$$my-product$$ --storage-location=gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages?alt=json&referenceImageId=$$my-image$$
          method: POST
          headers: {}
          body:
            json:
              uri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
        return_response:
          headers:
            cache-control: private
            content-length: '266'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$
            uri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
    - expect_stderr: |
        Created reference image [$$my-image$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search images describe $$my-image$$ --location=us-east1
      --product=$$my-product$$
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '266'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$
            uri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
    - expect_stdout: |
        name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$
        uri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search images list --location=us-east1 --product=$$my-product$$
      --filter=name=projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$
    events:
    - api_call:
        repeatable: true
        expect_request:
          uri:
            matches: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages\?alt=json.*
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '313'
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            referenceImages:
            - name: projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$
              uri: gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
    - expect_stdout: |
        NAME                                          PRODUCT                                         IMAGE_LOCATION
        $$my-image$$  $$my-product$$  gs://do-not-delete-ml-vision-test/reference-image-for-test.jpg
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search images delete $$my-image$$ --location=us-east1
      --product=$$my-product$$
    cleanup_for: my-image
    events:
    - expect_prompt_continue:
        message: You are about to delete reference image [$$my-image$$]
        user_input: y
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$/referenceImages/$$my-image$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted reference image [$$my-image$$].
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision product-search products delete $$my-product$$ --location=us-east1
    cleanup_for: my-product
    events:
    - expect_prompt_continue:
        message: You are about to delete product [$$my-product$$]
        user_input: y
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/projects/cloud-sdk-integration-testing/locations/us-east1/products/$$my-product$$?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            cache-control: private
            content-length: '3'
            content-type: application/json; charset=UTF-8
            status: '200'
          body: |
            {}
    - expect_stderr: |
        Deleted product [$$my-product$$].
    - expect_exit:
        code: 0
