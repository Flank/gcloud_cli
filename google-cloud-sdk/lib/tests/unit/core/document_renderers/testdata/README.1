
.TH "gcloud README" ""

.SH "gcloud\-compute\-ssh"

Patches to PuTTY for 'gcloud compute ssh' on Windows.


.SH "overview"

Patch Windows PuTTY so that after
.RS 2m
.IP "\(bu" 2m
copy pscp.exe scp.exe
.IP "\(bu" 2m
copy plink.exe ssh.exe
.IP "\(bu" 2m
copy pkeygen.exe ssh\-keygen.exe
.RE
.sp
scp, ssh and ssh\-keygen, from the command line, behave more like the OpenSsh
counterparts. Some behaviors are not covered \-\- mainly just enough to support
internal gcloud usage patterns.


.SH "details"

Changes fall into a few categories:
.RS 2m
.IP "\(bu" 2m
Change cmdgen.c to generate pkeygen.exe which acts like ssh\-keygen from the
command line. Most of the changes are in this file. Major changes:
.RS 2m
.IP "\(em" 2m
use windows libraries to generate cryptographic random data
.IP "\(em" 2m
output refactored to a loop that can generate more than one file
.IP "\(em" 2m
id, id.pub and id.ppk all generated by default
.RE
.sp
.IP "\(bu" 2m
Change all identity file read acceses to first check for a .ppk variant, for
example, ``\-i id'' will first check for id.ppk. This preserves the \fBssh\fR
and \fBscp \-i\fR usage pattern.
.IP "\(bu" 2m
Change the default TERM environment variable value passed to the server by plink
to check the local TERM setting (instead of "xterm"). If TERM is not set then
"dumb" is used. This gives the proper hint to remote .profiles to refrain from
colorizing prompts and ls(1) output.
.IP "\(bu" 2m
Eliminate the low hanging fruit of the MSVC 32 and 64 bit warnings. Most of
these involve mixed combinations of [unsigned] int, [unsigned] long, size_t, and
ssize_t. Some only show up in 64 bit compiles. Other culprits are strcpy(),
strcat(), and sprintf() into fixed size buffers \- they are handled by a
homebrew szprintf() that supports a clean sized buffer paradigm. \fBMuch more
work\fR is needed in this area. A lot of the (int) and (size_t) casts should be
replaced by proper variable and function typing, but that would require a
meticulous code walkthrough.
.RE
.sp


.SH "coverage"

Link types:
.RS 2m
.IP "\(bu" 2m
And download this (ftp://foo.com/bar) there.
.IP "\(bu" 2m
And look at this (http://foo.com/bar) there.
.IP "\(bu" 2m
And jump here there.
.IP "\(bu" 2m
And look at this (https://foo.com/bar) there.
.IP "\(bu" 2m
And mail bozo there.
.RE
.sp

Corner cases:
.RS 2m
.IP "\(bu" 2m
And check this [really!!]catenated.
.IP "\(bu" 2m
This \fBpath\fR */*.c is not \fBbold\fR.
.IP "\(bu" 2m
This \fBpath\fR */_.c is not \fIitalic\fR.
.RE
.sp

This tests \fIdangling \fBembellishments that should not bleed into the next
section.

\fR

.SH "examples"

This is an example ``command'' line:

.RS 2m
$ echo 'example command line'
.RE


.SH "next section"

This text should not be embellished.


.SH "NOTES"
A special note.
