title: cloud firestore create test scenario
release_tracks: [ALPHA, BETA, GA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=descending --field-config field-path=timestamp,order=descending
  - stderr: |
      Create request issued
  - progress_tracker:
    - message: Waiting for operation [projects/fake-project/databases/(default)/operations/9999]
        to complete
    - status: SUCCESS
  - stderr: |
      Created index [CICAgPigl4sK].
- execute:
  - command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=descending --field-config field-path=timestamp,order=descending
      --async
  - stderr: |
      Create request issued
      Check operation [projects/fake-project/databases/(default)/operations/9999] for status.
- execute:
  - command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=descending
  - error: '1: Invalid value for [--field-config]: Composite indexes must be configured
      with at least 2 fields. For single-field index management, use the commands
      under `gcloud firestore indexes fields`.'
- execute:
  - command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=badorder
  - stderr: '.*Invalid choice: badorder\. Valid choices are: \[ascending, descending\]\..*$'
  - error: '1: argument --field-config: Invalid choice: badorder. Valid choices are:
      [ascending, descending].'
- execute:
  - command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=ascending,array-config=contains --field-config
      field-path=timestamp,order=descending,array-config=contains
  - error: "1: Invalid value for [--field-config]: Exactly one of 'order' or 'array-config'\
      \ must be specified for the fields with the following paths: [user_id, timestamp]."
actions:
- execute_command:
    command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=descending --field-config field-path=timestamp,order=descending
    events:
    - api_call:
        expect_request:
          uri: https://firestore.googleapis.com/v1/projects/fake-project/databases/(default)/collectionGroups/Events/indexes?alt=json
          method: POST
          headers: {}
          body:
            json:
              fields:
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              queryScope: COLLECTION
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/databases/(default)/operations/9999",
              "metadata": {
                "@type": "type.googleapis.com/google.firestore.admin.v1.IndexOperationMetadata",
                "startTime": "2018-11-29T01:19:51Z",
                "index": "projects/fake-project/databases/(default)/collectionGroups/Events/indexes/CICAgPigl4sK",
                "state": "PROCESSING",
                "progressDocuments": {}
              }
            }
    - expect_stderr: |
        Create request issued
    - api_call:
        expect_request:
          uri: https://firestore.googleapis.com/v1/projects/fake-project/databases/(default)/operations/9999?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/databases/(default)/operations/9999",
              "metadata": {
                "@type": "type.googleapis.com/google.firestore.admin.v1.IndexOperationMetadata",
                "startTime": "2018-11-29T01:19:51Z",
                "endTime": "2018-11-29T01:19:52.975169Z",
                "index": "projects/fake-project/databases/(default)/collectionGroups/Events/indexes/CICAgPigl4sK",
                "state": "SUCCESSFUL",
                "progressDocuments": {}
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.firestore.admin.v1.Index",
                "name": "projects/fake-project/databases/(default)/collectionGroups/Events/indexes/CICAgPigl4sK",
                "queryScope": "COLLECTION",
                "fields": [
                  {
                    "fieldPath": "user_id",
                    "order": "DESCENDING"
                  },
                  {
                    "fieldPath": "timestamp",
                    "order": "DESCENDING"
                  },
                  {
                    "fieldPath": "__name__",
                    "order": "DESCENDING"
                  }
                ],
                "state": "READY"
              }
            }
    - expect_progress_tracker:
        message: Waiting for operation [projects/fake-project/databases/(default)/operations/9999]
          to complete
        status: SUCCESS
    - expect_stderr: |
        Created index [CICAgPigl4sK].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=descending --field-config field-path=timestamp,order=descending
      --async
    events:
    - api_call:
        expect_request:
          uri: https://firestore.googleapis.com/v1/projects/fake-project/databases/(default)/collectionGroups/Events/indexes?alt=json
          method: POST
          headers: {}
          body:
            json:
              fields:
              - fieldPath: user_id
                order: DESCENDING
              - fieldPath: timestamp
                order: DESCENDING
              queryScope: COLLECTION
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/databases/(default)/operations/9999",
              "metadata": {
                "@type": "type.googleapis.com/google.firestore.admin.v1.IndexOperationMetadata",
                "startTime": "2018-11-29T01:19:51Z",
                "index": "projects/fake-project/databases/(default)/collectionGroups/Events/indexes/CICAgPigl4sK",
                "state": "PROCESSING",
                "progressDocuments": {}
              }
            }
    - expect_stderr: |
        Create request issued
        Check operation [projects/fake-project/databases/(default)/operations/9999] for status.
    - expect_exit:
        code: 0
- execute_command:
    command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=descending
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [--field-config]: Composite indexes must be configured
          with at least 2 fields. For single-field index management, use the commands
          under `gcloud firestore indexes fields`.'
- execute_command:
    command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=badorder
    events:
    - expect_stderr:
        matches: '.*Invalid choice: badorder\. Valid choices are: \[ascending, descending\]\..*'
    - expect_exit:
        code: 1
        message: 'argument --field-config: Invalid choice: badorder. Valid choices
          are: [ascending, descending].'
- execute_command:
    command: |
      firestore indexes composite create --collection-group=Events --field-config
      field-path=user_id,order=ascending,array-config=contains --field-config
      field-path=timestamp,order=descending,array-config=contains
    events:
    - expect_exit:
        code: 1
        message: "Invalid value for [--field-config]: Exactly one of 'order' or 'array-config'\
          \ must be specified for the fields with the following paths: [user_id, timestamp]."
