title: pubsub topics create scenario test
release_tracks: [ALPHA, BETA, GA]

actions:
# set a KMS key on topic creation using full resource path to kms key
- execute_command:
    command: |
      pubsub topics create topic1 --topic-encryption-key
      projects/p/locations/g/keyRings/r/cryptoKeys/k
    events:
    - api_call:
        expect_request:
          uri: https://pubsub.googleapis.com/v1/projects/fake-project/topics/topic1?alt=json
          method: PUT
          body:
            json:
              name: 'projects/fake-project/topics/topic1'
              kmsKeyName: 'projects/p/locations/g/keyRings/r/cryptoKeys/k'
        return_response:
          headers:
            status: '200'
          body:
            json:
              name: 'projects/fake-project/topics/topic12'
              kmsKeyName: 'projects/p/locations/g/keyRings/r/cryptoKeys/k'
    - expect_stderr: |
        Created topic [projects/fake-project/topics/topic1].
    - expect_exit:
        code: 0
# set a KMS key on topic creation using resource argument flags, use project fallthru
- execute_command:
    command: |
      pubsub topics create topic1 --topic-encryption-key k --topic-encryption-key-keyring r
      --topic-encryption-key-location g
    events:
    - api_call:
        expect_request:
          uri: https://pubsub.googleapis.com/v1/projects/fake-project/topics/topic1?alt=json
          method: PUT
          body:
            json:
              name: 'projects/fake-project/topics/topic1'
              kmsKeyName: 'projects/fake-project/locations/g/keyRings/r/cryptoKeys/k'
        return_response:
          headers:
            status: '200'
          body:
            json:
              name: 'projects/fake-project/topics/topic12'
              kmsKeyName: 'projects/fake-project/locations/g/keyRings/r/cryptoKeys/k'
    - expect_stderr: |
        Created topic [projects/fake-project/topics/topic1].
    - expect_exit:
        code: 0
# set a KMS key on topic creation using resource argument flags, different project
- execute_command:
    command: |
      pubsub topics create topic1 --topic-encryption-key k --topic-encryption-key-keyring r
      --topic-encryption-key-location g --topic-encryption-key-project p-other
    events:
    - api_call:
        expect_request:
          uri: https://pubsub.googleapis.com/v1/projects/fake-project/topics/topic1?alt=json
          method: PUT
          body:
            json:
              name: 'projects/fake-project/topics/topic1'
              kmsKeyName: 'projects/p-other/locations/g/keyRings/r/cryptoKeys/k'
        return_response:
          headers:
            status: '200'
          body:
            json:
              name: 'projects/fake-project/topics/topic12'
              kmsKeyName: 'projects/p-pther/locations/g/keyRing/r/cryptoKeys/k'
    - expect_stderr: |
        Created topic [projects/fake-project/topics/topic1].
    - expect_exit:
        code: 0
# incomplete kms key, no key
- execute_command:
    command: |
      pubsub topics create topic1 --topic-encryption-key-keyring r
      --topic-encryption-key-location g --topic-encryption-key-project p-other
    events:
    - expect_stderr:
        matches: .*topic-encryption-key must be specified.*
    - expect_exit:
        code: 1
        message:
          matches: .*topic-encryption-key must be specified.*
# incomplete kms key, no location
- execute_command:
    command: |
      pubsub topics create topic1 --topic-encryption-key k --topic-encryption-key-keyring r
      --topic-encryption-key-project p-other
    events:
    - expect_exit:
        code: 1
        message:
          matches: .*topic-encryption-key was not fully specified.*
# incomplete kms key, no keyring
- execute_command:
    command: |
      pubsub topics create topic1 --topic-encryption-key k
      --topic-encryption-key-location g --topic-encryption-key-project p-other
    events:
    - expect_exit:
        code: 1
        message:
          matches: .*topic-encryption-key was not fully specified.*
