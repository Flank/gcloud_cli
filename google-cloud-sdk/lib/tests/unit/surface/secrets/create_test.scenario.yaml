title: secrets create test
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - label: create secret with no data
  - command: |
      secrets create my-secret --locations us-central1
  - stdout: |
      Created secret [my-secret].
- execute:
  - label: create secret with data file
  - command: |
      secrets create my-secret --locations us-central1 --data-file secret.data
  - stdout: |
      Created version [1] of the secret [my-secret3].
- execute:
  - label: create secret with empty data file flag
  - command: |
      secrets create my-secret --locations us-central1 --data-file=""
  - error: '1: .*The value provided for --data-file is the empty string..*$'
- execute:
  - label: create secret with alterate project
  - command: |
      secrets create my-secret --locations us-central1 --project other-project
  - stdout: |
      Created secret [my-secret].
- execute:
  - label: create secret with full resource name
  - command: |
      secrets create projects/other-project/secrets/my-secret --locations us-central1
  - stdout: |
      Created secret [my-secret].
- execute:
  - label: create secret with labels
  - command: |
      secrets create my-secret --locations us-central1 --labels foo=bar,zip=zap
  - stdout: |
      Created secret [my-secret].
- execute:
  - label: create secret with missing secret
  - command: |
      secrets create --locations us-central1
  - stderr: |
      ERROR: (gcloud.alpha.secrets.create) argument SECRET: Must be specified.
      Usage: gcloud alpha secrets create SECRET --locations=[LOCATION,...] [optional flags]
        optional flags may be  --data-file | --help | --labels

      For detailed information on this command and its flags, run:
        gcloud alpha secrets create --help
  - error: '1: argument SECRET: Must be specified.'
- execute:
  - label: create secret with missing locations
  - command: |
      secrets create my-secret
  - error: '1: May not assign None to repeated field replicaLocations'
actions:
- write_file:
    path: secret.data
    contents: thisissecretdata
- execute_command:
    label: create secret with no data
    command: |
      secrets create my-secret --locations us-central1
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret2",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-06-26T17:03:50.247782482Z"
            }
    - expect_stdout: |
        Created secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: create secret with data file
    command: |
      secrets create my-secret --locations us-central1 --data-file secret.data
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret2",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-06-26T17:03:50.247782482Z"
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret:setPayload?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YQ==
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret3/versions/1",
              "createTime": "2019-06-26T17:06:38.425235006Z",
              "state": "ENABLED"
            }
    - expect_stdout: |
        Created version [1] of the secret [my-secret3].
    - expect_exit:
        code: 0
- execute_command:
    label: create secret with empty data file flag
    command: |
      secrets create my-secret --locations us-central1 --data-file=""
    events:
    - expect_exit:
        code: 1
        message:
          matches: .*The value provided for --data-file is the empty string.*
- execute_command:
    label: create secret with alterate project
    command: |
      secrets create my-secret --locations us-central1 --project other-project
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/other-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/1234/secrets/my-secret2",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-06-26T17:03:50.247782482Z"
            }
    - expect_stdout: |
        Created secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: create secret with full resource name
    command: |
      secrets create projects/other-project/secrets/my-secret --locations us-central1
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/other-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/1234/secrets/my-secret2",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-06-26T17:03:50.247782482Z"
            }
    - expect_stdout: |
        Created secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: create secret with labels
    command: |
      secrets create my-secret --locations us-central1 --labels foo=bar,zip=zap
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              labels:
                foo: bar
                zip: zap
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stdout: |
        Created secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: create secret with missing secret
    command: |
      secrets create --locations us-central1
    events:
    - expect_stderr: |
        ERROR: (gcloud.alpha.secrets.create) argument SECRET: Must be specified.
        Usage: gcloud alpha secrets create SECRET --locations=[LOCATION,...] [optional flags]
          optional flags may be  --data-file | --help | --labels

        For detailed information on this command and its flags, run:
          gcloud alpha secrets create --help
    - expect_exit:
        code: 1
        message: 'argument SECRET: Must be specified.'
- execute_command:
    label: create secret with missing locations
    command: |
      secrets create my-secret
    events:
    - expect_exit:
        code: 1
        message: May not assign None to repeated field replicaLocations
