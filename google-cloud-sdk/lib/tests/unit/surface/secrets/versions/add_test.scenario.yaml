title: secrets versions add test
release_tracks: [GA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - label: no secret or data given
  - command: secrets versions add
  - stderr: |
      ERROR: (gcloud.secrets.versions.add) argument SECRET --data-file: Must be specified.
      Usage: gcloud secrets versions add SECRET --data-file=PATH [optional flags]
        optional flags may be  --help

      For detailed information on this command and its flags, run:
        gcloud secrets versions add --help
  - error: '1: argument SECRET --data-file: Must be specified.'
- execute:
  - label: add version without data-file flag
  - command: secrets versions add mysecret
  - stderr: |
      ERROR: (gcloud.secrets.versions.add) argument --data-file: Must be specified.
      Usage: gcloud secrets versions add SECRET --data-file=PATH [optional flags]
        optional flags may be  --help

      For detailed information on this command and its flags, run:
        gcloud secrets versions add --help
  - error: '1: argument --data-file: Must be specified.'
- execute:
  - label: add version without giving secret
  - command: secrets versions add --data-file secret.data
  - error: |-
      1: Error parsing [secret].
      The [secret] resource is not properly specified.
      Failed to find attribute [secret]. The attribute can be set in the following ways: 
      - provide the argument [SECRET] on the command line
- execute:
  - label: add version to existing secret
  - command: secrets versions add my-secret --data-file secret.data
  - stdout: |
      Created version [3] of the secret [my-secret].
- execute:
  - label: no data file given
  - command: secrets versions add my-secret --data-file
  - stderr: |
      ERROR: (gcloud.secrets.versions.add) argument --data-file: expected one argument
      Usage: gcloud secrets versions add SECRET --data-file=PATH [optional flags]
        optional flags may be  --help

      For detailed information on this command and its flags, run:
        gcloud secrets versions add --help
  - error: '1: argument --data-file: expected one argument'
- execute:
  - label: secret not found
  - command: secrets versions add my-secret --data-file secret.data
  - error: '1: NOT_FOUND: Secret [projects/fake-project/secrets/my-secret] not found.'
actions:
- write_file:
    path: secret.data
    contents: thisissecretdata
- execute_command:
    label: no secret or data given
    command: secrets versions add
    events:
    - expect_stderr: |
        ERROR: (gcloud.secrets.versions.add) argument SECRET --data-file: Must be specified.
        Usage: gcloud secrets versions add SECRET --data-file=PATH [optional flags]
          optional flags may be  --help

        For detailed information on this command and its flags, run:
          gcloud secrets versions add --help
    - expect_exit:
        code: 1
        message: 'argument SECRET --data-file: Must be specified.'
- execute_command:
    label: add version without data-file flag
    command: secrets versions add mysecret
    events:
    - expect_stderr: |
        ERROR: (gcloud.secrets.versions.add) argument --data-file: Must be specified.
        Usage: gcloud secrets versions add SECRET --data-file=PATH [optional flags]
          optional flags may be  --help

        For detailed information on this command and its flags, run:
          gcloud secrets versions add --help
    - expect_exit:
        code: 1
        message: 'argument --data-file: Must be specified.'
- execute_command:
    label: add version without giving secret
    command: secrets versions add --data-file secret.data
    events:
    - expect_exit:
        code: 1
        message: |-
          Error parsing [secret].
          The [secret] resource is not properly specified.
          Failed to find attribute [secret]. The attribute can be set in the following ways: 
          - provide the argument [SECRET] on the command line
- execute_command:
    label: add version to existing secret
    command: secrets versions add my-secret --data-file secret.data
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:addVersion?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YQ==
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret/versions/3",
              "createTime": "2019-06-26T17:06:38.425235006Z",
              "state": "ENABLED"
            }
    - expect_stdout: |
        Created version [3] of the secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: no data file given
    command: secrets versions add my-secret --data-file
    events:
    - expect_stderr: |
        ERROR: (gcloud.secrets.versions.add) argument --data-file: expected one argument
        Usage: gcloud secrets versions add SECRET --data-file=PATH [optional flags]
          optional flags may be  --help

        For detailed information on this command and its flags, run:
          gcloud secrets versions add --help
    - expect_exit:
        code: 1
        message: 'argument --data-file: expected one argument'
- execute_command:
    label: secret not found
    command: secrets versions add my-secret --data-file secret.data
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:addVersion?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YQ==
        return_response:
          headers:
            status: '404'
          body: |
            {
              "error": {
                "code": 404,
                "message": "Secret [projects/fake-project/secrets/my-secret] not found.",
                "status": "NOT_FOUND"
              }
            }
    - expect_exit:
        code: 1
        message: 'NOT_FOUND: Secret [projects/fake-project/secrets/my-secret] not
          found.'
