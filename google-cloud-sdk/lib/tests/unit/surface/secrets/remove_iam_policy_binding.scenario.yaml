title: secrets remove-iam-policy-binding scenario test
release_tracks: [GA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: secrets remove-iam-policy-binding my-secret --member=user:owner@gmail.com
      --role=roles/owner
  - stderr: |
      Updated IAM policy for secret [my-secret].
  - stdout: |
      bindings:
      - members:
        - user:newowner@gmail.com
        role: roles/owner
      etag: etag
      version: 1
- execute:
  - command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive --condition=title="Expire at end of year",expression="request.time
      < timestamp('2020-12-31:11:59-08:00')"
  - stderr: |
      Updated IAM policy for secret [my-secret].
  - stdout: |
      {}
- execute:
  - command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive --condition=title="Expire at end of year",expression="request.time
      < timestamp('2020-12-31:11:59-08:00')",description="This description does not
      match"
  - error: '1: Policy binding with the specified member, role, and condition not found!'
- execute:
  - command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive --condition=title="Expire at end of year",expression="request.time
      < timestamp('2020-12-31:11:59-08:00')"
  - stderr: |
      Updated IAM policy for secret [my-secret].
  - stdout: |
      {}
- execute:
  - command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive
  - prompt:
    - prompt_string: The policy contains bindings with conditions, so specifying a
        condition is required when removing a binding. Please specify a condition.
    - choices: &id001
      - expression=request.time < timestamp('2020-12-31:11:59-08:00'),title=Expire
        at end of year
      - None
      - all conditions
    - input: '1'
  - stderr: |
      Updated IAM policy for secret [my-secret].
  - stdout: |
      {}
- execute:
  - command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive --condition=None
  - stderr: |
      Updated IAM policy for secret [my-secret].
  - stdout: |
      {}
actions:
- execute_command:
    command: secrets remove-iam-policy-binding my-secret --member=user:owner@gmail.com
      --role=roles/owner
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:owner@gmail.com",
                    "user:newowner@gmail.com"
                  ]
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: roles/owner
                  members: [user:newowner@gmail.com]
                etag: etag
                version: 3
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:newowner@gmail.com"
                  ]
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for secret [my-secret].
    - expect_stdout: |
        bindings:
        - members:
          - user:newowner@gmail.com
          role: roles/owner
        etag: etag
        version: 1
    - expect_exit:
        code: 0
- execute_command:
    command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive --condition=title="Expire at end of year",expression="request.time
      < timestamp('2020-12-31:11:59-08:00')"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 3,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/another-non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ]
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "request.time < timestamp('2020-12-31:11:59-08:00')",
                    "title": "Expire at end of year"
                  }
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:setIamPolicy?alt=json
          method: POST
          headers: {}
          body:
            json:
              policy:
                bindings:
                - members:
                  - user:test@gmail.com
                  role: roles/another-non-primitive
                etag: etag
                version: 3
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stderr: |
        Updated IAM policy for secret [my-secret].
    - expect_stdout: |
        {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive --condition=title="Expire at end of year",expression="request.time
      < timestamp('2020-12-31:11:59-08:00')",description="This description does not
      match"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 3,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/another-non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ]
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "request.time < timestamp('2020-12-31:11:59-08:00')",
                    "title": "Expire at end of year"
                  }
                }
              ]
            }
    - expect_exit:
        code: 1
        message: Policy binding with the specified member, role, and condition not
          found!
- execute_command:
    command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive --condition=title="Expire at end of year",expression="request.time
      < timestamp('2020-12-31:11:59-08:00')"
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 3,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ]
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "request.time < timestamp('2020-12-31:11:59-08:00')",
                    "title": "Expire at end of year"
                  }
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:setIamPolicy?alt=json
          method: POST
          headers: {}
          body:
            json:
              policy:
                bindings:
                - members:
                  - user:test@gmail.com
                  role: roles/non-primitive
                etag: etag
                version: 3
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stderr: |
        Updated IAM policy for secret [my-secret].
    - expect_stdout: |
        {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 3,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ]
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "request.time < timestamp('2020-12-31:11:59-08:00')",
                    "title": "Expire at end of year"
                  }
                }
              ]
            }
    - expect_prompt_choice:
        prompt_string: The policy contains bindings with conditions, so specifying
          a condition is required when removing a binding. Please specify a condition.
        choices: *id001
        user_input: '1'
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:setIamPolicy?alt=json
          method: POST
          headers: {}
          body:
            json:
              policy:
                bindings:
                - members:
                  - user:test@gmail.com
                  role: roles/non-primitive
                etag: etag
                version: 3
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stderr: |
        Updated IAM policy for secret [my-secret].
    - expect_stdout: |
        {}
    - expect_exit:
        code: 0
- execute_command:
    command: secrets remove-iam-policy-binding my-secret --member=user:test@gmail.com
      --role=roles/non-primitive --condition=None
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 3,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ]
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "request.time < timestamp('2020-12-31:11:59-08:00')",
                    "title": "Expire at end of year"
                  }
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret:setIamPolicy?alt=json
          method: POST
          headers: {}
          body:
            json:
              policy:
                bindings:
                - condition:
                    expression: request.time < timestamp('2020-12-31:11:59-08:00')
                    title: Expire at end of year
                  members:
                  - user:test@gmail.com
                  role: roles/non-primitive
                etag: etag
                version: 3
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stderr: |
        Updated IAM policy for secret [my-secret].
    - expect_stdout: |
        {}
    - expect_exit:
        code: 0
