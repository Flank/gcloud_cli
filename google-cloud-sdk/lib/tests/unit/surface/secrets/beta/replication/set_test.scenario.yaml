title: secrets beta replication set test
release_tracks: [BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - label: set a replication without specifying a file
  - command: secrets replication set my-secret
  - stderr: |
      ERROR: (gcloud.beta.secrets.replication.set) argument --replication-policy-file: Must be specified.
      Usage: gcloud beta secrets replication set SECRET --replication-policy-file=REPLICATION-POLICY-FILE [optional flags]
        optional flags may be  --help

      For detailed information on this command and its flags, run:
        gcloud beta secrets replication set --help
  - error: '1: argument --replication-policy-file: Must be specified.'
- execute:
  - label: set a replication without specifying a secret or file
  - command: secrets replication set
  - stderr: |
      ERROR: (gcloud.beta.secrets.replication.set) argument --replication-policy-file: Must be specified.
      Usage: gcloud beta secrets replication set SECRET --replication-policy-file=REPLICATION-POLICY-FILE [optional flags]
        optional flags may be  --help

      For detailed information on this command and its flags, run:
        gcloud beta secrets replication set --help
  - error: '1: argument --replication-policy-file: Must be specified.'
- execute:
  - label: set a replication without specifying a secret
  - command: secrets replication set my-secret --replication-policy-file=-
  - error: '1: Invalid value for [replication-policy]: File cannot be empty.'
- execute:
  - label: attempt to set replication on a nonexistent secret
  - command: secrets replication set my-secret --replication-policy-file=automatic-with-cmek.yaml
  - error: '1: Invalid value for [secret]: Cannot set replication for secret [my-secret]
      because it does not exist. Please use the create command to create a new secret.'
- execute:
  - label: attempt to set replication on a nonexistent secret
  - command: secrets replication set my-secret --replication-policy-file=automatic-with-cmek.yaml
  - error: '1: Invalid value for [secret]: Cannot set replication for secret [my-secret]
      because it does not exist. Please use the create command to create a new secret.'
- execute:
  - label: set an automatic cmek replication policy with a yaml file
  - command: secrets replication set my-secret --replication-policy-file=automatic-with-cmek.yaml
  - stdout: |
      Updated replication for secret [my-secret].
- execute:
  - label: set an automatic cmek replication policy with a json file
  - command: secrets replication set my-secret --replication-policy-file=automatic-with-cmek.json
  - stdout: |
      Updated replication for secret [my-secret].
actions:
- execute_command:
    label: set a replication without specifying a file
    command: secrets replication set my-secret
    events:
    - expect_stderr: |
        ERROR: (gcloud.beta.secrets.replication.set) argument --replication-policy-file: Must be specified.
        Usage: gcloud beta secrets replication set SECRET --replication-policy-file=REPLICATION-POLICY-FILE [optional flags]
          optional flags may be  --help

        For detailed information on this command and its flags, run:
          gcloud beta secrets replication set --help
    - expect_exit:
        code: 1
        message: 'argument --replication-policy-file: Must be specified.'
- execute_command:
    label: set a replication without specifying a secret or file
    command: secrets replication set
    events:
    - expect_stderr: |
        ERROR: (gcloud.beta.secrets.replication.set) argument --replication-policy-file: Must be specified.
        Usage: gcloud beta secrets replication set SECRET --replication-policy-file=REPLICATION-POLICY-FILE [optional flags]
          optional flags may be  --help

        For detailed information on this command and its flags, run:
          gcloud beta secrets replication set --help
    - expect_exit:
        code: 1
        message: 'argument --replication-policy-file: Must be specified.'
- execute_command:
    label: set a replication without specifying a secret
    command: secrets replication set my-secret --replication-policy-file=-
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [replication-policy]: File cannot be empty.'
- write_file:
    path: automatic-with-cmek.yaml
    contents: |
      automatic:
        customerManagedEncryption:
          kmsKeyName: my-kms-key-name
- execute_command:
    label: attempt to set replication on a nonexistent secret
    command: secrets replication set my-secret --replication-policy-file=automatic-with-cmek.yaml
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - expect_exit:
        code: 1
        message: 'Invalid value for [secret]: Cannot set replication for secret [my-secret]
          because it does not exist. Please use the create command to create a new
          secret.'
- execute_command:
    label: attempt to set replication on a nonexistent secret
    command: secrets replication set my-secret --replication-policy-file=automatic-with-cmek.yaml
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - expect_exit:
        code: 1
        message: 'Invalid value for [secret]: Cannot set replication for secret [my-secret]
          because it does not exist. Please use the create command to create a new
          secret.'
- execute_command:
    label: set an automatic cmek replication policy with a yaml file
    command: secrets replication set my-secret --replication-policy-file=automatic-with-cmek.yaml
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "replication": {
                "automatic": {}
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret?alt=json&updateMask=replication
          method: PATCH
          headers: {}
          body:
            json:
              replication:
                automatic:
                  customerManagedEncryption:
                    kmsKeyName: my-kms-key-name
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "replication": {
                "automatic": {
                  "customerManagedEncryption": {
                    "kmsKeyName": "my-kms-key-name"
                  }
                }
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_stdout: |
        Updated replication for secret [my-secret].
    - expect_exit:
        code: 0
- write_file:
    path: automatic-with-cmek.json
    contents: |
      {
        "automatic": {
          "customerManagedEncryption": {
            "kmsKeyName": "my-kms-key-name"
          }
        }
      }
- execute_command:
    label: set an automatic cmek replication policy with a json file
    command: secrets replication set my-secret --replication-policy-file=automatic-with-cmek.json
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "replication": {
                "automatic": {}
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1/projects/fake-project/secrets/my-secret?alt=json&updateMask=replication
          method: PATCH
          headers: {}
          body:
            json:
              replication:
                automatic:
                  customerManagedEncryption:
                    kmsKeyName: my-kms-key-name
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "replication": {
                "automatic": {
                  "customerManagedEncryption": {
                    "kmsKeyName": "my-kms-key-name"
                  }
                }
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_stdout: |
        Updated replication for secret [my-secret].
    - expect_exit:
        code: 0
