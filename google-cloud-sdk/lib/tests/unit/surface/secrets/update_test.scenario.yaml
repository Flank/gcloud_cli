title: secrets update test
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - label: update secret that does not exist with create-if-missing no data
  - command: |
      secrets update my-secret --locations us-central1 --create-if-missing
  - stdout: |
      Created secret [my-secret].
- execute:
  - label: update secret that does not exist with data file
  - command: |
      secrets update my-secret --data-file=secret.data --locations=us-central1 --create-if-missing
  - stdout: |
      Created secret [my-secret].
  - stdout: |
      Created version [1] of the secret [my-secret].
- execute:
  - label: update secret that does not exist fails without --create-if-missing
  - command: |
      secrets update my-secret
  - error: '1: The secret [my-secret] cannot be updated because it does not exist.
      To create the secret if it does not exist, specify the --create-if-missing flag
      on the update command.'
- execute:
  - label: update secret that does not exist fails with no locations
  - command: |
      secrets update my-secret --create-if-missing
  - error: '1: argument --locations: Must be specified.'
- execute:
  - label: update secret does not exist no data with labels
  - command: |
      secrets update my-secret --locations=us-central1 --update-labels=foo=bar --create-if-missing
  - stdout: |
      Created secret [my-secret].
- execute:
  - label: update secret does not exist different project
  - command: |
      secrets update my-secret --locations=us-central1 --project other-project --create-if-missing
  - stdout: |
      Created secret [my-secret].
- execute:
  - label: update secret does not exist from resource spec
  - command: |
      secrets update projects/my-project/secrets/my-secret --locations=us-central1 --create-if-missing
  - stdout: |
      Created secret [my-secret].
- execute:
  - label: update secret exists update locations
  - command: |
      secrets update my-secret --locations=us-central2
  - stdout: |
      Updated secret [my-secret].
- execute:
  - label: update secret exists with data and locations
  - command: |
      secrets update my-secret --data-file=secret.data --locations=us-central2
  - stdout: |
      Updated secret [my-secret].
  - stdout: |
      Created version [1] of the secret [my-secret].
- execute:
  - label: update secret exists no changes
  - command: |
      secrets update my-secret
  - error: '1: There are no changes to the secret [my-secret] for update.'
- execute:
  - label: update secret exists with labels and locations
  - command: |
      secrets update my-secret --locations=us-central2 --update-labels=foo=bar,zip=zap
  - stdout: |
      Updated secret [my-secret].
- execute:
  - label: update secret exists with project and locations
  - command: |
      secrets update my-secret --locations=us-central2 --project other-project
  - stdout: |
      Updated secret [my-secret].
- execute:
  - label: update secret exists with resource spec and locations
  - command: |
      secrets update --locations=us-central2 projects/my-project/secrets/my-secret
  - stdout: |
      Updated secret [my-secret].
actions:
- write_file:
    path: secret.data
    contents: thisissecretdata
- execute_command:
    label: update secret that does not exist with create-if-missing no data
    command: |
      secrets update my-secret --locations us-central1 --create-if-missing
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:02:03.695203637Z"
            }
    - expect_stdout: |
        Created secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret that does not exist with data file
    command: |
      secrets update my-secret --data-file=secret.data --locations=us-central1 --create-if-missing
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:02:03.695203637Z"
            }
    - expect_stdout: |
        Created secret [my-secret].
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret:setPayload?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YQ==
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret/versions/1",
              "createTime": "2019-07-09T14:08:45.165703800Z",
              "state": "ENABLED"
            }
    - expect_stdout: |
        Created version [1] of the secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret with empty data-file flag
    command: secrets update my-secret --locations us-central1 --data-file=""
    events:
    - expect_exit:
        code: 1
        message:
          matches: .*The value provided for --data-file is the empty string.*
- execute_command:
    label: update secret that does not exist fails without --create-if-missing
    command: |
      secrets update my-secret
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - expect_exit:
        code: 1
        message: The secret [my-secret] cannot be updated because it does not exist.
          To create the secret if it does not exist, specify the --create-if-missing
          flag on the update command.
- execute_command:
    label: update secret that does not exist fails with no locations
    command: |
      secrets update my-secret --create-if-missing
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - expect_exit:
        code: 1
        message: 'argument --locations: Must be specified.'
- execute_command:
    label: update secret does not exist no data with labels
    command: |
      secrets update my-secret --locations=us-central1 --update-labels=foo=bar --create-if-missing
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              labels:
                foo: bar
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
               "name": "projects/462803083913/secrets/my-secret",
               "policy": {
                 "replicaLocations": [
                   "us-central1"
                 ]
               },
               "createTime": "2019-07-09T14:15:37.370737171Z",
               "labels": {
                 "foo": "bar"
               }
             }
    - expect_stdout: |
        Created secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret does not exist different project
    command: |
      secrets update my-secret --locations=us-central1 --project other-project --create-if-missing
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/other-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/other-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/1234/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_stdout: |
        Created secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret does not exist from resource spec
    command: |
      secrets update projects/my-project/secrets/my-secret --locations=us-central1 --create-if-missing
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/my-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: null
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/my-project/secrets?alt=json&secretId=my-secret
          method: POST
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central1
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_stdout: |
        Created secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret exists update locations
    command: |
      secrets update my-secret --locations=us-central2
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json&updateMask=policy.replicaLocations
          method: PATCH
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central2
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central2"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_stdout: |
        Updated secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret exists with data and locations
    command: |
      secrets update my-secret --data-file=secret.data --locations=us-central2
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json&updateMask=policy.replicaLocations
          method: PATCH
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central2
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central2"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_stdout: |
        Updated secret [my-secret].
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret:setPayload?alt=json
          method: POST
          headers: {}
          body:
            json:
              payload:
                data: dGhpc2lzc2VjcmV0ZGF0YQ==
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret/versions/1",
              "createTime": "2019-07-09T14:26:30.907618396Z",
              "state": "ENABLED"
            }
    - expect_stdout: |
        Created version [1] of the secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret exists no changes
    command: |
      secrets update my-secret
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_exit:
        code: 1
        message: There are no changes to the secret [my-secret] for update.
- execute_command:
    label: update secret exists with labels and locations
    command: |
      secrets update my-secret --locations=us-central2 --update-labels=foo=bar,zip=zap
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/fake-project/secrets/my-secret?alt=json&updateMask=labels%2Cpolicy.replicaLocations
          method: PATCH
          headers: {}
          body:
            json:
              labels:
                foo: bar
                zip: zap
              policy:
                replicaLocations:
                - us-central2
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/462803083913/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central2"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z",
              "labels": {
                "foo": "bar",
                "zip": "zap"
              }
            }
    - expect_stdout: |
        Updated secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret exists with project and locations
    command: |
      secrets update my-secret --locations=us-central2 --project other-project
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/other-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/1234/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/other-project/secrets/my-secret?alt=json&updateMask=policy.replicaLocations
          method: PATCH
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central2
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/1234/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central2"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_stdout: |
        Updated secret [my-secret].
    - expect_exit:
        code: 0
- execute_command:
    label: update secret exists with resource spec and locations
    command: |
      secrets update --locations=us-central2 projects/my-project/secrets/my-secret
    events:
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/my-project/secrets/my-secret?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/1234/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central1"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - api_call:
        expect_request:
          uri: https://secretmanager.googleapis.com/v1alpha/projects/my-project/secrets/my-secret?alt=json&updateMask=policy.replicaLocations
          method: PATCH
          headers: {}
          body:
            json:
              policy:
                replicaLocations:
                - us-central2
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/1234/secrets/my-secret",
              "policy": {
                "replicaLocations": [
                  "us-central2"
                ]
              },
              "createTime": "2019-07-09T14:15:37.370737171Z"
            }
    - expect_stdout: |
        Updated secret [my-secret].
    - expect_exit:
        code: 0
