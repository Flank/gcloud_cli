title: privateca subordinates create tests for both first-party and third-party issuers.
release_tracks: [BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- set_property: core/project foo
- set_property: privateca/location us-east1
- execute:
  - command: privateca subordinates create server-tls --issuer prod-root --issuer-location
      us-east1 --subject "CN=Server TLS CA 1,O=Google" --reusable-config server-tls
      --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/server-tls].
- execute:
  - command: privateca subordinates create server-tls --issuer prod-root --issuer-location
      us-west1 --subject "CN=Server TLS CA 1,O=Google" --reusable-config server-tls
      --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
      --bucket my-bucket
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/server-tls].
- execute:
  - command: privateca subordinates create server-tls --issuer prod-root --issuer-location
      us-east1 --from-ca source-ca --from-ca-location us-east1 --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/server-tls].
- execute:
  - command: privateca subordinates create server-tls --create-csr --csr-output-file
      csr.pem --subject "CN=Server TLS CA 1,O=Google" --reusable-config server-tls
      --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - write_file: csr.pem
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/server-tls] and saved CSR to 'csr.pem'.
- execute:
  - command: privateca subordinates create workload-mtls --create-csr --csr-output-file
      csr.pem --subject "CN=Server TLS CA 1,O=Google" --tier devops --key-algorithm
      rsa-pss-2048-sha256
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - write_file: csr.pem
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/workload-mtls] and saved CSR to 'csr.pem'.
- execute:
  - command: privateca subordinates create server-tls --create-csr --csr-output-file
      csr.pem --subject "CN=Server TLS CA 1,O=Google" --key-algorithm ec-p256-sha256
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - write_file: csr.pem
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/server-tls] and saved CSR to 'csr.pem'.
- execute:
  - command: privateca subordinates create server-tls --create-csr --csr-output-file
      csr.pem --subject "CN=Server TLS CA 1,O=Google"
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - write_file: csr.pem
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/server-tls] and saved CSR to 'csr.pem'.
- execute:
  - command: privateca subordinates create server-tls --issuer non-exist --issuer-location
      us-west1 --subject "CN=Server TLS CA 1,O=Google"
  - error: '1: Invalid value for [--issuer]: The issuing Certificate Authority [projects/foo/locations/us-west1/certificateAuthorities/non-exist]
      was not found. Please verify this information is correct and try again.'
- execute:
  - command: privateca subordinates create server-tls --issuer not-enabled --issuer-location
      us-west1 --subject "CN=Server TLS CA 1,O=Google"
  - error: '1: Invalid value for [--issuer]: The issuing Certificate Authority [projects/foo/locations/us-west1/certificateAuthorities/not-enabled]
      is not in ENABLED state. Please enable it and try again.'
actions:
- set_property:
    core/project: foo
    privateca/location: us-east1
- execute_command:
    command: privateca subordinates create server-tls --issuer prod-root --issuer-location
      us-east1 --subject "CN=Server TLS CA 1,O=Google" --reusable-config server-tls
      --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/prod-root:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificates.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificates.create
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/prod-root?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/certificateAuthorities/prod-root
            state: ENABLED
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "version": 1,
              "etag": "ACAB"
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/cloudkms.signerVerifier
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/viewer
                etag: ACAB
                version: 3
              updateMask: bindings,etag,version
        return_response:
          headers:
            status: '200'
          body: |
            {
              "bindings": [
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/cloudkms.signerVerifier"
                },
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/viewer"
                }
              ],
              "version": 3,
              "etag": "ACAC"
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=server-tls&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
              config:
                reusableConfig:
                  reusableConfig: projects/privateca-data/locations/us-east1/reusableConfigs/server-tls
                subjectConfig:
                  commonName: Server TLS CA 1
                  subject: {}
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: true
              type: SUBORDINATE
              lifetime: 94670778s
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/server-tls
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
              MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
              VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
              RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
              pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
              LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
              kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
              W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
              AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
              3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
              VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
              uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
              gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
              MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
              kI5YH9kEOVOu
              -----END CERTIFICATE REQUEST-----
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/prod-root/certificates\?alt=json&certificateId=subordinate-\d{8}-[A-Z0-9]{3}-[A-Z0-9]{3}&requestId=[^&]+$
          method: POST
          body:
            json:
              lifetime: 94670778s
              pemCsr: |
                -----BEGIN CERTIFICATE REQUEST-----
                MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
                MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
                VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
                AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
                RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
                pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
                LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
                kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
                W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
                A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
                AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
                3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
                VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
                uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
                gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
                MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
                kI5YH9kEOVOu
                -----END CERTIFICATE REQUEST-----
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/certificateAuthorities/prod-root/certificates/subordinate-20200220-ABC-DEF
            pemCertificate: |
              -----BEGIN CERTIFICATE-----
              MIIEKDCCAtygAwIBAgIVAKDKBUAIdi0prnBNNn/6cS/r1mfIMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTk0MTIwWhcN
              MzAwMzExMDU0OTAxWjBnMQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxGDAW
              BgNVBAMTD1NlcnZlciBUTFMgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
              AQoCggEBAI0nmjtcKAI009Yh0x8w/niLDqpNcsp1gD1rAR1p5AvE2js95E0z8/P6
              afZGWunE2hO2diMsUgp3EaF1o9LEFDtoUsUK6XojagTuZuaBVFL8UITzNBgZAPjN
              HbymYvfmoJ5FYDHGibD96dFHmPhVTGRz7VZULmWNiNP4rTiUCC2/chBPfS7TbEoK
              sQMtIF2QyBZ5BNvTTk/BdKnVDHjp5zayujBktTDifHqVQrC+44RQdD0G/SpsnLBe
              MVyR+RyJz8vuW3INYD8ksL8n7qr+dCSAPCuVJLSVkRy8ghG4/24AomOGjePz//tT
              j11bWXARNwdZuB4WcX08TWR+rYE/lJMCAwEAAaNWMFQwEgYDVR0TAQH/BAgwBgEB
              /wIBADAdBgNVHQ4EFgQUJ62PA7yyHcai2nLdvYrKnPf2mKIwHwYDVR0jBBgwFoAU
              J62PA7yyHcai2nLdvYrKnPf2mKIwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQME
              AgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQBIYFii
              PWUOqvxuwS+Anvanp6E8rrG8RuDEihVYNPMT4spodIJxP59RyU2JWYxZ6IDnX8oJ
              CLaJMDW6GQKxfbj4pjCJOYk3BinrN2Ie7s7Sxtve9twturIura2wCpZtDzb8Dp1d
              gsN4HtE7XRQbNlK4oZ5ehHzEoChMB2wosiuff7jvCiXtfakmZdA0iy15OyJTJlMD
              axp9I3CHs3mOw+AngGRp8AgJtynTV2bEBaaP7pPz8xZryIyONmvFI7djI8qcnnyl
              cdfxf+99tenQXw24EifjaEbGAT7zu23MRJAMpt7lacPgdcKtZNLXlzcS/RGenjMN
              YhSedspfcIJw/STP
              -----END CERTIFICATE-----
            lifetime: P30D
            pemCertificateChain:
            - |
              -----BEGIN CERTIFICATE-----
              MIIENTCCAumgAwIBAgIVAKph5dh4fJiGQHCPRaCattongQLwMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTgxNDQ4WhcN
              MzAwMzExMDQyMjI5WjB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAj
              BgNVBAMTHFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3
              DQEBAQUAA4IBDwAwggEKAoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEd
              aeQLxNo7PeRNM/Pz+mn2RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbm
              gVRS/FCE8zQYGQD4zR28pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04
              lAgtv3IQT30u02xKCrEDLSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKw
              vuOEUHQ9Bv0qbJywXjFckfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIR
              uP9uAKJjho3j8//7U49dW1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGjVjBUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCetjwO8sh3Gotpy3b2Kypz39pii
              MB8GA1UdIwQYMBaAFCetjwO8sh3Gotpy3b2Kypz39piiMEEGCSqGSIb3DQEBCjA0
              oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIBBQCi
              AwIBIAOCAQEANqKeGZY7oDdsyPC8lP2ZR6ogaUX6KBLGLspfZ6Lb3RKCoe0NQoc7
              GEAaunoGJnj7wTW1WoqBYdmRQBEBy6nVT40giuDHFGHIMwF7dBoxsTc60yHpyJid
              HKBGWXo8Lsald+xalmjLLW3dmV0SF5j6pnHeIgWc2VCikInFDrD3wDvMBMuJFIsX
              NbgncmafjGPvMyNueOrgZDJ9MQNYN53Fvx5owqtAMhbG6yHvT6ytoQ44WZP8svYr
              Cxik0WWaDMtDTKP2uJ/dNAkVKQ5xRxtRt9Zzax4kTbLCWbC4+ugH1tyhzcuMJkJN
              poYZu+i6CrUTys/chYitvwy2aAaz5Csf5Q==
              -----END CERTIFICATE-----
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:activate?alt=json
          method: POST
          body:
            json:
              pemCaCertificate: |
                -----BEGIN CERTIFICATE-----
                MIIEKDCCAtygAwIBAgIVAKDKBUAIdi0prnBNNn/6cS/r1mfIMEEGCSqGSIb3DQEB
                CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
                BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
                VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
                HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTk0MTIwWhcN
                MzAwMzExMDU0OTAxWjBnMQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
                MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxGDAW
                BgNVBAMTD1NlcnZlciBUTFMgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
                AQoCggEBAI0nmjtcKAI009Yh0x8w/niLDqpNcsp1gD1rAR1p5AvE2js95E0z8/P6
                afZGWunE2hO2diMsUgp3EaF1o9LEFDtoUsUK6XojagTuZuaBVFL8UITzNBgZAPjN
                HbymYvfmoJ5FYDHGibD96dFHmPhVTGRz7VZULmWNiNP4rTiUCC2/chBPfS7TbEoK
                sQMtIF2QyBZ5BNvTTk/BdKnVDHjp5zayujBktTDifHqVQrC+44RQdD0G/SpsnLBe
                MVyR+RyJz8vuW3INYD8ksL8n7qr+dCSAPCuVJLSVkRy8ghG4/24AomOGjePz//tT
                j11bWXARNwdZuB4WcX08TWR+rYE/lJMCAwEAAaNWMFQwEgYDVR0TAQH/BAgwBgEB
                /wIBADAdBgNVHQ4EFgQUJ62PA7yyHcai2nLdvYrKnPf2mKIwHwYDVR0jBBgwFoAU
                J62PA7yyHcai2nLdvYrKnPf2mKIwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQME
                AgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQBIYFii
                PWUOqvxuwS+Anvanp6E8rrG8RuDEihVYNPMT4spodIJxP59RyU2JWYxZ6IDnX8oJ
                CLaJMDW6GQKxfbj4pjCJOYk3BinrN2Ie7s7Sxtve9twturIura2wCpZtDzb8Dp1d
                gsN4HtE7XRQbNlK4oZ5ehHzEoChMB2wosiuff7jvCiXtfakmZdA0iy15OyJTJlMD
                axp9I3CHs3mOw+AngGRp8AgJtynTV2bEBaaP7pPz8xZryIyONmvFI7djI8qcnnyl
                cdfxf+99tenQXw24EifjaEbGAT7zu23MRJAMpt7lacPgdcKtZNLXlzcS/RGenjMN
                YhSedspfcIJw/STP
                -----END CERTIFICATE-----
              subordinateConfig:
                pemIssuerChain:
                  pemCertificates:
                  - |
                    -----BEGIN CERTIFICATE-----
                    MIIENTCCAumgAwIBAgIVAKph5dh4fJiGQHCPRaCattongQLwMEEGCSqGSIb3DQEB
                    CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
                    BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
                    VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
                    HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTgxNDQ4WhcN
                    MzAwMzExMDQyMjI5WjB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
                    MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAj
                    BgNVBAMTHFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3
                    DQEBAQUAA4IBDwAwggEKAoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEd
                    aeQLxNo7PeRNM/Pz+mn2RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbm
                    gVRS/FCE8zQYGQD4zR28pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04
                    lAgtv3IQT30u02xKCrEDLSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKw
                    vuOEUHQ9Bv0qbJywXjFckfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIR
                    uP9uAKJjho3j8//7U49dW1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGjVjBUMBIG
                    A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCetjwO8sh3Gotpy3b2Kypz39pii
                    MB8GA1UdIwQYMBaAFCetjwO8sh3Gotpy3b2Kypz39piiMEEGCSqGSIb3DQEBCjA0
                    oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIBBQCi
                    AwIBIAOCAQEANqKeGZY7oDdsyPC8lP2ZR6ogaUX6KBLGLspfZ6Lb3RKCoe0NQoc7
                    GEAaunoGJnj7wTW1WoqBYdmRQBEBy6nVT40giuDHFGHIMwF7dBoxsTc60yHpyJid
                    HKBGWXo8Lsald+xalmjLLW3dmV0SF5j6pnHeIgWc2VCikInFDrD3wDvMBMuJFIsX
                    NbgncmafjGPvMyNueOrgZDJ9MQNYN53Fvx5owqtAMhbG6yHvT6ytoQ44WZP8svYr
                    Cxik0WWaDMtDTKP2uJ/dNAkVKQ5xRxtRt9Zzax4kTbLCWbC4+ugH1tyhzcuMJkJN
                    poYZu+i6CrUTys/chYitvwy2aAaz5Csf5Q==
                    -----END CERTIFICATE-----
        return_response:
          headers:
            status: '200'
          body:
            done: true
    - expect_stderr: >
        Created Certificate Authority
        [projects/foo/locations/us-east1/certificateAuthorities/server-tls].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create server-tls --issuer prod-root --issuer-location
      us-west1 --subject "CN=Server TLS CA 1,O=Google" --reusable-config server-tls
      --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
      --bucket my-bucket
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-west1/certificateAuthorities/prod-root:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificates.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificates.create
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-west1/certificateAuthorities/prod-root?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-west1/certificateAuthorities/prod-root
            state: ENABLED
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/my-bucket?alt=json&projection=full
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
             "kind": "storage#bucket",
             "id": "my-bucket",
             "selfLink": "https://www.googleapis.com/storage/v1/b/my-bucket",
             "projectNumber": "166289904856",
             "name": "my-bucket",
             "timeCreated": "2020-02-12T20:10:10.558Z",
             "updated": "2020-02-12T20:10:10.558Z",
             "metageneration": "1",
             "defaultObjectAcl": [
              {
               "kind": "storage#objectAccessControl",
               "entity": "allUsers",
               "role": "READER",
               "etag": "CAE="
              }
             ],
             "iamConfiguration": {
              "bucketPolicyOnly": {
               "enabled": false
              },
              "uniformBucketLevelAccess": {
               "enabled": false
              }
             },
             "location": "us-east1",
             "locationType": "region",
             "versioning": {
              "enabled": true
             },
             "storageClass": "STANDARD",
             "etag": "CAE="
            }
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "version": 1,
              "etag": "ACAB"
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/cloudkms.signerVerifier
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/viewer
                etag: ACAB
                version: 3
              updateMask: bindings,etag,version
        return_response:
          headers:
            status: '200'
          body: |
            {
              "bindings": [
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/cloudkms.signerVerifier"
                },
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/viewer"
                }
              ],
              "version": 3,
              "etag": "ACAC"
            }
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/my-bucket/iam?alt=json&optionsRequestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "kind": "storage#policy",
              "resourceId": "projects/_/buckets/my-bucket",
              "version": 1,
              "etag": "CAE=",
              "bindings": [
                {
                  "role": "roles/storage.legacyBucketOwner",
                  "members": [
                    "projectEditor:foo",
                    "projectOwner:foo"
                  ]
                },
                {
                  "role": "roles/storage.legacyBucketReader",
                  "members": [
                    "projectViewer:foo"
                  ]
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/my-bucket/iam?alt=json
          method: PUT
          body:
            json:
              resourceId: projects/_/buckets/my-bucket
              kind: storage#policy
              version: 3
              etag: CAE=
              bindings:
              - members:
                - projectEditor:foo
                - projectOwner:foo
                role: roles/storage.legacyBucketOwner
              - members:
                - projectViewer:foo
                - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                role: roles/storage.legacyBucketReader
              - members:
                - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                role: roles/storage.objectAdmin
        return_response:
          headers:
            status: '200'
          body: |
            {
              "kind": "storage#policy",
              "resourceId": "projects/_/buckets/my-bucket",
              "version": 1,
              "etag": "CAE=",
              "bindings": [
                {
                  "role": "roles/storage.legacyBucketOwner",
                  "members": [
                    "projectEditor:foo",
                    "projectOwner:foo"
                  ]
                },
                {
                  "role": "roles/storage.legacyBucketReader",
                  "members": [
                    "projectViewer:foo",
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/storage.objectAdmin",
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ]
                }
              ]
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=server-tls&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
              gcsBucket: my-bucket
              config:
                reusableConfig:
                  reusableConfig: projects/privateca-data/locations/us-east1/reusableConfigs/server-tls
                subjectConfig:
                  commonName: Server TLS CA 1
                  subject: {}
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: true
              type: SUBORDINATE
              lifetime: 94670778s
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/server-tls
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
              MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
              VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
              RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
              pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
              LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
              kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
              W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
              AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
              3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
              VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
              uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
              gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
              MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
              kI5YH9kEOVOu
              -----END CERTIFICATE REQUEST-----
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-west1/certificateAuthorities/prod-root/certificates\?alt=json&certificateId=subordinate-\d{8}-[A-Z0-9]{3}-[A-Z0-9]{3}&requestId=[^&]+$
          method: POST
          body:
            json:
              lifetime: 94670778s
              pemCsr: |
                -----BEGIN CERTIFICATE REQUEST-----
                MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
                MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
                VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
                AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
                RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
                pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
                LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
                kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
                W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
                A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
                AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
                3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
                VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
                uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
                gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
                MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
                kI5YH9kEOVOu
                -----END CERTIFICATE REQUEST-----
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/certificateAuthorities/prod-root/certificates/subordinate-20200220-ABC-DEF
            pemCertificate: |
              -----BEGIN CERTIFICATE-----
              MIIEKDCCAtygAwIBAgIVAKDKBUAIdi0prnBNNn/6cS/r1mfIMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTk0MTIwWhcN
              MzAwMzExMDU0OTAxWjBnMQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxGDAW
              BgNVBAMTD1NlcnZlciBUTFMgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
              AQoCggEBAI0nmjtcKAI009Yh0x8w/niLDqpNcsp1gD1rAR1p5AvE2js95E0z8/P6
              afZGWunE2hO2diMsUgp3EaF1o9LEFDtoUsUK6XojagTuZuaBVFL8UITzNBgZAPjN
              HbymYvfmoJ5FYDHGibD96dFHmPhVTGRz7VZULmWNiNP4rTiUCC2/chBPfS7TbEoK
              sQMtIF2QyBZ5BNvTTk/BdKnVDHjp5zayujBktTDifHqVQrC+44RQdD0G/SpsnLBe
              MVyR+RyJz8vuW3INYD8ksL8n7qr+dCSAPCuVJLSVkRy8ghG4/24AomOGjePz//tT
              j11bWXARNwdZuB4WcX08TWR+rYE/lJMCAwEAAaNWMFQwEgYDVR0TAQH/BAgwBgEB
              /wIBADAdBgNVHQ4EFgQUJ62PA7yyHcai2nLdvYrKnPf2mKIwHwYDVR0jBBgwFoAU
              J62PA7yyHcai2nLdvYrKnPf2mKIwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQME
              AgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQBIYFii
              PWUOqvxuwS+Anvanp6E8rrG8RuDEihVYNPMT4spodIJxP59RyU2JWYxZ6IDnX8oJ
              CLaJMDW6GQKxfbj4pjCJOYk3BinrN2Ie7s7Sxtve9twturIura2wCpZtDzb8Dp1d
              gsN4HtE7XRQbNlK4oZ5ehHzEoChMB2wosiuff7jvCiXtfakmZdA0iy15OyJTJlMD
              axp9I3CHs3mOw+AngGRp8AgJtynTV2bEBaaP7pPz8xZryIyONmvFI7djI8qcnnyl
              cdfxf+99tenQXw24EifjaEbGAT7zu23MRJAMpt7lacPgdcKtZNLXlzcS/RGenjMN
              YhSedspfcIJw/STP
              -----END CERTIFICATE-----
            lifetime: P30D
            pemCertificateChain:
            - |
              -----BEGIN CERTIFICATE-----
              MIIENTCCAumgAwIBAgIVAKph5dh4fJiGQHCPRaCattongQLwMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTgxNDQ4WhcN
              MzAwMzExMDQyMjI5WjB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAj
              BgNVBAMTHFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3
              DQEBAQUAA4IBDwAwggEKAoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEd
              aeQLxNo7PeRNM/Pz+mn2RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbm
              gVRS/FCE8zQYGQD4zR28pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04
              lAgtv3IQT30u02xKCrEDLSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKw
              vuOEUHQ9Bv0qbJywXjFckfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIR
              uP9uAKJjho3j8//7U49dW1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGjVjBUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCetjwO8sh3Gotpy3b2Kypz39pii
              MB8GA1UdIwQYMBaAFCetjwO8sh3Gotpy3b2Kypz39piiMEEGCSqGSIb3DQEBCjA0
              oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIBBQCi
              AwIBIAOCAQEANqKeGZY7oDdsyPC8lP2ZR6ogaUX6KBLGLspfZ6Lb3RKCoe0NQoc7
              GEAaunoGJnj7wTW1WoqBYdmRQBEBy6nVT40giuDHFGHIMwF7dBoxsTc60yHpyJid
              HKBGWXo8Lsald+xalmjLLW3dmV0SF5j6pnHeIgWc2VCikInFDrD3wDvMBMuJFIsX
              NbgncmafjGPvMyNueOrgZDJ9MQNYN53Fvx5owqtAMhbG6yHvT6ytoQ44WZP8svYr
              Cxik0WWaDMtDTKP2uJ/dNAkVKQ5xRxtRt9Zzax4kTbLCWbC4+ugH1tyhzcuMJkJN
              poYZu+i6CrUTys/chYitvwy2aAaz5Csf5Q==
              -----END CERTIFICATE-----
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:activate?alt=json
          method: POST
          body:
            json:
              pemCaCertificate: |
                -----BEGIN CERTIFICATE-----
                MIIEKDCCAtygAwIBAgIVAKDKBUAIdi0prnBNNn/6cS/r1mfIMEEGCSqGSIb3DQEB
                CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
                BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
                VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
                HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTk0MTIwWhcN
                MzAwMzExMDU0OTAxWjBnMQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
                MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxGDAW
                BgNVBAMTD1NlcnZlciBUTFMgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
                AQoCggEBAI0nmjtcKAI009Yh0x8w/niLDqpNcsp1gD1rAR1p5AvE2js95E0z8/P6
                afZGWunE2hO2diMsUgp3EaF1o9LEFDtoUsUK6XojagTuZuaBVFL8UITzNBgZAPjN
                HbymYvfmoJ5FYDHGibD96dFHmPhVTGRz7VZULmWNiNP4rTiUCC2/chBPfS7TbEoK
                sQMtIF2QyBZ5BNvTTk/BdKnVDHjp5zayujBktTDifHqVQrC+44RQdD0G/SpsnLBe
                MVyR+RyJz8vuW3INYD8ksL8n7qr+dCSAPCuVJLSVkRy8ghG4/24AomOGjePz//tT
                j11bWXARNwdZuB4WcX08TWR+rYE/lJMCAwEAAaNWMFQwEgYDVR0TAQH/BAgwBgEB
                /wIBADAdBgNVHQ4EFgQUJ62PA7yyHcai2nLdvYrKnPf2mKIwHwYDVR0jBBgwFoAU
                J62PA7yyHcai2nLdvYrKnPf2mKIwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQME
                AgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQBIYFii
                PWUOqvxuwS+Anvanp6E8rrG8RuDEihVYNPMT4spodIJxP59RyU2JWYxZ6IDnX8oJ
                CLaJMDW6GQKxfbj4pjCJOYk3BinrN2Ie7s7Sxtve9twturIura2wCpZtDzb8Dp1d
                gsN4HtE7XRQbNlK4oZ5ehHzEoChMB2wosiuff7jvCiXtfakmZdA0iy15OyJTJlMD
                axp9I3CHs3mOw+AngGRp8AgJtynTV2bEBaaP7pPz8xZryIyONmvFI7djI8qcnnyl
                cdfxf+99tenQXw24EifjaEbGAT7zu23MRJAMpt7lacPgdcKtZNLXlzcS/RGenjMN
                YhSedspfcIJw/STP
                -----END CERTIFICATE-----
              subordinateConfig:
                pemIssuerChain:
                  pemCertificates:
                  - |
                    -----BEGIN CERTIFICATE-----
                    MIIENTCCAumgAwIBAgIVAKph5dh4fJiGQHCPRaCattongQLwMEEGCSqGSIb3DQEB
                    CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
                    BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
                    VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
                    HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTgxNDQ4WhcN
                    MzAwMzExMDQyMjI5WjB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
                    MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAj
                    BgNVBAMTHFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3
                    DQEBAQUAA4IBDwAwggEKAoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEd
                    aeQLxNo7PeRNM/Pz+mn2RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbm
                    gVRS/FCE8zQYGQD4zR28pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04
                    lAgtv3IQT30u02xKCrEDLSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKw
                    vuOEUHQ9Bv0qbJywXjFckfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIR
                    uP9uAKJjho3j8//7U49dW1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGjVjBUMBIG
                    A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCetjwO8sh3Gotpy3b2Kypz39pii
                    MB8GA1UdIwQYMBaAFCetjwO8sh3Gotpy3b2Kypz39piiMEEGCSqGSIb3DQEBCjA0
                    oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIBBQCi
                    AwIBIAOCAQEANqKeGZY7oDdsyPC8lP2ZR6ogaUX6KBLGLspfZ6Lb3RKCoe0NQoc7
                    GEAaunoGJnj7wTW1WoqBYdmRQBEBy6nVT40giuDHFGHIMwF7dBoxsTc60yHpyJid
                    HKBGWXo8Lsald+xalmjLLW3dmV0SF5j6pnHeIgWc2VCikInFDrD3wDvMBMuJFIsX
                    NbgncmafjGPvMyNueOrgZDJ9MQNYN53Fvx5owqtAMhbG6yHvT6ytoQ44WZP8svYr
                    Cxik0WWaDMtDTKP2uJ/dNAkVKQ5xRxtRt9Zzax4kTbLCWbC4+ugH1tyhzcuMJkJN
                    poYZu+i6CrUTys/chYitvwy2aAaz5Csf5Q==
                    -----END CERTIFICATE-----
        return_response:
          headers:
            status: '200'
          body:
            done: true
    - expect_stderr: >
        Created Certificate Authority
        [projects/foo/locations/us-east1/certificateAuthorities/server-tls].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create server-tls --issuer prod-root --issuer-location
      us-east1 --from-ca source-ca --from-ca-location us-east1 --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/source-ca?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/foo/locations/us-east1/certificateAuthorities/new-ca",
              "type": "SELF_SIGNED",
              "config": {
                "subjectConfig": {
                  "subject": {
                    "organization": "Google LLC"
                  },
                  "commonName": "Google TLS CA 1",
                  "subjectAltName": {}
                },
                "reusableConfig": {
                  "reusableConfigValues": {
                    "keyUsage": {
                      "baseKeyUsage": {
                        "certSign": true,
                        "crlSign": true
                      },
                      "extendedKeyUsage": {}
                    },
                    "caOptions": {
                      "isCa": true,
                      "maxIssuerPathLength": 0
                    }
                  }
                }
              },
              "lifetime": "315569262s",
              "issuingOptions": {
                "includeCaCertUrl": true,
                "includeCrlAccessUrl": false
              },
              "state": "ENABLED",
              "gcsBucket": "privateca_content_3b583b5a-300a-47a7-96cf-8e91b7c1b1eb"
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/prod-root:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificates.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificates.create
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/prod-root?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/certificateAuthorities/prod-root
            state: ENABLED
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "version": 1,
              "etag": "ACAB"
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/cloudkms.signerVerifier
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/viewer
                etag: ACAB
                version: 3
              updateMask: bindings,etag,version
        return_response:
          headers:
            status: '200'
          body: |
            {
              "bindings": [
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/cloudkms.signerVerifier"
                },
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/viewer"
                }
              ],
              "version": 3,
              "etag": "ACAC"
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=server-tls&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
              config:
                subjectConfig:
                  commonName: Google TLS CA 1
                  subject:
                    organization: Google LLC
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: false
              type: SUBORDINATE
              lifetime: 315569262s
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/server-tls
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
              MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
              VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
              RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
              pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
              LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
              kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
              W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
              AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
              3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
              VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
              uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
              gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
              MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
              kI5YH9kEOVOu
              -----END CERTIFICATE REQUEST-----
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/prod-root/certificates\?alt=json&certificateId=subordinate-\d{8}-[A-Z0-9]{3}-[A-Z0-9]{3}&requestId=[^&]+$
          method: POST
          body:
            json:
              lifetime: 315569262s
              pemCsr: |
                -----BEGIN CERTIFICATE REQUEST-----
                MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
                MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
                VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
                AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
                RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
                pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
                LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
                kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
                W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
                A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
                AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
                3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
                VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
                uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
                gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
                MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
                kI5YH9kEOVOu
                -----END CERTIFICATE REQUEST-----
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/certificateAuthorities/prod-root/certificates/subordinate-20200220-ABC-DEF
            pemCertificate: |
              -----BEGIN CERTIFICATE-----
              MIIEKDCCAtygAwIBAgIVAKDKBUAIdi0prnBNNn/6cS/r1mfIMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTk0MTIwWhcN
              MzAwMzExMDU0OTAxWjBnMQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxGDAW
              BgNVBAMTD1NlcnZlciBUTFMgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
              AQoCggEBAI0nmjtcKAI009Yh0x8w/niLDqpNcsp1gD1rAR1p5AvE2js95E0z8/P6
              afZGWunE2hO2diMsUgp3EaF1o9LEFDtoUsUK6XojagTuZuaBVFL8UITzNBgZAPjN
              HbymYvfmoJ5FYDHGibD96dFHmPhVTGRz7VZULmWNiNP4rTiUCC2/chBPfS7TbEoK
              sQMtIF2QyBZ5BNvTTk/BdKnVDHjp5zayujBktTDifHqVQrC+44RQdD0G/SpsnLBe
              MVyR+RyJz8vuW3INYD8ksL8n7qr+dCSAPCuVJLSVkRy8ghG4/24AomOGjePz//tT
              j11bWXARNwdZuB4WcX08TWR+rYE/lJMCAwEAAaNWMFQwEgYDVR0TAQH/BAgwBgEB
              /wIBADAdBgNVHQ4EFgQUJ62PA7yyHcai2nLdvYrKnPf2mKIwHwYDVR0jBBgwFoAU
              J62PA7yyHcai2nLdvYrKnPf2mKIwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQME
              AgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQBIYFii
              PWUOqvxuwS+Anvanp6E8rrG8RuDEihVYNPMT4spodIJxP59RyU2JWYxZ6IDnX8oJ
              CLaJMDW6GQKxfbj4pjCJOYk3BinrN2Ie7s7Sxtve9twturIura2wCpZtDzb8Dp1d
              gsN4HtE7XRQbNlK4oZ5ehHzEoChMB2wosiuff7jvCiXtfakmZdA0iy15OyJTJlMD
              axp9I3CHs3mOw+AngGRp8AgJtynTV2bEBaaP7pPz8xZryIyONmvFI7djI8qcnnyl
              cdfxf+99tenQXw24EifjaEbGAT7zu23MRJAMpt7lacPgdcKtZNLXlzcS/RGenjMN
              YhSedspfcIJw/STP
              -----END CERTIFICATE-----
            lifetime: P30D
            pemCertificateChain:
            - |
              -----BEGIN CERTIFICATE-----
              MIIENTCCAumgAwIBAgIVAKph5dh4fJiGQHCPRaCattongQLwMEEGCSqGSIb3DQEB
              CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
              BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
              VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
              HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTgxNDQ4WhcN
              MzAwMzExMDQyMjI5WjB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
              MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAj
              BgNVBAMTHFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3
              DQEBAQUAA4IBDwAwggEKAoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEd
              aeQLxNo7PeRNM/Pz+mn2RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbm
              gVRS/FCE8zQYGQD4zR28pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04
              lAgtv3IQT30u02xKCrEDLSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKw
              vuOEUHQ9Bv0qbJywXjFckfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIR
              uP9uAKJjho3j8//7U49dW1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGjVjBUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCetjwO8sh3Gotpy3b2Kypz39pii
              MB8GA1UdIwQYMBaAFCetjwO8sh3Gotpy3b2Kypz39piiMEEGCSqGSIb3DQEBCjA0
              oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIBBQCi
              AwIBIAOCAQEANqKeGZY7oDdsyPC8lP2ZR6ogaUX6KBLGLspfZ6Lb3RKCoe0NQoc7
              GEAaunoGJnj7wTW1WoqBYdmRQBEBy6nVT40giuDHFGHIMwF7dBoxsTc60yHpyJid
              HKBGWXo8Lsald+xalmjLLW3dmV0SF5j6pnHeIgWc2VCikInFDrD3wDvMBMuJFIsX
              NbgncmafjGPvMyNueOrgZDJ9MQNYN53Fvx5owqtAMhbG6yHvT6ytoQ44WZP8svYr
              Cxik0WWaDMtDTKP2uJ/dNAkVKQ5xRxtRt9Zzax4kTbLCWbC4+ugH1tyhzcuMJkJN
              poYZu+i6CrUTys/chYitvwy2aAaz5Csf5Q==
              -----END CERTIFICATE-----
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:activate?alt=json
          method: POST
          body:
            json:
              pemCaCertificate: |
                -----BEGIN CERTIFICATE-----
                MIIEKDCCAtygAwIBAgIVAKDKBUAIdi0prnBNNn/6cS/r1mfIMEEGCSqGSIb3DQEB
                CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
                BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
                VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
                HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTk0MTIwWhcN
                MzAwMzExMDU0OTAxWjBnMQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
                MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxGDAW
                BgNVBAMTD1NlcnZlciBUTFMgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
                AQoCggEBAI0nmjtcKAI009Yh0x8w/niLDqpNcsp1gD1rAR1p5AvE2js95E0z8/P6
                afZGWunE2hO2diMsUgp3EaF1o9LEFDtoUsUK6XojagTuZuaBVFL8UITzNBgZAPjN
                HbymYvfmoJ5FYDHGibD96dFHmPhVTGRz7VZULmWNiNP4rTiUCC2/chBPfS7TbEoK
                sQMtIF2QyBZ5BNvTTk/BdKnVDHjp5zayujBktTDifHqVQrC+44RQdD0G/SpsnLBe
                MVyR+RyJz8vuW3INYD8ksL8n7qr+dCSAPCuVJLSVkRy8ghG4/24AomOGjePz//tT
                j11bWXARNwdZuB4WcX08TWR+rYE/lJMCAwEAAaNWMFQwEgYDVR0TAQH/BAgwBgEB
                /wIBADAdBgNVHQ4EFgQUJ62PA7yyHcai2nLdvYrKnPf2mKIwHwYDVR0jBBgwFoAU
                J62PA7yyHcai2nLdvYrKnPf2mKIwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQME
                AgEFAKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQBIYFii
                PWUOqvxuwS+Anvanp6E8rrG8RuDEihVYNPMT4spodIJxP59RyU2JWYxZ6IDnX8oJ
                CLaJMDW6GQKxfbj4pjCJOYk3BinrN2Ie7s7Sxtve9twturIura2wCpZtDzb8Dp1d
                gsN4HtE7XRQbNlK4oZ5ehHzEoChMB2wosiuff7jvCiXtfakmZdA0iy15OyJTJlMD
                axp9I3CHs3mOw+AngGRp8AgJtynTV2bEBaaP7pPz8xZryIyONmvFI7djI8qcnnyl
                cdfxf+99tenQXw24EifjaEbGAT7zu23MRJAMpt7lacPgdcKtZNLXlzcS/RGenjMN
                YhSedspfcIJw/STP
                -----END CERTIFICATE-----
              subordinateConfig:
                pemIssuerChain:
                  pemCertificates:
                  - |
                    -----BEGIN CERTIFICATE-----
                    MIIENTCCAumgAwIBAgIVAKph5dh4fJiGQHCPRaCattongQLwMEEGCSqGSIb3DQEB
                    CjA0oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIB
                    BQCiAwIBIDB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMAMQkwBwYD
                    VQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAjBgNVBAMT
                    HFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwHhcNMjAwMzEwMTgxNDQ4WhcN
                    MzAwMzExMDQyMjI5WjB0MQkwBwYDVQQGEwAxCTAHBgNVBAgTADEJMAcGA1UEBxMA
                    MQkwBwYDVQQJEwAxCTAHBgNVBBETADEJMAcGA1UEChMAMQkwBwYDVQQLEwAxJTAj
                    BgNVBAMTHFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3
                    DQEBAQUAA4IBDwAwggEKAoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEd
                    aeQLxNo7PeRNM/Pz+mn2RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbm
                    gVRS/FCE8zQYGQD4zR28pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04
                    lAgtv3IQT30u02xKCrEDLSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKw
                    vuOEUHQ9Bv0qbJywXjFckfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIR
                    uP9uAKJjho3j8//7U49dW1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGjVjBUMBIG
                    A1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCetjwO8sh3Gotpy3b2Kypz39pii
                    MB8GA1UdIwQYMBaAFCetjwO8sh3Gotpy3b2Kypz39piiMEEGCSqGSIb3DQEBCjA0
                    oA8wDQYJYIZIAWUDBAIBBQChHDAaBgkqhkiG9w0BAQgwDQYJYIZIAWUDBAIBBQCi
                    AwIBIAOCAQEANqKeGZY7oDdsyPC8lP2ZR6ogaUX6KBLGLspfZ6Lb3RKCoe0NQoc7
                    GEAaunoGJnj7wTW1WoqBYdmRQBEBy6nVT40giuDHFGHIMwF7dBoxsTc60yHpyJid
                    HKBGWXo8Lsald+xalmjLLW3dmV0SF5j6pnHeIgWc2VCikInFDrD3wDvMBMuJFIsX
                    NbgncmafjGPvMyNueOrgZDJ9MQNYN53Fvx5owqtAMhbG6yHvT6ytoQ44WZP8svYr
                    Cxik0WWaDMtDTKP2uJ/dNAkVKQ5xRxtRt9Zzax4kTbLCWbC4+ugH1tyhzcuMJkJN
                    poYZu+i6CrUTys/chYitvwy2aAaz5Csf5Q==
                    -----END CERTIFICATE-----
        return_response:
          headers:
            status: '200'
          body:
            done: true
    - expect_stderr: >
        Created Certificate Authority
        [projects/foo/locations/us-east1/certificateAuthorities/server-tls].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create server-tls --create-csr --csr-output-file
      csr.pem --subject "CN=Server TLS CA 1,O=Google" --reusable-config server-tls
      --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "version": 1,
              "etag": "ACAB"
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/cloudkms.signerVerifier
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/viewer
                etag: ACAB
                version: 3
              updateMask: bindings,etag,version
        return_response:
          headers:
            status: '200'
          body: |
            {
              "bindings": [
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/cloudkms.signerVerifier"
                },
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/viewer"
                }
              ],
              "version": 3,
              "etag": "ACAC"
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=server-tls&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
              config:
                reusableConfig:
                  reusableConfig: projects/privateca-data/locations/us-east1/reusableConfigs/server-tls
                subjectConfig:
                  commonName: Server TLS CA 1
                  subject: {}
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: true
              type: SUBORDINATE
              lifetime: 94670778s
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/server-tls
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
              MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
              VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
              RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
              pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
              LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
              kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
              W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
              AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
              3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
              VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
              uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
              gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
              MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
              kI5YH9kEOVOu
              -----END CERTIFICATE REQUEST-----
    - expect_file_written:
        path: csr.pem
        contents: |
          -----BEGIN CERTIFICATE REQUEST-----
          MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
          MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
          VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
          AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
          RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
          pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
          LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
          kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
          W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
          A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
          AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
          3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
          VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
          uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
          gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
          MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
          kI5YH9kEOVOu
          -----END CERTIFICATE REQUEST-----
    - expect_stderr: >
        Created Certificate Authority
        [projects/foo/locations/us-east1/certificateAuthorities/server-tls] and saved
        CSR to
        'csr.pem'.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create workload-mtls --create-csr --csr-output-file
      csr.pem --subject "CN=Server TLS CA 1,O=Google" --tier devops --key-algorithm
      rsa-pss-2048-sha256
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json: {}
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }

    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=workload-mtls&requestId=[^&]+
          method: POST
          body:
            json:
              tier: DEVOPS
              keySpec.algorithm: RSA_PSS_2048_SHA256
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: false
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/workload-mtls
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/workload-mtls:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
              MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
              VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
              RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
              pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
              LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
              kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
              W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
              AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
              3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
              VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
              uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
              gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
              MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
              kI5YH9kEOVOu
              -----END CERTIFICATE REQUEST-----
    - expect_file_written:
        path: csr.pem
        contents: |
          -----BEGIN CERTIFICATE REQUEST-----
          MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
          MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
          VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
          AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
          RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
          pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
          LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
          kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
          W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
          A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
          AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
          3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
          VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
          uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
          gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
          MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
          kI5YH9kEOVOu
          -----END CERTIFICATE REQUEST-----
    - expect_stderr: >
        Created Certificate Authority
        [projects/foo/locations/us-east1/certificateAuthorities/workload-mtls] and
        saved
        CSR to 'csr.pem'.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create server-tls --create-csr --csr-output-file
      csr.pem --subject "CN=Server TLS CA 1,O=Google" --key-algorithm ec-p256-sha256
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json: {}
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=server-tls&requestId=[^&]+
          method: POST
          body:
            json:
              tier: ENTERPRISE
              keySpec.algorithm: EC_P256_SHA256
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/workload-mtls
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
              MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
              VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
              RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
              pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
              LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
              kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
              W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
              AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
              3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
              VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
              uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
              gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
              MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
              kI5YH9kEOVOu
              -----END CERTIFICATE REQUEST-----
    - expect_file_written:
        path: csr.pem
        contents: |
          -----BEGIN CERTIFICATE REQUEST-----
          MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
          MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
          VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
          AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
          RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
          pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
          LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
          kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
          W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
          A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
          AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
          3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
          VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
          uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
          gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
          MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
          kI5YH9kEOVOu
          -----END CERTIFICATE REQUEST-----
    - expect_stderr: >
        Created Certificate Authority
        [projects/foo/locations/us-east1/certificateAuthorities/server-tls] and
        saved CSR to 'csr.pem'.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create server-tls --create-csr --csr-output-file
      csr.pem --subject "CN=Server TLS CA 1,O=Google"
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json: {}
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=server-tls&requestId=[^&]+
          method: POST
          body:
            json:
              tier: ENTERPRISE
              keySpec.algorithm: RSA_PKCS1_2048_SHA256
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/workload-mtls
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/server-tls:fetch?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            pemCsr: |
              -----BEGIN CERTIFICATE REQUEST-----
              MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
              MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
              VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
              AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
              RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
              pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
              LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
              kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
              W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
              A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
              AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
              3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
              VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
              uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
              gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
              MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
              kI5YH9kEOVOu
              -----END CERTIFICATE REQUEST-----
    - expect_file_written:
        path: csr.pem
        contents: |
          -----BEGIN CERTIFICATE REQUEST-----
          MIIDBTCCAbkCAQAwZzEJMAcGA1UEBhMAMQkwBwYDVQQIEwAxCTAHBgNVBAcTADEJ
          MAcGA1UECRMAMQkwBwYDVQQREwAxCTAHBgNVBAoTADEJMAcGA1UECxMAMRgwFgYD
          VQQDEw9TZXJ2ZXIgVExTIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
          AoIBAQCNJ5o7XCgCNNPWIdMfMP54iw6qTXLKdYA9awEdaeQLxNo7PeRNM/Pz+mn2
          RlrpxNoTtnYjLFIKdxGhdaPSxBQ7aFLFCul6I2oE7mbmgVRS/FCE8zQYGQD4zR28
          pmL35qCeRWAxxomw/enRR5j4VUxkc+1WVC5ljYjT+K04lAgtv3IQT30u02xKCrED
          LSBdkMgWeQTb005PwXSp1Qx46ec2srowZLUw4nx6lUKwvuOEUHQ9Bv0qbJywXjFc
          kfkcic/L7ltyDWA/JLC/J+6q/nQkgDwrlSS0lZEcvIIRuP9uAKJjho3j8//7U49d
          W1lwETcHWbgeFnF9PE1kfq2BP5STAgMBAAGgJTAjBgkqhkiG9w0BCQ4xFjAUMBIG
          A1UdEwEB/wQIMAYBAf8CAQAwQQYJKoZIhvcNAQEKMDSgDzANBglghkgBZQMEAgEF
          AKEcMBoGCSqGSIb3DQEBCDANBglghkgBZQMEAgEFAKIDAgEgA4IBAQB50nTEKGGn
          3C80wVpl36aKAPXcvfHRtRrkVOa2+MdvO0b6sa9/es8RvdWN9O+lS9xCwE+J5y5p
          VwlSFCO7LJqGR9fd7ifGFa/hHTO+VYJ9srfjdQ4AzqM2L2yNxvykB5Igs0ILuWt/
          uKndgKJoBRTVn99853ozfhGRFPKjQ6ozPvjykUdE/BBgUmoDAWNXHEZC6XIx+v96
          gDuVltekxt29QFlfxrp1hd+xVUweTUC1BG1K0EN1Idr/XNx8kP4uhJRMGNWLcaWs
          MFVyE2ITW+7E9QFv5QFImGZ9HIMSWn61N9v7CGMOejWhqBF0fs2+GEhqeXtaR6J4
          kI5YH9kEOVOu
          -----END CERTIFICATE REQUEST-----
    - expect_stderr: >
        Created Certificate Authority
        [projects/foo/locations/us-east1/certificateAuthorities/server-tls] and
        saved CSR to 'csr.pem'.
    - expect_exit:
        code: 0
- execute_command:
    command: privateca subordinates create server-tls --issuer non-exist --issuer-location
      us-west1 --subject "CN=Server TLS CA 1,O=Google"
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-west1/certificateAuthorities/non-exist:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificates.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificates.create
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-west1/certificateAuthorities/non-exist?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 404
          headers: {}
          body: null
    - expect_exit:
        code: 1
        message: 'Invalid value for [--issuer]: The issuing Certificate Authority
          [projects/foo/locations/us-west1/certificateAuthorities/non-exist] was not
          found. Please verify this information is correct and try again.'
- execute_command:
    command: privateca subordinates create server-tls --issuer not-enabled --issuer-location
      us-west1 --subject "CN=Server TLS CA 1,O=Google"
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-west1/certificateAuthorities/not-enabled:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificates.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificates.create
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-west1/certificateAuthorities/not-enabled?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body:
            name: projects/foo/locations/us-west1/certificateAuthorities/not-enabled
            state: DISABLED
    - expect_exit:
        code: 1
        message: 'Invalid value for [--issuer]: The issuing Certificate Authority
          [projects/foo/locations/us-west1/certificateAuthorities/not-enabled] is
          not in ENABLED state. Please enable it and try again.'
