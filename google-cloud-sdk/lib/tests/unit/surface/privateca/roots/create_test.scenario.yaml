title: privateca roots create test
release_tracks: [BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- set_property: core/project foo
- set_property: privateca/location us-east1
- execute:
  - command: privateca roots create new-ca --subject CN=peter,O=Google --reusable-config
      root-ca --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
- execute:
  - command: privateca roots create new-devops --tier devops --subject "CN=Root CA,O=Google"
      --key-algorithm ec-p384-sha384
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-devops].
- execute:
  - command: privateca roots create new-ca --subject CN=peter,O=Google --reusable-config
      root-ca --kms-key-version 1 --kms-key k1 --kms-keyring kr1 --kms-location us-east1
      --bucket my-bucket
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
- execute:
  - command: privateca roots create new-ca --from-ca source-root --from-ca-location
      us-east1 --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
- execute:
  - command: privateca roots create new-ca --key-algorithm rsa-pss-2048-sha256 --subject
      "CN=Google Root CA, O=Google LLC"
  - stderr: |
      WARNING: CA Service is currently in preview.

      Please remember that all resources created during preview will be deleted
      when CA service transitions to General Availability (GA). Relying on these
      certificate authorities for production traffic is discouraged.
  - stderr: |
      Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
- execute:
  - command: privateca roots create new-ca --location us-southeast1 --subject CN=peter,O=Google
      --reusable-config root-ca --kms-key-version 1 --kms-key k1 --kms-keyring kr1
  - error: '1: Invalid value for [CERTIFICATE_AUTHORITY]: Resource is in an unsupported
      location. Supported locations are: europe-west1, us-east1, us-west1.'
- execute:
  - command: privateca roots create new-ca --subject CN=peter,O=Google --reusable-config
      root-ca --kms-key-version 1 --kms-key k1 --kms-keyring kr1 --kms-location us-east1
  - error: '1: The current user does not have permissions for this operation. Please
      ensure you have privateca.certificateAuthorities.create permissions on the project
      and that you are logged-in as the correct user and try again.'
actions:
- set_property:
    core/project: foo
    privateca/location: us-east1
- execute_command:
    command: privateca roots create new-ca --subject CN=peter,O=Google --reusable-config
      root-ca --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "version": 1,
              "etag": "ACAB"
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/cloudkms.signerVerifier
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/viewer
                etag: ACAB
                version: 3
              updateMask: bindings,etag,version
        return_response:
          headers:
            status: '200'
          body: |
            {
              "bindings": [
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/cloudkms.signerVerifier"
                },
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/viewer"
                }
              ],
              "version": 3,
              "etag": "ACAC"
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=new-ca&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
              config:
                reusableConfig:
                  reusableConfig: projects/privateca-data/locations/us-east1/reusableConfigs/root-ca
                subjectConfig:
                  commonName: peter
                  subject: {}
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: true
              type: SELF_SIGNED
              lifetime: 315569261s
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/new-ca
    - expect_stderr: |
        Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots create new-devops --tier devops --subject "CN=Root CA,O=Google"
      --key-algorithm ec-p384-sha384
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json: {}
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=new-devops&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              tier: DEVOPS
              keySpec.algorithm: EC_P384_SHA384
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: false
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/new-devops
    - expect_stderr: |
        Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-devops].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots create new-ca --subject CN=peter,O=Google --reusable-config
      root-ca --kms-key-version 1 --kms-key k1 --kms-keyring kr1 --kms-location us-east1
      --bucket my-bucket
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/my-bucket?alt=json&projection=full
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
             "kind": "storage#bucket",
             "id": "my-bucket",
             "selfLink": "https://www.googleapis.com/storage/v1/b/my-bucket",
             "projectNumber": "166289904856",
             "name": "my-bucket",
             "timeCreated": "2020-02-12T20:10:10.558Z",
             "updated": "2020-02-12T20:10:10.558Z",
             "metageneration": "1",
             "defaultObjectAcl": [
              {
               "kind": "storage#objectAccessControl",
               "entity": "allUsers",
               "role": "READER",
               "etag": "CAE="
              }
             ],
             "iamConfiguration": {
              "bucketPolicyOnly": {
               "enabled": false
              },
              "uniformBucketLevelAccess": {
               "enabled": false
              }
             },
             "location": "us-east1",
             "locationType": "region",
             "versioning": {
              "enabled": true
             },
             "storageClass": "STANDARD",
             "etag": "CAE="
            }
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "version": 1,
              "etag": "ACAB"
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/cloudkms.signerVerifier
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/viewer
                etag: ACAB
                version: 3
              updateMask: bindings,etag,version
        return_response:
          headers:
            status: '200'
          body: |
            {
              "bindings": [
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/cloudkms.signerVerifier"
                },
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/viewer"
                }
              ],
              "version": 3,
              "etag": "ACAC"
            }
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/my-bucket/iam?alt=json&optionsRequestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "kind": "storage#policy",
              "resourceId": "projects/_/buckets/my-bucket",
              "version": 1,
              "etag": "CAE=",
              "bindings": [
                {
                  "role": "roles/storage.legacyBucketOwner",
                  "members": [
                    "projectEditor:foo",
                    "projectOwner:foo"
                  ]
                },
                {
                  "role": "roles/storage.legacyBucketReader",
                  "members": [
                    "projectViewer:foo"
                  ]
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://storage.googleapis.com/storage/v1/b/my-bucket/iam?alt=json
          method: PUT
          body:
            json:
              kind: storage#policy
              resourceId: projects/_/buckets/my-bucket
              version: 3
              etag: CAE=
              bindings:
              - members:
                - projectEditor:foo
                - projectOwner:foo
                role: roles/storage.legacyBucketOwner
              - members:
                - projectViewer:foo
                - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                role: roles/storage.legacyBucketReader
              - members:
                - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                role: roles/storage.objectAdmin
        return_response:
          headers:
            status: '200'
          body: |
            {
              "kind": "storage#policy",
              "resourceId": "projects/_/buckets/my-bucket",
              "version": 1,
              "etag": "CAE=",
              "bindings": [
                {
                  "role": "roles/storage.legacyBucketOwner",
                  "members": [
                    "projectEditor:foo",
                    "projectOwner:foo"
                  ]
                },
                {
                  "role": "roles/storage.legacyBucketReader",
                  "members": [
                    "projectViewer:foo",
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/storage.objectAdmin",
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ]
                }
              ]
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=new-ca&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
              gcsBucket: my-bucket
              config:
                reusableConfig:
                  reusableConfig: projects/privateca-data/locations/us-east1/reusableConfigs/root-ca
                subjectConfig:
                  commonName: peter
                  subject: {}
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: true
              type: SELF_SIGNED
              lifetime: 315569261s
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/new-ca
    - expect_stderr: |
        Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots create new-ca --from-ca source-root --from-ca-location
      us-east1 --kms-key-version projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities/source-root?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/foo/locations/us-east1/certificateAuthorities/new-ca",
              "type": "SELF_SIGNED",
              "config": {
                "subjectConfig": {
                  "subject": {
                    "organization": "Google LLC"
                  },
                  "commonName": "Google Root CA",
                  "subjectAltName": {}
                },
                "reusableConfig": {
                  "reusableConfigValues": {
                    "keyUsage": {
                      "baseKeyUsage": {
                        "certSign": true,
                        "crlSign": true
                      },
                      "extendedKeyUsage": {}
                    },
                    "caOptions": {
                      "isCa": true,
                      "maxIssuerPathLength": 0
                    }
                  }
                }
              },
              "lifetime": "315569261s",
              "issuingOptions": {
                "includeCaCertUrl": true,
                "includeCrlAccessUrl": false
              },
              "state": "ENABLED",
              "gcsBucket": "privateca_content_3b583b5a-300a-47a7-96cf-8e91b7c1b1eb"
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - cloudkms.cryptoKeys.setIamPolicy
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - cloudkms.cryptoKeys.setIamPolicy
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:getIamPolicy?alt=json&options.requestedPolicyVersion=3
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "version": 1,
              "etag": "ACAB"
            }
    - api_call:
        expect_request:
          uri: https://cloudkms.googleapis.com/v1/projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/cloudkms.signerVerifier
                - members:
                  - serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com
                  role: roles/viewer
                etag: ACAB
                version: 3
              updateMask: bindings,etag,version
        return_response:
          headers:
            status: '200'
          body: |
            {
              "bindings": [
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/cloudkms.signerVerifier"
                },
                {
                  "members": [
                    "serviceAccount:service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com"
                  ],
                  "role": "roles/viewer"
                }
              ],
              "version": 3,
              "etag": "ACAC"
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=new-ca&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              keySpec:
                cloudKmsKeyVersion: projects/foo/locations/us-east1/keyRings/kr1/cryptoKeys/k1/cryptoKeyVersions/1
              config:
                subjectConfig:
                  commonName: Google Root CA
                  subject:
                    organization: Google LLC
                  subjectAltName: {}
              issuingOptions:
                includeCaCertUrl: true
                includeCrlAccessUrl: false
              type: SELF_SIGNED
              lifetime: 315569261s
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/new-ca
    - expect_stderr: |
        Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots create new-ca --key-algorithm rsa-pss-2048-sha256 --subject
      "CN=Google Root CA, O=Google LLC"
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=new-ca&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              tier: ENTERPRISE
              keySpec.algorithm: RSA_PSS_2048_SHA256
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/new-ca
    - expect_stderr: |
        Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots create new-ca --subject "CN=Google Root CA, O=Google LLC"
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions:
            - privateca.certificateAuthorities.create
    - api_call:
        expect_request:
          uri: https://serviceusage.googleapis.com/v1beta1/projects/foo/services/privateca.googleapis.com:generateServiceIdentity?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "operations/finished.DONE_OPERATION",
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity",
                "email": "service-166289904856@gcp-sa-eprivateca.iam.gserviceaccount.com",
                "uniqueId": "111511143951582361276"
              }
            }
    - expect_stderr: |
        WARNING: CA Service is currently in preview.

        Please remember that all resources created during preview will be deleted
        when CA service transitions to General Availability (GA). Relying on these
        certificate authorities for production traffic is discouraged.
    - api_call:
        expect_request:
          uri:
            matches: https://privateca\.googleapis\.com/v1beta1/projects/foo/locations/us-east1/certificateAuthorities\?alt=json&certificateAuthorityId=new-ca&requestId=[^&]+
          method: POST
          headers: {}
          body:
            json:
              tier: ENTERPRISE
              keySpec.algorithm: RSA_PKCS1_4096_SHA256
        return_response:
          headers:
            status: '200'
          body:
            name: projects/foo/locations/us-east1/operations/operation-123
            done: true
            response:
              name: projects/foo/locations/us-east1/certificateAuthorities/new-ca
    - expect_stderr: |
        Created Certificate Authority [projects/foo/locations/us-east1/certificateAuthorities/new-ca].
    - expect_exit:
        code: 0
- execute_command:
    command: privateca roots create new-ca --location us-southeast1 --subject CN=peter,O=Google
      --reusable-config root-ca --kms-key-version 1 --kms-key k1 --kms-keyring kr1
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - expect_exit:
        code: 1
        message: >-
          Invalid value for [CERTIFICATE_AUTHORITY]: Resource is in an unsupported
          location.
          Supported locations are: europe-west1, us-east1, us-west1.
- execute_command:
    command: privateca roots create new-ca --subject CN=peter,O=Google --reusable-config
      root-ca --kms-key-version 1 --kms-key k1 --kms-keyring kr1 --kms-location us-east1
    events:
    - api_call:
        expect_request:
          uri: https://privateca.googleapis.com/v1beta1/projects/foo/locations?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/foo/locations/europe-west1
              locationId: europe-west1
            - name: projects/foo/locations/us-east1
              locationId: us-east1
            - name: projects/foo/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/foo:testIamPermissions?alt=json
          method: POST
          body:
            json:
              permissions:
              - privateca.certificateAuthorities.create
        return_response:
          headers:
            status: '200'
          body:
            permissions: []
    - expect_exit:
        code: 1
        message: >-
          The current user does not have permissions for this operation. Please ensure
          you have privateca.certificateAuthorities.create permissions on the project
          and that you are logged-in as the correct user and try again.
