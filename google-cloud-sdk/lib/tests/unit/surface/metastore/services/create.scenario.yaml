title: dataproc metastore list services test scenario
release_tracks: [ALPHA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- set_property: metastore/location us-east4
- set_property: metastore/tier enterprise
- execute:
  - label: default
  - command: |
      metastore services create test-gcloud2
  - stderr: |
      Create request issued for: [test-gcloud2]
  - progress_tracker:
    - message: Waiting for operation [projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66]
        to complete
    - status: SUCCESS
  - stderr: |
      Created service [test-gcloud2].
- execute:
  - label: async default
  - command: |
      metastore services create test-gcloud2 --async
  - stderr: |
      Create request issued for: [test-gcloud2]
      Check operation [projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597214928786-5aca89475d51f-510c27e2-6c6c04a7] for status.
- execute:
  - label: user specified flags
  - command: |
      metastore services create test-gcloud2 --port=8080 --network=projects/metastore-dogfood-cp/global/networks/yanbinlyu1 --hive-metastore-configs-from-file=metastore.xml --kerberos-principal=metastore/fake-project@C.FAKE-PROJECT.INTERNAL --krb5-config=gs://kerberos-fake-project/krb5.conf --keytab=projects/fake-project/secrets/kerberos-test/versions/1 --hive-metastore-version=2.3.6 --labels=foo1=bar1
  - stderr: |
      Create request issued for: [test-gcloud2]
  - progress_tracker:
    - message: Waiting for operation [projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66]
        to complete
    - status: SUCCESS
  - stderr: |
      Created service [test-gcloud2].
- execute:
  - label: user specified tier
  - command: |
      metastore services create test-gcloud2 --port=8080 --network=projects/metastore-dogfood-cp/global/networks/yanbinlyu1 --tier=enterprise --hive-metastore-configs-from-file=metastore.xml --kerberos-principal=metastore/fake-project@C.FAKE-PROJECT.INTERNAL --krb5-config=gs://kerberos-fake-project/krb5.conf --keytab=projects/fake-project/secrets/kerberos-test/versions/1 --hive-metastore-version=2.3.6 --labels=foo1=bar1
  - stderr: |
      Create request issued for: [test-gcloud2]
  - progress_tracker:
    - message: Waiting for operation [projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66]
        to complete
    - status: SUCCESS
  - stderr: |
      Created service [test-gcloud2].
- execute:
  - label: existing service
  - command: |
      metastore services create existing-service
  - error: |-
      1: ALREADY_EXISTS: Resource 'projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2' already exists
      - '@type': type.googleapis.com/google.rpc.DebugInfo
        detail: 'generic::already_exists: already exists'
        stackEntries:
        - cloud/control2/shared/userfriendly/userfriendly.go:696 +0x28 google3/cloud/control2/shared/userfriendly/userfriendly.debugInfoWithMessage(0xc01d67ba70,
          0x27, 0x27, 0xc058e24360, 0xc057a43ba0)
        - cloud/control2/shared/userfriendly/userfriendly.go:692 +0x54 google3/cloud/control2/shared/userfriendly/userfriendly.debugInfoWithError(0x56347a871560,
          0xc000e00980, 0xc009da5db8, 0x1, 0x1)
        - cloud/control2/shared/userfriendly/userfriendly.go:288 +0xe5 google3/cloud/control2/shared/userfriendly/userfriendly.AlreadyExists(0x56347a896fa0,
          0xc048f79a40, 0xc0492d3cc0, 0x46, 0x56347a871560, 0xc000e00980, 0xc009da5e98)
        - cloud/control2/frontend/userfriendly/userfriendly_store.go:66 +0x4a5 google3/cloud/control2/frontend/userfriendly/userfriendlystore.ResourceErrorToUserFriendly(0x56347a896fa0,
          0xc048f79a40, 0xc0492d3cc0, 0x46, 0x56347a871560, 0xc000e00980, 0xc)
        - cloud/control2/frontend/handler/mutate.go:125 +0x185 google3/cloud/control2/frontend/handler/handler.(*handler).insertNewResource(0xc08da00e00,
          0x56347a896fa0, 0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc069001920, 0xc0339b07e0,
          0xc0339b0850, 0xc070466410, 0x563479fcaf60, ...)
        - cloud/control2/frontend/handler/mutate.go:432 +0x3a5 google3/cloud/control2/frontend/handler/handler.(*mutationHandler).persistResourceMutationOperation.func1(0x56347a896fa0,
          0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc013c52a00)
        - cloud/control2/frontend/userfriendly/userfriendly_store.go:31 +0x53 google3/cloud/control2/frontend/userfriendly/userfriendlystore.Mutate.func1(0x56347a896fa0,
          0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc075efdef0, 0xc013c52ad8)
        - cloud/control2/frontend/logging/store_logging.go:498 +0x411 google3/cloud/control2/frontend/logging/storelogging.loggingStore.Mutate.func1(0x56347a896fa0,
          0xc048f79a40, 0x56347a8c6440, 0xc075efdef0, 0xc075efdef0, 0xc048f79a70)
        - cloud/control2/frontend/store/mutate_helper.go:26 +0x59 google3/cloud/control2/frontend/store/store.Mutate.func1(0x56347a896fa0,
          0xc048f79a40, 0x56347a8c6440, 0xc075efdef0, 0xc075efdef0, 0xc04ac03301)
        - cloud/control2/frontend/store/mutate_helper.go:72 +0xed google3/cloud/control2/frontend/store/store.callHandler.func1(0xc04ac03320,
          0x0, 0x0)
        - spanner/go/transaction.go:278 +0x47 google3/spanner/go/spanner.RunInTransaction.func1(0x56347a896fa0,
          0xc048f79a40)
        - spanner/go/transaction.go:305 +0xb8 google3/spanner/go/spanner.RunInTransaction(0x56347a896fa0,
          0xc048f79a40, 0xc009da6660, 0x0, 0x0, 0x0, 0x563478fc7f80, 0x56347a792af0, 0x563478fcf800)
        - cloud/control2/frontend/store/mutate_helper.go:66 +0x12b google3/cloud/control2/frontend/store/store.callHandler(0x56347a896fa0,
          0xc048f79a40, 0x56347a8a9ec0, 0xc0089b9810, 0xc092396500, 0xc009da6750, 0x0, 0x0)
        - cloud/control2/frontend/store/mutate_helper.go:41 +0x236 google3/cloud/control2/frontend/store/store.Mutate(0x56347a896fa0,
          0xc09bd7e480, 0x56347a8a9ec0, 0xc0089b9810, 0x56347126f42f, 0x1f, 0xc075efde00,
          0xe17386e01, 0xc075efde00)
        - cloud/control2/frontend/store/spanstore.go:1849 +0x72 google3/cloud/control2/frontend/store/store.(*Spanner).Mutate(0xc0089b9810,
          0x56347a896fa0, 0xc09bd7e480, 0x56347126f42f, 0x1f, 0xc075efde00, 0x7fed5905c7d0,
          0x0)
        - cloud/control2/frontend/logging/store_logging.go:477 +0x2e5 google3/cloud/control2/frontend/logging/storelogging.loggingStore.Mutate(0xc0050ce480,
          0x18, 0x7ffdc039785c, 0x8, 0x56347a8a9ec0, 0xc0089b9810, 0x56347a896fa0, 0xc09bd7e480,
          0x56347126f42f, 0x1f, ...)
        - cloud/control2/frontend/userfriendly/userfriendly_store.go:30 +0x9c google3/cloud/control2/frontend/userfriendly/userfriendlystore.Mutate(0x56347a896fa0,
          0xc09bd7e480, 0x56347a8aaac0, 0xc016d06540, 0x56347126f42f, 0x1f, 0xc0064fb800,
          0x56347a8ce160)
        - cloud/control2/frontend/handler/handler.go:736 google3/cloud/control2/frontend/handler/handler.(*handler).userFriendlyMutate(...)
        - cloud/control2/frontend/handler/mutate.go:409 +0x29e google3/cloud/control2/frontend/handler/handler.(*mutationHandler).persistResourceMutationOperation(0xc08da00e80,
          0x56347a896fa0, 0xc09bd7e480, 0xc069001920, 0x56347a8ce160, 0xc0478543b8, 0x56347f7c1fa0,
          0xc04c2d8fc0, 0xc004059b40, 0x56347a854fc0, ...)
        - cloud/control2/frontend/handler/mutate.go:337 +0x16cc google3/cloud/control2/frontend/handler/handler.(*mutationHandler).handleResourceMutation(0xc08da00e80,
          0x56347a896fa0, 0xc09bd7e480, 0xc004059b40, 0xc004059cc0, 0x0, 0x0)
        - cloud/control2/frontend/handler/handler.go:322 +0xca7 google3/cloud/control2/frontend/handler/handler.HandleRequest(0x56347a896fa0,
          0xc09bd7e480, 0xc066665880, 0xc004059b40, 0xc004059cc0, 0xc09bd7e480)
        - cloud/control2/frontend/server/frontend.go:750 +0x7bc google3/cloud/control2/frontend/server/server.(*Frontend).handleRequestWithFullMethodName(0xc00447bf00,
          0x56347a896fa0, 0xc09bd7e2d0, 0xc0040588c0, 0xc04aff0400, 0xc04422f2e0, 0xc012f9c820,
          0x42, 0xc0686db000)
        - cloud/control2/frontend/server/frontend.go:719 +0x777 google3/cloud/control2/frontend/server/server.(*Frontend).handleRequest(0xc00447bf00,
          0x56347a896fa0, 0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0x7fed18055770)
        - cloud/control2/frontend/server/frontend.go:318 +0x54 google3/cloud/control2/frontend/server/server.(*Frontend).SetTenantServices.func1(0x56347a896fa0,
          0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0xc017a5b3e8, 0x5634739b243b)
        - cloud/control2/frontend/server/tenantservice.go:344 +0x62 google3/cloud/control2/frontend/server/server.(*TenantService).registerFrontendAPIs.func1(0x56347a896fa0,
          0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0xc0686db001, 0x1)
        - cloud/control2/shared/genericrpc/service.go:123 +0x36d google3/cloud/control2/shared/genericrpc/genericrpc.(*Dispatcher).DefaultMethodHandler(0xc0002b7440,
          0x56347a896fa0, 0xc09bd7e2d0, 0xc04aff0400, 0x28, 0x28, 0xc09bd7e300, 0x7fed1a17cb18)
        - net/rpc/go/stream.go:881 +0x6b google3/net/rpc/go/rpc.runStreamHandler(0x56347a896fa0,
          0xc09bd7e2d0, 0xc09bd7e300, 0x0, 0x0, 0x56347a8afcc0, 0xc0704663c0)
        - net/goa/rpc/rpchandler.go:70 +0x22b google3/net/goa/rpc/rpchandler.ExecHandlerSubset(0x56347a896fa0,
          0xc09bd7e2d0, 0xc009da7998, 0x2, 0x2, 0xc04422e580, 0x56347a896fa0)
        - net/goa/rpc/rpchandler.go:260 +0x45a google3/net/goa/rpc/rpchandler.(*closedRegistry).hook(0xc02d471d00,
          0x56347a896fa0, 0xc078acb0e0, 0xc0339b0540, 0x5634740ccd6c, 0xc0478540d8)
      - '@type': type.googleapis.com/google.rpc.ResourceInfo
        resourceName: projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2
actions:
- set_property:
    metastore/location: us-east4
    metastore/tier: enterprise
- execute_command:
    label: default
    command: |
      metastore services create test-gcloud2
    events:
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/fake-project/locations/us-east4/services?alt=json&serviceId=test-gcloud2
          method: POST
          headers: {}
          body:
            json:
              network: projects/fake-project/global/networks/default
              port: 9083
              tier: ENTERPRISE
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.OperationMetadata",
                "createTime": "2020-08-11T03:31:52.916047956Z",
                "target": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "verb": "create",
                "requestedCancellation": false,
                "apiVersion": "v1alpha"
              },
              "done": false
            }
    - expect_stderr: |
        Create request issued for: [test-gcloud2]
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.OperationMetadata",
                "createTime": "2020-08-11T03:31:52.916047956Z",
                "endTime": "2020-08-11T03:39:21.013376159Z",
                "target": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "verb": "create",
                "requestedCancellation": false,
                "apiVersion": "v1alpha"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.Service",
                "name": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "createTime": "2020-08-11T03:31:52.912810057Z",
                "updateTime": "2020-08-11T03:31:52.912810057Z",
                "hiveMetastoreConfig": {
                  "version": "2.3.6",
                  "configOverrides": {
                    "hive.metastore.warehouse.dir": "gs://gcs-bucket-test-gcloud2-64eaa6dd-1c31-4e82-93c9-28545aebb3c5/hive-warehouse"
                  }
                },
                "network": "projects/metastore-dogfood-cp/global/networks/default",
                "endpointUri": "thrift://10.20.64.31:9083",
                "port": 9083,
                "state": "ACTIVE",
                "stateMessage": "The service is ready to use",
                "artifactGcsUri": "gs://gcs-bucket-test-gcloud2-64eaa6dd-1c31-4e82-93c9-28545aebb3c5",
                "tier": "ENTERPRISE"
              }
            }
    - expect_progress_tracker:
        message: Waiting for operation [projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66]
          to complete
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/fake-project/locations/us-east4/services/test-gcloud2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
              "createTime": "2020-08-11T03:31:52.912810057Z",
              "updateTime": "2020-08-11T03:39:21.054989422Z",
              "hiveMetastoreConfig": {
                "version": "2.3.6",
                "configOverrides": {
                  "hive.metastore.warehouse.dir": "gs://gcs-bucket-test-gcloud2-64eaa6dd-1c31-4e82-93c9-28545aebb3c5/hive-warehouse"
                }
              },
              "network": "projects/metastore-dogfood-cp/global/networks/default",
              "endpointUri": "thrift://10.20.64.31:9083",
              "port": 9083,
              "state": "ACTIVE",
              "stateMessage": "The service is ready to use",
              "artifactGcsUri": "gs://gcs-bucket-test-gcloud2-64eaa6dd-1c31-4e82-93c9-28545aebb3c5",
              "tier": "ENTERPRISE"
            }
    - expect_stderr: |
        Created service [test-gcloud2].
    - expect_exit:
        code: 0
- execute_command:
    label: async default
    command: |
      metastore services create test-gcloud2 --async
    events:
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/fake-project/locations/us-east4/services?alt=json&serviceId=test-gcloud2
          method: POST
          headers: {}
          body:
            json:
              network: projects/fake-project/global/networks/default
              port: 9083
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597214928786-5aca89475d51f-510c27e2-6c6c04a7",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.OperationMetadata",
                "createTime": "2020-08-12T06:48:50.656820613Z",
                "target": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "verb": "create",
                "requestedCancellation": false,
                "apiVersion": "v1alpha"
              },
              "done": false
            }
    - expect_stderr: |
        Create request issued for: [test-gcloud2]
        Check operation [projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597214928786-5aca89475d51f-510c27e2-6c6c04a7] for status.
    - expect_exit:
        code: 0
- write_file:
    path: metastore.xml
    contents: |
      <configuration>
        <property>
          <name>bar</name>
          <value>foo</value>
        </property>
        <property>
          <name>hive.metastore.warehouse.dir</name>
          <value>gs://gcs-bucket-test-update/hive-warehouse</value>
        </property>
      </configuration>
- execute_command:
    label: user specified flags
    command: |
      metastore services create test-gcloud2 --port=8080 --network=projects/metastore-dogfood-cp/global/networks/yanbinlyu1 --hive-metastore-configs-from-file=metastore.xml --kerberos-principal=metastore/fake-project@C.FAKE-PROJECT.INTERNAL --krb5-config=gs://kerberos-fake-project/krb5.conf --keytab=projects/fake-project/secrets/kerberos-test/versions/1 --hive-metastore-version=2.3.6 --labels=foo1=bar1
    events:
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/fake-project/locations/us-east4/services?alt=json&serviceId=test-gcloud2
          method: POST
          headers: {}
          body:
            json:
              hiveMetastoreConfig:
                configOverrides:
                  bar: foo
                  hive.metastore.warehouse.dir: gs://gcs-bucket-test-update/hive-warehouse
                kerberosConfig:
                  keytab:
                    cloudSecret: projects/fake-project/secrets/kerberos-test/versions/1
                  krb5ConfigGcsUri: gs://kerberos-fake-project/krb5.conf
                  principal: metastore/fake-project@C.FAKE-PROJECT.INTERNAL
              network: projects/metastore-dogfood-cp/global/networks/yanbinlyu1
              port: 8080
              tier: ENTERPRISE
              labels:
                foo1: bar1
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.OperationMetadata",
                "createTime": "2020-08-11T03:31:52.916047956Z",
                "target": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "verb": "create",
                "requestedCancellation": false,
                "apiVersion": "v1alpha"
              },
              "done": false
            }
    - expect_stderr: |
        Create request issued for: [test-gcloud2]
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.OperationMetadata",
                "createTime": "2020-08-11T03:31:52.916047956Z",
                "endTime": "2020-08-11T03:39:21.013376159Z",
                "target": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "verb": "create",
                "requestedCancellation": false,
                "apiVersion": "v1alpha"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.Service",
                "name": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "createTime": "2020-08-11T03:31:52.912810057Z",
                "updateTime": "2020-08-11T03:31:52.912810057Z",
                "hiveMetastoreConfig": {
                  "version": "2.3.6",
                  "configOverrides": {
                    "bar": "foo",
                    "hive.metastore.warehouse.dir": "gs://gcs-bucket-test-update/hive-warehouse"
                  },
                  "kerberosConfig": {
                    "keytab": {
                      "cloudSecret": "projects/fake-project/secrets/kerberos-test/versions/1"
                    },
                    "krb5ConfigGcsUri": "gs://kerberos-fake-project/krb5.conf",
                    "principal": "metastore/fake-project@C.FAKE-PROJECT.INTERNAL"
                  }
                },
                "network": "projects/metastore-dogfood-cp/global/networks/yanbinlyu1",
                "endpointUri": "thrift://10.20.64.31:8080",
                "port": 8080,
                "state": "ACTIVE",
                "stateMessage": "The service is ready to use",
                "artifactGcsUri": "gs://gcs-bucket-test-gcloud2-64eaa6dd-1c31-4e82-93c9-28545aebb3c5",
                "tier": "ENTERPRISE",
                "labels": {
                  "foo1": "bar1"
                }
              }
            }
    - expect_progress_tracker:
        message: Waiting for operation [projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66]
          to complete
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/fake-project/locations/us-east4/services/test-gcloud2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
              "createTime": "2020-08-11T03:31:52.912810057Z",
              "updateTime": "2020-08-11T03:31:52.912810057Z",
              "hiveMetastoreConfig": {
                "version": "2.3.6",
                "configOverrides": {
                  "bar": "foo",
                  "hive.metastore.warehouse.dir": "gs://gcs-bucket-test-update/hive-warehouse"
                },
                "kerberosConfig": {
                  "keytab": {
                    "cloudSecret": "projects/fake-project/secrets/kerberos-test/versions/1"
                  },
                  "krb5ConfigGcsUri": "gs://kerberos-fake-project/krb5.conf",
                  "principal": "metastore/fake-project@C.FAKE-PROJECT.INTERNAL"
                }
              },
              "network": "projects/metastore-dogfood-cp/global/networks/yanbinlyu1",
              "endpointUri": "thrift://10.20.64.31:8080",
              "port": 8080,
              "state": "ACTIVE",
              "stateMessage": "The service is ready to use",
              "artifactGcsUri": "gs://gcs-bucket-test-gcloud2-64eaa6dd-1c31-4e82-93c9-28545aebb3c5",
              "tier": "ENTERPRISE",
              "labels": {
                "foo1": "bar1"
              }
            }
    - expect_stderr: |
        Created service [test-gcloud2].
    - expect_exit:
        code: 0
- execute_command:
    label: user specified tier
    command: |
      metastore services create test-gcloud2 --port=8080 --network=projects/metastore-dogfood-cp/global/networks/yanbinlyu1 --tier=enterprise --hive-metastore-configs-from-file=metastore.xml --kerberos-principal=metastore/fake-project@C.FAKE-PROJECT.INTERNAL --krb5-config=gs://kerberos-fake-project/krb5.conf --keytab=projects/fake-project/secrets/kerberos-test/versions/1 --hive-metastore-version=2.3.6 --labels=foo1=bar1
    events:
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/fake-project/locations/us-east4/services?alt=json&serviceId=test-gcloud2
          method: POST
          headers: {}
          body:
            json:
              hiveMetastoreConfig:
                configOverrides:
                  bar: foo
                  hive.metastore.warehouse.dir: gs://gcs-bucket-test-update/hive-warehouse
                kerberosConfig:
                  keytab:
                    cloudSecret: projects/fake-project/secrets/kerberos-test/versions/1
                  krb5ConfigGcsUri: gs://kerberos-fake-project/krb5.conf
                  principal: metastore/fake-project@C.FAKE-PROJECT.INTERNAL
              network: projects/metastore-dogfood-cp/global/networks/yanbinlyu1
              port: 8080
              tier: ENTERPRISE
              labels:
                foo1: bar1
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.OperationMetadata",
                "createTime": "2020-08-11T03:31:52.916047956Z",
                "target": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "verb": "create",
                "requestedCancellation": false,
                "apiVersion": "v1alpha"
              },
              "done": false
            }
    - expect_stderr: |
        Create request issued for: [test-gcloud2]
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.OperationMetadata",
                "createTime": "2020-08-11T03:31:52.916047956Z",
                "endTime": "2020-08-11T03:39:21.013376159Z",
                "target": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "verb": "create",
                "requestedCancellation": false,
                "apiVersion": "v1alpha"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.metastore.v1alpha.Service",
                "name": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
                "createTime": "2020-08-11T03:31:52.912810057Z",
                "updateTime": "2020-08-11T03:31:52.912810057Z",
                "hiveMetastoreConfig": {
                  "version": "2.3.6",
                  "configOverrides": {
                    "bar": "foo",
                    "hive.metastore.warehouse.dir": "gs://gcs-bucket-test-update/hive-warehouse"
                  },
                  "kerberosConfig": {
                    "keytab": {
                      "cloudSecret": "projects/fake-project/secrets/kerberos-test/versions/1"
                    },
                    "krb5ConfigGcsUri": "gs://kerberos-fake-project/krb5.conf",
                    "principal": "metastore/fake-project@C.FAKE-PROJECT.INTERNAL"
                  }
                },
                "network": "projects/metastore-dogfood-cp/global/networks/yanbinlyu1",
                "endpointUri": "thrift://10.20.64.31:8080",
                "port": 8080,
                "state": "ACTIVE",
                "stateMessage": "The service is ready to use",
                "artifactGcsUri": "gs://gcs-bucket-test-gcloud2-64eaa6dd-1c31-4e82-93c9-28545aebb3c5",
                "tier": "ENTERPRISE",
                "labels": {
                  "foo1": "bar1"
                }
              }
            }
    - expect_progress_tracker:
        message: Waiting for operation [projects/metastore-dogfood-cp/locations/us-east4/operations/operation-1597116712638-5ac91b6525943-e5f83022-4fd32c66]
          to complete
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/fake-project/locations/us-east4/services/test-gcloud2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2",
              "createTime": "2020-08-11T03:31:52.912810057Z",
              "updateTime": "2020-08-11T03:31:52.912810057Z",
              "hiveMetastoreConfig": {
                "version": "2.3.6",
                "configOverrides": {
                  "bar": "foo",
                  "hive.metastore.warehouse.dir": "gs://gcs-bucket-test-update/hive-warehouse"
                },
                "kerberosConfig": {
                  "keytab": {
                    "cloudSecret": "projects/fake-project/secrets/kerberos-test/versions/1"
                  },
                  "krb5ConfigGcsUri": "gs://kerberos-fake-project/krb5.conf",
                  "principal": "metastore/fake-project@C.FAKE-PROJECT.INTERNAL"
                }
              },
              "network": "projects/metastore-dogfood-cp/global/networks/yanbinlyu1",
              "endpointUri": "thrift://10.20.64.31:8080",
              "port": 8080,
              "state": "ACTIVE",
              "stateMessage": "The service is ready to use",
              "artifactGcsUri": "gs://gcs-bucket-test-gcloud2-64eaa6dd-1c31-4e82-93c9-28545aebb3c5",
              "tier": "ENTERPRISE",
              "labels": {
                "foo1": "bar1"
              }
            }
    - expect_stderr: |
        Created service [test-gcloud2].
    - expect_exit:
        code: 0
- execute_command:
    label: existing service
    command: |
      metastore services create existing-service
    events:
    - api_call:
        expect_request:
          uri: https://metastore.googleapis.com/v1alpha/projects/fake-project/locations/us-east4/services?alt=json&serviceId=existing-service
          method: POST
          headers: {}
          body:
            json:
              network: projects/fake-project/global/networks/default
              port: 9083
              tier: ENTERPRISE
        return_response:
          status: 409
          headers: {}
          body: |
            {
              "error": {
                "code": 409,
                "message": "Resource 'projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2' already exists",
                "status": "ALREADY_EXISTS",
                "details": [
                  {
                    "@type": "type.googleapis.com/google.rpc.DebugInfo",
                    "stackEntries": [
                      "cloud/control2/shared/userfriendly/userfriendly.go:696 +0x28 google3/cloud/control2/shared/userfriendly/userfriendly.debugInfoWithMessage(0xc01d67ba70, 0x27, 0x27, 0xc058e24360, 0xc057a43ba0)",
                      "cloud/control2/shared/userfriendly/userfriendly.go:692 +0x54 google3/cloud/control2/shared/userfriendly/userfriendly.debugInfoWithError(0x56347a871560, 0xc000e00980, 0xc009da5db8, 0x1, 0x1)",
                      "cloud/control2/shared/userfriendly/userfriendly.go:288 +0xe5 google3/cloud/control2/shared/userfriendly/userfriendly.AlreadyExists(0x56347a896fa0, 0xc048f79a40, 0xc0492d3cc0, 0x46, 0x56347a871560, 0xc000e00980, 0xc009da5e98)",
                      "cloud/control2/frontend/userfriendly/userfriendly_store.go:66 +0x4a5 google3/cloud/control2/frontend/userfriendly/userfriendlystore.ResourceErrorToUserFriendly(0x56347a896fa0, 0xc048f79a40, 0xc0492d3cc0, 0x46, 0x56347a871560, 0xc000e00980, 0xc)",
                      "cloud/control2/frontend/handler/mutate.go:125 +0x185 google3/cloud/control2/frontend/handler/handler.(*handler).insertNewResource(0xc08da00e00, 0x56347a896fa0, 0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc069001920, 0xc0339b07e0, 0xc0339b0850, 0xc070466410, 0x563479fcaf60, ...)",
                      "cloud/control2/frontend/handler/mutate.go:432 +0x3a5 google3/cloud/control2/frontend/handler/handler.(*mutationHandler).persistResourceMutationOperation.func1(0x56347a896fa0, 0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc013c52a00)",
                      "cloud/control2/frontend/userfriendly/userfriendly_store.go:31 +0x53 google3/cloud/control2/frontend/userfriendly/userfriendlystore.Mutate.func1(0x56347a896fa0, 0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc075efdef0, 0xc013c52ad8)",
                      "cloud/control2/frontend/logging/store_logging.go:498 +0x411 google3/cloud/control2/frontend/logging/storelogging.loggingStore.Mutate.func1(0x56347a896fa0, 0xc048f79a40, 0x56347a8c6440, 0xc075efdef0, 0xc075efdef0, 0xc048f79a70)",
                      "cloud/control2/frontend/store/mutate_helper.go:26 +0x59 google3/cloud/control2/frontend/store/store.Mutate.func1(0x56347a896fa0, 0xc048f79a40, 0x56347a8c6440, 0xc075efdef0, 0xc075efdef0, 0xc04ac03301)",
                      "cloud/control2/frontend/store/mutate_helper.go:72 +0xed google3/cloud/control2/frontend/store/store.callHandler.func1(0xc04ac03320, 0x0, 0x0)",
                      "spanner/go/transaction.go:278 +0x47 google3/spanner/go/spanner.RunInTransaction.func1(0x56347a896fa0, 0xc048f79a40)",
                      "spanner/go/transaction.go:305 +0xb8 google3/spanner/go/spanner.RunInTransaction(0x56347a896fa0, 0xc048f79a40, 0xc009da6660, 0x0, 0x0, 0x0, 0x563478fc7f80, 0x56347a792af0, 0x563478fcf800)",
                      "cloud/control2/frontend/store/mutate_helper.go:66 +0x12b google3/cloud/control2/frontend/store/store.callHandler(0x56347a896fa0, 0xc048f79a40, 0x56347a8a9ec0, 0xc0089b9810, 0xc092396500, 0xc009da6750, 0x0, 0x0)",
                      "cloud/control2/frontend/store/mutate_helper.go:41 +0x236 google3/cloud/control2/frontend/store/store.Mutate(0x56347a896fa0, 0xc09bd7e480, 0x56347a8a9ec0, 0xc0089b9810, 0x56347126f42f, 0x1f, 0xc075efde00, 0xe17386e01, 0xc075efde00)",
                      "cloud/control2/frontend/store/spanstore.go:1849 +0x72 google3/cloud/control2/frontend/store/store.(*Spanner).Mutate(0xc0089b9810, 0x56347a896fa0, 0xc09bd7e480, 0x56347126f42f, 0x1f, 0xc075efde00, 0x7fed5905c7d0, 0x0)",
                      "cloud/control2/frontend/logging/store_logging.go:477 +0x2e5 google3/cloud/control2/frontend/logging/storelogging.loggingStore.Mutate(0xc0050ce480, 0x18, 0x7ffdc039785c, 0x8, 0x56347a8a9ec0, 0xc0089b9810, 0x56347a896fa0, 0xc09bd7e480, 0x56347126f42f, 0x1f, ...)",
                      "cloud/control2/frontend/userfriendly/userfriendly_store.go:30 +0x9c google3/cloud/control2/frontend/userfriendly/userfriendlystore.Mutate(0x56347a896fa0, 0xc09bd7e480, 0x56347a8aaac0, 0xc016d06540, 0x56347126f42f, 0x1f, 0xc0064fb800, 0x56347a8ce160)",
                      "cloud/control2/frontend/handler/handler.go:736 google3/cloud/control2/frontend/handler/handler.(*handler).userFriendlyMutate(...)",
                      "cloud/control2/frontend/handler/mutate.go:409 +0x29e google3/cloud/control2/frontend/handler/handler.(*mutationHandler).persistResourceMutationOperation(0xc08da00e80, 0x56347a896fa0, 0xc09bd7e480, 0xc069001920, 0x56347a8ce160, 0xc0478543b8, 0x56347f7c1fa0, 0xc04c2d8fc0, 0xc004059b40, 0x56347a854fc0, ...)",
                      "cloud/control2/frontend/handler/mutate.go:337 +0x16cc google3/cloud/control2/frontend/handler/handler.(*mutationHandler).handleResourceMutation(0xc08da00e80, 0x56347a896fa0, 0xc09bd7e480, 0xc004059b40, 0xc004059cc0, 0x0, 0x0)",
                      "cloud/control2/frontend/handler/handler.go:322 +0xca7 google3/cloud/control2/frontend/handler/handler.HandleRequest(0x56347a896fa0, 0xc09bd7e480, 0xc066665880, 0xc004059b40, 0xc004059cc0, 0xc09bd7e480)",
                      "cloud/control2/frontend/server/frontend.go:750 +0x7bc google3/cloud/control2/frontend/server/server.(*Frontend).handleRequestWithFullMethodName(0xc00447bf00, 0x56347a896fa0, 0xc09bd7e2d0, 0xc0040588c0, 0xc04aff0400, 0xc04422f2e0, 0xc012f9c820, 0x42, 0xc0686db000)",
                      "cloud/control2/frontend/server/frontend.go:719 +0x777 google3/cloud/control2/frontend/server/server.(*Frontend).handleRequest(0xc00447bf00, 0x56347a896fa0, 0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0x7fed18055770)",
                      "cloud/control2/frontend/server/frontend.go:318 +0x54 google3/cloud/control2/frontend/server/server.(*Frontend).SetTenantServices.func1(0x56347a896fa0, 0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0xc017a5b3e8, 0x5634739b243b)",
                      "cloud/control2/frontend/server/tenantservice.go:344 +0x62 google3/cloud/control2/frontend/server/server.(*TenantService).registerFrontendAPIs.func1(0x56347a896fa0, 0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0xc0686db001, 0x1)",
                      "cloud/control2/shared/genericrpc/service.go:123 +0x36d google3/cloud/control2/shared/genericrpc/genericrpc.(*Dispatcher).DefaultMethodHandler(0xc0002b7440, 0x56347a896fa0, 0xc09bd7e2d0, 0xc04aff0400, 0x28, 0x28, 0xc09bd7e300, 0x7fed1a17cb18)",
                      "net/rpc/go/stream.go:881 +0x6b google3/net/rpc/go/rpc.runStreamHandler(0x56347a896fa0, 0xc09bd7e2d0, 0xc09bd7e300, 0x0, 0x0, 0x56347a8afcc0, 0xc0704663c0)",
                      "net/goa/rpc/rpchandler.go:70 +0x22b google3/net/goa/rpc/rpchandler.ExecHandlerSubset(0x56347a896fa0, 0xc09bd7e2d0, 0xc009da7998, 0x2, 0x2, 0xc04422e580, 0x56347a896fa0)",
                      "net/goa/rpc/rpchandler.go:260 +0x45a google3/net/goa/rpc/rpchandler.(*closedRegistry).hook(0xc02d471d00, 0x56347a896fa0, 0xc078acb0e0, 0xc0339b0540, 0x5634740ccd6c, 0xc0478540d8)"
                    ],
                    "detail": "generic::already_exists: already exists"
                  },
                  {
                    "@type": "type.googleapis.com/google.rpc.ResourceInfo",
                    "resourceName": "projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2"
                  }
                ]
              }
            }
    - expect_exit:
        code: 1
        message: |-
          ALREADY_EXISTS: Resource 'projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2' already exists
          - '@type': type.googleapis.com/google.rpc.DebugInfo
            detail: 'generic::already_exists: already exists'
            stackEntries:
            - cloud/control2/shared/userfriendly/userfriendly.go:696 +0x28 google3/cloud/control2/shared/userfriendly/userfriendly.debugInfoWithMessage(0xc01d67ba70,
              0x27, 0x27, 0xc058e24360, 0xc057a43ba0)
            - cloud/control2/shared/userfriendly/userfriendly.go:692 +0x54 google3/cloud/control2/shared/userfriendly/userfriendly.debugInfoWithError(0x56347a871560,
              0xc000e00980, 0xc009da5db8, 0x1, 0x1)
            - cloud/control2/shared/userfriendly/userfriendly.go:288 +0xe5 google3/cloud/control2/shared/userfriendly/userfriendly.AlreadyExists(0x56347a896fa0,
              0xc048f79a40, 0xc0492d3cc0, 0x46, 0x56347a871560, 0xc000e00980, 0xc009da5e98)
            - cloud/control2/frontend/userfriendly/userfriendly_store.go:66 +0x4a5 google3/cloud/control2/frontend/userfriendly/userfriendlystore.ResourceErrorToUserFriendly(0x56347a896fa0,
              0xc048f79a40, 0xc0492d3cc0, 0x46, 0x56347a871560, 0xc000e00980, 0xc)
            - cloud/control2/frontend/handler/mutate.go:125 +0x185 google3/cloud/control2/frontend/handler/handler.(*handler).insertNewResource(0xc08da00e00,
              0x56347a896fa0, 0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc069001920, 0xc0339b07e0,
              0xc0339b0850, 0xc070466410, 0x563479fcaf60, ...)
            - cloud/control2/frontend/handler/mutate.go:432 +0x3a5 google3/cloud/control2/frontend/handler/handler.(*mutationHandler).persistResourceMutationOperation.func1(0x56347a896fa0,
              0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc013c52a00)
            - cloud/control2/frontend/userfriendly/userfriendly_store.go:31 +0x53 google3/cloud/control2/frontend/userfriendly/userfriendlystore.Mutate.func1(0x56347a896fa0,
              0xc048f79a40, 0x56347a8c63a0, 0xc0194043c0, 0xc075efdef0, 0xc013c52ad8)
            - cloud/control2/frontend/logging/store_logging.go:498 +0x411 google3/cloud/control2/frontend/logging/storelogging.loggingStore.Mutate.func1(0x56347a896fa0,
              0xc048f79a40, 0x56347a8c6440, 0xc075efdef0, 0xc075efdef0, 0xc048f79a70)
            - cloud/control2/frontend/store/mutate_helper.go:26 +0x59 google3/cloud/control2/frontend/store/store.Mutate.func1(0x56347a896fa0,
              0xc048f79a40, 0x56347a8c6440, 0xc075efdef0, 0xc075efdef0, 0xc04ac03301)
            - cloud/control2/frontend/store/mutate_helper.go:72 +0xed google3/cloud/control2/frontend/store/store.callHandler.func1(0xc04ac03320,
              0x0, 0x0)
            - spanner/go/transaction.go:278 +0x47 google3/spanner/go/spanner.RunInTransaction.func1(0x56347a896fa0,
              0xc048f79a40)
            - spanner/go/transaction.go:305 +0xb8 google3/spanner/go/spanner.RunInTransaction(0x56347a896fa0,
              0xc048f79a40, 0xc009da6660, 0x0, 0x0, 0x0, 0x563478fc7f80, 0x56347a792af0, 0x563478fcf800)
            - cloud/control2/frontend/store/mutate_helper.go:66 +0x12b google3/cloud/control2/frontend/store/store.callHandler(0x56347a896fa0,
              0xc048f79a40, 0x56347a8a9ec0, 0xc0089b9810, 0xc092396500, 0xc009da6750, 0x0, 0x0)
            - cloud/control2/frontend/store/mutate_helper.go:41 +0x236 google3/cloud/control2/frontend/store/store.Mutate(0x56347a896fa0,
              0xc09bd7e480, 0x56347a8a9ec0, 0xc0089b9810, 0x56347126f42f, 0x1f, 0xc075efde00,
              0xe17386e01, 0xc075efde00)
            - cloud/control2/frontend/store/spanstore.go:1849 +0x72 google3/cloud/control2/frontend/store/store.(*Spanner).Mutate(0xc0089b9810,
              0x56347a896fa0, 0xc09bd7e480, 0x56347126f42f, 0x1f, 0xc075efde00, 0x7fed5905c7d0,
              0x0)
            - cloud/control2/frontend/logging/store_logging.go:477 +0x2e5 google3/cloud/control2/frontend/logging/storelogging.loggingStore.Mutate(0xc0050ce480,
              0x18, 0x7ffdc039785c, 0x8, 0x56347a8a9ec0, 0xc0089b9810, 0x56347a896fa0, 0xc09bd7e480,
              0x56347126f42f, 0x1f, ...)
            - cloud/control2/frontend/userfriendly/userfriendly_store.go:30 +0x9c google3/cloud/control2/frontend/userfriendly/userfriendlystore.Mutate(0x56347a896fa0,
              0xc09bd7e480, 0x56347a8aaac0, 0xc016d06540, 0x56347126f42f, 0x1f, 0xc0064fb800,
              0x56347a8ce160)
            - cloud/control2/frontend/handler/handler.go:736 google3/cloud/control2/frontend/handler/handler.(*handler).userFriendlyMutate(...)
            - cloud/control2/frontend/handler/mutate.go:409 +0x29e google3/cloud/control2/frontend/handler/handler.(*mutationHandler).persistResourceMutationOperation(0xc08da00e80,
              0x56347a896fa0, 0xc09bd7e480, 0xc069001920, 0x56347a8ce160, 0xc0478543b8, 0x56347f7c1fa0,
              0xc04c2d8fc0, 0xc004059b40, 0x56347a854fc0, ...)
            - cloud/control2/frontend/handler/mutate.go:337 +0x16cc google3/cloud/control2/frontend/handler/handler.(*mutationHandler).handleResourceMutation(0xc08da00e80,
              0x56347a896fa0, 0xc09bd7e480, 0xc004059b40, 0xc004059cc0, 0x0, 0x0)
            - cloud/control2/frontend/handler/handler.go:322 +0xca7 google3/cloud/control2/frontend/handler/handler.HandleRequest(0x56347a896fa0,
              0xc09bd7e480, 0xc066665880, 0xc004059b40, 0xc004059cc0, 0xc09bd7e480)
            - cloud/control2/frontend/server/frontend.go:750 +0x7bc google3/cloud/control2/frontend/server/server.(*Frontend).handleRequestWithFullMethodName(0xc00447bf00,
              0x56347a896fa0, 0xc09bd7e2d0, 0xc0040588c0, 0xc04aff0400, 0xc04422f2e0, 0xc012f9c820,
              0x42, 0xc0686db000)
            - cloud/control2/frontend/server/frontend.go:719 +0x777 google3/cloud/control2/frontend/server/server.(*Frontend).handleRequest(0xc00447bf00,
              0x56347a896fa0, 0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0x7fed18055770)
            - cloud/control2/frontend/server/frontend.go:318 +0x54 google3/cloud/control2/frontend/server/server.(*Frontend).SetTenantServices.func1(0x56347a896fa0,
              0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0xc017a5b3e8, 0x5634739b243b)
            - cloud/control2/frontend/server/tenantservice.go:344 +0x62 google3/cloud/control2/frontend/server/server.(*TenantService).registerFrontendAPIs.func1(0x56347a896fa0,
              0xc09bd7e2d0, 0xc04aff0400, 0xc04422f2e0, 0xc0686db001, 0x1)
            - cloud/control2/shared/genericrpc/service.go:123 +0x36d google3/cloud/control2/shared/genericrpc/genericrpc.(*Dispatcher).DefaultMethodHandler(0xc0002b7440,
              0x56347a896fa0, 0xc09bd7e2d0, 0xc04aff0400, 0x28, 0x28, 0xc09bd7e300, 0x7fed1a17cb18)
            - net/rpc/go/stream.go:881 +0x6b google3/net/rpc/go/rpc.runStreamHandler(0x56347a896fa0,
              0xc09bd7e2d0, 0xc09bd7e300, 0x0, 0x0, 0x56347a8afcc0, 0xc0704663c0)
            - net/goa/rpc/rpchandler.go:70 +0x22b google3/net/goa/rpc/rpchandler.ExecHandlerSubset(0x56347a896fa0,
              0xc09bd7e2d0, 0xc009da7998, 0x2, 0x2, 0xc04422e580, 0x56347a896fa0)
            - net/goa/rpc/rpchandler.go:260 +0x45a google3/net/goa/rpc/rpchandler.(*closedRegistry).hook(0xc02d471d00,
              0x56347a896fa0, 0xc078acb0e0, 0xc0339b0540, 0x5634740ccd6c, 0xc0478540d8)
          - '@type': type.googleapis.com/google.rpc.ResourceInfo
            resourceName: projects/metastore-dogfood-cp/locations/us-east4/services/test-gcloud2
