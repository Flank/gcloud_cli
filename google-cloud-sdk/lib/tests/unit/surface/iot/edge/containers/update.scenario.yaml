title: cloud iot edge containers update test scenario
release_tracks: [ALPHA]
description: tests full Edge Container creation
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - label: Base case
  - command: |
      iot edge containers update foo --region asia-east1 --registry my-registry --device my-device --docker-image gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
  - stderr: |
      Updated container [foo].
  - stdout: |
      autostart: true
      dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:aarch64
      inputTopics:
      - topic: /container/foo/input
      name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
      outputTopics:
      - topic: /container/foo/output
      updateTime: '2019-02-27T16:13:12.347064208Z'
      version: '2'
- execute:
  - label: Full update
  - command: |
      iot edge containers update foo --region asia-east1 --registry my-registry --device my-device --docker-image gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
      --env-vars KEY1=VALUE1,KEY2=VALUE2,KEY3=VALUE3 --input-topic foo:input/topic/1,bar:input/topic2 --output-topic foo:output/topic/1,bar:output/topic2
      --device-binding /dev/video0:/dev/video1,/dev/gpio/1:r --volume-binding /tmp:ro,/tmp/data:/data --no-autostart --description "edge container"
      --memory 1GB
  - stderr: |
      Updated container [foo].
  - stdout: |
      {}
- execute:
  - label: Clear env vars
  - command: |
      iot edge containers update foo --region asia-east1 --registry my-registry --device my-device --clear-env-vars
  - stderr: |
      Updated container [foo].
  - stdout: |
      autostart: true
      dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
      inputTopics:
      - topic: /container/foo/input
      name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
      outputTopics:
      - topic: /container/foo/output
      updateTime: '2019-02-27T16:23:37.490287785Z'
      version: '2'
- execute:
  - label: Remove and update env vars
  - command: |
      iot edge containers update foo --region asia-east1 --registry my-registry --device my-device --remove-env-vars KEY1,KEY2 --update-env-vars KEY1=NEW_VALUE,KEY4=FOO
  - stderr: |
      Updated container [foo].
  - stdout: |
      autostart: true
      dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
      environmentVariables:
        KEY1: NEW_VALUE
        KEY3: VALUE3
        KEY4: FOO
      inputTopics:
      - topic: /container/foo/input
      name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
      outputTopics:
      - topic: /container/foo/output
      updateTime: '2019-02-27T16:26:42.041577237Z'
      version: '4'
actions:
- execute_command:
    label: Base case
    command: |
      iot edge containers update foo --region asia-east1 --registry my-registry --device my-device --docker-image gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
    events:
    - api_call:
        expect_request:
          uri: https://edge.googleapis.com/v1alpha1/projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo",
              "dockerImageUri": "gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64",
              "inputTopics": [
                {
                  "topic": "/container/foo/input"
                }
              ],
              "outputTopics": [
                {
                  "topic": "/container/foo/output"
                }
              ],
              "autostart": true,
              "updateTime": "2019-02-27T16:11:43.021036249Z",
              "version": "1"
            }

    - api_call:
        expect_request:
          uri: https://edge.googleapis.com/v1alpha1/projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo?alt=json&updateMask=dockerImageUri
          method: PATCH
          headers: {}
          body:
            json:
              autostart: true
              dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
              inputTopics:
              - topic: /container/foo/input
              - topic: /container/foo/input
              name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
              outputTopics:
              - topic: /container/foo/output
              - topic: /container/foo/output
              updateTime: '2019-02-27T16:11:43.021036249Z'
              version: '1'
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo",
              "dockerImageUri": "gcr.io/cloud-iot-edge/samples/ml-camera-python:aarch64",
              "inputTopics": [
                {
                  "topic": "/container/foo/input"
                }
              ],
              "outputTopics": [
                {
                  "topic": "/container/foo/output"
                }
              ],
              "autostart": true,
              "updateTime": "2019-02-27T16:13:12.347064208Z",
              "version": "2"
            }

    - expect_stderr: |
        Updated container [foo].
    - expect_stdout: |
        autostart: true
        dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:aarch64
        inputTopics:
        - topic: /container/foo/input
        name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
        outputTopics:
        - topic: /container/foo/output
        updateTime: '2019-02-27T16:13:12.347064208Z'
        version: '2'
    - expect_exit:
        code: 0
- execute_command:
    label: Full update
    command: |
      iot edge containers update foo --region asia-east1 --registry my-registry --device my-device --docker-image gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
      --env-vars KEY1=VALUE1,KEY2=VALUE2,KEY3=VALUE3 --input-topic foo:input/topic/1,bar:input/topic2 --output-topic foo:output/topic/1,bar:output/topic2
      --device-binding /dev/video0:/dev/video1,/dev/gpio/1:r --volume-binding /tmp:ro,/tmp/data:/data --no-autostart --description "edge container"
      --memory 1GB
    events:
    - api_call:
        expect_request:
          uri: https://edge.googleapis.com/v1alpha1/projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: null
    - api_call:
        expect_request:
          uri: https://edge.googleapis.com/v1alpha1/projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo?alt=json&updateMask=description%2CdeviceBindings%2CdockerImageUri%2CenvironmentVariables%2CinputTopics%2CavailableMemoryMb%2Cautostart%2CoutputTopics%2CvolumeBindings
          method: PATCH
          headers: {}
          body:
            json:
              autostart: false
              availableMemoryMb: 1024
              description: edge container
              deviceBindings:
              - cgroupPermissions: rwm
                destination: /dev/video1
                source: /dev/video0
              - cgroupPermissions: r
                destination: /dev/gpio/1
                source: /dev/gpio/1
              dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
              environmentVariables:
                KEY1: VALUE1
                KEY2: VALUE2
                KEY3: VALUE3
              inputTopics:
              - topic: /container/foo/input
              - id: foo
                topic: input/topic/1
              - id: bar
                topic: input/topic2
              outputTopics:
              - topic: /container/foo/output
              - id: foo
                topic: output/topic/1
              - id: bar
                topic: output/topic2
              volumeBindings:
              - destination: /tmp
                readOnly: true
                source: /tmp
              - destination: /data
                readOnly: false
                source: /tmp/data
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stderr: |
        Updated container [foo].
    - expect_stdout: |
        {}
    - expect_exit:
        code: 0
- execute_command:
    label: Clear env vars
    command: |
      iot edge containers update foo --region asia-east1 --registry my-registry --device my-device --clear-env-vars
    events:
    - api_call:
        expect_request:
          uri: https://edge.googleapis.com/v1alpha1/projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo",
              "dockerImageUri": "gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64",
              "environmentVariables": {
                "KEY3": "VALUE3",
                "KEY2": "VALUE2",
                "KEY1": "VALUE1"
              },
              "inputTopics": [
                {
                  "topic": "/container/foo/input"
                }
              ],
              "outputTopics": [
                {
                  "topic": "/container/foo/output"
                }
              ],
              "autostart": true,
              "updateTime": "2019-02-27T16:23:12.257336740Z",
              "version": "1"
            }
    - api_call:
        expect_request:
          uri: https://edge.googleapis.com/v1alpha1/projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo?alt=json&updateMask=environmentVariables
          method: PATCH
          headers: {}
          body:
            json:
              autostart: true
              dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
              environmentVariables: {}
              inputTopics:
              - topic: /container/foo/input
              - topic: /container/foo/input
              name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
              outputTopics:
              - topic: /container/foo/output
              - topic: /container/foo/output
              updateTime: '2019-02-27T16:23:12.257336740Z'
              version: '1'
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo",
              "dockerImageUri": "gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64",
              "inputTopics": [
                {
                  "topic": "/container/foo/input"
                }
              ],
              "outputTopics": [
                {
                  "topic": "/container/foo/output"
                }
              ],
              "autostart": true,
              "updateTime": "2019-02-27T16:23:37.490287785Z",
              "version": "2"
            }

    - expect_stderr: |
        Updated container [foo].
    - expect_stdout: |
        autostart: true
        dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
        inputTopics:
        - topic: /container/foo/input
        name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
        outputTopics:
        - topic: /container/foo/output
        updateTime: '2019-02-27T16:23:37.490287785Z'
        version: '2'
    - expect_exit:
        code: 0
- execute_command:
    label: Remove and update env vars
    command: |
      iot edge containers update foo --region asia-east1 --registry my-registry --device my-device --remove-env-vars KEY1,KEY2 --update-env-vars KEY1=NEW_VALUE,KEY4=FOO
    events:
    - api_call:
        expect_request:
          uri: https://edge.googleapis.com/v1alpha1/projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo",
              "dockerImageUri": "gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64",
              "environmentVariables": {
                "KEY3": "VALUE3",
                "KEY2": "VALUE2",
                "KEY1": "VALUE1"
              },
              "inputTopics": [
                {
                  "topic": "/container/foo/input"
                }
              ],
              "outputTopics": [
                {
                  "topic": "/container/foo/output"
                }
              ],
              "autostart": true,
              "updateTime": "2019-02-27T16:25:28.887003280Z",
              "version": "3"
            }

    - api_call:
        expect_request:
          uri: https://edge.googleapis.com/v1alpha1/projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo?alt=json&updateMask=environmentVariables
          method: PATCH
          headers: {}
          body:
            json:
              autostart: true
              dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
              environmentVariables:
                KEY1: NEW_VALUE
                KEY3: VALUE3
                KEY4: FOO
              inputTopics:
              - topic: /container/foo/input
              - topic: /container/foo/input
              name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
              outputTopics:
              - topic: /container/foo/output
              - topic: /container/foo/output
              updateTime: '2019-02-27T16:25:28.887003280Z'
              version: '3'
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo",
              "dockerImageUri": "gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64",
              "environmentVariables": {
                "KEY4": "FOO",
                "KEY3": "VALUE3",
                "KEY1": "NEW_VALUE"
              },
              "inputTopics": [
                {
                  "topic": "/container/foo/input"
                }
              ],
              "outputTopics": [
                {
                  "topic": "/container/foo/output"
                }
              ],
              "autostart": true,
              "updateTime": "2019-02-27T16:26:42.041577237Z",
              "version": "4"
            }
    - expect_stderr: |
        Updated container [foo].
    - expect_stdout: |
        autostart: true
        dockerImageUri: gcr.io/cloud-iot-edge/samples/ml-camera-python:x86_64
        environmentVariables:
          KEY1: NEW_VALUE
          KEY3: VALUE3
          KEY4: FOO
        inputTopics:
        - topic: /container/foo/input
        name: projects/fake-project/locations/asia-east1/registries/my-registry/devices/my-device/containers/foo
        outputTopics:
        - topic: /container/foo/output
        updateTime: '2019-02-27T16:26:42.041577237Z'
        version: '4'
    - expect_exit:
        code: 0
