title: surface unit tests for 'gcloud compute networks peerings list-routes'
release_tracks: [BETA, ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: |
      compute networks peerings list-routes peer1 --network net1 --region us-central1
      --direction=INCOMING
  - stdout: |
      DEST_RANGE   TYPE                  NEXT_HOP_REGION  PRIORITY  STATUS
      10.2.0.0/16  SUBNET_PEERING_ROUTE  us-central1      1000      accepted
      90.2.0.0/16  STATIC_PEERING_ROUTE  us-central1      1000      accepted
- execute:
  - command: |
      compute networks peerings list-routes peer1 --network net1 --region us-central1
      --direction=OUTGOING
  - stdout: |
      DEST_RANGE   TYPE                  NEXT_HOP_REGION  PRIORITY  STATUS
      10.1.0.0/16  SUBNET_PEERING_ROUTE  us-central1      1000      accepted by peer
- execute:
  - command: |
      compute networks peerings list-routes peer1 --network net1 --region us-central1
  - stderr: ERROR.*$
  - error: '1: argument --direction: Must be specified.'
- execute:
  - command: |
      compute networks peerings list-routes peer1 --network net1 --region us-central1
      --direction NORTH
  - stderr: ERROR.*$
  - error: |-
      1: argument --direction: Invalid choice: 'NORTH'.

      Valid choices are [INCOMING, OUTGOING].
actions:
- define_reference:
    reference: api-version
    track_values:
      GA: v1
      BETA: beta
      ALPHA: alpha
- execute_command:
    command: |
      compute networks peerings list-routes peer1 --network net1 --region us-central1
      --direction=INCOMING
    events:
    - api_call:
        expect_request:
          uri: https://compute.googleapis.com/compute/$$api-version$$/projects/fake-project/global/networks/net1/listPeeringRoutes?alt=json&direction=INCOMING&maxResults=500&peeringName=peer1&region=us-central1
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            kind: compute#exchangedPeeringRoutesList
            items:
            - destRange: 10.2.0.0/16
              type: SUBNET_PEERING_ROUTE
              nextHopRegion: us-central1
              priority: 1000
              imported: true
            - destRange: 90.2.0.0/16
              type: STATIC_PEERING_ROUTE
              nextHopRegion: us-central1
              priority: 1000
              imported: true
    - expect_stdout: |
        DEST_RANGE   TYPE                  NEXT_HOP_REGION  PRIORITY  STATUS
        10.2.0.0/16  SUBNET_PEERING_ROUTE  us-central1      1000      accepted
        90.2.0.0/16  STATIC_PEERING_ROUTE  us-central1      1000      accepted
    - expect_exit:
        code: 0
- execute_command:
    command: |
      compute networks peerings list-routes peer1 --network net1 --region us-central1
      --direction=OUTGOING
    events:
    - api_call:
        expect_request:
          uri: https://compute.googleapis.com/compute/$$api-version$$/projects/fake-project/global/networks/net1/listPeeringRoutes?alt=json&direction=OUTGOING&maxResults=500&peeringName=peer1&region=us-central1
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            kind: compute#exchangedPeeringRoutesList
            items:
            - destRange: 10.1.0.0/16
              type: SUBNET_PEERING_ROUTE
              nextHopRegion: us-central1
              priority: 1000
              imported: true
    - expect_stdout: |
        DEST_RANGE   TYPE                  NEXT_HOP_REGION  PRIORITY  STATUS
        10.1.0.0/16  SUBNET_PEERING_ROUTE  us-central1      1000      accepted by peer
    - expect_exit:
        code: 0
- execute_command:
    command: |
      compute networks peerings list-routes peer1 --network net1 --region us-central1
    events:
    - expect_stderr:
        matches: ERROR.*
    - expect_exit:
        code: 1
        message: 'argument --direction: Must be specified.'
- execute_command:
    command: |
      compute networks peerings list-routes peer1 --network net1 --region us-central1
      --direction NORTH
    events:
    - expect_stderr:
        matches: ERROR.*
    - expect_exit:
        code: 1
        message: |-
          argument --direction: Invalid choice: 'NORTH'.

          Valid choices are [INCOMING, OUTGOING].
