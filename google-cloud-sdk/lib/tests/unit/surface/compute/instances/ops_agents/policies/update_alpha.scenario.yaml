title: ops-agents policies update
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-my-guest-policy --project my-project --os-types=short-name=centos,version=7 --description="A test policy to install agents" --agent-rules="type=logging,package-state=removed" --instances=zones/us-central1-a/instances/test-instance-1 --group-labels="env=prod,product=myproduct;env=staging,product=myproduct" --clear-zones
  - stdout: |
      agent_rules:
      - enable_autoupgrade: true
        package_state: removed
        type: logging
        version: 1.*.*
      assignment:
        group_labels:
        - env: prod
          product: myproduct
        - env: staging
          product: myproduct
        instances:
        - zones/us-central1-a/instances/test-instance-1
        os_types:
        - short_name: centos
          version: '7'
        zones: []
      create_time: '2020-06-29T20:49:28.521Z'
      description: A test policy to install agents
      etag: 67c7b3d6-5e22-44b8-a8d8-e74363540020
      id: projects/my-project/guestPolicies/ops-agents-my-guest-policy
      update_time: '2020-06-30T16:33:55.811Z'
- execute:
  - command: |
      compute instances ops-agents policies update
  - stderr: .*argument POLICY_ID\:\ Must be specified..*$
  - error: '1: argument POLICY_ID: Must be specified.'
- execute:
  - command: |
      compute instances ops-agents policies update test-policy
  - stderr: .*argument POLICY_ID\:\ Bad value \[test-policy\]\:\ POLICY_ID must start
      with \[ops-agents-\]..*$
  - error: '1: argument POLICY_ID: Bad value [test-policy]: POLICY_ID must start with
      [ops-agents-].'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=not-a-list-of-maps --os-types=short-name=centos,version=7
  - stderr: .*argument --agent-rules\:\ Bad syntax for dict arg\:\ \[not-a-list-of-maps\]..*$
  - error: '1: argument --agent-rules: Bad syntax for dict arg: [not-a-list-of-maps].
      Please see `gcloud topic flags-file` or `gcloud topic escaping` for information
      on providing list or dictionary flag values with special characters.'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=not-allowed-key=some-value --os-types=short-name=centos,version=7
  - stderr: .*argument --agent-rules\:\ valid keys are \[enable-autoupgrade, package-state,
      type, version\]\;\ received\:\ not-allowed-key..*$
  - error: '1: argument --agent-rules: valid keys are [enable-autoupgrade, package-state,
      type, version]; received: not-allowed-key'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=version=1.2.3 --os-types=short-name=centos,version=7
  - stderr: .*argument --agent-rules\:\ Key \[type\] required in dict arg but not
      provided..*$
  - error: '1: argument --agent-rules: Key [type] required in dict arg but not provided'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=not-supported-type --os-types=short-name=centos,version=7
  - stderr: .*argument --agent-rules\:\ Invalid value \[not-supported-type\] from
      field \[type\], expected one of \[logging, metrics, ops-agent\]..*$
  - error: '1: argument --agent-rules: Invalid value [not-supported-type] from field
      [type], expected one of [logging, metrics, ops-agent].'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging,package-state=not-supported-state --os-types=short-name=centos,version=7
  - stderr: .*argument --agent-rules\:\ Invalid value \[not-supported-state\] from
      field \[package-state\], expected one of \[installed, removed\]..*$
  - error: '1: argument --agent-rules: Invalid value [not-supported-state] from field
      [package-state], expected one of [installed, removed].'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging,enable-autoupgrade=not-a-boolean --os-types=short-name=centos,version=7
  - stderr: .*argument --agent-rules\:\ Invalid flag value \[not-a-boolean\], expected
      one of \[true, yes, false, no\].*$
  - error: '1: argument --agent-rules: Invalid flag value [not-a-boolean], expected
      one of [true, yes, false, no]'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging;type=metrics --group-labels=not-a-list-of-maps --os-types=short-name=centos,version=7
  - stderr: .*argument --group-labels\:\ Bad syntax for dict arg\:\ \[not-a-list-of-maps\]..*$
  - error: '1: argument --group-labels: Bad syntax for dict arg: [not-a-list-of-maps].
      Please see `gcloud topic flags-file` or `gcloud topic escaping` for information
      on providing list or dictionary flag values with special characters.'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging;type=metrics --os-types=not-a-list-of-maps
  - stderr: .*argument --os-types\:\ Bad syntax for dict arg\:\ \[not-a-list-of-maps\]..*$
  - error: '1: argument --os-types: Bad syntax for dict arg: [not-a-list-of-maps].
      Please see `gcloud topic flags-file` or `gcloud topic escaping` for information
      on providing list or dictionary flag values with special characters.'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging;type=metrics --os-types=version=7
  - stderr: .*argument --os-types\:\ Key \[short-name\] required in dict arg but not
      provided.*$
  - error: '1: argument --os-types: Key [short-name] required in dict arg but not
      provided'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging;type=metrics --os-types=short-name=centos
  - stderr: .*argument --os-types\:\ Key \[version\] required in dict arg but not
      provided.*$
  - error: '1: argument --os-types: Key [version] required in dict arg but not provided'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules="type=logging;type=logging"
  - error: '1: At most one agent with type [logging] is allowed.'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules="type=logging,version=not-valid-version"
  - error: '1: The agent version [not-valid-version] is not allowed. Expected values:
      [latest], [current-major], or anything in the format of [MAJOR_VERSION.MINOR_VERSION.PATCH_VERSION]
      or [MAJOR_VERSION.*.*].'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules="type=logging,version=1.6.35,enable-autoupgrade=true"
  - error: '1: An agent can not be pinned to the specific version [1.6.35] when [enable-autoupgrade]
      is set to true for that agent.'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --os-types=short-name=centos,version=10
  - error: '1: The combination of short name \[centos\] and version \[10\] is not
      supported. The supported versions are.*$'
- execute:
  - command: |
      compute instances ops-agents policies update ops-agents-test-policy --os-types="short-name=centos,version=7;short-name=debian,version=9"
  - error: '1: Only one OS type is allowed in the instance filters.'
actions:
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-my-guest-policy --project my-project --os-types=short-name=centos,version=7 --description="A test policy to install agents" --agent-rules="type=logging,package-state=removed" --instances=zones/us-central1-a/instances/test-instance-1 --group-labels="env=prod,product=myproduct;env=staging,product=myproduct" --clear-zones
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/my-project/guestPolicies/ops-agents-my-guest-policy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"metrics\", \"version\": \"6.*.*\"},{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:09:04.927Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  }
                ],
                "zones": [
                  "us-central1-a"
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "8"
                  }
                ]
              },
              "packages": [
                {
                  "name": "google-fluentd",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "google-fluentd-catch-all-config",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "google-fluentd-start-service",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent-start-service",
                  "desiredState": "UPDATED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-monitoring",
                    "displayName": "Google Cloud Monitoring Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el10-x86_64-6",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                },
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el10-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-stackdriver-agent-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-google-fluentd-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "0a0dae85-ab41-4476-b9da-365c7da33374"
            }
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/my-project/guestPolicies/ops-agents-my-guest-policy?alt=json
          method: PATCH
          headers: {}
          body:
            json:
              assignment:
                groupLabels:
                - labels:
                    env: prod
                    product: myproduct
                - labels:
                    env: staging
                    product: myproduct
                instances:
                - zones/us-central1-a/instances/test-instance-1
                osTypes:
                - osShortName: centos
                  osVersion: '7'
              description: '{"type": "ops-agents", "description": "A test policy to
                install agents", "agentRules": [{"enableAutoupgrade": true, "packageState":
                "removed", "type": "logging", "version": "1.*.*"}]}'
              packageRepositories:
              - yum:
                  baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                  displayName: Google Cloud Logging Agent Repository
                  gpgKeys:
                  - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
                  id: google-cloud-logging
              packages:
              - desiredState: REMOVED
                name: google-fluentd
              - desiredState: REMOVED
                name: google-fluentd-catch-all-config
              - desiredState: REMOVED
                name: google-fluentd-start-service
              recipes:
              - desiredState: UPDATED
                installSteps:
                - scriptRun:
                    script: |-
                      #!/bin/bash
                      echo 'Skipping as the package state is [removed].'
                name: set-google-fluentd-version-1
                version: '1'
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A test policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"removed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:33:55.811Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  },
                  {
                    "labels": {
                      "env": "staging",
                      "product": "myproduct"
                    }
                  }
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "7"
                  }
                ]
              },
              "packages": [
                {
                  "name": "google-fluentd",
                  "desiredState": "REMOVED"
                },
                {
                  "name": "google-fluentd-catch-all-config",
                  "desiredState": "REMOVED"
                },
                {
                  "name": "google-fluentd-start-service",
                  "desiredState": "REMOVED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-google-fluentd-version-1",
                  "version": "1",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash\nSkipping as the package state is [removed].'"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-stackdriver-agent-version-1",
                  "version": "1",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "67c7b3d6-5e22-44b8-a8d8-e74363540020"
            }
    - expect_stdout: |
        agent_rules:
        - enable_autoupgrade: true
          package_state: removed
          type: logging
          version: 1.*.*
        assignment:
          group_labels:
          - env: prod
            product: myproduct
          - env: staging
            product: myproduct
          instances:
          - zones/us-central1-a/instances/test-instance-1
          os_types:
          - short_name: centos
            version: '7'
          zones: []
        create_time: '2020-06-29T20:49:28.521Z'
        description: A test policy to install agents
        etag: 67c7b3d6-5e22-44b8-a8d8-e74363540020
        id: projects/my-project/guestPolicies/ops-agents-my-guest-policy
        update_time: '2020-06-30T16:33:55.811Z'
    - expect_exit:
        code: 0
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-my-guest-policy --project my-project --os-types=short-name=centos,version=7 --description="A test policy to install agents" --agent-rules="type=logging,package-state=removed" --instances=zones/us-central1-a/instances/test-instance-1 --group-labels="env=prod,product=myproduct;env=staging,product=myproduct" --clear-zones --etag 0a0dae85-ab41-4476-b9da-365c7da33374
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/my-project/guestPolicies/ops-agents-my-guest-policy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"metrics\", \"version\": \"6.*.*\"},{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:09:04.927Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  }
                ],
                "zones": [
                  "us-central1-a"
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "8"
                  }
                ]
              },
              "packages": [
                {
                  "name": "google-fluentd",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "google-fluentd-catch-all-config",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "google-fluentd-start-service",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent-start-service",
                  "desiredState": "UPDATED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-monitoring",
                    "displayName": "Google Cloud Monitoring Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el10-x86_64-6",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                },
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el10-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-stackdriver-agent-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-google-fluentd-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "0a0dae85-ab41-4476-b9da-365c7da33374"
            }
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/my-project/guestPolicies/ops-agents-my-guest-policy?alt=json
          method: PATCH
          headers: {}
          body:
            json:
              assignment:
                groupLabels:
                - labels:
                    env: prod
                    product: myproduct
                - labels:
                    env: staging
                    product: myproduct
                instances:
                - zones/us-central1-a/instances/test-instance-1
                osTypes:
                - osShortName: centos
                  osVersion: '7'
              description: '{"type": "ops-agents", "description": "A test policy to
                install agents", "agentRules": [{"enableAutoupgrade": true, "packageState":
                "removed", "type": "logging", "version": "1.*.*"}]}'
              etag: '0a0dae85-ab41-4476-b9da-365c7da33374'
              packageRepositories:
              - yum:
                  baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                  displayName: Google Cloud Logging Agent Repository
                  gpgKeys:
                  - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
                  id: google-cloud-logging
              packages:
              - desiredState: REMOVED
                name: google-fluentd
              - desiredState: REMOVED
                name: google-fluentd-catch-all-config
              - desiredState: REMOVED
                name: google-fluentd-start-service
              recipes:
              - desiredState: UPDATED
                installSteps:
                - scriptRun:
                    script: |-
                      #!/bin/bash
                      echo 'Skipping as the package state is [removed].'
                name: set-google-fluentd-version-1
                version: '1'
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A test policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"removed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:33:55.811Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  },
                  {
                    "labels": {
                      "env": "staging",
                      "product": "myproduct"
                    }
                  }
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "7"
                  }
                ]
              },
              "packages": [
                {
                  "name": "google-fluentd",
                  "desiredState": "REMOVED"
                },
                {
                  "name": "google-fluentd-catch-all-config",
                  "desiredState": "REMOVED"
                },
                {
                  "name": "google-fluentd-start-service",
                  "desiredState": "REMOVED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-google-fluentd-version-1",
                  "version": "1",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash\nSkipping as the package state is [removed].'"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-stackdriver-agent-version-1",
                  "version": "1",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "67c7b3d6-5e22-44b8-a8d8-e74363540020"
            }
    - expect_stdout: |
        agent_rules:
        - enable_autoupgrade: true
          package_state: removed
          type: logging
          version: 1.*.*
        assignment:
          group_labels:
          - env: prod
            product: myproduct
          - env: staging
            product: myproduct
          instances:
          - zones/us-central1-a/instances/test-instance-1
          os_types:
          - short_name: centos
            version: '7'
          zones: []
        create_time: '2020-06-29T20:49:28.521Z'
        description: A test policy to install agents
        etag: 67c7b3d6-5e22-44b8-a8d8-e74363540020
        id: projects/my-project/guestPolicies/ops-agents-my-guest-policy
        update_time: '2020-06-30T16:33:55.811Z'
    - expect_exit:
        code: 0
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-my-guest-policy --project my-project --os-types=short-name=centos,version=7 --description="A test policy to install agents" --agent-rules="type=logging,package-state=removed" --instances=zones/us-central1-a/instances/test-instance-1 --group-labels="env=prod,product=myproduct;env=staging,product=myproduct" --clear-zones --etag fake_etag
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/my-project/guestPolicies/ops-agents-my-guest-policy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"metrics\", \"version\": \"6.*.*\"},{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:09:04.927Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  }
                ],
                "zones": [
                  "us-central1-a"
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "8"
                  }
                ]
              },
              "packages": [
                {
                  "name": "google-fluentd",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "google-fluentd-catch-all-config",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "google-fluentd-start-service",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent-start-service",
                  "desiredState": "UPDATED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-monitoring",
                    "displayName": "Google Cloud Monitoring Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el10-x86_64-6",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                },
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el10-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-stackdriver-agent-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-google-fluentd-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "0a0dae85-ab41-4476-b9da-365c7da33374"
            }
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/my-project/guestPolicies/ops-agents-my-guest-policy?alt=json
          method: PATCH
          headers: {}
          body:
            json:
              assignment:
                groupLabels:
                - labels:
                    env: prod
                    product: myproduct
                - labels:
                    env: staging
                    product: myproduct
                instances:
                - zones/us-central1-a/instances/test-instance-1
                osTypes:
                - osShortName: centos
                  osVersion: '7'
              description: '{"type": "ops-agents", "description": "A test policy to
                install agents", "agentRules": [{"enableAutoupgrade": true, "packageState":
                "removed", "type": "logging", "version": "1.*.*"}]}'
              etag: 'fake_etag'
              packageRepositories:
              - yum:
                  baseUrl: https://packages.cloud.google.com/yum/repos/google-cloud-logging-el7-x86_64-1
                  displayName: Google Cloud Logging Agent Repository
                  gpgKeys:
                  - https://packages.cloud.google.com/yum/doc/yum-key.gpg
                  - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
                  id: google-cloud-logging
              packages:
              - desiredState: REMOVED
                name: google-fluentd
              - desiredState: REMOVED
                name: google-fluentd-catch-all-config
              - desiredState: REMOVED
                name: google-fluentd-start-service
              recipes:
              - desiredState: UPDATED
                installSteps:
                - scriptRun:
                    script: |-
                      #!/bin/bash
                      echo 'Skipping as the package state is [removed].'
                name: set-google-fluentd-version-1
                version: '1'
        return_response:
          headers: {'vary': 'Origin, X-Origin, Referer', 'content-type': 'application/json; charset=UTF-8', 'date': 'Thu, 13 Aug 2020 20:10:11 GMT', 'server': 'ESF', 'cache-control': 'private', 'x-xss-protection': '0', 'x-frame-options': 'SAMEORIGIN', 'x-content-type-options': 'nosniff', 'transfer-encoding': 'chunked', 'status': '400', 'content-length': '147', '-content-encoding': 'gzip'}
          body: |
            {
              "error": {
                "code": 400,
                "message": "The etag supplied doesn't match the existing GuestPolicy.",
                "status": "INVALID_ARGUMENT"
              }
            }
    - expect_exit:
        code: 1
        message: "INVALID_ARGUMENT: The etag supplied doesn't match the existing GuestPolicy."
- execute_command:
    command: |
      compute instances ops-agents policies update
    events:
    - expect_stderr:
        matches: .*argument POLICY_ID\:\ Must be specified..*
    - expect_exit:
        code: 1
        message: 'argument POLICY_ID: Must be specified.'
- execute_command:
    command: |
      compute instances ops-agents policies update test-policy
    events:
    - expect_stderr:
        matches: .*argument POLICY_ID\:\ Bad value \[test-policy\]\:\ POLICY_ID must
          start with \[ops-agents-\]..*
    - expect_exit:
        code: 1
        message: 'argument POLICY_ID: Bad value [test-policy]: POLICY_ID must start
          with [ops-agents-].'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=not-a-list-of-maps --os-types=short-name=centos,version=7
    events:
    - expect_stderr:
        matches: .*argument --agent-rules\:\ Bad syntax for dict arg\:\ \[not-a-list-of-maps\]..*
    - expect_exit:
        code: 1
        message: 'argument --agent-rules: Bad syntax for dict arg: [not-a-list-of-maps].
          Please see `gcloud topic flags-file` or `gcloud topic escaping` for information
          on providing list or dictionary flag values with special characters.'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=not-allowed-key=some-value --os-types=short-name=centos,version=7
    events:
    - expect_stderr:
        matches: .*argument --agent-rules\:\ valid keys are \[enable-autoupgrade,
          package-state, type, version\]\;\ received\:\ not-allowed-key..*
    - expect_exit:
        code: 1
        message: 'argument --agent-rules: valid keys are [enable-autoupgrade, package-state,
          type, version]; received: not-allowed-key'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=version=1.2.3 --os-types=short-name=centos,version=7
    events:
    - expect_stderr:
        matches: .*argument --agent-rules\:\ Key \[type\] required in dict arg but
          not provided..*
    - expect_exit:
        code: 1
        message: 'argument --agent-rules: Key [type] required in dict arg but not
          provided'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=not-supported-type --os-types=short-name=centos,version=7
    events:
    - expect_stderr:
        matches: .*argument --agent-rules\:\ Invalid value \[not-supported-type\]
          from field \[type\], expected one of \[logging, metrics, ops-agent\]..*
    - expect_exit:
        code: 1
        message: 'argument --agent-rules: Invalid value [not-supported-type] from
          field [type], expected one of [logging, metrics, ops-agent].'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging,package-state=not-supported-state --os-types=short-name=centos,version=7
    events:
    - expect_stderr:
        matches: .*argument --agent-rules\:\ Invalid value \[not-supported-state\]
          from field \[package-state\], expected one of \[installed, removed\]..*
    - expect_exit:
        code: 1
        message: 'argument --agent-rules: Invalid value [not-supported-state] from
          field [package-state], expected one of [installed, removed].'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging,enable-autoupgrade=not-a-boolean --os-types=short-name=centos,version=7
    events:
    - expect_stderr:
        matches: .*argument --agent-rules\:\ Invalid flag value \[not-a-boolean\],
          expected one of \[true, yes, false, no\].*
    - expect_exit:
        code: 1
        message: 'argument --agent-rules: Invalid flag value [not-a-boolean], expected
          one of [true, yes, false, no]'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging;type=metrics --group-labels=not-a-list-of-maps --os-types=short-name=centos,version=7
    events:
    - expect_stderr:
        matches: .*argument --group-labels\:\ Bad syntax for dict arg\:\ \[not-a-list-of-maps\]..*
    - expect_exit:
        code: 1
        message: 'argument --group-labels: Bad syntax for dict arg: [not-a-list-of-maps].
          Please see `gcloud topic flags-file` or `gcloud topic escaping` for information
          on providing list or dictionary flag values with special characters.'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging;type=metrics --os-types=not-a-list-of-maps
    events:
    - expect_stderr:
        matches: .*argument --os-types\:\ Bad syntax for dict arg\:\ \[not-a-list-of-maps\]..*
    - expect_exit:
        code: 1
        message: 'argument --os-types: Bad syntax for dict arg: [not-a-list-of-maps].
          Please see `gcloud topic flags-file` or `gcloud topic escaping` for information
          on providing list or dictionary flag values with special characters.'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging;type=metrics --os-types=version=7
    events:
    - expect_stderr:
        matches: .*argument --os-types\:\ Key \[short-name\] required in dict arg
          but not provided.*
    - expect_exit:
        code: 1
        message: 'argument --os-types: Key [short-name] required in dict arg but not
          provided'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules=type=logging;type=metrics --os-types=short-name=centos
    events:
    - expect_stderr:
        matches: .*argument --os-types\:\ Key \[version\] required in dict arg but
          not provided.*
    - expect_exit:
        code: 1
        message: 'argument --os-types: Key [version] required in dict arg but not
          provided'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules="type=logging;type=logging"
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/fake-project/guestPolicies/ops-agents-test-policy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"metrics\", \"version\": \"6.*.*\"},{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:09:04.927Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  }
                ],
                "zones": [
                  "us-central1-a"
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "8"
                  }
                ]
              },
              "packages": [
                {
                  "name": "stackdriver-agent",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent-start-service",
                  "desiredState": "UPDATED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-monitoring",
                    "displayName": "Google Cloud Monitoring Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el10-x86_64-6",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                },
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el10-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-stackdriver-agent-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-google-fluentd-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "0a0dae85-ab41-4476-b9da-365c7da33374"
            }
    - expect_exit:
        code: 1
        message: At most one agent with type [logging] is allowed.
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules="type=logging,version=not-valid-version"
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/fake-project/guestPolicies/ops-agents-test-policy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"metrics\", \"version\": \"6.*.*\"},{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:09:04.927Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  }
                ],
                "zones": [
                  "us-central1-a"
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "8"
                  }
                ]
              },
              "packages": [
                {
                  "name": "stackdriver-agent",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent-start-service",
                  "desiredState": "UPDATED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-monitoring",
                    "displayName": "Google Cloud Monitoring Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el10-x86_64-6",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                },
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el10-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-stackdriver-agent-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-google-fluentd-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "0a0dae85-ab41-4476-b9da-365c7da33374"
            }
    - expect_exit:
        code: 1
        message: 'The agent version [not-valid-version] is not allowed. Expected values:
          [latest], [current-major], or anything in the format of [MAJOR_VERSION.MINOR_VERSION.PATCH_VERSION]
          or [MAJOR_VERSION.*.*].'
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --agent-rules="type=logging,version=1.6.35,enable-autoupgrade=true"
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/fake-project/guestPolicies/ops-agents-test-policy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"metrics\", \"version\": \"6.*.*\"},{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:09:04.927Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  }
                ],
                "zones": [
                  "us-central1-a"
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "8"
                  }
                ]
              },
              "packages": [
                {
                  "name": "stackdriver-agent",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent-start-service",
                  "desiredState": "UPDATED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-monitoring",
                    "displayName": "Google Cloud Monitoring Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el10-x86_64-6",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                },
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el10-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-stackdriver-agent-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-google-fluentd-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "0a0dae85-ab41-4476-b9da-365c7da33374"
            }
    - expect_exit:
        code: 1
        message: An agent can not be pinned to the specific version [1.6.35] when
          [enable-autoupgrade] is set to true for that agent.
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --os-types=short-name=centos,version=10
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/fake-project/guestPolicies/ops-agents-test-policy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"metrics\", \"version\": \"6.*.*\"},{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:09:04.927Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  }
                ],
                "zones": [
                  "us-central1-a"
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "8"
                  }
                ]
              },
              "packages": [
                {
                  "name": "stackdriver-agent",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent-start-service",
                  "desiredState": "UPDATED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-monitoring",
                    "displayName": "Google Cloud Monitoring Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el10-x86_64-6",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                },
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el10-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-stackdriver-agent-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-google-fluentd-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "0a0dae85-ab41-4476-b9da-365c7da33374"
            }
    - expect_exit:
        code: 1
        message:
          matches: The combination of short name \[centos\] and version \[10\] is
            not supported. The supported versions are.*
- execute_command:
    command: |
      compute instances ops-agents policies update ops-agents-test-policy --os-types="short-name=centos,version=7;short-name=debian,version=9"
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/v1beta/projects/fake-project/guestPolicies/ops-agents-test-policy?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "name": "projects/my-project/guestPolicies/ops-agents-my-guest-policy",
              "description": "{\"type\": \"ops-agents\", \"description\": \"A policy to install agents\", \"agentRules\": [{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"metrics\", \"version\": \"6.*.*\"},{\"enableAutoupgrade\": true, \"packageState\": \"installed\", \"type\": \"logging\", \"version\": \"1.*.*\"}]}",
              "createTime": "2020-06-29T20:49:28.521Z",
              "updateTime": "2020-06-30T16:09:04.927Z",
              "assignment": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "prod",
                      "product": "myproduct"
                    }
                  }
                ],
                "zones": [
                  "us-central1-a"
                ],
                "instances": [
                  "zones/us-central1-a/instances/test-instance-1"
                ],
                "osTypes": [
                  {
                    "osShortName": "centos",
                    "osVersion": "8"
                  }
                ]
              },
              "packages": [
                {
                  "name": "stackdriver-agent",
                  "desiredState": "UPDATED"
                },
                {
                  "name": "stackdriver-agent-start-service",
                  "desiredState": "UPDATED"
                }
              ],
              "packageRepositories": [
                {
                  "yum": {
                    "id": "google-cloud-monitoring",
                    "displayName": "Google Cloud Monitoring Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-monitoring-el10-x86_64-6",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                },
                {
                  "yum": {
                    "id": "google-cloud-logging",
                    "displayName": "Google Cloud Logging Agent Repository",
                    "baseUrl": "https://packages.cloud.google.com/yum/repos/google-cloud-logging-el10-x86_64-1",
                    "gpgKeys": [
                      "https://packages.cloud.google.com/yum/doc/yum-key.gpg",
                      "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
                    ]
                  }
                }
              ],
              "recipes": [
                {
                  "name": "set-stackdriver-agent-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-monitoring.repo || true; find /var/cache/yum -name '*google-cloud-monitoring*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y stackdriver-agent || true; sudo yum install -y 'stackdriver-agent-6.*'; sudo service stackdriver-agent start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                },
                {
                  "name": "set-google-fluentd-version-0",
                  "version": "0",
                  "installSteps": [
                    {
                      "scriptRun": {
                        "script": "#!/bin/bash -e\nsudo rm /etc/yum.repos.d/google-cloud-logging.repo || true; find /var/cache/yum -name '*google-cloud-logging*' | xargs sudo rm -rf || true\nfor i in {1..5}; do\n  if (sudo yum remove -y google-fluentd || true; sudo yum install -y 'google-fluentd-1.*'; sudo yum install -y google-fluentd-catch-all-config; sudo service google-fluentd start); then\n    break\n  fi\n  sleep 1m\ndone"
                      }
                    }
                  ],
                  "desiredState": "UPDATED"
                }
              ],
              "etag": "0a0dae85-ab41-4476-b9da-365c7da33374"
            }
    - expect_exit:
        code: 1
        message: Only one OS type is allowed in the instance filters.
