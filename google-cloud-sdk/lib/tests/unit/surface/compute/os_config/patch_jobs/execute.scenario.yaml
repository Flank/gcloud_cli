title: patch-jobs execute.
release_tracks: [GA, BETA, ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: compute os-config patch-jobs execute
  - stderr: .*Exactly one of.*--instance-filter-all.*--instance-filter-group-labels.*must
      be specified.*$
  - error: '1: .*Exactly one of.*--instance-filter-all.*--instance-filter-group-labels.*must
      be specified.*$'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --instance-filter-zones="us-east1-b"
  - stderr: .*Exactly one of.*--instance-filter-all.*--instance-filter-zones.*must
      be specified.*$
  - error: '1: .*Exactly one of.*--instance-filter-all.*--instance-filter-zones.*must
      be specified.*$'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all
  - staged_progress_tracker:
    - message: Executing patch job [68cb687a-de54-40dc-bdc3-c74ebc23346c]
    - status: SUCCESS
  - stderr: Execution for patch job.*has completed with status \[SUCCEEDED\].*$
  - stdout: |
      createTime: '2019-01-01T12:00:00Z'
      instanceFilter:
        all: true
      name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
      patchConfig: {}
      state: SUCCEEDED
      updateTime: '2019-12-09T23:05:36.421Z'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async
  - stderr: Execution in progress for patch job.*$
  - stdout: |
      createTime: '2019-01-01T12:00:00Z'
      instanceFilter:
        all: true
      name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
      patchConfig: {}
      state: STARTED
      updateTime: '2019-12-09T23:05:36.421Z'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-group-labels="env=dev,app=web"
      --instance-filter-group-labels="env=dev,app=worker" --async
  - stderr: Execution in progress for patch job.*$
  - stdout: |
      createTime: '2019-01-01T12:00:00Z'
      instanceFilter:
        groupLabels:
        - labels:
            app: web
            env: dev
        - labels:
            app: worker
            env: dev
      name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
      patchConfig: {}
      state: STARTED
      updateTime: '2019-12-09T23:05:36.421Z'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --apt-excludes=123
      --apt-exclusive-packages=456
  - stderr: .*At most one of --apt-excludes.*--apt-exclusive-packages.*may be specified.*$
  - error: '1: argument --apt-excludes: At most one of --apt-excludes | --apt-exclusive-packages
      may be specified.'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --yum-minimal
      --yum-exclusive-packages=123
  - stderr: .*At most one of --yum-exclusive-packages.*--yum-minimal.*may be specified.*$
  - error: '1: argument --yum-exclusive-packages: At most one of --yum-exclusive-packages
      | --yum-excludes --yum-minimal --yum-security may be specified.'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --zypper-with-optional
      --zypper-exclusive-patches=123
  - stderr: .*At most one of --zypper-exclusive-patches.*--zypper-with-optional.*may
      be specified.*$
  - error: '1: argument --zypper-exclusive-patches: At most one of --zypper-exclusive-patches
      | --zypper-categories --zypper-severities --zypper-with-optional --zypper-with-update
      may be specified.'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --apt-exclusive-packages="123"
      --windows-exclusive-patches=KB456 --yum-exclusive-packages=789 --zypper-exclusive-patches="abc"
  - stderr: Execution in progress for patch job.*$
  - stdout: |
      createTime: '2019-01-01T12:00:00Z'
      instanceFilter:
        all: true
      name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
      patchConfig:
        apt:
          exclusivePackages:
          - '123'
        windowsUpdate:
          exclusivePatches:
          - KB456
        yum:
          exclusivePackages:
          - '789'
        zypper:
          exclusivePatches:
          - abc
      state: STARTED
      updateTime: '2019-12-09T23:05:36.421Z'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --windows-excludes
      KB123,KB456 --yum-minimal --zypper-categories="security" --zypper-with-update
  - stderr: Execution in progress for patch job.*$
  - stdout: |
      createTime: '2019-01-01T12:00:00Z'
      instanceFilter:
        all: true
      name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
      patchConfig:
        windowsUpdate:
          excludes:
          - KB123
          - KB456
        yum:
          minimal: true
          security: false
        zypper:
          categories:
          - security
          withOptional: false
          withUpdate: true
      state: STARTED
      updateTime: '2019-12-09T23:05:36.421Z'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --description="test
      execute" --display-name="Test Display Name" --dry-run --duration="10m"
  - stderr: Execution in progress for patch job.*$
  - stdout: |
      createTime: '2019-01-01T12:00:00Z'
      description: test execute
      displayName: Test Display Name
      dryRun: true
      duration: 600s
      instanceFilter:
        all: true
      name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
      patchConfig: {}
      state: STARTED
      updateTime: '2019-12-09T23:05:36.421Z'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --apt-dist
      --apt-excludes="123" --reboot-config="ALWAYS" --windows-classifications="critical,feature-pack"
      --windows-excludes KB123,KB456 --yum-excludes="789,987" --yum-minimal --yum-security
      --zypper-categories="security" --zypper-severities="critical" --zypper-with-optional
      --zypper-with-update --pre-patch-linux-executable="/bin/exec" --pre-patch-linux-success-codes="200"
      --pre-patch-windows-executable="gs://osconfig-cloud-sdk/test-script-windows#12345"
      --pre-patch-windows-success-codes=0,200 --post-patch-linux-executable="https://storage.googleapis.com/osconfig-cloud-sdk/test-script-linux#67890"
      --post-patch-linux-success-codes="0,200" --post-patch-windows-executable="C:/Users/tmp/test-script.ps1"
      --post-patch-windows-success-codes 0
  - stderr: Execution in progress for patch job.*$
  - stdout: |
      createTime: '2019-12-10T04:27:07.195Z'
      filter: id=*
      instanceFilter: {}
      name: projects/478365141514/patchJobs/e1d2f1bc-5d7b-4258-bfc8-97a8c424dbf3
      patchConfig:
        apt:
          excludes:
          - '123'
          type: DIST
        postStep:
          linuxExecStepConfig:
            allowedSuccessCodes:
            - 0
            - 200
            gcsObject:
              bucket: osconfig-cloud-sdk
              generationNumber: '67890'
              object: test-script-linux
          windowsExecStepConfig:
            allowedSuccessCodes:
            - 0
            interpreter: POWERSHELL
            localPath: C:/Users/tmp/test-script.ps1
        preStep:
          linuxExecStepConfig:
            allowedSuccessCodes:
            - 200
            localPath: /bin/exec
          windowsExecStepConfig:
            allowedSuccessCodes:
            - 0
            - 200
            gcsObject:
              bucket: osconfig-cloud-sdk
              generationNumber: '12345'
              object: test-script-windows
            interpreter: SHELL
        rebootConfig: ALWAYS
        windowsUpdate:
          classifications:
          - CRITICAL
          - FEATURE_PACK
          excludes:
          - KB123
          - KB456
        yum:
          excludes:
          - '789'
          - '987'
          minimal: true
          security: true
        zypper:
          categories:
          - security
          severities:
          - critical
          withOptional: true
          withUpdate: true
      state: STARTED
      updateTime: '2019-12-10T04:27:07.195Z'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --pre-patch-linux-success-codes="200"
  - error: '1: Invalid value for [pre-patch-linux-success-codes]: [pre-patch-linux-executable]
      must also be specified.'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --pre-patch-linux-executable="gs://!@#$%^&*"
  - error: '1: Invalid value for [pre-patch-linux-executable]: The provided Google
      Cloud Storage path [gs://!@#$%^&*] is invalid.'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --pre-patch-linux-executable="https://storage.googleapis.com/my-butcket/my-folder/my-object"
  - error: '1: Invalid value for [pre-patch-linux-executable]: The provided Google
      Cloud Storage path [https://storage.googleapis.com/my-butcket/my-folder/my-object]
      does not contain a valid generation number.'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --rollout-mode=invalid-mode
  - stderr: .*argument --rollout-mode.*Invalid choice.*'invalid-mode'.*$
  - error: "1: .*argument --rollout-mode.*Invalid choice.*'invalid-mode'.*$"
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --rollout-mode=zone-by-zone
  - error: '1: Invalid value for [rollout-mode]: [rollout-disruption-budget] or [rollout-disruption-budget-percent]
      must also be specified.'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --rollout-disruption-budget=10
      --rollout-disruption-budget-percent=10
  - stderr: .*At most one of --rollout-disruption-budget.*--rollout-disruption-budget-percent
      may be specified.*$
  - error: '1: .*At most one of --rollout-disruption-budget.*--rollout-disruption-budget-percent
      may be specified.*$'
- execute:
  - command: compute os-config patch-jobs execute --instance-filter-all --async --rollout-mode=concurrent-zones
      --rollout-disruption-budget-percent=10
  - stderr: Execution in progress for patch job.*$
  - stdout: |
      createTime: '2019-01-01T12:00:00Z'
      instanceFilter:
        all: true
      name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
      patchConfig: {}
      rollout:
        disruptionBudget:
          percent: 10
        mode: CONCURRENT_ZONES
      state: STARTED
      updateTime: '2019-12-09T23:05:36.421Z'
actions:
- define_reference:
    reference: api-version
    track_values:
      GA: v1
      BETA: v1beta
      ALPHA: v1alpha2
- define_reference:
    reference: zone
    value: us-central1-f
- execute_command:
    command: compute os-config patch-jobs execute
    events:
    - expect_stderr:
        matches: .*Exactly one of.*--instance-filter-all.*--instance-filter-group-labels.*must
          be specified.*
    - expect_exit:
        code: 1
        message:
          matches: .*Exactly one of.*--instance-filter-all.*--instance-filter-group-labels.*must
            be specified.*
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --instance-filter-zones="us-east1-b"
    events:
    - expect_stderr:
        matches: .*Exactly one of.*--instance-filter-all.*--instance-filter-zones.*must
          be specified.*
    - expect_exit:
        code: 1
        message:
          matches: .*Exactly one of.*--instance-filter-all.*--instance-filter-zones.*must
            be specified.*
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs:execute?alt=json
          method: POST
          headers: {}
          body:
            json:
              instanceFilter:
                all: true
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-01-01T12:00:00Z",
              "instanceFilter": {
                "all": true
              },
              "name": "projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c",
              "patchConfig": {},
              "state": "STARTED",
              "updateTime": "2019-12-09T23:05:36.421Z"
            }
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-01-01T12:00:00Z",
              "instanceFilter": {
                "all": true
              },
              "name": "projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c",
              "patchConfig": {},
              "state": "SUCCEEDED",
              "updateTime": "2019-12-09T23:05:36.421Z"
            }
        repeatable: true
    - expect_staged_progress_tracker:
        message: Executing patch job [68cb687a-de54-40dc-bdc3-c74ebc23346c]
        status: SUCCESS
    - expect_stderr:
        matches: Execution for patch job.*has completed with status \[SUCCEEDED\].*
    - expect_stdout: |
        createTime: '2019-01-01T12:00:00Z'
        instanceFilter:
          all: true
        name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
        patchConfig: {}
        state: SUCCEEDED
        updateTime: '2019-12-09T23:05:36.421Z'
    - expect_exit:
        code: 0
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs:execute?alt=json
          method: POST
          headers: {}
          body:
            json:
              instanceFilter:
                all: true
              patchConfig: {}
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-01-01T12:00:00Z",
              "instanceFilter": {
                "all": true
              },
              "name": "projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c",
              "patchConfig": {},
              "state": "STARTED",
              "updateTime": "2019-12-09T23:05:36.421Z"
            }
    - expect_stderr:
        matches: Execution in progress for patch job.*
    - expect_stdout: |
        createTime: '2019-01-01T12:00:00Z'
        instanceFilter:
          all: true
        name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
        patchConfig: {}
        state: STARTED
        updateTime: '2019-12-09T23:05:36.421Z'
    - expect_exit:
        code: 0
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-group-labels="env=dev,app=web"
      --instance-filter-group-labels="env=dev,app=worker" --async
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs:execute?alt=json
          method: POST
          headers: {}
          body:
            json:
              instanceFilter:
                groupLabels:
                - labels:
                    env: dev
                    app: web
                - labels:
                    env: dev
                    app: worker
              patchConfig: {}
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-01-01T12:00:00Z",
              "instanceFilter": {
                "groupLabels": [
                  {
                    "labels": {
                      "env": "dev",
                      "app": "web"
                    }
                  },
                  {
                    "labels": {
                      "env": "dev",
                      "app": "worker"
                    }
                  }
                ]
              },
              "name": "projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c",
              "patchConfig": {},
              "state": "STARTED",
              "updateTime": "2019-12-09T23:05:36.421Z"
            }
    - expect_stderr:
        matches: Execution in progress for patch job.*
    - expect_stdout: |
        createTime: '2019-01-01T12:00:00Z'
        instanceFilter:
          groupLabels:
          - labels:
              app: web
              env: dev
          - labels:
              app: worker
              env: dev
        name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
        patchConfig: {}
        state: STARTED
        updateTime: '2019-12-09T23:05:36.421Z'
    - expect_exit:
        code: 0
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --apt-excludes=123
      --apt-exclusive-packages=456
    events:
    - expect_stderr:
        matches: .*At most one of --apt-excludes.*--apt-exclusive-packages.*may be
          specified.*
    - expect_exit:
        code: 1
        message: 'argument --apt-excludes: At most one of --apt-excludes | --apt-exclusive-packages
          may be specified.'
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --yum-minimal
      --yum-exclusive-packages=123
    events:
    - expect_stderr:
        matches: .*At most one of --yum-exclusive-packages.*--yum-minimal.*may be
          specified.*
    - expect_exit:
        code: 1
        message: 'argument --yum-exclusive-packages: At most one of --yum-exclusive-packages
          | --yum-excludes --yum-minimal --yum-security may be specified.'
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --zypper-with-optional
      --zypper-exclusive-patches=123
    events:
    - expect_stderr:
        matches: .*At most one of --zypper-exclusive-patches.*--zypper-with-optional.*may
          be specified.*
    - expect_exit:
        code: 1
        message: 'argument --zypper-exclusive-patches: At most one of --zypper-exclusive-patches
          | --zypper-categories --zypper-severities --zypper-with-optional --zypper-with-update
          may be specified.'
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --apt-exclusive-packages="123"
      --windows-exclusive-patches=KB456 --yum-exclusive-packages=789 --zypper-exclusive-patches="abc"
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs:execute?alt=json
          method: POST
          headers: {}
          body:
            json:
              dryRun: false
              instanceFilter:
                all: true
              patchConfig:
                apt:
                  exclusivePackages:
                  - '123'
                  type: TYPE_UNSPECIFIED
                windowsUpdate:
                  exclusivePatches:
                  - KB456
                yum:
                  exclusivePackages:
                  - '789'
                  minimal: false
                  security: false
                zypper:
                  exclusivePatches:
                  - abc
                  withOptional: false
                  withUpdate: false
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-01-01T12:00:00Z",
              "instanceFilter": {
                "all": true
              },
              "name": "projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c",
              "patchConfig": {
                "apt": {
                  "exclusivePackages": ["123"]
                },
                "windowsUpdate": {
                  "exclusivePatches": ["KB456"]
                },
                "yum": {
                  "exclusivePackages": ["789"]
                },
                "zypper": {
                  "exclusivePatches": ["abc"]
                }
              },
              "state": "STARTED",
              "updateTime": "2019-12-09T23:05:36.421Z"
            }
    - expect_stderr:
        matches: Execution in progress for patch job.*
    - expect_stdout: |
        createTime: '2019-01-01T12:00:00Z'
        instanceFilter:
          all: true
        name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
        patchConfig:
          apt:
            exclusivePackages:
            - '123'
          windowsUpdate:
            exclusivePatches:
            - KB456
          yum:
            exclusivePackages:
            - '789'
          zypper:
            exclusivePatches:
            - abc
        state: STARTED
        updateTime: '2019-12-09T23:05:36.421Z'
    - expect_exit:
        code: 0
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --windows-excludes
      KB123,KB456 --yum-minimal --zypper-categories="security" --zypper-with-update
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs:execute?alt=json
          method: POST
          headers: {}
          body:
            json:
              dryRun: false
              instanceFilter:
                all: true
              patchConfig:
                windowsUpdate:
                  excludes:
                  - KB123
                  - KB456
                yum:
                  minimal: true
                  security: false
                zypper:
                  categories:
                  - security
                  withOptional: false
                  withUpdate: true
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-01-01T12:00:00Z",
              "instanceFilter": {
                "all": true
              },
              "name": "projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c",
              "patchConfig": {
                "windowsUpdate": {
                  "excludes": ["KB123", "KB456"]
                },
                "yum": {
                  "minimal": true,
                  "security": false
                },
                "zypper": {
                  "categories": ["security"],
                  "withOptional": false,
                  "withUpdate": true
                }
              },
              "state": "STARTED",
              "updateTime": "2019-12-09T23:05:36.421Z"
            }
    - expect_stderr:
        matches: Execution in progress for patch job.*
    - expect_stdout: |
        createTime: '2019-01-01T12:00:00Z'
        instanceFilter:
          all: true
        name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
        patchConfig:
          windowsUpdate:
            excludes:
            - KB123
            - KB456
          yum:
            minimal: true
            security: false
          zypper:
            categories:
            - security
            withOptional: false
            withUpdate: true
        state: STARTED
        updateTime: '2019-12-09T23:05:36.421Z'
    - expect_exit:
        code: 0
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --description="test
      execute" --display-name="Test Display Name" --dry-run --duration="10m"
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs:execute?alt=json
          method: POST
          headers: {}
          body:
            json:
              description: test execute
              displayName: Test Display Name
              dryRun: true
              duration: 600s
              instanceFilter:
                all: true
              patchConfig: {}
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-01-01T12:00:00Z",
              "description": "test execute",
              "displayName": "Test Display Name",
              "dryRun": true,
              "duration": "600s",
              "instanceFilter": {
                "all": true
              },
              "name": "projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c",
              "patchConfig": {},
              "state": "STARTED",
              "updateTime": "2019-12-09T23:05:36.421Z"
            }
    - expect_stderr:
        matches: Execution in progress for patch job.*
    - expect_stdout: |
        createTime: '2019-01-01T12:00:00Z'
        description: test execute
        displayName: Test Display Name
        dryRun: true
        duration: 600s
        instanceFilter:
          all: true
        name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
        patchConfig: {}
        state: STARTED
        updateTime: '2019-12-09T23:05:36.421Z'
    - expect_exit:
        code: 0
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --apt-dist
      --apt-excludes="123" --reboot-config="ALWAYS" --windows-classifications="critical,feature-pack"
      --windows-excludes KB123,KB456 --yum-excludes="789,987" --yum-minimal --yum-security
      --zypper-categories="security" --zypper-severities="critical" --zypper-with-optional
      --zypper-with-update --pre-patch-linux-executable="/bin/exec" --pre-patch-linux-success-codes="200"
      --pre-patch-windows-executable="gs://osconfig-cloud-sdk/test-script-windows#12345"
      --pre-patch-windows-success-codes=0,200 --post-patch-linux-executable="https://storage.googleapis.com/osconfig-cloud-sdk/test-script-linux#67890"
      --post-patch-linux-success-codes="0,200" --post-patch-windows-executable="C:/Users/tmp/test-script.ps1"
      --post-patch-windows-success-codes 0
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs:execute?alt=json
          method: POST
          headers: {}
          body:
            json:
              dryRun: false
              instanceFilter:
                all: true
              patchConfig:
                apt:
                  excludes:
                  - '123'
                  type: DIST
                postStep:
                  linuxExecStepConfig:
                    allowedSuccessCodes:
                    - 0
                    - 200
                    gcsObject:
                      bucket: osconfig-cloud-sdk
                      generationNumber: '67890'
                      object: test-script-linux
                    interpreter: INTERPRETER_UNSPECIFIED
                  windowsExecStepConfig:
                    allowedSuccessCodes:
                    - 0
                    interpreter: POWERSHELL
                    localPath: C:/Users/tmp/test-script.ps1
                preStep:
                  linuxExecStepConfig:
                    allowedSuccessCodes:
                    - 200
                    interpreter: INTERPRETER_UNSPECIFIED
                    localPath: /bin/exec
                  windowsExecStepConfig:
                    allowedSuccessCodes:
                    - 0
                    - 200
                    gcsObject:
                      bucket: osconfig-cloud-sdk
                      generationNumber: '12345'
                      object: test-script-windows
                    interpreter: SHELL
                rebootConfig: ALWAYS
                windowsUpdate:
                  classifications:
                  - CRITICAL
                  - FEATURE_PACK
                  excludes:
                  - KB123
                  - KB456
                yum:
                  excludes:
                  - '789'
                  - '987'
                  minimal: true
                  security: true
                zypper:
                  categories:
                  - security
                  severities:
                  - critical
                  withOptional: true
                  withUpdate: true
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-12-10T04:27:07.195Z",
              "filter": "id=*",
              "instanceFilter": {},
              "name": "projects/478365141514/patchJobs/e1d2f1bc-5d7b-4258-bfc8-97a8c424dbf3",
              "patchConfig": {
                "apt": {
                  "excludes": [
                    "123"
                  ],
                  "type": "DIST"
                },
                "postStep": {
                  "linuxExecStepConfig": {
                    "allowedSuccessCodes": [
                      0,
                      200
                    ],
                    "gcsObject": {
                      "bucket": "osconfig-cloud-sdk",
                      "generationNumber": "67890",
                      "object": "test-script-linux"
                    }
                  },
                  "windowsExecStepConfig": {
                    "allowedSuccessCodes": [
                      0
                    ],
                    "interpreter": "POWERSHELL",
                    "localPath": "C:/Users/tmp/test-script.ps1"
                  }
                },
                "preStep": {
                  "linuxExecStepConfig": {
                    "allowedSuccessCodes": [
                      200
                    ],
                    "localPath": "/bin/exec"
                  },
                  "windowsExecStepConfig": {
                    "allowedSuccessCodes": [
                      0,
                      200
                    ],
                    "gcsObject": {
                      "bucket": "osconfig-cloud-sdk",
                      "generationNumber": "12345",
                      "object": "test-script-windows"
                    },
                    "interpreter": "SHELL"
                  }
                },
                "rebootConfig": "ALWAYS",
                "windowsUpdate": {
                  "classifications": [
                    "CRITICAL",
                    "FEATURE_PACK"
                  ],
                  "excludes": [
                    "KB123",
                    "KB456"
                  ]
                },
                "yum": {
                  "excludes": [
                    "789",
                    "987"
                  ],
                  "minimal": true,
                  "security": true
                },
                "zypper": {
                  "categories": [
                    "security"
                  ],
                  "severities": [
                    "critical"
                  ],
                  "withOptional": true,
                  "withUpdate": true
                }
              },
              "state": "STARTED",
              "updateTime": "2019-12-10T04:27:07.195Z"
            }
    - expect_stderr:
        matches: Execution in progress for patch job.*
    - expect_stdout: |
        createTime: '2019-12-10T04:27:07.195Z'
        filter: id=*
        instanceFilter: {}
        name: projects/478365141514/patchJobs/e1d2f1bc-5d7b-4258-bfc8-97a8c424dbf3
        patchConfig:
          apt:
            excludes:
            - '123'
            type: DIST
          postStep:
            linuxExecStepConfig:
              allowedSuccessCodes:
              - 0
              - 200
              gcsObject:
                bucket: osconfig-cloud-sdk
                generationNumber: '67890'
                object: test-script-linux
            windowsExecStepConfig:
              allowedSuccessCodes:
              - 0
              interpreter: POWERSHELL
              localPath: C:/Users/tmp/test-script.ps1
          preStep:
            linuxExecStepConfig:
              allowedSuccessCodes:
              - 200
              localPath: /bin/exec
            windowsExecStepConfig:
              allowedSuccessCodes:
              - 0
              - 200
              gcsObject:
                bucket: osconfig-cloud-sdk
                generationNumber: '12345'
                object: test-script-windows
              interpreter: SHELL
          rebootConfig: ALWAYS
          windowsUpdate:
            classifications:
            - CRITICAL
            - FEATURE_PACK
            excludes:
            - KB123
            - KB456
          yum:
            excludes:
            - '789'
            - '987'
            minimal: true
            security: true
          zypper:
            categories:
            - security
            severities:
            - critical
            withOptional: true
            withUpdate: true
        state: STARTED
        updateTime: '2019-12-10T04:27:07.195Z'
    - expect_exit:
        code: 0
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --pre-patch-linux-success-codes="200"
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [pre-patch-linux-success-codes]: [pre-patch-linux-executable]
          must also be specified.'
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --pre-patch-linux-executable="gs://!@#$%^&*"
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [pre-patch-linux-executable]: The provided Google
          Cloud Storage path [gs://!@#$%^&*] is invalid.'
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --pre-patch-linux-executable="https://storage.googleapis.com/my-butcket/my-folder/my-object"
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [pre-patch-linux-executable]: The provided Google
          Cloud Storage path [https://storage.googleapis.com/my-butcket/my-folder/my-object]
          does not contain a valid generation number.'
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --rollout-mode=invalid-mode
    events:
    - expect_stderr:
        matches: .*argument --rollout-mode.*Invalid choice.*'invalid-mode'.*
    - expect_exit:
        code: 1
        message:
          matches: .*argument --rollout-mode.*Invalid choice.*'invalid-mode'.*
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --rollout-mode=zone-by-zone
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [rollout-mode]: [rollout-disruption-budget] or
          [rollout-disruption-budget-percent] must also be specified.'
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --rollout-disruption-budget=10
      --rollout-disruption-budget-percent=10
    events:
    - expect_stderr:
        matches: .*At most one of --rollout-disruption-budget.*--rollout-disruption-budget-percent
          may be specified.*
    - expect_exit:
        code: 1
        message:
          matches: .*At most one of --rollout-disruption-budget.*--rollout-disruption-budget-percent
            may be specified.*
- execute_command:
    command: compute os-config patch-jobs execute --instance-filter-all --async --rollout-mode=concurrent-zones
      --rollout-disruption-budget-percent=10
    events:
    - api_call:
        expect_request:
          uri: https://osconfig.googleapis.com/$$api-version$$/projects/fake-project/patchJobs:execute?alt=json
          method: POST
          headers: {}
          body:
            json:
              dryRun: false
              instanceFilter:
                all: true
              patchConfig: {}
              rollout:
                disruptionBudget:
                  percent: 10
                mode: CONCURRENT_ZONES
        return_response:
          headers: {}
          body: |
            {
              "createTime": "2019-01-01T12:00:00Z",
              "instanceFilter": {
                "all": true
              },
              "name": "projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c",
              "patchConfig": {},
              "rollout": {
                "disruptionBudget": {
                  "percent": 10
                },
                "mode": "CONCURRENT_ZONES"
              },
              "state": "STARTED",
              "updateTime": "2019-12-09T23:05:36.421Z"
            }
    - expect_stderr:
        matches: Execution in progress for patch job.*
    - expect_stdout: |
        createTime: '2019-01-01T12:00:00Z'
        instanceFilter:
          all: true
        name: projects/fake-project/patchJobs/68cb687a-de54-40dc-bdc3-c74ebc23346c
        patchConfig: {}
        rollout:
          disruptionBudget:
            percent: 10
          mode: CONCURRENT_ZONES
        state: STARTED
        updateTime: '2019-12-09T23:05:36.421Z'
    - expect_exit:
        code: 0
