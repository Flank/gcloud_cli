title: projects add-iam-policy-binding scenario test
release_tracks: [ALPHA]

actions:
- write_file:
    path: condition.json
    contents: |
      {
        "expression": "expr",
        "title": "title",
        "description": "descr"
      }
- write_file:
    path: condition.yaml
    contents: |
      expression: expr
      title: title
      description: descr

- write_file:
    path: condition_wrong_format.yaml
    contents: |
      expression: expr
      description: descr

# add binding without condition to a policy without condition
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/another-non-primitive",
                  "members": [
                    "user:owner@gmail.com"
                  ]
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/another-non-primitive'
                  members: ['user:owner@gmail.com']
                - role: 'roles/non-primitive'
                  members: ['user:test@gmail.com']
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/another-non-primitive",
                  "members": [
                    "user:owner@gmail.com"
                  ]
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ]
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - members:
          - user:owner@gmail.com
          role: roles/another-non-primitive
        - members:
          - user:test@gmail.com
          role: roles/non-primitive
        etag: etag
        version: 1
    - expect_exit:
        code: 0

# add binding without condition to a policy without condition, None condition
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition=None
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/another-non-primitive",
                  "members": [
                    "user:owner@gmail.com"
                  ]
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/another-non-primitive'
                  members: ['user:owner@gmail.com']
                - role: 'roles/non-primitive'
                  members: ['user:test@gmail.com']
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/another-non-primitive",
                  "members": [
                    "user:owner@gmail.com"
                  ]
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ]
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - members:
          - user:owner@gmail.com
          role: roles/another-non-primitive
        - members:
          - user:test@gmail.com
          role: roles/non-primitive
        etag: etag
        version: 1
    - expect_exit:
        code: 0

# add binding with condition to a policy without condition
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition='expression=request.time < timestamp("2019-01-01T00:00:00Z"),title=expires_end_of_2018'
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/another-non-primitive",
                  "members": [
                    "user:owner@gmail.com"
                  ]
                }
              ]
            }
    - expect_stderr: >+
        WARNING: Adding binding with condition to a policy without condition will change the behavior
        of add-iam-policy-binding and remove-iam-policy-binding commands.
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/another-non-primitive'
                  members: ['user:owner@gmail.com']
                - role: 'roles/non-primitive'
                  members: ['user:test@gmail.com']
                  condition:
                    expression: "request.time < timestamp(\"2019-01-01T00:00:00Z\")"
                    title: 'expires_end_of_2018'
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/another-non-primitive",
                  "members": [
                    "user:owner@gmail.com"
                  ]
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "request.time < timestamp(\"2019-01-01T00:00:00Z\")",
                    "title": "expires_end_of_2018"
                  }
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - members:
          - user:owner@gmail.com
          role: roles/another-non-primitive
        - condition:
            expression: request.time < timestamp("2019-01-01T00:00:00Z")
            title: expires_end_of_2018
          members:
          - user:test@gmail.com
          role: roles/non-primitive
        etag: etag
        version: 1
    - expect_exit:
        code: 0

# add binding with condition to a policy with condition, insert to members
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition='expression=expr,title=title,description=descr'
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": ["user:oldtest@gmail.com"],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/non-primitive'
                  members: ['user:oldtest@gmail.com', 'user:test@gmail.com']
                  condition:
                    expression: 'expr'
                    title: 'title'
                    description: 'descr'
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:oldtest@gmail.com",
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - condition:
            description: descr
            expression: expr
            title: title
          members:
          - user:oldtest@gmail.com
          - user:test@gmail.com
          role: roles/non-primitive
        etag: etag
        version: 1
    - expect_exit:
        code: 0

# add binding with condition to a policy with condition, create new binding
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition='expression=new_expr,title=new_title,description=new_descr'
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": ["user:oldtest@gmail.com"],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/non-primitive'
                  members: ['user:oldtest@gmail.com']
                  condition:
                    expression: 'expr'
                    title: 'title'
                    description: 'descr'
                - role: 'roles/non-primitive'
                  members: ['user:test@gmail.com']
                  condition:
                    expression: 'new_expr'
                    title: 'new_title'
                    description: 'new_descr'
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:oldtest@gmail.com"
                  ],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "new_expr",
                    "title": "new_title",
                    "description": "new_descr"
                  }
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - condition:
            description: descr
            expression: expr
            title: title
          members:
          - user:oldtest@gmail.com
          role: roles/non-primitive
        - condition:
            description: new_descr
            expression: new_expr
            title: new_title
          members:
          - user:test@gmail.com
          role: roles/non-primitive
        etag: etag
        version: 1
    - expect_exit:
        code: 0

# add binding with condition to a policy with condition, None condition
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition=None
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": ["user:oldtest@gmail.com"],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/non-primitive'
                  members: ['user:oldtest@gmail.com']
                  condition:
                    expression: 'expr'
                    title: 'title'
                    description: 'descr'
                - role: 'roles/non-primitive'
                  members: ['user:test@gmail.com']
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:oldtest@gmail.com"
                  ],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                },
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:test@gmail.com"
                  ]
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - condition:
            description: descr
            expression: expr
            title: title
          members:
          - user:oldtest@gmail.com
          role: roles/non-primitive
        - members:
          - user:test@gmail.com
          role: roles/non-primitive
        etag: etag
        version: 1
    - expect_exit:
        code: 0

# add binding with condition to a policy with condition, condition-from-file, JSON
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition-from-file=condition.json
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": ["user:oldtest@gmail.com"],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/non-primitive'
                  members: ['user:oldtest@gmail.com', 'user:test@gmail.com']
                  condition:
                    expression: 'expr'
                    title: 'title'
                    description: 'descr'
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:oldtest@gmail.com",
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - condition:
            description: descr
            expression: expr
            title: title
          members:
          - user:oldtest@gmail.com
          - user:test@gmail.com
          role: roles/non-primitive
        etag: etag
        version: 1
    - expect_exit:
        code: 0

# add binding with condition to a policy with condition, condition-from-file, YAML
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition-from-file=condition.yaml
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": ["user:oldtest@gmail.com"],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/non-primitive'
                  members: ['user:oldtest@gmail.com', 'user:test@gmail.com']
                  condition:
                    expression: 'expr'
                    title: 'title'
                    description: 'descr'
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/non-primitive",
                  "members": [
                    "user:oldtest@gmail.com",
                    "user:test@gmail.com"
                  ],
                  "condition": {
                    "expression": "expr",
                    "title": "title",
                    "description": "descr"
                  }
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - condition:
            description: descr
            expression: expr
            title: title
          members:
          - user:oldtest@gmail.com
          - user:test@gmail.com
          role: roles/non-primitive
        etag: etag
        version: 1
    - expect_exit:
        code: 0

# condition is from file, format is wrong
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition-from-file=condition_wrong_format.yaml
    events:
    - expect_exit:
        code: 1
        message: 'Invalid value for [condition-from-file]: condition-from-file must be a path to a YAML or JSON file containing the condition. `expression` and `title` are required keys. `description` is optional. To specify a `None` condition, use --condition=None.'

# condition, format is wrong
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/non-primitive --condition=expression=expr,description=descr
    events:
    - expect_exit:
        code: 1
        message: |-
          Invalid value for [condition]: condition must be either `None` or a list of key=value pairs. If not `None`, `expression` and `title` are required keys.
          Example: --condition=expression=[expression],title=[title],description=[description]

# error when binding has condition and a primitive role
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/editor --condition=expression=expr,title=title,description=descr
    events:
    - expect_exit:
        code: 1
        message: |-
          Binding with a condition and a primitive role is not allowed. Primitive roles are `roles/editor`, `roles/owner`, and `roles/viewer`.

# binding has None condition and a primitive role
- execute_command:
    command: projects add-iam-policy-binding test-project --member=user:test@gmail.com --role=roles/editor --condition=None
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:getIamPolicy?alt=json
          method: POST
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:owner@gmail.com"
                  ]
                }
              ]
            }
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/projects/test-project:setIamPolicy?alt=json
          method: POST
          body:
            json:
              policy:
                bindings:
                - role: 'roles/owner'
                  members: ['user:owner@gmail.com']
                - role: 'roles/editor'
                  members: ['user:test@gmail.com']
                etag: 'etag'
                version: 1
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "version": 1,
              "etag": "etag",
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:owner@gmail.com"
                  ]
                },
                {
                  "role": "roles/editor",
                  "members": [
                    "user:test@gmail.com"
                  ]
                }
              ]
            }
    - expect_stderr: |
        Updated IAM policy for project [test-project].
    - expect_stdout: |
        bindings:
        - members:
          - user:owner@gmail.com
          role: roles/owner
        - members:
          - user:test@gmail.com
          role: roles/editor
        etag: etag
        version: 1
    - expect_exit:
        code: 0
