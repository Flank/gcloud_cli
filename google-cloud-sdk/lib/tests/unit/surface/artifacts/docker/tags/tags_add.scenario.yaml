title: artifacts docker tags add
release_tracks: [ALPHA, BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/my-image:a-tag
      us-west1-docker.pkg.dev/my-project/docker-repo/my-image:brand-new-tag
  - stderr: |
      Added tag [us-west1-docker.pkg.dev/my-project/docker-repo/my-image:brand-new-tag] to image [us-west1-docker.pkg.dev/my-project/docker-repo/my-image:a-tag].
- execute:
  - command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/my-image@sha256:abcxyz
      us-west1-docker.pkg.dev/my-project/docker-repo/my-image:existing-tag
  - stderr: |
      Added tag [us-west1-docker.pkg.dev/my-project/docker-repo/my-image:existing-tag] to image [us-west1-docker.pkg.dev/my-project/docker-repo/my-image@sha256:abcxyz].
- execute:
  - command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/nested1/nested2/my-image:a-tag
      us-west1-docker.pkg.dev/my-project/docker-repo/nested1/nested2/my-image:new-tag
  - stderr: |
      Added tag [us-west1-docker.pkg.dev/my-project/docker-repo/nested1/nested2/my-image:new-tag] to image [us-west1-docker.pkg.dev/my-project/docker-repo/nested1/nested2/my-image:a-tag].
- execute:
  - command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/my-image@sha256:abcxyz
      existing-tag
  - error: '1: ^Invalid Docker tag..*$'
- execute:
  - command: artifacts docker tags add us-west1-docker.pkg.dev//docker-repo/my-image:abcxyz
      us-west1-docker.pkg.dev/my-project/docker-repo/my-image:a-tag
  - error: '1: ^Invalid Docker image..*$'
- execute:
  - command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/my-image:abcxyz
      us-west1-docker.pkg.dev/my-project/docker-repo/my-image@sha256not-a-tag
  - error: '1: ^Invalid Docker tag..*$'
- execute:
  - command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/not-docker-repo/my-image:abcxyz
      us-west1-docker.pkg.dev/my-project/not-docker-repo/my-image:a-tag
  - error: '1: ^Invalid repository type NPM. The `artifacts docker` command group.*$'
actions:
- execute_command:
    command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/my-image:a-tag
      us-west1-docker.pkg.dev/my-project/docker-repo/my-image:brand-new-tag
    events:
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/my-project/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/my-project/locations/us-west1/repositories/docker-repo",
              "format": "DOCKER"
            }
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags/a-tag?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags/a-tag",
              "version": "projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/versions/sha256:abcxyz"
            }
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags/brand-new-tag?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: |
            {
              "error": {
                "code": 404,
                "message": "Requested entity was not found.",
                "status": "NOT_FOUND",
                "details": [
                  {
                    "@type": "type.googleapis.com/google.rpc.DebugInfo",
                    "detail": "[ORIGINAL ERROR] generic::not_found: tag not found: namespaces/my-project/repositories/docker-repo/packages/my-image/tags/brand-new-tag"
                  }
                ]
              }
            }
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags?alt=json&tagId=brand-new-tag
          method: POST
          headers: {}
          body:
            json:
              name: projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags/brand-new-tag
              version: projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/versions/sha256:abcxyz
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stderr: |
        Added tag [us-west1-docker.pkg.dev/my-project/docker-repo/my-image:brand-new-tag] to image [us-west1-docker.pkg.dev/my-project/docker-repo/my-image:a-tag].
    - expect_exit:
        code: 0
- execute_command:
    command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/my-image@sha256:abcxyz
      us-west1-docker.pkg.dev/my-project/docker-repo/my-image:existing-tag
    events:
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/my-project/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/my-project/locations/us-west1/repositories/docker-repo",
              "format": "DOCKER"
            }
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags/existing-tag?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags/existing-tag",
              "version": "projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/versions/sha256:potato"
            }
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags/existing-tag?alt=json
          method: DELETE
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: {}
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags?alt=json&tagId=existing-tag
          method: POST
          headers: {}
          body:
            json:
              name: projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/tags/existing-tag
              version: projects/my-project/locations/us-west1/repositories/docker-repo/packages/my-image/versions/sha256:abcxyz
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stderr: |
        Added tag [us-west1-docker.pkg.dev/my-project/docker-repo/my-image:existing-tag] to image [us-west1-docker.pkg.dev/my-project/docker-repo/my-image@sha256:abcxyz].
    - expect_exit:
        code: 0
- execute_command:
    command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/nested1/nested2/my-image:a-tag
      us-west1-docker.pkg.dev/my-project/docker-repo/nested1/nested2/my-image:new-tag
    events:
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/my-project/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/my-project/locations/us-west1/repositories/docker-repo",
              "format": "DOCKER"
            }
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/nested1%252Fnested2%252Fmy-image/tags/a-tag?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/my-project/locations/us-west1/repositories/docker-repo/packages/nested1%2Fnested2%2Fmy-image/tags/a-tag",
              "version": "projects/my-project/locations/us-west1/repositories/docker-repo/packages/nested1%2Fnested2%2Fmy-image/versions/sha256:abcxyz"
            }
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/nested1%252Fnested2%252Fmy-image/tags/new-tag?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '404'
          body: |
            {
              "error": {
                "code": 404,
                "message": "Requested entity was not found.",
                "status": "NOT_FOUND",
                "details": [
                  {
                    "@type": "type.googleapis.com/google.rpc.DebugInfo",
                    "detail": "[ORIGINAL ERROR] generic::not_found: tag not found: namespaces/my-project/repositories/docker-repo/packages/nested1%252Fnested2%252Fmy-image/tags/new-tag"
                  }
                ]
              }
            }
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/docker-repo/packages/nested1%252Fnested2%252Fmy-image/tags?alt=json&tagId=new-tag
          method: POST
          headers: {}
          body:
            json:
              name: projects/my-project/locations/us-west1/repositories/docker-repo/packages/nested1%2Fnested2%2Fmy-image/tags/new-tag
              version: projects/my-project/locations/us-west1/repositories/docker-repo/packages/nested1%2Fnested2%2Fmy-image/versions/sha256:abcxyz
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stderr: |
        Added tag [us-west1-docker.pkg.dev/my-project/docker-repo/nested1/nested2/my-image:new-tag] to image [us-west1-docker.pkg.dev/my-project/docker-repo/nested1/nested2/my-image:a-tag].
    - expect_exit:
        code: 0
- execute_command:
    command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/my-image@sha256:abcxyz
      existing-tag
    events:
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/my-project/locations/us-west1
              locationId: us-west1
    - expect_exit:
        code: 1
        message:
          matches: ^Invalid Docker tag..*
- execute_command:
    command: artifacts docker tags add us-west1-docker.pkg.dev//docker-repo/my-image:abcxyz
      us-west1-docker.pkg.dev/my-project/docker-repo/my-image:a-tag
    events:
    - expect_exit:
        code: 1
        message:
          matches: ^Invalid Docker image..*
- execute_command:
    command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/docker-repo/my-image:abcxyz
      us-west1-docker.pkg.dev/my-project/docker-repo/my-image@sha256not-a-tag
    events:
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/my-project/locations/us-west1
              locationId: us-west1
    - expect_exit:
        code: 1
        message:
          matches: ^Invalid Docker tag..*
- execute_command:
    command: artifacts docker tags add us-west1-docker.pkg.dev/my-project/not-docker-repo/my-image:abcxyz
      us-west1-docker.pkg.dev/my-project/not-docker-repo/my-image:a-tag
    events:
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            locations:
            - name: projects/my-project/locations/us-west1
              locationId: us-west1
    - api_call:
        expect_request:
          uri: https://artifactregistry.googleapis.com/v1beta1/projects/my-project/locations/us-west1/repositories/not-docker-repo?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/my-project/locations/us-west1/repositories/not-docker-repo",
              "format": "NPM"
            }
    - expect_exit:
        code: 1
        message:
          matches: ^Invalid repository type NPM. The `artifacts docker` command group.*
