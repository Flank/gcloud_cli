title: OrgPolicy - Enable Enforce with Alias Conditions test
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: org-policies enable-enforce iam.disableServiceAccountCreation --condition='resource.match("env",
      "dev")' --project='gcloud-demo-proj-orgpolicy' --label-parent='organizations/123'
  - error: '1: Label condition must be of the form: resource.matchLabels("label_key_input",
      "label_value_input").'
- execute:
  - command: org-policies enable-enforce iam.disableServiceAccountCreation --condition='resource.matchLabels("labelKeys/123",
      "labelValues/111")' --project='gcloud-demo-proj-orgpolicy' --label-parent='organizations/123'
  - error: '1: Invalid display_name for LabelKey [labelKeys/123] in parent [organizations/123].
      Note that if you are using a LabelKey ID and LabelValue ID, do not set the --label-parent
      flag.'
- execute:
  - command: org-policies enable-enforce iam.disableServiceAccountCreation --condition='resource.matchLabels("env",
      "dev")' --project='gcloud-demo-proj-orgpolicy' --label-parent='organizations/123'
  - stderr: |
      Updated policy [projects/gcloud-demo-proj-orgpolicy/policies/iam.disableServiceAccountCreation].
  - stdout: |
      spec:
        name: projects/gcloud-demo-proj-orgpolicy/policies/iam.disableServiceAccountCreation
        rules:
        - condition:
            expression: resource.matchLabels('labelKeys/123', 'labelValues/111')
          enforce: true
        - enforce: false

actions:
- execute_command:
    command: org-policies enable-enforce iam.disableServiceAccountCreation --condition='resource.match("env",
      "dev")' --project='gcloud-demo-proj-orgpolicy' --label-parent='organizations/123'
    events:
    - expect_exit:
        code: 1
        message: |-
          Label condition must be of the form: resource.matchLabels("label_key_input", "label_value_input").
- execute_command:
    command: org-policies enable-enforce iam.disableServiceAccountCreation --condition='resource.matchLabels("labelKeys/123",
      "labelValues/111")' --project='gcloud-demo-proj-orgpolicy' --label-parent='organizations/123'
    events:
    - api_call:
        expect_request:
          uri: https://labelmanager.googleapis.com/v1alpha1/labelKeys?alt=json&parent=organizations%2F123&showDeleted=True
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            keys:
            - displayName: env
              name: labelKeys/123
    - expect_exit:
        code: 1
        message: Invalid display_name for LabelKey [labelKeys/123] in parent [organizations/123].
          Note that if you are using a LabelKey ID and LabelValue ID, do not set the
          --label-parent flag.
- execute_command:
    command: org-policies enable-enforce iam.disableServiceAccountCreation --condition='resource.matchLabels("env",
      "dev")' --project='gcloud-demo-proj-orgpolicy' --label-parent='organizations/123'
    events:
    - api_call:
        expect_request:
          uri: https://labelmanager.googleapis.com/v1alpha1/labelKeys?alt=json&parent=organizations%2F123&showDeleted=True
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            keys:
            - displayName: env
              name: labelKeys/123
    - api_call:
        expect_request:
          uri: https://labelmanager.googleapis.com/v1alpha1/labelValues?alt=json&parent=labelKeys%2F123&showDeleted=True
          method: GET
          body: None
        return_response:
          headers:
            status: '200'
          body:
            values:
            - displayName: dev
              name: labelValues/111
            - displayName: prod
              name: labelValues/112
    - api_call:
        expect_request:
          uri: https://orgpolicy.googleapis.com/v2alpha1/projects/gcloud-demo-proj-orgpolicy/policies/iam.disableServiceAccountCreation?alt=json
          method: GET
          body: None
        return_response:
          headers:
            status: '200'
          body: |
            {
              "spec": {
                "name": "projects/2222/policies/iam.disableServiceAccountCreation",
                "rules": [
                  {
                    "enforce": false
                  }
                ]
              }
            }
    - api_call:
        expect_request:
          uri: https://orgpolicy.googleapis.com/v2alpha1/projects/gcloud-demo-proj-orgpolicy/policies/iam.disableServiceAccountCreation?alt=json&forceUnconditionalWrite=False
          method: PATCH
          body:
            text: |-
              {"spec": {"name": "projects/2222/policies/iam.disableServiceAccountCreation", "rules": [{"enforce": false}, {"condition": {"expression": "resource.matchLabels('labelKeys/123', 'labelValues/111')"}, "enforce": true}]}}
        return_response:
          headers:
            status: '200'
          body: |
            {
              "spec": {
                "name": "projects/gcloud-demo-proj-orgpolicy/policies/iam.disableServiceAccountCreation",
                "rules": [
                  {
                    "enforce": true,
                    "condition": {
                      "expression": "resource.matchLabels('labelKeys/123', 'labelValues/111')"
                    }
                  },
                  {
                    "enforce": false
                  }
                ]
              }
            }
    - expect_stderr: |
        Updated policy [projects/gcloud-demo-proj-orgpolicy/policies/iam.disableServiceAccountCreation].
    - expect_stdout: |
        spec:
          name: projects/gcloud-demo-proj-orgpolicy/policies/iam.disableServiceAccountCreation
          rules:
          - condition:
              expression: resource.matchLabels('labelKeys/123', 'labelValues/111')
            enforce: true
          - enforce: false
    - expect_exit:
        code: 0
