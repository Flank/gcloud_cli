title: Unit test for detect product
release_tracks: [ALPHA, BETA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: ml vision detect-product gs://my-bucket/my-image.jpg --product-set='my-product-set'
      --product-set-location='us-east1' --bounding-polygon='0.1,0.2,0.3,0.4' --category='apparel'
      --filter='(color = red OR color = blue) AND brand = Google' --max-results=100
  - stdout: |
      []
- execute:
  - command: ml vision detect-product image.png --product-set='my-product-set' --product-set-location='us-east1'
      --bounding-polygon='0,0,10,10' --category='apparel' --filter='(color = red OR
      color = blue) AND brand = Google' --max-results=100
  - stdout: |
      []
actions:
- write_file:
    path: image.png
    binary_contents: image
- execute_command:
    command: ml vision detect-product gs://my-bucket/my-image.jpg --product-set='my-product-set'
      --product-set-location='us-east1' --bounding-polygon='0.1,0.2,0.3,0.4' --category='apparel'
      --filter='(color = red OR color = blue) AND brand = Google' --max-results=100
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/images:annotate?alt=json
          method: POST
          headers: {}
          body:
            json:
              requests:
              - features:
                - maxResults: 100
                  type: PRODUCT_SEARCH
                image:
                  source:
                    imageUri: gs://my-bucket/my-image.jpg
                imageContext:
                  productSearchParams:
                    boundingPoly:
                      normalizedVertices:
                      - x: 0.1
                        y: 0.2
                      - x: 0.3
                        y: 0.4
                    filter: (color = red OR color = blue) AND brand = Google
                    productCategories:
                    - apparel
                    productSet: projects/fake-project/locations/us-east1/productSets/my-product-set
        return_response:
          headers:
            status: '200'
          body: |
            {
                "responses": [
                    {
                        "productSearchResults": {
                            "indexTime": "2019-04-17T19:47:08+00:00",
                            "results": [
                                {
                                    "image": "image.png"
                                }
                            ]
                        }
                    }
                ]
            }
    - expect_stdout: |
        []
    - expect_exit:
        code: 0
- execute_command:
    command: ml vision detect-product image.png --product-set='my-product-set' --product-set-location='us-east1'
      --bounding-polygon='0,0,10,10' --category='apparel' --filter='(color = red OR
      color = blue) AND brand = Google' --max-results=100
    events:
    - api_call:
        expect_request:
          uri: https://vision.googleapis.com/v1/images:annotate?alt=json
          method: POST
          headers: {}
          body:
            json:
              requests:
              - features:
                - maxResults: 100
                  type: PRODUCT_SEARCH
                image:
                  content: aW1hZ2U=
                imageContext:
                  productSearchParams:
                    boundingPoly:
                      vertices:
                      - x: 0
                        y: 0
                      - x: 10
                        y: 10
                    filter: (color = red OR color = blue) AND brand = Google
                    productCategories:
                    - apparel
                    productSet: projects/fake-project/locations/us-east1/productSets/my-product-set
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stdout: |
        []
    - expect_exit:
        code: 0
