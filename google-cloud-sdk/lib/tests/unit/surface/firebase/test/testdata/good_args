# Valid arg groups for unit tests

test-override:
  results-bucket: gs://arg-file-bucket

my-group:
  type: instrumentation
  test: startrek.apk
  locales: [klingon, romulan]
  results-dir: my/results/dir
  robo-directives:
    resource1: value1
    'text:resource2': 2
    'click:resource3': ''
  test-targets: ['package kirk', 'class enterprise.spock']

android-instr:
  app: other-app.apk
  test: path/to/test.apk
  results-bucket: bucket-list
  results-dir: duh
  timeout: 10m
  async: yes
  auto-google-login: off
  use-orchestrator: false
  device: [{model: Universe3, orientation: askew, locale: ro}]
  other-files: {/sdcard/dir1/file.txt: path/to/other-file.txt}

ios-group:
  type: xctest
  results-bucket: gs://bucket2
  results-dir: my/ios/results
  results-history-name: history2
  timeout: 25m
  xctestrun-file: .xctestrun2
  xcode-version: 9.1.1
  test-special-entitlements: no

ios-xctest:
  type: xctest
  test: my_bundle.zip
  results-dir: dir9
  timeout: 10m
  async: yes
  include: ios-device

ios-device:
  device:
    - model: 'iPen3'
      version: '7.2'
      locale: 'kl'
      orientation: 'askew'

one.obb:
  obb-files: gs://dir1/dir2/file.obb

two.obb:
  obb-files:
    - file1.obb
    - file2.obb

directories-to-pull.list:
  directories-to-pull: ['/sdcard/tempDirUno', '/sdcard/tempDirDos']

directories-to-pull.string:
  directories-to-pull: "/singleStringPath"

environment-variables.good:
  environment-variables:
    e1: value1
    e2: value2

sparse-terse1:  # Terse device list with terse maps notation
  device: [{model: Nexus5}, {model: sailfish}, {model: shamu}]

sparse-terse2:  # Device list with terse maps notation
  device:
    - {model: NexusLowRes, version: 23, locale: es, orientation: landscape}
    - {model: shamu}
    - {version: 5.1.x, locale: zh}

sparse-verbose:  # Verbose list with verbose maps notation
  device:
    - model: m1
      version: v1
      locale: l1
      orientation: o1
    - model: m2
      version: v2
      locale: l2
      orientation: o2

sparse-empty:
  device: [{}]  # should produce a device with defaults for all dimensions

ios-terse:  # Terse device list with terse maps notation
  device: [{model: iphone8se}, {model: ipad, version: ios9}]

use-orchestrator-true:
  use-orchestrator: true

use-orchestrator-false:
  use-orchestrator: false

use-orchestrator-unspecified:

robo-script.local:
  robo-script: local/dir/robo_script.json

robo-script.gcs:
  robo-script: gs://bucket/robo_script.json

additional-apks.two:
  additional-apks: ['local/dir/apk1.apk', 'gs://bucket/apk2.apk']

additional-ipas.two:
  additional-ipas: ['local/dir/ipa1.ipa', 'gs://bucket/ipa2.ipa']

other-files.good:
  other-files:
    /sdcard/dir1/file.txt: local/dir/file1.txt
    '/sdcard/dir2/file.txt': 'gs://bucket/file2.txt'

client-details.good:
  client-details:
    k1: v1
    k2: v2

test-targets-for-shard.good:
  test-targets-for-shard:
    - class com.ClassForShard1#flakyTest1;class com.ClassForShard1#flakyTest2
    - class com.ClassForShard2#flakyTest3,com.ClassForShard2#flakyTest4

num-uniform-shards.good:
  num-uniform-shards: 2

grant-permissions.good:
  grant-permissions: none
