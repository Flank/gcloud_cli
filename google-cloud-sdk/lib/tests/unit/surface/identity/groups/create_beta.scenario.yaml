# Copyright 2020 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
title: cloud identity groups create test scenario
release_tracks: [BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - label: Create a group.
  - command: |
      identity groups create eng-discuss@foo.com --organization 433637338589
      --with-initial-owner WITH_INITIAL_OWNER
      --display-name "Engineer Discuss" --description "Group for engineering discussions"
      --labels "cloudidentity.googleapis.com/groups.discussion_forum"
  - stderr: |
      Created.
- execute:
  - label: Create a group - Labels with value. (Not applicable for now but in the
      future)
  - command: |
      identity groups create eng-discuss@foo.com --organization 433637338589
      --with-initial-owner WITH_INITIAL_OWNER
      --display-name "Engineer Discuss" --description "Group for engineering discussions"
      --labels "cloudidentity.googleapis.com/groups.discussion_forum=some_value"
  - stderr: |
      Created.
- execute:
  - label: Create a group - Multiple labels. (For alpha/beta version, it is not supported.)
  - command: |
      identity groups create eng-discuss@foo.com --organization 433637338589
      --with-initial-owner WITH_INITIAL_OWNER
      --display-name "Engineer Discuss" --description "Group for engineering discussions"
      --labels "cloudidentity.googleapis.com/security,cloudidentity.googleapis.com/groups.discussion_forum"
  - error: |-
      1: INVALID_ARGUMENT: Request contains an invalid argument.
      - '@type': type.googleapis.com/google.rpc.DebugInfo
        detail: '[ORIGINAL ERROR] generic::invalid_argument: com.google.apps.framework.request.BadRequestException:
          One and only one label is supported.'
- execute:
  - label: Create a group - Invalid labels format throws an error.
  - command: |
      identity groups create eng-discuss@foo.com --organization 433637338589
      --with-initial-owner WITH_INITIAL_OWNER
      --display-name "Engineer Discuss" --description "Group for engineering discussions"
      --labels "invalid_labels=some_value="
  - error: '1: Invalid value for [labels]: Invalid format of label string has been
      input. Label: invalid_labels=some_value='
- execute:
  - command: |
      identity groups create unit-test@foo.com --organization 123456
      --with-initial-owner empty
      --display-name "DG Unit Test" --description "DG Unit Test"
      --dynamic-user-query "user.organizations.exists(org, org.title=='swe')"
      --labels "cloudidentity.googleapis.com/groups.discussion_forum"
  - stderr: |
      Created.
actions:

- execute_command:
    label: Create a group.
    command: |
      identity groups create eng-discuss@foo.com --organization 433637338589
      --with-initial-owner WITH_INITIAL_OWNER
      --display-name "Engineer Discuss" --description "Group for engineering discussions"
      --labels "cloudidentity.googleapis.com/groups.discussion_forum"
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/organizations/433637338589?alt=json
          method: GET
          headers: {}
          body: |-
            {}
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "displayName": "google.com",
              "owner": {
                "directoryCustomerId": "C02h8e9nw"
              },
              "creationTime": "2015-09-09T19:34:18.591Z",
              "lifecycleState": "ACTIVE",
              "name": "organizations/433637338589"
            }
    - api_call:
        expect_request:
          uri: https://cloudidentity.googleapis.com/v1beta1/groups?alt=json&initialGroupConfig=WITH_INITIAL_OWNER
          method: POST
          headers: {}
          body: |-
            {
              resource: {
                group_key: {
                  id: "eng-discuss@foo.com"
                },
                parent: "customerId/C02h8e9nw",
                display_name: "eng-discuss",
                labels: {
                  "cloudidentity.googleapis.com/groups.discussion_forum": ""
                },
              },
              initial_group_config: WITH_INITIAL_OWNER
            }
        return_response:
          headers:
            status: '200'
          body: |
            {
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.apps.cloudidentity.groups.v1beta1.Group",
                "name": "groups/03rh36l18fo5tvk",
                "groupKey": {
                  "id": "eng-discuss@foo.com"
                },
                "parent": "customerId/C02h8e9nw",
                "displayName": "Engineer Discuss",
                "description": "Group for engineering discussions",
                "createTime": "2015-09-09T19:34:18.591Z",
                "updateTime": "2015-09-09T19:34:18.591Z",
                "labels": {
                  "cloudidentity.googleapis.com/groups.discussion_forum": ""
                }
              }
            }
    - expect_stderr: |
        Created.
    - expect_exit:
        code: 0
- execute_command:
    label: Create a group - Labels with value. (Not applicable for now but in the
      future)
    command: |
      identity groups create eng-discuss@foo.com --organization 433637338589
      --with-initial-owner WITH_INITIAL_OWNER
      --display-name "Engineer Discuss" --description "Group for engineering discussions"
      --labels "cloudidentity.googleapis.com/groups.discussion_forum=some_value"
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/organizations/433637338589?alt=json
          method: GET
          headers: {}
          body: |-
            {}
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "displayName": "google.com",
              "owner": {
                "directoryCustomerId": "C02h8e9nw"
              },
              "creationTime": "2015-09-09T19:34:18.591Z",
              "lifecycleState": "ACTIVE",
              "name": "organizations/433637338589"
            }
    - api_call:
        expect_request:
          uri: https://cloudidentity.googleapis.com/v1beta1/groups?alt=json&initialGroupConfig=WITH_INITIAL_OWNER
          method: POST
          headers: {}
          body: |-
            {
              resource: {
                group_key: {
                  id: "eng-discuss@foo.com"
                },
                parent: "customerId/C02h8e9nw",
                display_name: "eng-discuss",
                labels: {
                  "cloudidentity.googleapis.com/groups.discussion_forum": "some_value"
                },
              },
              initial_group_config: WITH_INITIAL_OWNER
            }
        return_response:
          headers:
            status: '200'
          body: |
            {
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.apps.cloudidentity.groups.v1beta1.Group",
                "name": "groups/03rh36l18fo5tvk",
                "groupKey": {
                  "id": "eng-discuss@foo.com"
                },
                "parent": "customerId/C02h8e9nw",
                "displayName": "Engineer Discuss",
                "description": "Group for engineering discussions",
                "createTime": "2015-09-09T19:34:18.591Z",
                "updateTime": "2015-09-09T19:34:18.591Z",
                "labels": {
                  "cloudidentity.googleapis.com/groups.discussion_forum": "some_value"
                }
              }
            }
    - expect_stderr: |
        Created.
    - expect_exit:
        code: 0

- execute_command:
    label: Create a group - Multiple labels. (For alpha/beta version, it is not supported.)
    command: |
      identity groups create eng-discuss@foo.com --organization 433637338589
      --with-initial-owner WITH_INITIAL_OWNER
      --display-name "Engineer Discuss" --description "Group for engineering discussions"
      --labels "cloudidentity.googleapis.com/security,cloudidentity.googleapis.com/groups.discussion_forum"

    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/organizations/433637338589?alt=json
          method: GET
          headers: {}
          body: |-
            {}
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "displayName": "google.com",
              "owner": {
                "directoryCustomerId": "C02h8e9nw"
              },
              "creationTime": "2015-09-09T19:34:18.591Z",
              "lifecycleState": "ACTIVE",
              "name": "organizations/433637338589"
            }
    - api_call:
        expect_request:
          uri: https://cloudidentity.googleapis.com/v1beta1/groups?alt=json&initialGroupConfig=WITH_INITIAL_OWNER
          method: POST
          headers: {}
          body: |-
            {
              resource: {
                group_key: {
                  id: "eng-discuss@foo.com"
                },
                parent: "customerId/C02h8e9nw",
                display_name: "eng-discuss",
                labels: {
                  "cloudidentity.googleapis.com/groups.discussion_forum": "",
                  "cloudidentity.googleapis.com/security": ""
                },
              },
              initial_group_config: WITH_INITIAL_OWNER
            }
        return_response:
          headers:
            status: '400'
          body: |
            {
              "error": {
                "code": 400,
                "message": "Request contains an invalid argument.",
                "status": "INVALID_ARGUMENT",
                "details": [
                  {
                    "@type": "type.googleapis.com/google.rpc.DebugInfo",
                    "detail": "[ORIGINAL ERROR] generic::invalid_argument: com.google.apps.framework.request.BadRequestException: One and only one label is supported."
                  }
                ]
              }
            }
    - expect_exit:
        code: 1
        message: |-
          INVALID_ARGUMENT: Request contains an invalid argument.
          - '@type': type.googleapis.com/google.rpc.DebugInfo
            detail: '[ORIGINAL ERROR] generic::invalid_argument: com.google.apps.framework.request.BadRequestException:
              One and only one label is supported.'

- execute_command:
    label: Create a group - Invalid labels format throws an error.
    command: |
      identity groups create eng-discuss@foo.com --organization 433637338589
      --with-initial-owner WITH_INITIAL_OWNER
      --display-name "Engineer Discuss" --description "Group for engineering discussions"
      --labels "invalid_labels=some_value="

    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/organizations/433637338589?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "displayName": "google.com",
              "owner": {
                "directoryCustomerId": "C02h8e9nw"
              },
              "creationTime": "2015-09-09T19:34:18.591Z",
              "lifecycleState": "ACTIVE",
              "name": "organizations/433637338589"
            }
    - expect_exit:
        code: 1
        message: 'Invalid value for [labels]: Invalid format of label string has been
          input. Label: invalid_labels=some_value='
- execute_command:
    command: |
      identity groups create unit-test@foo.com --organization 123456
      --with-initial-owner empty
      --display-name "DG Unit Test" --description "DG Unit Test"
      --dynamic-user-query "user.organizations.exists(org, org.title=='swe')"
      --labels "cloudidentity.googleapis.com/groups.discussion_forum"
    events:
    - api_call:
        expect_request:
          uri: https://cloudresourcemanager.googleapis.com/v1/organizations/123456?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "displayName": "foo.com",
              "owner": {
                "directoryCustomerId": "C04acbcde"
              },
              "creationTime": "2020-03-03T08:23:57.973Z",
              "lifecycleState": "ACTIVE",
              "name": "organizations/123456"
            }
    - api_call:
        expect_request:
          uri: https://cloudidentity.googleapis.com/v1beta1/groups?alt=json&initialGroupConfig=EMPTY
          method: POST
          headers: {}
          body:
            json:
              description: DG Unit Test
              displayName: DG Unit Test
              dynamicGroupMetadata:
                queries:
                - query: user.organizations.exists(org, org.title=='swe')
                  resourceType: USER
              groupKey:
                id: unit-test@foo.com
              labels:
                cloudidentity.googleapis.com/groups.discussion_forum: ''
              parent: customerId/C04acbcde
        return_response:
          headers:
            status: '200'
          body: |-
            {
               "done": true,
               "response": {
                 "@type": "type.googleapis.com/google.apps.cloudidentity.groups.v1beta1.Group",
                 "name": "groups/028h4qwu1xx6j6y",
                 "groupKey": {
                    "id": "unit-test-1@dynamic-gae.bigr.name"
                 },
                 "parent": "customerId/C04acbcde",
                 "displayName": "DG Unit Test",
                 "description": "DG Unit Test",
                 "createTime": "2020-03-12T03:55:59.416016Z",
                 "updateTime": "2020-03-12T03:55:59.416016Z",
                 "labels": {
                   "cloudidentity.googleapis.com/groups.discussion_forum": "",
                   "cloudidentity.googleapis.com/groups.dynamic_group": ""
                 },
                 "dynamicGroupMetadata": {
                   "queries": [
                     {
                       "resourceType": "USER",
                       "query": "user.organizations.exists(org, org.title=='swe')"
                     }
                   ]
                 }
               }
            }
    - expect_stderr: |
        Created.
    - expect_exit:
        code: 0
