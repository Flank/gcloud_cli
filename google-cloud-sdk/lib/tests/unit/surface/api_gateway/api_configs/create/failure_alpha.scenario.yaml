# Disabiling trailing spaces rule since the linter sees an extra space in string below that is
# required for tests to pass
# yamllint disable rule:trailing-spaces
title: Cloud API Gateway Api Config Create failure scenarios
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: |
      api-gateway api-configs create testName --openapi-spec openapi.yaml
  - error: |-
      1: Error parsing [api_config].
      The [api-config] resource is not properly specified.
      Failed to find attribute [api]. The attribute can be set in the following ways: 
      - provide the argument [--api] on the command line
- execute:
  - command: |
      api-gateway api-configs create testName --api apiName
  - stderr: |
      ERROR: (gcloud.alpha.api-gateway.api-configs.create) Exactly one of (--grpc-files | --openapi-spec) must be specified.
      Usage: gcloud alpha api-gateway api-configs create (API_CONFIG : --api=API) (--grpc-files=[FILE,...] | --openapi-spec=[FILE,...]) [optional flags]
        optional flags may be  --api | --async | --backend-auth-service-account |
                               --display-name | --grpc-files | --help | --labels |
                               --openapi-spec

      For detailed information on this command and its flags, run:
        gcloud alpha api-gateway api-configs create --help
  - error: '1: Exactly one of (--grpc-files | --openapi-spec) must be specified.'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec bad_extension.txt
  - error: '1: OpenAPI files should be of JSON or YAML format'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec nonexistant.yaml
  - error: '1: Could not open service config file \[nonexistant\.yaml\].*$'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --grpc-files=normalized.yaml
  - error: '1: The file normalized.yaml is not a valid api configuration file. The
      configuration type is expected to be of "google.api.Service".'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec malformed.yaml
  - stderr: |
      ERROR: Service config YAML had an error at position (3:1)
  - error: '1: Could not read JSON or YAML from config file [malformed.yaml].'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec openapiv3.yaml
  - error: '1: API Gateway does not currently support OpenAPI v3 configurations.'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --grpc-files bad_extension.txt
  - error: '1: Could not determine the content type of file [bad_extension.txt]. Supported
      extensions are .descriptor .json .pb .yaml and .yml'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --grpc-files raw.proto
  - error: '1: [raw.proto] cannot be used as it is an uncompiled proto file. However,
      uncompiled proto files can be included for display purposes when compiled as
      a source for a passed in proto descriptor.'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --grpc-files invalid.yaml
  - error: '1: The file invalid.yaml is not a valid api configuration file. The configuration
      type is expected to be of "google.api.Service".'
- execute:
  - command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec invalid.yaml
  - error: '1: The file invalid.yaml is not a valid OpenAPI v2 configuration file.'
- execute:
  - command: |
      api-gateway api-configs create rev1 --api api-name --async
  - stderr: |
      ERROR: (gcloud.alpha.api-gateway.api-configs.create) Exactly one of (--grpc-files | --openapi-spec) must be specified.
      Usage: gcloud alpha api-gateway api-configs create (API_CONFIG : --api=API) (--grpc-files=[FILE,...] | --openapi-spec=[FILE,...]) [optional flags]
        optional flags may be  --api | --async | --backend-auth-service-account |
                               --display-name | --grpc-files | --help | --labels |
                               --openapi-spec

      For detailed information on this command and its flags, run:
        gcloud alpha api-gateway api-configs create --help
  - error: '1: Exactly one of (--grpc-files | --openapi-spec) must be specified.'
actions:
- write_file:
    path: bad_extension.txt
    contents: |
      some text that doesn't matter one single bit
- write_file:
    path: normalized.yaml
    contents: |
      name: Some name
      other_properties: stuff
- write_file:
    path: openapi.yaml
    contents: |
      swagger: '2.0'
      info:
        title: Cloud Endpoints + Cloud Run
        description: Sample API on Cloud Endpoints with a Cloud Run backend
        version: 1.0.0
      host: fake-api.endpoints.fake-project.cloud.goog
      schemes:
        - https
      produces:
        - application/json
      x-google-backend:
        address: https://backend-hash-uc.a.run.app
      paths:
        /hello:
          get:
            summary: Greet a user
            operationId: hello
            responses:
              '200':
                description: A successful response
                schema:
                  type: string
- write_file:
    path: openapiv3.yaml
    contents: |
      openapi: 3.0.1
- write_file:
    path: malformed.yaml
    contents: |
      some: value
      this line totally isn't yaml.
- write_file:
    path: invalid.yaml
    contents: |
      some: value
- load_resource:
    path: tests/unit/surface/api_gateway/api_configs/test_data/raw.proto
- execute_command:
    command: |
      api-gateway api-configs create testName --openapi-spec openapi.yaml
    events:
    - expect_exit:
        code: 1
        message: |-
          Error parsing [api_config].
          The [api-config] resource is not properly specified.
          Failed to find attribute [api]. The attribute can be set in the following ways: 
          - provide the argument [--api] on the command line
- execute_command:
    command: |
      api-gateway api-configs create testName --api apiName
    events:
    - expect_stderr: |
        ERROR: (gcloud.alpha.api-gateway.api-configs.create) Exactly one of (--grpc-files | --openapi-spec) must be specified.
        Usage: gcloud alpha api-gateway api-configs create (API_CONFIG : --api=API) (--grpc-files=[FILE,...] | --openapi-spec=[FILE,...]) [optional flags]
          optional flags may be  --api | --async | --backend-auth-service-account |
                                 --display-name | --grpc-files | --help | --labels |
                                 --openapi-spec

        For detailed information on this command and its flags, run:
          gcloud alpha api-gateway api-configs create --help
    - expect_exit:
        code: 1
        message: Exactly one of (--grpc-files | --openapi-spec) must be specified.
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec bad_extension.txt
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_exit:
        code: 1
        message: OpenAPI files should be of JSON or YAML format
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec nonexistant.yaml
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_exit:
        code: 1
        message:
          matches: Could not open service config file \[nonexistant\.yaml\].*
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --grpc-files=normalized.yaml
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_exit:
        code: 1
        message: The file normalized.yaml is not a valid api configuration file. The
          configuration type is expected to be of "google.api.Service".
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec malformed.yaml
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_stderr: |
        ERROR: Service config YAML had an error at position (3:1)
    - expect_exit:
        code: 1
        message: Could not read JSON or YAML from config file [malformed.yaml].
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec openapiv3.yaml
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_exit:
        code: 1
        message: API Gateway does not currently support OpenAPI v3 configurations.
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --grpc-files bad_extension.txt
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_exit:
        code: 1
        message: Could not determine the content type of file [bad_extension.txt].
          Supported extensions are .descriptor .json .pb .yaml and .yml
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --grpc-files raw.proto
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_exit:
        code: 1
        message: '[raw.proto] cannot be used as it is an uncompiled proto file. However,
          uncompiled proto files can be included for display purposes when compiled
          as a source for a passed in proto descriptor.'
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --grpc-files invalid.yaml
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_exit:
        code: 1
        message: The file invalid.yaml is not a valid api configuration file. The
          configuration type is expected to be of "google.api.Service".
- execute_command:
    command: |
      api-gateway api-configs create test-name --api api-name --openapi-spec invalid.yaml
    events:
    - api_call:
        expect_request:
          uri: https://apigateway.googleapis.com/v1beta/projects/fake-project/locations/global/apis/api-name?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body:
            name: projects/fake-project/locations/global/apis/api-name
            managedService: api-name.apigateway.fake-project.cloud.goog
        repeatable: true
    - expect_exit:
        code: 1
        message: The file invalid.yaml is not a valid OpenAPI v2 configuration file.
- execute_command:
    command: |
      api-gateway api-configs create rev1 --api api-name --async
    events:
    - expect_stderr: |
        ERROR: (gcloud.alpha.api-gateway.api-configs.create) Exactly one of (--grpc-files | --openapi-spec) must be specified.
        Usage: gcloud alpha api-gateway api-configs create (API_CONFIG : --api=API) (--grpc-files=[FILE,...] | --openapi-spec=[FILE,...]) [optional flags]
          optional flags may be  --api | --async | --backend-auth-service-account |
                                 --display-name | --grpc-files | --help | --labels |
                                 --openapi-spec

        For detailed information on this command and its flags, run:
          gcloud alpha api-gateway api-configs create --help
    - expect_exit:
        code: 1
        message: |-
          Exactly one of (--grpc-files | --openapi-spec) must be specified.
