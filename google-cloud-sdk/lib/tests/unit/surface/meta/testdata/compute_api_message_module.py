# -*- coding: utf-8 -*- #
# Copyright 2020 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Generated message classes for compute version v1.

Creates and runs virtual machines on Google Cloud Platform.
"""
# NOTE: This file is autogenerated and should not be edited by hand.

from __future__ import absolute_import

from apitools.base.protorpclite import messages as _messages

package = 'compute'

# pylint: disable=C,R,F,I,W (auto-generated messages)

class ComputeInstancesAddAccessConfigRequest(_messages.Message):
  r"""A ComputeInstancesAddAccessConfigRequest object.

  Fields:
    accessConfig: A AccessConfig resource to be passed as the request body.
    instance: The instance name for this request.
    networkInterface: The name of the network interface to add to this
      instance.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  accessConfig = _messages.MessageField('AccessConfig', 1)
  instance = _messages.StringField(2, required=True)
  networkInterface = _messages.StringField(3, required=True)
  project = _messages.StringField(4, required=True)
  requestId = _messages.StringField(5)
  zone = _messages.StringField(6, required=True)


class ComputeInstancesAddResourcePoliciesRequest(_messages.Message):
  r"""A ComputeInstancesAddResourcePoliciesRequest object.

  Fields:
    instance: The instance name for this request.
    instancesAddResourcePoliciesRequest: A InstancesAddResourcePoliciesRequest
      resource to be passed as the request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  instancesAddResourcePoliciesRequest = _messages.MessageField('InstancesAddResourcePoliciesRequest', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesAggregatedListRequest(_messages.Message):
  r"""A ComputeInstancesAggregatedListRequest object.

  Fields:
    filter: A filter expression that filters resources listed in the response.
      The expression must specify the field name, a comparison operator, and
      the value that you want to use for filtering. The value must be a
      string, a number, or a boolean. The comparison operator must be either
      `=`, `!=`, `>`, or `<`.  For example, if you are filtering Compute
      Engine instances, you can exclude instances named `example-instance` by
      specifying `name != example-instance`.  You can also filter nested
      fields. For example, you could specify `scheduling.automaticRestart =
      false` to include instances only if they are not scheduled for automatic
      restarts. You can use filtering on nested fields to filter based on
      resource labels.  To filter on multiple expressions, provide each
      separate expression within parentheses. For example: ```
      (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ```
      By default, each expression is an `AND` expression. However, you can
      include `AND` and `OR` expressions explicitly. For example: ```
      (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
      (scheduling.automaticRestart = true) ```
    includeAllScopes: Indicates whether every visible scope for each scope
      type (zone, region, global) should be included in the response. For new
      resource types added after this field, the flag has no effect as new
      resource types will always include every visible scope for each scope
      type in response. For resource types which predate this field, if this
      flag is omitted or false, only scopes of the scope types where the
      resource type is expected to be found will be included.
    maxResults: The maximum number of results per page that should be
      returned. If the number of available results is larger than
      `maxResults`, Compute Engine returns a `nextPageToken` that can be used
      to get the next page of results in subsequent list requests. Acceptable
      values are `0` to `500`, inclusive. (Default: `500`)
    orderBy: Sorts list results by a certain order. By default, results are
      returned in alphanumerical order based on the resource name.  You can
      also sort results in descending order based on the creation timestamp
      using `orderBy="creationTimestamp desc"`. This sorts results based on
      the `creationTimestamp` field in reverse chronological order (newest
      result first). Use this to sort resources like operations so that the
      newest operation is returned first.  Currently, only sorting by `name`
      or `creationTimestamp desc` is supported.
    pageToken: Specifies a page token to use. Set `pageToken` to the
      `nextPageToken` returned by a previous list request to get the next page
      of results.
    project: Project ID for this request.
  """

  filter = _messages.StringField(1)
  includeAllScopes = _messages.BooleanField(2)
  maxResults = _messages.IntegerField(3, variant=_messages.Variant.UINT32, default=500)
  orderBy = _messages.StringField(4)
  pageToken = _messages.StringField(5)
  project = _messages.StringField(6, required=True)


class ComputeInstancesAttachDiskRequest(_messages.Message):
  r"""A ComputeInstancesAttachDiskRequest object.

  Fields:
    attachedDisk: A AttachedDisk resource to be passed as the request body.
    forceAttach: Whether to force attach the regional disk even if it's
      currently attached to another instance.
    instance: The instance name for this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  attachedDisk = _messages.MessageField('AttachedDisk', 1)
  forceAttach = _messages.BooleanField(2)
  instance = _messages.StringField(3, required=True)
  project = _messages.StringField(4, required=True)
  requestId = _messages.StringField(5)
  zone = _messages.StringField(6, required=True)


class ComputeInstancesDeleteAccessConfigRequest(_messages.Message):
  r"""A ComputeInstancesDeleteAccessConfigRequest object.

  Fields:
    accessConfig: The name of the access config to delete.
    instance: The instance name for this request.
    networkInterface: The name of the network interface.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  accessConfig = _messages.StringField(1, required=True)
  instance = _messages.StringField(2, required=True)
  networkInterface = _messages.StringField(3, required=True)
  project = _messages.StringField(4, required=True)
  requestId = _messages.StringField(5)
  zone = _messages.StringField(6, required=True)


class ComputeInstancesDeleteRequest(_messages.Message):
  r"""A ComputeInstancesDeleteRequest object.

  Fields:
    instance: Name of the instance resource to delete.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  zone = _messages.StringField(4, required=True)


class ComputeInstancesDetachDiskRequest(_messages.Message):
  r"""A ComputeInstancesDetachDiskRequest object.

  Fields:
    deviceName: The device name of the disk to detach. Make a get() request on
      the instance to view currently attached disks and device names.
    instance: Instance name for this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  deviceName = _messages.StringField(1, required=True)
  instance = _messages.StringField(2, required=True)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesGetGuestAttributesRequest(_messages.Message):
  r"""A ComputeInstancesGetGuestAttributesRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    project: Project ID for this request.
    queryPath: Specifies the guest attributes path to be queried.
    variableKey: Specifies the key for the guest attributes entry.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  queryPath = _messages.StringField(3)
  variableKey = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesGetIamPolicyRequest(_messages.Message):
  r"""A ComputeInstancesGetIamPolicyRequest object.

  Fields:
    optionsRequestedPolicyVersion: Requested IAM Policy version.
    project: Project ID for this request.
    resource: Name or id of the resource for this request.
    zone: The name of the zone for this request.
  """

  optionsRequestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  project = _messages.StringField(2, required=True)
  resource = _messages.StringField(3, required=True)
  zone = _messages.StringField(4, required=True)


class ComputeInstancesGetRequest(_messages.Message):
  r"""A ComputeInstancesGetRequest object.

  Fields:
    instance: Name of the instance resource to return.
    project: Project ID for this request.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  zone = _messages.StringField(3, required=True)


class ComputeInstancesGetScreenshotRequest(_messages.Message):
  r"""A ComputeInstancesGetScreenshotRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    project: Project ID for this request.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  zone = _messages.StringField(3, required=True)


class ComputeInstancesGetSerialPortOutputRequest(_messages.Message):
  r"""A ComputeInstancesGetSerialPortOutputRequest object.

  Fields:
    instance: Name of the instance for this request.
    port: Specifies which COM or serial port to retrieve data from.
    project: Project ID for this request.
    start: Specifies the starting byte position of the output to return. To
      start with the first byte of output to the specified port, omit this
      field or set it to `0`.  If the output for that byte position is
      available, this field matches the `start` parameter sent with the
      request. If the amount of serial console output exceeds the size of the
      buffer (1 MB), the oldest output is discarded and is no longer
      available. If the requested start position refers to discarded output,
      the start position is adjusted to the oldest output still available, and
      the adjusted start position is returned as the `start` property value.
      You can also provide a negative start position, which translates to the
      most recent number of bytes written to the serial port. For example, -3
      is interpreted as the most recent 3 bytes written to the serial console.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  port = _messages.IntegerField(2, variant=_messages.Variant.INT32, default=1)
  project = _messages.StringField(3, required=True)
  start = _messages.IntegerField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesGetShieldedInstanceIdentityRequest(_messages.Message):
  r"""A ComputeInstancesGetShieldedInstanceIdentityRequest object.

  Fields:
    instance: Name or id of the instance scoping this request.
    project: Project ID for this request.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  zone = _messages.StringField(3, required=True)


class ComputeInstancesInsertRequest(_messages.Message):
  r"""A ComputeInstancesInsertRequest object.

  Fields:
    instance: A Instance resource to be passed as the request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    sourceInstanceTemplate: Specifies instance template to create the
      instance.  This field is optional. It can be a full or partial URL. For
      example, the following are all valid URLs to an instance template:   - h
      ttps://www.googleapis.com/compute/v1/projects/project/global/instanceTem
      plates/instanceTemplate  -
      projects/project/global/instanceTemplates/instanceTemplate  -
      global/instanceTemplates/instanceTemplate
    zone: The name of the zone for this request.
  """

  instance = _messages.MessageField('Instance', 1)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  sourceInstanceTemplate = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesListReferrersRequest(_messages.Message):
  r"""A ComputeInstancesListReferrersRequest object.

  Fields:
    filter: A filter expression that filters resources listed in the response.
      The expression must specify the field name, a comparison operator, and
      the value that you want to use for filtering. The value must be a
      string, a number, or a boolean. The comparison operator must be either
      `=`, `!=`, `>`, or `<`.  For example, if you are filtering Compute
      Engine instances, you can exclude instances named `example-instance` by
      specifying `name != example-instance`.  You can also filter nested
      fields. For example, you could specify `scheduling.automaticRestart =
      false` to include instances only if they are not scheduled for automatic
      restarts. You can use filtering on nested fields to filter based on
      resource labels.  To filter on multiple expressions, provide each
      separate expression within parentheses. For example: ```
      (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ```
      By default, each expression is an `AND` expression. However, you can
      include `AND` and `OR` expressions explicitly. For example: ```
      (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
      (scheduling.automaticRestart = true) ```
    instance: Name of the target instance scoping this request, or '-' if the
      request should span over all instances in the container.
    maxResults: The maximum number of results per page that should be
      returned. If the number of available results is larger than
      `maxResults`, Compute Engine returns a `nextPageToken` that can be used
      to get the next page of results in subsequent list requests. Acceptable
      values are `0` to `500`, inclusive. (Default: `500`)
    orderBy: Sorts list results by a certain order. By default, results are
      returned in alphanumerical order based on the resource name.  You can
      also sort results in descending order based on the creation timestamp
      using `orderBy="creationTimestamp desc"`. This sorts results based on
      the `creationTimestamp` field in reverse chronological order (newest
      result first). Use this to sort resources like operations so that the
      newest operation is returned first.  Currently, only sorting by `name`
      or `creationTimestamp desc` is supported.
    pageToken: Specifies a page token to use. Set `pageToken` to the
      `nextPageToken` returned by a previous list request to get the next page
      of results.
    project: Project ID for this request.
    zone: The name of the zone for this request.
  """

  filter = _messages.StringField(1)
  instance = _messages.StringField(2, required=True)
  maxResults = _messages.IntegerField(3, variant=_messages.Variant.UINT32, default=500)
  orderBy = _messages.StringField(4)
  pageToken = _messages.StringField(5)
  project = _messages.StringField(6, required=True)
  zone = _messages.StringField(7, required=True)


class ComputeInstancesListRequest(_messages.Message):
  r"""A ComputeInstancesListRequest object.

  Fields:
    filter: A filter expression that filters resources listed in the response.
      The expression must specify the field name, a comparison operator, and
      the value that you want to use for filtering. The value must be a
      string, a number, or a boolean. The comparison operator must be either
      `=`, `!=`, `>`, or `<`.  For example, if you are filtering Compute
      Engine instances, you can exclude instances named `example-instance` by
      specifying `name != example-instance`.  You can also filter nested
      fields. For example, you could specify `scheduling.automaticRestart =
      false` to include instances only if they are not scheduled for automatic
      restarts. You can use filtering on nested fields to filter based on
      resource labels.  To filter on multiple expressions, provide each
      separate expression within parentheses. For example: ```
      (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ```
      By default, each expression is an `AND` expression. However, you can
      include `AND` and `OR` expressions explicitly. For example: ```
      (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND
      (scheduling.automaticRestart = true) ```
    maxResults: The maximum number of results per page that should be
      returned. If the number of available results is larger than
      `maxResults`, Compute Engine returns a `nextPageToken` that can be used
      to get the next page of results in subsequent list requests. Acceptable
      values are `0` to `500`, inclusive. (Default: `500`)
    orderBy: Sorts list results by a certain order. By default, results are
      returned in alphanumerical order based on the resource name.  You can
      also sort results in descending order based on the creation timestamp
      using `orderBy="creationTimestamp desc"`. This sorts results based on
      the `creationTimestamp` field in reverse chronological order (newest
      result first). Use this to sort resources like operations so that the
      newest operation is returned first.  Currently, only sorting by `name`
      or `creationTimestamp desc` is supported.
    pageToken: Specifies a page token to use. Set `pageToken` to the
      `nextPageToken` returned by a previous list request to get the next page
      of results.
    project: Project ID for this request.
    zone: The name of the zone for this request.
  """

  filter = _messages.StringField(1)
  maxResults = _messages.IntegerField(2, variant=_messages.Variant.UINT32, default=500)
  orderBy = _messages.StringField(3)
  pageToken = _messages.StringField(4)
  project = _messages.StringField(5, required=True)
  zone = _messages.StringField(6, required=True)


class ComputeInstancesRemoveResourcePoliciesRequest(_messages.Message):
  r"""A ComputeInstancesRemoveResourcePoliciesRequest object.

  Fields:
    instance: The instance name for this request.
    instancesRemoveResourcePoliciesRequest: A
      InstancesRemoveResourcePoliciesRequest resource to be passed as the
      request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  instancesRemoveResourcePoliciesRequest = _messages.MessageField('InstancesRemoveResourcePoliciesRequest', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesResetRequest(_messages.Message):
  r"""A ComputeInstancesResetRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  zone = _messages.StringField(4, required=True)


class ComputeInstancesSetDeletionProtectionRequest(_messages.Message):
  r"""A ComputeInstancesSetDeletionProtectionRequest object.

  Fields:
    deletionProtection: Whether the resource should be protected against
      deletion.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    resource: Name or id of the resource for this request.
    zone: The name of the zone for this request.
  """

  deletionProtection = _messages.BooleanField(1, default=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  resource = _messages.StringField(4, required=True)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetDiskAutoDeleteRequest(_messages.Message):
  r"""A ComputeInstancesSetDiskAutoDeleteRequest object.

  Fields:
    autoDelete: Whether to auto-delete the disk when the instance is deleted.
    deviceName: The device name of the disk to modify. Make a get() request on
      the instance to view currently attached disks and device names.
    instance: The instance name for this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  autoDelete = _messages.BooleanField(1, required=True)
  deviceName = _messages.StringField(2, required=True)
  instance = _messages.StringField(3, required=True)
  project = _messages.StringField(4, required=True)
  requestId = _messages.StringField(5)
  zone = _messages.StringField(6, required=True)


class ComputeInstancesSetIamPolicyRequest(_messages.Message):
  r"""A ComputeInstancesSetIamPolicyRequest object.

  Fields:
    project: Project ID for this request.
    resource: Name or id of the resource for this request.
    zone: The name of the zone for this request.
    zoneSetPolicyRequest: A ZoneSetPolicyRequest resource to be passed as the
      request body.
  """

  project = _messages.StringField(1, required=True)
  resource = _messages.StringField(2, required=True)
  zone = _messages.StringField(3, required=True)
  zoneSetPolicyRequest = _messages.MessageField('ZoneSetPolicyRequest', 4)


class ComputeInstancesSetLabelsRequest(_messages.Message):
  r"""A ComputeInstancesSetLabelsRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    instancesSetLabelsRequest: A InstancesSetLabelsRequest resource to be
      passed as the request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  instancesSetLabelsRequest = _messages.MessageField('InstancesSetLabelsRequest', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetMachineResourcesRequest(_messages.Message):
  r"""A ComputeInstancesSetMachineResourcesRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    instancesSetMachineResourcesRequest: A InstancesSetMachineResourcesRequest
      resource to be passed as the request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  instancesSetMachineResourcesRequest = _messages.MessageField('InstancesSetMachineResourcesRequest', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetMachineTypeRequest(_messages.Message):
  r"""A ComputeInstancesSetMachineTypeRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    instancesSetMachineTypeRequest: A InstancesSetMachineTypeRequest resource
      to be passed as the request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  instancesSetMachineTypeRequest = _messages.MessageField('InstancesSetMachineTypeRequest', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetMetadataRequest(_messages.Message):
  r"""A ComputeInstancesSetMetadataRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    metadata: A Metadata resource to be passed as the request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  metadata = _messages.MessageField('Metadata', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetMinCpuPlatformRequest(_messages.Message):
  r"""A ComputeInstancesSetMinCpuPlatformRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    instancesSetMinCpuPlatformRequest: A InstancesSetMinCpuPlatformRequest
      resource to be passed as the request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  instancesSetMinCpuPlatformRequest = _messages.MessageField('InstancesSetMinCpuPlatformRequest', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetSchedulingRequest(_messages.Message):
  r"""A ComputeInstancesSetSchedulingRequest object.

  Fields:
    instance: Instance name for this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    scheduling: A Scheduling resource to be passed as the request body.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  scheduling = _messages.MessageField('Scheduling', 4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetServiceAccountRequest(_messages.Message):
  r"""A ComputeInstancesSetServiceAccountRequest object.

  Fields:
    instance: Name of the instance resource to start.
    instancesSetServiceAccountRequest: A InstancesSetServiceAccountRequest
      resource to be passed as the request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  instancesSetServiceAccountRequest = _messages.MessageField('InstancesSetServiceAccountRequest', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetShieldedInstanceIntegrityPolicyRequest(_messages.Message):
  r"""A ComputeInstancesSetShieldedInstanceIntegrityPolicyRequest object.

  Fields:
    instance: Name or id of the instance scoping this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    shieldedInstanceIntegrityPolicy: A ShieldedInstanceIntegrityPolicy
      resource to be passed as the request body.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  shieldedInstanceIntegrityPolicy = _messages.MessageField('ShieldedInstanceIntegrityPolicy', 4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSetTagsRequest(_messages.Message):
  r"""A ComputeInstancesSetTagsRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    tags: A Tags resource to be passed as the request body.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  tags = _messages.MessageField('Tags', 4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesSimulateMaintenanceEventRequest(_messages.Message):
  r"""A ComputeInstancesSimulateMaintenanceEventRequest object.

  Fields:
    instance: Name of the instance scoping this request.
    project: Project ID for this request.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  zone = _messages.StringField(3, required=True)


class ComputeInstancesStartRequest(_messages.Message):
  r"""A ComputeInstancesStartRequest object.

  Fields:
    instance: Name of the instance resource to start.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  zone = _messages.StringField(4, required=True)


class ComputeInstancesStartWithEncryptionKeyRequest(_messages.Message):
  r"""A ComputeInstancesStartWithEncryptionKeyRequest object.

  Fields:
    instance: Name of the instance resource to start.
    instancesStartWithEncryptionKeyRequest: A
      InstancesStartWithEncryptionKeyRequest resource to be passed as the
      request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  instancesStartWithEncryptionKeyRequest = _messages.MessageField('InstancesStartWithEncryptionKeyRequest', 2)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesStopRequest(_messages.Message):
  r"""A ComputeInstancesStopRequest object.

  Fields:
    instance: Name of the instance resource to stop.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  zone = _messages.StringField(4, required=True)


class ComputeInstancesTestIamPermissionsRequest(_messages.Message):
  r"""A ComputeInstancesTestIamPermissionsRequest object.

  Fields:
    project: Project ID for this request.
    resource: Name or id of the resource for this request.
    testPermissionsRequest: A TestPermissionsRequest resource to be passed as
      the request body.
    zone: The name of the zone for this request.
  """

  project = _messages.StringField(1, required=True)
  resource = _messages.StringField(2, required=True)
  testPermissionsRequest = _messages.MessageField('TestPermissionsRequest', 3)
  zone = _messages.StringField(4, required=True)


class ComputeInstancesUpdateAccessConfigRequest(_messages.Message):
  r"""A ComputeInstancesUpdateAccessConfigRequest object.

  Fields:
    accessConfig: A AccessConfig resource to be passed as the request body.
    instance: The instance name for this request.
    networkInterface: The name of the network interface where the access
      config is attached.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  accessConfig = _messages.MessageField('AccessConfig', 1)
  instance = _messages.StringField(2, required=True)
  networkInterface = _messages.StringField(3, required=True)
  project = _messages.StringField(4, required=True)
  requestId = _messages.StringField(5)
  zone = _messages.StringField(6, required=True)


class ComputeInstancesUpdateDisplayDeviceRequest(_messages.Message):
  r"""A ComputeInstancesUpdateDisplayDeviceRequest object.

  Fields:
    displayDevice: A DisplayDevice resource to be passed as the request body.
    instance: Name of the instance scoping this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  displayDevice = _messages.MessageField('DisplayDevice', 1)
  instance = _messages.StringField(2, required=True)
  project = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)
  zone = _messages.StringField(5, required=True)


class ComputeInstancesUpdateNetworkInterfaceRequest(_messages.Message):
  r"""A ComputeInstancesUpdateNetworkInterfaceRequest object.

  Fields:
    instance: The instance name for this request.
    networkInterface: The name of the network interface to update.
    networkInterfaceResource: A NetworkInterface resource to be passed as the
      request body.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  networkInterface = _messages.StringField(2, required=True)
  networkInterfaceResource = _messages.MessageField('NetworkInterface', 3)
  project = _messages.StringField(4, required=True)
  requestId = _messages.StringField(5)
  zone = _messages.StringField(6, required=True)


class ComputeInstancesUpdateRequest(_messages.Message):
  r"""A ComputeInstancesUpdateRequest object.

  Enums:
    MinimalActionValueValuesEnum: Specifies the action to take when updating
      an instance even if the updated properties do not require it. If not
      specified, then Compute Engine acts based on the minimum action that the
      updated properties require.
    MostDisruptiveAllowedActionValueValuesEnum: Specifies the most disruptive
      action that can be taken on the instance as part of the update. Compute
      Engine returns an error if the instance properties require a more
      disruptive action as part of the instance update. Valid options from
      lowest to highest are NO_EFFECT, REFRESH, and RESTART.

  Fields:
    instance: Name of the instance resource to update.
    instanceResource: A Instance resource to be passed as the request body.
    minimalAction: Specifies the action to take when updating an instance even
      if the updated properties do not require it. If not specified, then
      Compute Engine acts based on the minimum action that the updated
      properties require.
    mostDisruptiveAllowedAction: Specifies the most disruptive action that can
      be taken on the instance as part of the update. Compute Engine returns
      an error if the instance properties require a more disruptive action as
      part of the instance update. Valid options from lowest to highest are
      NO_EFFECT, REFRESH, and RESTART.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    zone: The name of the zone for this request.
  """

  class MinimalActionValueValuesEnum(_messages.Enum):
    r"""Specifies the action to take when updating an instance even if the
    updated properties do not require it. If not specified, then Compute
    Engine acts based on the minimum action that the updated properties
    require.

    Values:
      INVALID: <no description>
      NO_EFFECT: <no description>
      REFRESH: <no description>
      RESTART: <no description>
    """
    INVALID = 0
    NO_EFFECT = 1
    REFRESH = 2
    RESTART = 3

  class MostDisruptiveAllowedActionValueValuesEnum(_messages.Enum):
    r"""Specifies the most disruptive action that can be taken on the instance
    as part of the update. Compute Engine returns an error if the instance
    properties require a more disruptive action as part of the instance
    update. Valid options from lowest to highest are NO_EFFECT, REFRESH, and
    RESTART.

    Values:
      INVALID: <no description>
      NO_EFFECT: <no description>
      REFRESH: <no description>
      RESTART: <no description>
    """
    INVALID = 0
    NO_EFFECT = 1
    REFRESH = 2
    RESTART = 3

  instance = _messages.StringField(1, required=True)
  instanceResource = _messages.MessageField('Instance', 2)
  minimalAction = _messages.EnumField('MinimalActionValueValuesEnum', 3)
  mostDisruptiveAllowedAction = _messages.EnumField('MostDisruptiveAllowedActionValueValuesEnum', 4)
  project = _messages.StringField(5, required=True)
  requestId = _messages.StringField(6)
  zone = _messages.StringField(7, required=True)



class ComputeInstancesUpdateShieldedInstanceConfigRequest(_messages.Message):
  r"""A ComputeInstancesUpdateShieldedInstanceConfigRequest object.

  Fields:
    instance: Name or id of the instance scoping this request.
    project: Project ID for this request.
    requestId: An optional request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server will know
      to ignore the request if it has already been completed.  For example,
      consider a situation where you make an initial request and the request
      times out. If you make the request again with the same request ID, the
      server can check if original operation with the same request ID was
      received, and if so, will ignore the second request. This prevents
      clients from accidentally creating duplicate commitments.  The request
      ID must be a valid UUID with the exception that zero UUID is not
      supported (00000000-0000-0000-0000-000000000000).
    shieldedInstanceConfig: A ShieldedInstanceConfig resource to be passed as
      the request body.
    zone: The name of the zone for this request.
  """

  instance = _messages.StringField(1, required=True)
  project = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  shieldedInstanceConfig = _messages.MessageField('ShieldedInstanceConfig', 4)
  zone = _messages.StringField(5, required=True)

# pylint: enable=C,R,F,I,W
