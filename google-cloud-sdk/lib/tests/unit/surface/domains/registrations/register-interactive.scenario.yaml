title: cloud domains register test scenario
release_tracks: [ALPHA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- set_property: core/account user@example.app
- execute:
  - command: |
      domains registrations register example.app
  - prompt:
    - message: |
        Yearly price: 12.00 USD
    - input: y
  - prompt:
    - message: .app is a secure namespace. You may purchase example.app now but it
        will require an SSL certificate for website connection.
    - input: y
  - prompt:
    - message: You can provide your DNS settings by specifying name servers, Cloud
        DNS Managed Zone name or by choosing free name servers provided by Google
        Domains
    - choices: &id001
      - Provide name servers list
      - Provide Cloud DNS Managed Zone name
      - Use free name servers provided by Google Domains
    - input: '2'
  - prompt:
    - message: 'Cloud DNS Managed Zone name:  '
    - input: example-app
  - stderr: |
      Cloud DNS Zone 'example-app' is not signed. DNSSEC won't be enabled.
  - prompt:
    - message: Contact data not provided using the --contact-data-from-file flag.
    - prompt_string: Do you want to enter it interactively
    - input: y
  - prompt:
    - message: 'Full name:  '
    - input: ''
  - stderr: |2
       Name must not be empty.
  - prompt:
    - message: 'Full name:  '
    - input: Googler
  - prompt:
    - message: 'Organization (if applicable):  '
    - input: Google
  - prompt:
    - message: 'Email (user@example.app):  '
    - input: invalid-email
  - stderr: |2
       Invalid email address.
  - prompt:
    - message: 'Email (user@example.app):  '
    - input: ''
  - stderr: |
      Enter phone number with country code, e.g. "+1.8005550123".
  - prompt:
    - message: 'Phone number:  '
    - input: ''
  - stderr: |2
       Phone number must not be empty.
  - prompt:
    - message: 'Phone number:  '
    - input: '+1.1234567890'
  - stderr: |
      Enter fax number with country code, e.g. "+1.8005550123".
  - prompt:
    - message: 'Fax number (if applicable):  '
    - input: '+1.1234567890'
  - stderr: |
      Enter two-letter country code, e.g. "US" or "PL".
  - prompt:
    - message: 'Country code:  '
    - input: Poland
  - stderr: |2
       Country code must be in ISO 3166-1 format, e.g. "US" or "PL".
       See https://support.google.com/business/answer/6270107 for a list of valid choices.
  - prompt:
    - message: 'Country code:  '
    - input: PL
  - prompt:
    - message: 'Postal code/zipcode:  '
    - input: 00-113
  - prompt:
    - message: 'State (if applicable):  '
    - input: ''
  - prompt:
    - message: 'City:  '
    - input: Warsaw
  - prompt:
    - message: 'Street address (incl. building, apt):  '
    - input: WFC
  - prompt:
    - message: Specify contact privacy
    - choices: &id002
      - private-contact-data
      - redacted-contact-data
      - public-contact-data
    - input: '3'
  - stderr: |
      You choose to make contact data of domain example.app public.
      Anyone who looks it up in the WHOIS directory will be able to see info
      for the domain owner and administrative and technical contacts.
      Make sure it's ok with them that their contact data is public.
      This info will be publicly available:
      email: user@example.app
      faxNumber: '+1.1234567890'
      phoneNumber: '+1.1234567890'
      postalAddress:
        addressLines:
        - WFC
        administrativeArea: ''
        locality: Warsaw
        organization: Google
        postalCode: 00-113
        recipients:
        - Googler
        regionCode: PL
  - prompt:
    - input: y
  - progress_tracker:
    - message: Waiting for 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
        to complete
    - status: SUCCESS
  - stderr: |
      Created registration [example.app] Note:
      The domain is not yet registered.
      Wait until the registration resource changes state to ACTIVE.
actions:
- set_property:
    core/account: user@example.app
- execute_command:
    command: |
      domains registrations register example.app
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha2/projects/fake-project/locations/global/registrations:retrieveRegisterParameters?alt=json&domainName=example.app
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "registerParameters": {
                "domainName": "example.app",
                "availability": "AVAILABLE",
                "yearlyPrice": {
                  "currencyCode": "USD",
                  "units": "12"
                },
                "domainNotices": ["HSTS_PRELOADED"],
                "supportedPrivacy": [
                  "REDACTED_CONTACT_DATA",
                  "PRIVATE_CONTACT_DATA",
                  "PUBLIC_CONTACT_DATA"
                ]
              }
            }
    - expect_prompt_continue:
        message: |
          Yearly price: 12.00 USD
        user_input: y
    - expect_prompt_continue:
        message: .app is a secure namespace. You may purchase example.app now but
          it will require an SSL certificate for website connection.
        user_input: y
    - expect_prompt_choice:
        message: You can provide your DNS settings by specifying name servers, Cloud
          DNS Managed Zone name or by choosing free name servers provided by Google
          Domains
        choices: *id001
        user_input: '2'
    - expect_prompt_response:
        message: 'Cloud DNS Managed Zone name:  '
        user_input: example-app
    - api_call:
        expect_request:
          uri: https://dns.googleapis.com/dns/v1/projects/fake-project/managedZones/example-app?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "example-app",
              "dnsName": "example.app.",
              "description": "",
              "id": "7109061377772250347",
              "nameServers": [
                "ns-cloud-a1.googledomains.com.",
                "ns-cloud-a2.googledomains.com."
              ],
              "creationTime": "2019-01-09T14:14:57.933Z",
              "kind": "dns#managedZone",
              "visibility": "public"
            }
    - expect_stderr: |
        Cloud DNS Zone 'example-app' is not signed. DNSSEC won't be enabled.
    - expect_prompt_continue:
        message: Contact data not provided using the --contact-data-from-file flag.
        prompt_string: Do you want to enter it interactively
        user_input: y
    - expect_prompt_response:
        message: 'Full name:  '
        user_input: ''
    - expect_stderr: |2
         Name must not be empty.
    - expect_prompt_response:
        message: 'Full name:  '
        user_input: Googler
    - expect_prompt_response:
        message: 'Organization (if applicable):  '
        user_input: Google
    - expect_prompt_response:
        message: 'Email (user@example.app):  '
        user_input: invalid-email
    - expect_stderr: |2
         Invalid email address.
    - expect_prompt_response:
        message: 'Email (user@example.app):  '
        user_input: ''
    - expect_stderr: |
        Enter phone number with country code, e.g. "+1.8005550123".
    - expect_prompt_response:
        message: 'Phone number:  '
        user_input: ''
    - expect_stderr: |2
         Phone number must not be empty.
    - expect_prompt_response:
        message: 'Phone number:  '
        user_input: '+1.1234567890'
    - expect_stderr: |
        Enter fax number with country code, e.g. "+1.8005550123".
    - expect_prompt_response:
        message: 'Fax number (if applicable):  '
        user_input: '+1.1234567890'
    - expect_stderr: |
        Enter two-letter country code, e.g. "US" or "PL".
    - expect_prompt_response:
        message: 'Country code:  '
        user_input: Poland
    - expect_stderr: |2
         Country code must be in ISO 3166-1 format, e.g. "US" or "PL".
         See https://support.google.com/business/answer/6270107 for a list of valid choices.
    - expect_prompt_response:
        message: 'Country code:  '
        user_input: PL
    - expect_prompt_response:
        message: 'Postal code/zipcode:  '
        user_input: 00-113
    - expect_prompt_response:
        message: 'State (if applicable):  '
        user_input: ''
    - expect_prompt_response:
        message: 'City:  '
        user_input: Warsaw
    - expect_prompt_response:
        message: 'Street address (incl. building, apt):  '
        user_input: WFC
    - expect_prompt_choice:
        message: Specify contact privacy
        choices: *id002
        user_input: '3'
    - expect_stderr: |
        You choose to make contact data of domain example.app public.
        Anyone who looks it up in the WHOIS directory will be able to see info
        for the domain owner and administrative and technical contacts.
        Make sure it's ok with them that their contact data is public.
        This info will be publicly available:
        email: user@example.app
        faxNumber: '+1.1234567890'
        phoneNumber: '+1.1234567890'
        postalAddress:
          addressLines:
          - WFC
          administrativeArea: ''
          locality: Warsaw
          organization: Google
          postalCode: 00-113
          recipients:
          - Googler
          regionCode: PL
    - expect_prompt_continue:
        user_input: y
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha2/projects/fake-project/locations/global/registrations:register?alt=json
          method: POST
          headers: {}
          body:
            json:
              domainNotices:
              - HSTS_PRELOADED
              registration:
                contactSettings:
                  adminContact:
                    email: user@example.app
                    phoneNumber: '+1.1234567890'
                    faxNumber: '+1.1234567890'
                    postalAddress:
                      addressLines:
                      - WFC
                      administrativeArea: ''
                      locality: Warsaw
                      organization: Google
                      postalCode: 00-113
                      recipients:
                      - Googler
                      regionCode: PL
                  registrantContact:
                    email: user@example.app
                    phoneNumber: '+1.1234567890'
                    faxNumber: '+1.1234567890'
                    postalAddress:
                      addressLines:
                      - WFC
                      administrativeArea: ''
                      locality: Warsaw
                      organization: Google
                      postalCode: 00-113
                      recipients:
                      - Googler
                      regionCode: PL
                  technicalContact:
                    email: user@example.app
                    phoneNumber: '+1.1234567890'
                    faxNumber: '+1.1234567890'
                    postalAddress:
                      addressLines:
                      - WFC
                      administrativeArea: ''
                      locality: Warsaw
                      organization: Google
                      postalCode: 00-113
                      recipients:
                      - Googler
                      regionCode: PL
                  privacy: PUBLIC_CONTACT_DATA
                dnsSettings:
                  customDns:
                    nameServers:
                    - ns-cloud-a1.googledomains.com
                    - ns-cloud-a2.googledomains.com
                domainName: example.app
              yearlyPrice:
                currencyCode: USD
                nanos: 0
                units: '12'
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha2.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "target": "projects/fake-project/locations/global/registrations/example.app",
                "verb": "register",
                "apiVersion": "v1alpha2"
              },
              "done": false
            }
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha2/projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha2.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "endTime": "2019-01-14T14:41:31.657446027Z",
                "target": "projects/fake-project/locations/global/registrations/example.app",
                "verb": "register",
                "apiVersion": "v1alpha2"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha2.Registration",
                "name": "projects/fake-project/locations/global/registrations/example.app",
                "domainName": "example.app",
                "createTime": "2019-02-20T16:47:22.739565061Z",
                "expireTime": "2020-02-20T16:47:26Z",
                "state": "ACTIVE",
                "dnsSettings": {
                  "customDns": {
                    "nameServers": [
                      "ns-cloud-a1.googledomains.com.",
                      "ns-cloud-a2.googledomains.com."
                    ]
                  }
                }
              }
            }
        repeatable: true
    - expect_progress_tracker:
        message: Waiting for 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
          to complete
        status: SUCCESS
    - expect_stderr: |
        Created registration [example.app] Note:
        The domain is not yet registered.
        Wait until the registration resource changes state to ACTIVE.
    - expect_exit:
        code: 0
