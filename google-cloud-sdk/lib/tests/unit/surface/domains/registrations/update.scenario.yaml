title: cloud domains update test scenario
release_tracks: [ALPHA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: |
      domains registrations update example.com --registrant-contact-from-file=contact.yaml --async
- execute:
  - command: |
      domains registrations update example.com --whois-privacy=use-whois-privacy-proxy
  - progress_tracker:
    - message: Waiting for [operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86]
        to complete
    - status: SUCCESS
  - stderr: |
      Updated registration [example.com].
- execute:
  - command: |
      domains registrations update example.com --cloud-dns-zone=example-com
  - progress_tracker:
    - message: Waiting for [operation-1547475255493-57f6ba8e701a1-fb76a369-357a5cc9]
        to complete
    - status: SUCCESS
  - stderr: |
      Updated registration [example.com].
- execute:
  - command: |
      domains registrations update example.app --name-servers=ns-cloud-a1.googledomains.com.,ns-cloud-a2.googledomains.com.,ns-cloud-a3.googledomains.com. --validate-only
- execute:
  - command: |
      domains registrations update example.app --cloud-dns-zone=example-com
  - error: '1: The dnsName [example.com.] of specified Cloud DNS zone [example-com]
      does not match the registration domain [example.app.]'
- execute:
  - command: |
      domains registrations update example.com --update-labels=test=foo
  - progress_tracker:
    - message: Waiting for [operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86]
        to complete
    - status: SUCCESS
  - stderr: |
      Updated registration [example.com].
- execute:
  - command: |
      domains registrations update example.app
  - error: '1: Must specify at least one field to update.'
actions:
- write_file:
    path: contact.yaml
    contents: |
      email: 'test@example.com'
      phoneNumber: '+48.123456789'
      postalAddress:
              regionCode: 'PL'
              postalCode: '00-113'
              locality: 'Warszawa'
              addressLines: ['Emilii Plater 53']
              recipients: ['Test User']
- execute_command:
    command: |
      domains registrations update example.com --registrant-contact-from-file=contact.yaml --async
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/registrations/example.com?alt=json&updateMask=whois_config.registrant_contact&validateOnly=False
          method: PATCH
          headers: {}
          body:
            json:
              whoisConfig:
                registrantContact:
                  email: test@example.com
                  phoneNumber: '+48.123456789'
                  postalAddress:
                    addressLines:
                    - Emilii Plater 53
                    locality: Warszawa
                    postalCode: 00-113
                    recipients:
                    - Test User
                    regionCode: PL
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "target": "projects/fake-project/locations/global/registrations/example.com",
                "verb": "update",
                "apiVersion": "v1alpha1"
              },
              "done": false
            }
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations update example.com --whois-privacy=use-whois-privacy-proxy
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/registrations/example.com?alt=json&updateMask=whois_config.privacy&validateOnly=False
          method: PATCH
          headers: {}
          body:
            json:
              whoisConfig:
                privacy: USE_WHOIS_PRIVACY_PROXY
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "target": "projects/fake-project/locations/global/registrations/example.com",
                "verb": "update",
                "apiVersion": "v1alpha1"
              },
              "done": false
            }

    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "endTime": "2019-01-14T13:20:52.606261846Z",
                "target": "projects/fake-project/locations/global/registrations/example.com",
                "verb": "update",
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.Registration",
                "name": "projects/fake-project/locations/global/registrations/example.com",
                "domainName": "example.com",
                "createTime": "2019-01-11T14:09:08.068037639Z",
                "updateTime": "2019-01-11T14:09:16.933570624Z",
                "expireTime": "2020-01-11T14:09:12Z",
                "state": "ACTIVE",
                "dnsConfig": {},
                "whoisConfig": {
                  "privacy": "USE_WHOIS_PRIVACY_PROXY",
                  "registrantContact": {
                    "postalAddress": {
                      "regionCode": "US",
                      "postalCode": "94043",
                      "administrativeArea": "CA",
                      "locality": "Mountain View",
                      "addressLines": [
                        "1600 Amphitheatre Pkwy"
                      ],
                      "recipients": [
                        "Test User"
                      ]
                    },
                    "email": "testuser@google.com",
                    "phoneNumber": "+1.1234567890"
                  }
                }
              }
            }
        repeatable: true
    - expect_progress_tracker:
        message: Waiting for [operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86]
          to complete
        status: SUCCESS
    - expect_stderr: |
        Updated registration [example.com].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations update example.com --cloud-dns-zone=example-com
    events:
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/dns/v1/projects/fake-project/managedZones/example-com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "example-com",
              "dnsName": "example.com.",
              "description": "",
              "id": "7109061377772250347",
              "nameServers": [
                "ns-cloud-d1.googledomains.com.",
                "ns-cloud-d2.googledomains.com.",
                "ns-cloud-d3.googledomains.com.",
                "ns-cloud-d4.googledomains.com."
              ],
              "creationTime": "2019-01-09T14:14:57.933Z",
              "kind": "dns#managedZone"
            }

    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/registrations/example.com?alt=json&updateMask=dns_config&validateOnly=False
          method: PATCH
          headers: {}
          body:
            json:
              dnsConfig:
                nameServers:
                - ns-cloud-d1.googledomains.com.
                - ns-cloud-d2.googledomains.com.
                - ns-cloud-d3.googledomains.com.
                - ns-cloud-d4.googledomains.com.
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547475255493-57f6ba8e701a1-fb76a369-357a5cc9",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.OperationMetadata",
                "createTime": "2019-01-14T14:14:17.022253283Z",
                "target": "projects/fake-project/locations/global/registrations/example.com",
                "verb": "update",
                "apiVersion": "v1alpha1"
              },
              "done": false
            }

    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/operations/operation-1547475255493-57f6ba8e701a1-fb76a369-357a5cc9?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547475255493-57f6ba8e701a1-fb76a369-357a5cc9",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.OperationMetadata",
                "createTime": "2019-01-14T14:14:17.022253283Z",
                "target": "projects/fake-project/locations/global/registrations/example.com",
                "verb": "update",
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.Registration",
                "name": "projects/fake-project/locations/global/registrations/example.com",
                "domainName": "example.com",
                "createTime": "2019-01-11T14:09:08.068037639Z",
                "updateTime": "2019-01-11T14:09:16.933570624Z",
                "expireTime": "2020-01-11T14:09:12Z",
                "state": "ACTIVE",
                "dnsConfig": {
                  "nameServers": [
                    "ns-cloud-d1.googledomains.com.",
                    "ns-cloud-d2.googledomains.com.",
                    "ns-cloud-d3.googledomains.com.",
                    "ns-cloud-d4.googledomains.com."
                  ]
                },
                "whoisConfig": {
                  "privacy": "USE_WHOIS_PRIVACY_PROXY",
                  "registrantContact": {
                    "postalAddress": {
                      "regionCode": "US",
                      "postalCode": "94043",
                      "administrativeArea": "CA",
                      "locality": "Mountain View",
                      "addressLines": [
                        "1600 Amphitheatre Pkwy"
                      ],
                      "recipients": [
                        "Test User"
                      ]
                    },
                    "email": "testuser@google.com",
                    "phoneNumber": "+1.1234567890"
                  }
                }
              }
            }

    - expect_progress_tracker:
        message: Waiting for [operation-1547475255493-57f6ba8e701a1-fb76a369-357a5cc9]
          to complete
        status: SUCCESS
    - expect_stderr: |
        Updated registration [example.com].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations update example.app --name-servers=ns-cloud-a1.googledomains.com.,ns-cloud-a2.googledomains.com.,ns-cloud-a3.googledomains.com. --validate-only
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/registrations/example.app?alt=json&updateMask=dns_config&validateOnly=True
          method: PATCH
          headers: {}
          body:
            json:
              dnsConfig:
                nameServers:
                - ns-cloud-a1.googledomains.com.
                - ns-cloud-a2.googledomains.com.
                - ns-cloud-a3.googledomains.com.
        return_response:
          headers:
            status: '200'
          body: '{}'
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations update example.app --cloud-dns-zone=example-com
    events:
    - api_call:
        expect_request:
          uri: https://www.googleapis.com/dns/v1/projects/fake-project/managedZones/example-com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "example-com",
              "dnsName": "example.com.",
              "description": "",
              "id": "7109061377772250347",
              "nameServers": [
                "ns-cloud-d1.googledomains.com.",
                "ns-cloud-d2.googledomains.com.",
                "ns-cloud-d3.googledomains.com.",
                "ns-cloud-d4.googledomains.com."
              ],
              "creationTime": "2019-01-09T14:14:57.933Z",
              "kind": "dns#managedZone"
            }
    - expect_exit:
        code: 1
        message: The dnsName [example.com.] of specified Cloud DNS zone [example-com]
          does not match the registration domain [example.app.]
- execute_command:
    command: |
      domains registrations update example.com --update-labels=test=foo
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/registrations/example.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example.com",
              "domainName": "example.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "updateTime": "2019-01-11T14:09:16.933570624Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "dnsConfig": {},
              "whoisConfig": {
                "privacy": "USE_WHOIS_PRIVACY_PROXY",
                "registrantContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "testuser@google.com",
                  "phoneNumber": "+1.1234567890"
                }
              }
            }
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/registrations/example.com?alt=json&updateMask=labels&validateOnly=False
          method: PATCH
          headers: {}
          body:
            json:
              labels:
                test: foo
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "target": "projects/fake-project/locations/global/registrations/example.com",
                "verb": "update",
                "apiVersion": "v1alpha1"
              },
              "done": false
            }

    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha1/projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "endTime": "2019-01-14T13:20:52.606261846Z",
                "target": "projects/fake-project/locations/global/registrations/example.com",
                "verb": "update",
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.domains.v1alpha1.Registration",
                "name": "projects/fake-project/locations/global/registrations/example.com",
                "domainName": "example.com",
                "createTime": "2019-01-11T14:09:08.068037639Z",
                "updateTime": "2019-01-11T14:09:16.933570624Z",
                "expireTime": "2020-01-11T14:09:12Z",
                "state": "ACTIVE",
                "dnsConfig": {},
                "whoisConfig": {
                  "privacy": "USE_WHOIS_PRIVACY_PROXY",
                  "registrantContact": {
                    "postalAddress": {
                      "regionCode": "US",
                      "postalCode": "94043",
                      "administrativeArea": "CA",
                      "locality": "Mountain View",
                      "addressLines": [
                        "1600 Amphitheatre Pkwy"
                      ],
                      "recipients": [
                        "Test User"
                      ]
                    },
                    "email": "testuser@google.com",
                    "phoneNumber": "+1.1234567890"
                  }
                }
              }
            }
        repeatable: true
    - expect_progress_tracker:
        message: Waiting for [operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86]
          to complete
        status: SUCCESS
    - expect_stderr: |
        Updated registration [example.com].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations update example.app
    events:
    - expect_exit:
        code: 1
        message: Must specify at least one field to update.
