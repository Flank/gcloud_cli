title: cloud domains configure contacts test scenario
release_tracks: [ALPHA, BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- set_property: core/account user@example.com
- execute:
  - command: |
      domains registrations configure contacts example.com  --contact-privacy=redacted-contact-data
  - prompt:
    - message: Contact data not provided using the --contact-data-from-file flag.
    - prompt_string: Do you want to enter it interactively
    - input: y
  - prompt:
    - message: Which contact do you want to change?
    - choices: &id001
      - all the contacts to the same value
      - registrant contact
      - admin contact
      - technical contact
      - cancel
    - input: '3'
  - prompt:
    - message: 'Full name:  '
    - input: '   '
  - stderr: |2
       Name must not be empty.
  - prompt:
    - message: 'Full name:  '
    - input: Googler
  - prompt:
    - message: 'Organization (if applicable):  '
    - input: Google
  - prompt:
    - message: 'Email (user@example.com):  '
    - input: invalid-email
  - stderr: |2
       Invalid email address.
  - prompt:
    - message: 'Email (user@example.com):  '
    - input: ''
  - stderr: |
      Enter phone number with country code, e.g. "+1.8005550123".
  - prompt:
    - message: 'Phone number:  '
    - input: ''
  - stderr: |2
       Phone number must not be empty.
  - prompt:
    - message: 'Phone number:  '
    - input: '+1.1234567890'
  - stderr: |
      Enter fax number with country code, e.g. "+1.8005550123".
  - prompt:
    - message: 'Fax number (if applicable):  '
    - input: '+1.1234567890'
  - stderr: |
      Enter two-letter country code, e.g. "US" or "PL".
  - prompt:
    - message: 'Country code:  '
    - input: Poland
  - stderr: |2
       Country code must be in ISO 3166-1 format, e.g. "US" or "PL".
       See https://support.google.com/business/answer/6270107 for a list of valid choices.
  - prompt:
    - message: 'Country code:  '
    - input: PL
  - prompt:
    - message: 'Postal code/zipcode:  '
    - input: 00-113
  - prompt:
    - message: 'State (if applicable):  '
    - input: ''
  - prompt:
    - message: 'City:  '
    - input: Warsaw
  - prompt:
    - message: 'Street address (incl. building, apt):  '
    - input: WFC
  - progress_tracker:
    - message: Waiting for 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
        to complete
    - status: SUCCESS
  - stderr: |
      Updated registration [example.com].
actions:
- define_reference:
    reference: api-version
    track_values:
      ALPHA: v1alpha2
      BETA: v1beta1
- set_property:
    core/account: user@example.com
- execute_command:
    command: |
      domains registrations configure contacts example.com  --contact-privacy=redacted-contact-data
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example.com",
              "domainName": "example.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "contactSettings": {
                "privacy": "PRIVATE_CONTACT_DATA",
                "registrantContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "registrant@google.com",
                  "phoneNumber": "+1.1234567890"
                },
                "adminContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "admin@google.com",
                  "phoneNumber": "+1.1234567890"
                },
                "technicalContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "technical@google.com",
                  "phoneNumber": "+1.1234567890"
                }
              }
            }
    - expect_prompt_continue:
        message: Contact data not provided using the --contact-data-from-file flag.
        prompt_string: Do you want to enter it interactively
        user_input: y
    - expect_prompt_choice:
        choices: *id001
        message: Which contact do you want to change?
        user_input: '3'
    - expect_prompt_response:
        message: 'Full name:  '
        user_input: '   '
    - expect_stderr: |2
         Name must not be empty.
    - expect_prompt_response:
        message: 'Full name:  '
        user_input: Googler
    - expect_prompt_response:
        message: 'Organization (if applicable):  '
        user_input: Google
    - expect_prompt_response:
        message: 'Email (user@example.com):  '
        user_input: invalid-email
    - expect_stderr: |2
         Invalid email address.
    - expect_prompt_response:
        message: 'Email (user@example.com):  '
        user_input: ''
    - expect_stderr: |
        Enter phone number with country code, e.g. "+1.8005550123".
    - expect_prompt_response:
        message: 'Phone number:  '
        user_input: ''
    - expect_stderr: |2
         Phone number must not be empty.
    - expect_prompt_response:
        message: 'Phone number:  '
        user_input: '+1.1234567890'
    - expect_stderr: |
        Enter fax number with country code, e.g. "+1.8005550123".
    - expect_prompt_response:
        message: 'Fax number (if applicable):  '
        user_input: '+1.1234567890'
    - expect_stderr: |
        Enter two-letter country code, e.g. "US" or "PL".
    - expect_prompt_response:
        message: 'Country code:  '
        user_input: Poland
    - expect_stderr: |2
         Country code must be in ISO 3166-1 format, e.g. "US" or "PL".
         See https://support.google.com/business/answer/6270107 for a list of valid choices.
    - expect_prompt_response:
        message: 'Country code:  '
        user_input: PL
    - expect_prompt_response:
        message: 'Postal code/zipcode:  '
        user_input: 00-113
    - expect_prompt_response:
        message: 'State (if applicable):  '
        user_input: ''
    - expect_prompt_response:
        message: 'City:  '
        user_input: Warsaw
    - expect_prompt_response:
        message: 'Street address (incl. building, apt):  '
        user_input: WFC
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example.com:configureContactSettings?alt=json
          method: POST
          headers: {}
          body:
            json:
              contactSettings:
                adminContact:
                  email: user@example.com
                  phoneNumber: '+1.1234567890'
                  faxNumber: '+1.1234567890'
                  postalAddress:
                    addressLines:
                    - WFC
                    administrativeArea: ''
                    locality: Warsaw
                    organization: Google
                    postalCode: 00-113
                    recipients:
                    - Googler
                    regionCode: PL
                privacy: REDACTED_CONTACT_DATA
              updateMask: privacy,admin_contact
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.$$api-version$$.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "target": "projects/fake-project/locations/global/registrations/example-glue-records-ds-records.com",
                "verb": "update",
                "apiVersion": "$$api-version$$"
              },
              "done": false
            }
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.$$api-version$$.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "endTime": "2019-01-14T14:41:31.657446027Z",
                "target": "projects/fake-project/locations/global/registrations/example.com",
                "verb": "update",
                "apiVersion": "$$api-version$$"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.domains.$$api-version$$.Registration",
                "name": "projects/fake-project/locations/global/registrations/example.com",
                "domainName": "example.com",
                "createTime": "2019-02-20T16:47:22.739565061Z",
                "expireTime": "2020-02-20T16:47:26Z",
                "state": "ACTIVE",
                "contactSettings": {
                }
              }
            }
    - expect_progress_tracker:
        message: Waiting for 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
          to complete
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: {}
    - expect_stderr: |
        Updated registration [example.com].
    - expect_exit:
        code: 0
