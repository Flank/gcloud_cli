title: cloud domains configure dns test scenario
release_tracks: [ALPHA, BETA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - command: |
      domains registrations configure dns example-ds-records.com --dns-settings-from-file=customNameServers.yaml
  - stderr: |
      WARNING: Name servers should not be changed if DS records are present. Disable DNSSEC first and wait 24 hours before you change name servers. Otherwise your domain may stop serving.
  - prompt:
    - message: This operation is not safe.
    - input: y
  - progress_tracker:
    - message: Waiting for 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
        to complete
    - status: SUCCESS
  - stderr: |
      Updated registration [example-ds-records.com].
- execute:
  - command: |
      domains registrations configure dns ÜniCode.com. --dns-settings-from-file=googleDomainsNameServers.yaml --async --validate-only
  - stderr: |
      The command will not have any effect because validate-only flag is present.
- execute:
  - command: |
      domains registrations configure dns example-ns-not-changed.com --dns-settings-from-file=googleDomainsNameServers.yaml --async
  - stderr: |
      Started 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
      Update in progress for registration [example-ns-not-changed.com].
- execute:
  - command: |
      domains registrations configure dns example-ds-records.com --dns-settings-from-file=customNSGlueRecordsDsRecords.yaml  --unsafe-dns-update --async --quiet
  - stderr: |
      WARNING: Name servers should not be changed if DS records are present. Disable DNSSEC first and wait 24 hours before you change name servers. Otherwise your domain may stop serving.
  - stderr: |
      Started 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
      Update in progress for registration [example-ds-records.com].
- execute:
  - command: |
      domains registrations configure dns example-ds-records.com --dns-settings-from-file=customNSGlueRecordsDsRecords.yaml
  - stderr: |
      WARNING: Name servers should not be changed if DS records are present. Disable DNSSEC first and wait 24 hours before you change name servers. Otherwise your domain may stop serving.
  - prompt:
    - message: This operation is not safe.
    - input: n
  - error: '1: Aborted by user.'
- execute:
  - command: |
      domains registrations configure dns example.com --dns-settings-from-file=incorrectValue.yaml
  - error: |-
      1: DNS settings file 'incorrectValue.yaml' does not contain valid dns_settings message.
      Problematic fields: 'customDns.dsRecords.digestType'
- execute:
  - command: |
      domains registrations configure dns example.com --dns-settings-from-file=incorrectField.yaml
  - error: |-
      1: DNS settings file 'incorrectField.yaml' does not contain valid dns_settings message.
      Problematic fields: 'googleDomainsDns.glueRecords'
- execute:
  - command: |
      domains registrations configure dns example.com --dns-settings-from-file=googleDomainsNameServers.yaml --disable-dnssec
  - error: '1: argument --disable-dnssec: At most one of --dns-settings-from-file
      | --disable-dnssec may be specified.'
actions:
- define_reference:
    reference: api-version
    track_values:
      ALPHA: v1alpha2
      BETA: v1beta1
- write_file:
    path: customNameServers.yaml
    contents: |
      customDns:
        nameServers:
        - new.ns1.com
        - new.ns2.com
- write_file:
    path: googleDomainsNameServers.yaml
    contents: |
      googleDomainsDns:
        dsState: DS_RECORDS_PUBLISHED
- write_file:
    path: customNSGlueRecordsDsRecords.yaml
    contents: |
      customDns:
        nameServers:
        - new.ns1.com
        - new.ns2.com
        dsRecords:
        - keyTag: 24
          algorithm: RSASHA1
          digestType: SHA256
          digest: 2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d
        - keyTag: 42
          algorithm: RSASHA1
          digestType: SHA256
          digest: 2e1cfa82bf35c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d
      glueRecords:
      - hostName: ns1.example.com
        ipv4Addresses:
        - 8.8.8.8
      - hostName: ns2.example.com
        ipv4Addresses:
        - 8.8.8.8
- write_file:
    path: incorrectField.yaml
    contents: |
      googleDomainsDns:
        glueRecords:
        - host: ns1.example.com
          ipv4Addresses:
          - '8.8.8.8'
- write_file:
    path: incorrectValue.yaml
    contents: |
      customDns:
        dsRecords:
        - digestType: MD5
- execute_command:
    command: |
      domains registrations configure dns example-ds-records.com --dns-settings-from-file=customNameServers.yaml
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example-ds-records.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example-ds-records.com",
              "domainName": "example-ds-records.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "dnsSettings": {
                "googleDomainsDns": {
                  "nameServers": ["ns1.com", "ns2.com"],
                  "dsState": "DS_RECORDS_PUBLISHED",
                  "dsRecords": [{
                    "keyTag": 24,
                    "algorithm": "RSASHA1",
                    "digestType": "SHA256",
                    "digest": "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
                  }]
                }
              }
            }
    - expect_stderr: |
        WARNING: Name servers should not be changed if DS records are present. Disable DNSSEC first and wait 24 hours before you change name servers. Otherwise your domain may stop serving.
    - expect_prompt_continue:
        message: This operation is not safe.
        user_input: y
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example-ds-records.com:configureDnsSettings?alt=json
          method: POST
          headers: {}
          body:
            json:
              dnsSettings:
                customDns:
                  nameServers:
                  - new.ns1.com
                  - new.ns2.com
              updateMask: glue_records,custom_dns
              validateOnly: false
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.$$api-version$$.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "target": "projects/fake-project/locations/global/registrations/example-ds-records.com",
                "verb": "update",
                "apiVersion": "$$api-version$$"
              },
              "done": false
            }
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.$$api-version$$.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "endTime": "2019-01-14T14:41:31.657446027Z",
                "target": "projects/fake-project/locations/global/registrations/example-ds-records.com",
                "verb": "update",
                "apiVersion": "$$api-version$$"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.domains.$$api-version$$.Registration",
                "name": "projects/fake-project/locations/global/registrations/example-ds-records.com",
                "domainName": "example-ds-records.com",
                "createTime": "2019-02-20T16:47:22.739565061Z",
                "expireTime": "2020-02-20T16:47:26Z",
                "state": "ACTIVE",
                "dnsSettings": {
                  "customDns": {
                    "nameServers": ["new.ns1.com", "new.ns2.com"]
                  }
                }
              }
            }
        repeatable: true
    - expect_progress_tracker:
        message: Waiting for 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
          to complete
        status: SUCCESS
    - expect_stderr: |
        Updated registration [example-ds-records.com].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations configure dns ÜniCode.com. --dns-settings-from-file=googleDomainsNameServers.yaml --async --validate-only
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/xn--nicode-2ya.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/xn--nicode-2ya.com",
              "domainName": "xn--nicode-2ya.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "dnsSettings": {
                "customDns": {
                  "nameServers": ["ns1.com", "ns2.com"]
                }
              }
            }
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/xn--nicode-2ya.com:configureDnsSettings?alt=json
          method: POST
          headers: {}
          body:
            json:
              dnsSettings:
                googleDomainsDns:
                  dsState: DS_RECORDS_PUBLISHED
              updateMask: glue_records,google_domains_dns
              validateOnly: true
        return_response:
          headers:
            status: '200'
          body: |
            {
            }
    - expect_stderr: |
        The command will not have any effect because validate-only flag is present.
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations configure dns example-ns-not-changed.com --dns-settings-from-file=googleDomainsNameServers.yaml --async
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example-ns-not-changed.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example-ns-not-changed.com.com",
              "domainName": "example-ns-not-changed.com.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "dnsSettings": {
                "googleDomainsDns": {
                  "nameServers": ["ns1.com", "ns2.com"],
                  "dsState": "DS_RECORDS_PUBLISHED",
                  "dsRecords": [{
                    "keyTag": 24,
                    "algorithm": "RSASHA1",
                    "digestType": "SHA256",
                    "digest": "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
                  }]
                }
              }
            }
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example-ns-not-changed.com:configureDnsSettings?alt=json
          method: POST
          headers: {}
          body:
            json:
              dnsSettings:
                googleDomainsDns:
                  dsState: DS_RECORDS_PUBLISHED
              updateMask: glue_records,google_domains_dns
              validateOnly: false
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.$$api-version$$.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "target": "projects/fake-project/locations/global/registrations/example-ns-not-changed.com.com",
                "verb": "update",
                "apiVersion": "$$api-version$$"
              },
              "done": false
            }
    - expect_stderr: |
        Started 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
        Update in progress for registration [example-ns-not-changed.com].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations configure dns example-ds-records.com --dns-settings-from-file=customNSGlueRecordsDsRecords.yaml  --unsafe-dns-update --async --quiet
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example-ds-records.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example-ds-records.com",
              "domainName": "example-ds-records.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "dnsSettings": {
                "googleDomainsDns": {
                  "nameServers": ["ns1.com", "ns2.com"],
                  "dsState": "DS_RECORDS_PUBLISHED",
                  "dsRecords": [{
                    "keyTag": 24,
                    "algorithm": "RSASHA1",
                    "digestType": "SHA256",
                    "digest": "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
                  }]
                }
              }
            }
    - expect_stderr: |
        WARNING: Name servers should not be changed if DS records are present. Disable DNSSEC first and wait 24 hours before you change name servers. Otherwise your domain may stop serving.
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example-ds-records.com:configureDnsSettings?alt=json
          method: POST
          headers: {}
          body:
            json:
              dnsSettings:
                glueRecords:
                - hostName: ns1.example.com
                  ipv4Addresses:
                  - 8.8.8.8
                - hostName: ns2.example.com
                  ipv4Addresses:
                  - 8.8.8.8
                customDns:
                  dsRecords:
                  - algorithm: RSASHA1
                    digest: 2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d
                    digestType: SHA256
                    keyTag: 24
                  - algorithm: RSASHA1
                    digest: 2e1cfa82bf35c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d
                    digestType: SHA256
                    keyTag: 42
                  nameServers:
                  - new.ns1.com
                  - new.ns2.com
              updateMask: glue_records,custom_dns
              validateOnly: false
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/operations/operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.domains.$$api-version$$.OperationMetadata",
                "createTime": "2019-01-14T13:20:39.218508799Z",
                "target": "projects/fake-project/locations/global/registrations/example-ds-records.com",
                "verb": "update",
                "apiVersion": "$$api-version$$"
              },
              "done": false
            }
    - expect_stderr: |
        Started 'operation-1547472037425-57f6ae9172fbe-4e8005f1-751b4e86'
        Update in progress for registration [example-ds-records.com].
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations configure dns example-ds-records.com --dns-settings-from-file=customNSGlueRecordsDsRecords.yaml
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example-ds-records.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example-ds-records.com",
              "domainName": "example-ds-records.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "dnsSettings": {
                "googleDomainsDns": {
                  "nameServers": ["ns1.com", "ns2.com"],
                  "dsState": "DS_RECORDS_PUBLISHED",
                  "dsRecords": [{
                    "keyTag": 24,
                    "algorithm": "RSASHA1",
                    "digestType": "SHA256",
                    "digest": "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
                  }]
                }
              }
            }
    - expect_stderr: |
        WARNING: Name servers should not be changed if DS records are present. Disable DNSSEC first and wait 24 hours before you change name servers. Otherwise your domain may stop serving.
    - expect_prompt_continue:
        message: This operation is not safe.
        user_input: n
    - expect_exit:
        code: 1
        message: Aborted by user.
- execute_command:
    command: |
      domains registrations configure dns example.com --dns-settings-from-file=incorrectValue.yaml
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example.com",
              "domainName": "example.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "dnsSettings": {
                "customDns": {
                  "nameServers": ["ns1.com", "ns2.com"]
                }
              }
            }
    - expect_exit:
        code: 1
        message: |-
          DNS settings file 'incorrectValue.yaml' does not contain valid dns_settings message.
          Problematic fields: 'customDns.dsRecords.digestType'
- execute_command:
    command: |
      domains registrations configure dns example.com --dns-settings-from-file=incorrectField.yaml
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/$$api-version$$/projects/fake-project/locations/global/registrations/example.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example.com",
              "domainName": "example.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "dnsSettings": {
                "customDns": {
                  "nameServers": ["ns1.com", "ns2.com"]
                }
              }
            }
    - expect_exit:
        code: 1
        message: |-
          DNS settings file 'incorrectField.yaml' does not contain valid dns_settings message.
          Problematic fields: 'googleDomainsDns.glueRecords'
- execute_command:
    command: |
      domains registrations configure dns example.com --dns-settings-from-file=googleDomainsNameServers.yaml --disable-dnssec
    events:
    - expect_exit:
        code: 1
        message: |-
          argument --disable-dnssec: At most one of --dns-settings-from-file | --disable-dnssec may be specified.
