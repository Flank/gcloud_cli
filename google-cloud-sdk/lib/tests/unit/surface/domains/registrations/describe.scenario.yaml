title: cloud domains describe test scenario
release_tracks: [ALPHA]
summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - command: |
      domains registrations describe outstanding-issues-example.com
  - stdout: |
      contactSettings:
        adminContact:
          email: testuser@google.com
          phoneNumber: '+1.1234567890'
          postalAddress:
            addressLines:
            - 1600 Amphitheatre Pkwy
            administrativeArea: CA
            locality: Mountain View
            postalCode: '94043'
            recipients:
            - Test User
            regionCode: US
        privacy: PRIVATE_CONTACT_DATA
        registrantContact:
          email: testuser@google.com
          phoneNumber: '+1.1234567890'
          postalAddress:
            addressLines:
            - 1600 Amphitheatre Pkwy
            administrativeArea: CA
            locality: Mountain View
            postalCode: '94043'
            recipients:
            - Test User
            regionCode: US
        technicalContact:
          email: testuser@google.com
          phoneNumber: '+1.1234567890'
          postalAddress:
            addressLines:
            - 1600 Amphitheatre Pkwy
            administrativeArea: CA
            locality: Mountain View
            postalCode: '94043'
            recipients:
            - Test User
            regionCode: US
      createTime: '2019-01-11T14:09:08.068037639Z'
      dnsSettings:
        customDns:
          nameServers:
          - ns1.com
          - ns2.com
      domainName: outstanding-issues-example.com
      expireTime: '2020-01-11T14:09:12Z'
      issues:
      - UNVERIFIED_EMAIL
      managementSettings:
        transferLockState: LOCKED
      name: projects/fake-project/locations/global/registrations/outstanding-issues-example.com
      state: SUSPENDED
      supportedPrivacy:
      - PRIVATE_CONTACT_DATA
      - REDACTED_CONTACT_DATA
      - PUBLIC_CONTACT_DATA
- execute:
  - command: |
      domains registrations describe example.com
  - stdout: |
      contactSettings:
        adminContact:
          email: testuser@google.com
          phoneNumber: '+1.1234567890'
          postalAddress:
            addressLines:
            - 1600 Amphitheatre Pkwy
            administrativeArea: CA
            locality: Mountain View
            postalCode: '94043'
            recipients:
            - Test User
            regionCode: US
        privacy: REDACTED_CONTACT_DATA
        registrantContact:
          email: testuser@google.com
          phoneNumber: '+1.1234567890'
          postalAddress:
            addressLines:
            - 1600 Amphitheatre Pkwy
            administrativeArea: CA
            locality: Mountain View
            postalCode: '94043'
            recipients:
            - Test User
            regionCode: US
        technicalContact:
          email: testuser@google.com
          phoneNumber: '+1.1234567890'
          postalAddress:
            addressLines:
            - 1600 Amphitheatre Pkwy
            administrativeArea: CA
            locality: Mountain View
            postalCode: '94043'
            recipients:
            - Test User
            regionCode: US
      createTime: '2019-01-11T14:09:08.068037639Z'
      dnsSettings:
        glueRecords:
        - hostName: ns1.example.com
          ipv4Addresses:
          - 8.8.8.8
        googleDomainsDns:
          dsRecords:
          - algorithm: RSASHA1
            digest: 2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d
            digestType: SHA256
            keyTag: 24
          dsState: DS_RECORDS_PUBLISHED
          nameServers:
          - ns1.com
          - ns2.com
      domainName: example.com
      expireTime: '2020-01-11T14:09:12Z'
      managementSettings:
        transferLockState: UNLOCKED
      name: projects/fake-project/locations/global/registrations/example.com
      state: ACTIVE
      supportedPrivacy:
      - PRIVATE_CONTACT_DATA
      - REDACTED_CONTACT_DATA
- execute:
  - command: |
      domains registrations describe exported.com
  - stdout: |
      createTime: '2019-01-11T14:09:08.068037639Z'
      domainName: exported.com
      expireTime: '2020-01-11T14:09:12Z'
      name: projects/fake-project/locations/global/registrations/exported.com
      state: EXPORTED
- execute:
  - command: |
      domains registrations describe ÃœniCode.com.
  - stdout: |
      createTime: '2019-01-11T14:09:08.068037639Z'
      domainName: xn--nicode-2ya.com
      expireTime: '2020-01-11T14:09:12Z'
      name: projects/fake-project/locations/global/registrations/xn--nicode-2ya.com
      state: EXPORTED
actions:
- execute_command:
    command: |
      domains registrations describe outstanding-issues-example.com
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha2/projects/fake-project/locations/global/registrations/outstanding-issues-example.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/outstanding-issues-example.com",
              "domainName": "outstanding-issues-example.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "SUSPENDED",
              "issues": [
                "UNVERIFIED_EMAIL"
              ],
              "managementSettings": {
                "transferLockState": "LOCKED"
              },
              "dnsSettings": {
                "customDns": {
                  "nameServers": ["ns1.com", "ns2.com"]
                }
              },
              "supportedPrivacy": ["PRIVATE_CONTACT_DATA", "REDACTED_CONTACT_DATA", "PUBLIC_CONTACT_DATA"],
              "contactSettings": {
                "privacy": "PRIVATE_CONTACT_DATA",
                "registrantContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "testuser@google.com",
                  "phoneNumber": "+1.1234567890"
                },
                "adminContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "testuser@google.com",
                  "phoneNumber": "+1.1234567890"
                },
                "technicalContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "testuser@google.com",
                  "phoneNumber": "+1.1234567890"
                }
              }
            }
    - expect_stdout: |
        contactSettings:
          adminContact:
            email: testuser@google.com
            phoneNumber: '+1.1234567890'
            postalAddress:
              addressLines:
              - 1600 Amphitheatre Pkwy
              administrativeArea: CA
              locality: Mountain View
              postalCode: '94043'
              recipients:
              - Test User
              regionCode: US
          privacy: PRIVATE_CONTACT_DATA
          registrantContact:
            email: testuser@google.com
            phoneNumber: '+1.1234567890'
            postalAddress:
              addressLines:
              - 1600 Amphitheatre Pkwy
              administrativeArea: CA
              locality: Mountain View
              postalCode: '94043'
              recipients:
              - Test User
              regionCode: US
          technicalContact:
            email: testuser@google.com
            phoneNumber: '+1.1234567890'
            postalAddress:
              addressLines:
              - 1600 Amphitheatre Pkwy
              administrativeArea: CA
              locality: Mountain View
              postalCode: '94043'
              recipients:
              - Test User
              regionCode: US
        createTime: '2019-01-11T14:09:08.068037639Z'
        dnsSettings:
          customDns:
            nameServers:
            - ns1.com
            - ns2.com
        domainName: outstanding-issues-example.com
        expireTime: '2020-01-11T14:09:12Z'
        issues:
        - UNVERIFIED_EMAIL
        managementSettings:
          transferLockState: LOCKED
        name: projects/fake-project/locations/global/registrations/outstanding-issues-example.com
        state: SUSPENDED
        supportedPrivacy:
        - PRIVATE_CONTACT_DATA
        - REDACTED_CONTACT_DATA
        - PUBLIC_CONTACT_DATA
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations describe example.com
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha2/projects/fake-project/locations/global/registrations/example.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/example.com",
              "domainName": "example.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "ACTIVE",
              "managementSettings": {
                "transferLockState": "UNLOCKED"
              },
              "dnsSettings": {
                "googleDomainsDns": {
                  "nameServers": ["ns1.com", "ns2.com"],
                  "dsState": "DS_RECORDS_PUBLISHED",
                  "dsRecords": [{
                    "keyTag": 24,
                    "algorithm": "RSASHA1",
                    "digestType": "SHA256",
                    "digest": "2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d"
                  }]
                },
                "glueRecords": [{
                  "hostName": "ns1.example.com",
                  "ipv4Addresses": ["8.8.8.8"]
                }]
              },
              "supportedPrivacy": ["PRIVATE_CONTACT_DATA", "REDACTED_CONTACT_DATA"],
              "contactSettings": {
                "privacy": "REDACTED_CONTACT_DATA",
                "registrantContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "testuser@google.com",
                  "phoneNumber": "+1.1234567890"
                },
                "adminContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "testuser@google.com",
                  "phoneNumber": "+1.1234567890"
                },
                "technicalContact": {
                  "postalAddress": {
                    "regionCode": "US",
                    "postalCode": "94043",
                    "administrativeArea": "CA",
                    "locality": "Mountain View",
                    "addressLines": [
                      "1600 Amphitheatre Pkwy"
                    ],
                    "recipients": [
                      "Test User"
                    ]
                  },
                  "email": "testuser@google.com",
                  "phoneNumber": "+1.1234567890"
                }
              }
            }
    - expect_stdout: |
        contactSettings:
          adminContact:
            email: testuser@google.com
            phoneNumber: '+1.1234567890'
            postalAddress:
              addressLines:
              - 1600 Amphitheatre Pkwy
              administrativeArea: CA
              locality: Mountain View
              postalCode: '94043'
              recipients:
              - Test User
              regionCode: US
          privacy: REDACTED_CONTACT_DATA
          registrantContact:
            email: testuser@google.com
            phoneNumber: '+1.1234567890'
            postalAddress:
              addressLines:
              - 1600 Amphitheatre Pkwy
              administrativeArea: CA
              locality: Mountain View
              postalCode: '94043'
              recipients:
              - Test User
              regionCode: US
          technicalContact:
            email: testuser@google.com
            phoneNumber: '+1.1234567890'
            postalAddress:
              addressLines:
              - 1600 Amphitheatre Pkwy
              administrativeArea: CA
              locality: Mountain View
              postalCode: '94043'
              recipients:
              - Test User
              regionCode: US
        createTime: '2019-01-11T14:09:08.068037639Z'
        dnsSettings:
          glueRecords:
          - hostName: ns1.example.com
            ipv4Addresses:
            - 8.8.8.8
          googleDomainsDns:
            dsRecords:
            - algorithm: RSASHA1
              digest: 2e1cfa82b035c26cbbbdae632cea070514eb8b773f616aaeaf668e2f0be8f10d
              digestType: SHA256
              keyTag: 24
            dsState: DS_RECORDS_PUBLISHED
            nameServers:
            - ns1.com
            - ns2.com
        domainName: example.com
        expireTime: '2020-01-11T14:09:12Z'
        managementSettings:
          transferLockState: UNLOCKED
        name: projects/fake-project/locations/global/registrations/example.com
        state: ACTIVE
        supportedPrivacy:
        - PRIVATE_CONTACT_DATA
        - REDACTED_CONTACT_DATA
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations describe exported.com
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha2/projects/fake-project/locations/global/registrations/exported.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/exported.com",
              "domainName": "exported.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "EXPORTED"
            }
    - expect_stdout: |
        createTime: '2019-01-11T14:09:08.068037639Z'
        domainName: exported.com
        expireTime: '2020-01-11T14:09:12Z'
        name: projects/fake-project/locations/global/registrations/exported.com
        state: EXPORTED
    - expect_exit:
        code: 0
- execute_command:
    command: |
      domains registrations describe ÃœniCode.com.
    events:
    - api_call:
        expect_request:
          uri: https://domains.googleapis.com/v1alpha2/projects/fake-project/locations/global/registrations/xn--nicode-2ya.com?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/locations/global/registrations/xn--nicode-2ya.com",
              "domainName": "xn--nicode-2ya.com",
              "createTime": "2019-01-11T14:09:08.068037639Z",
              "expireTime": "2020-01-11T14:09:12Z",
              "state": "EXPORTED"
            }
    - expect_stdout: |
        createTime: '2019-01-11T14:09:08.068037639Z'
        domainName: xn--nicode-2ya.com
        expireTime: '2020-01-11T14:09:12Z'
        name: projects/fake-project/locations/global/registrations/xn--nicode-2ya.com
        state: EXPORTED
    - expect_exit:
        code: 0
