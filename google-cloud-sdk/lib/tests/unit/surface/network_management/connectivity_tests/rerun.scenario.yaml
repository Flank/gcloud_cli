title: network-management connectivity-tests rerun tests
release_tracks: [GA, BETA]

summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: network-management connectivity-tests rerun mytest
  - stderr: |
      Request issued for: [mytest]
  - progress_tracker:
    - message: Waiting for operation [$$operation$$] to complete
    - status: SUCCESS
  - stdout: |
      createTime: '2020-01-28T19:19:17.504173656Z'
      name: projects/fake-project/locations/global/connectivityTests/mytest
      protocol: TCP
      reachabilityDetails:
        error: {}
        result: UNREACHABLE
        verifyTime: '2020-01-28T19:19:23.506936Z'
      updateTime: '2020-01-28T19:19:23.529506702Z'
- execute:
  - command: network-management connectivity-tests rerun mytest --async
  - stderr: |
      Request issued for: [mytest]
      Check operation [$$operation$$] for status.
  - stdout: |
      done: false
      metadata:
        '@type': type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata
        apiVersion: v1
        cancelRequested: false
        createTime: '2020-01-28T20:33:01.243468876Z'
        target: projects/fake-project/locations/global/connectivityTests/mytest
        verb: rerun
      name: $$operation$$
actions:
- execute_command:
    command: network-management connectivity-tests rerun mytest
    events:
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest:rerun?alt=json
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata",
                "createTime": "2020-01-28T20:33:01.243468876Z",
                "target": "projects/fake-project/locations/global/connectivityTests/mytest",
                "verb": "rerun",
                "cancelRequested": false,
                "apiVersion": "v1"
              },
              "done": false
            }
    - expect_stderr: |
        Request issued for: [mytest]
    - expect_progress_tracker:
        message: Waiting for operation [$$operation$$] to complete
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/connectivityTests/mytest",
              "protocol": "TCP",
              "createTime": "2020-01-28T19:19:17.504173656Z",
              "updateTime": "2020-01-28T19:19:23.529506702Z",
              "reachabilityDetails": {                                                                                                                       "result": "UNREACHABLE",
                "verifyTime": "2020-01-28T19:19:23.506936Z",
                "error": {}
              }
            }
    - expect_stdout: |
        createTime: '2020-01-28T19:19:17.504173656Z'
        name: projects/fake-project/locations/global/connectivityTests/mytest
        protocol: TCP
        reachabilityDetails:
          error: {}
          result: UNREACHABLE
          verifyTime: '2020-01-28T19:19:23.506936Z'
        updateTime: '2020-01-28T19:19:23.529506702Z'
    - expect_exit:
        code: 0
- execute_command:
    command: network-management connectivity-tests rerun mytest --async
    events:
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest:rerun?alt=json
          method: POST
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata",
                "createTime": "2020-01-28T20:33:01.243468876Z",
                "target": "projects/fake-project/locations/global/connectivityTests/mytest",
                "verb": "rerun",
                "cancelRequested": false,
                "apiVersion": "v1"
              },
              "done": false
            }
    - expect_stderr: |
        Request issued for: [mytest]
        Check operation [$$operation$$] for status.
    - expect_stdout: |
        done: false
        metadata:
          '@type': type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata
          apiVersion: v1
          cancelRequested: false
          createTime: '2020-01-28T20:33:01.243468876Z'
          target: projects/fake-project/locations/global/connectivityTests/mytest
          verb: rerun
        name: $$operation$$
    - expect_exit:
        code: 0
