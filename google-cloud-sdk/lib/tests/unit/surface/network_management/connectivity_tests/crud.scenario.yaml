title: network-management connectivity-tests CRUD tests
release_tracks: [GA]

summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: network-management connectivity-tests create mytest --source-ip-address=10.132.0.1
      --destination-instance=projects/fake-project/zones/us-central1-a/instances/instance-1
      --description='test' --protocol='UDP' --destination-port=1000 --labels key=type,value=unittest
  - stderr: |
      Create request issued for: [mytest]
  - progress_tracker:
    - message: Waiting for operation [$$operation$$] to complete
    - status: SUCCESS
  - stderr: |
      Created connectivity test [mytest].
- execute:
  - command: network-management connectivity-tests create mytest --source-ip-address=10.132.0.1
      --destination-instance=projects/fake-project/zones/us-central1-a/instances/instance-1
      --description='test' --protocol='UDP' --destination-port=1000 --async
  - stderr: |
      Create request issued for: [mytest]
      Check operation [$$operation$$] for status.
- execute:
  - command: network-management connectivity-tests create mytest --source-ip-address=10.132.0.1
  - stderr: |-
      ERROR: \(gcloud.*\.network-management\.connectivity-tests\.create\) argument \(--destination-instance --destination-ip-address\): Must be specified\.
      Usage: gcloud.* network-management connectivity-tests create CONNECTIVITY_TEST \(--destination-instance=DESTINATION_INSTANCE --destination-ip-address=DESTINATION_IP_ADDRESS\) \(--source-instance=SOURCE_INSTANCE --source-ip-address=SOURCE_IP_ADDRESS\) \[optional flags\]
        optional flags may be  --async | --description | --destination-instance |
                               --destination-ip-address | --destination-network |
                               --destination-port | --destination-project | --help |
                               --labels | --other-projects | --protocol |
                               --source-instance | --source-ip-address |
                               --source-network | --source-network-type |
                               --source-project

      For detailed information on this command and its flags, run:
        gcloud.* network-management connectivity-tests create --help
      $
  - error: '1: argument (--destination-instance --destination-ip-address): Must be
      specified.'
- execute:
  - command: network-management connectivity-tests create mytest --source-instance=projects/fake-project/zones/us-central1-a/instances/instance
      --destination-instance=projects/fake-project/invalid-instance
  - error: |-
      1: Invalid value for flag destination_instance: projects/fake-project/invalid-instance
      Expected instance in the following format:
        projects/my-project/zones/zone/instances/my-instance
- execute:
  - command: network-management connectivity-tests create mytest --source-instance=projects/fake-project/zones/us-central1-a/instances/instance
      --destination-ip-address=10.132.0.1 --destination-network=default-network
  - error: |-
      1: Invalid value for flag destination_network: default-network
      Expected network in the following format:
        projects/my-project/global/networks/my-network
- execute:
  - command: network-management connectivity-tests describe mytest
  - stdout: |
      createTime: '2020-01-28T19:19:17.504173656Z'
      name: projects/fake-project/locations/global/connectivityTests/mytest
      protocol: TCP
      reachabilityDetails:
        error: {}
        result: UNREACHABLE
        verifyTime: '2020-01-28T19:19:23.506936Z'
      updateTime: '2020-01-28T19:19:23.529506702Z'
- execute:
  - command: network-management connectivity-tests list --format=json
  - stdout: |
      []
- execute:
  - command: network-management connectivity-tests update mytest --source-ip-address=ICMP  --labels
      key=type,value=updated_unittest --async
  - stderr: |
      Request issued for: [mytest]
      Check operation [projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703] for status.
      Updated connectivity test [mytest].
  - stdout: |
      done: false
      metadata:
        '@type': type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata
        apiVersion: v1
        cancelRequested: false
        createTime: '2020-01-28T20:33:01.243468876Z'
        target: projects/fake-project/locations/global/connectivityTests/mytest
        verb: update
      name: projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703
- execute:
  - command: network-management connectivity-tests update mytest --clear-source-instance
      --async
  - stderr: |
      Request issued for: [mytest]
      Check operation [projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703] for status.
      Updated connectivity test [mytest].
  - stdout: |
      done: false
      metadata:
        '@type': type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata
        apiVersion: v1
        cancelRequested: false
        createTime: '2020-01-28T20:33:01.243468876Z'
        target: projects/fake-project/locations/global/connectivityTests/mytest
        verb: update
      name: projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703
- execute:
  - command: network-management connectivity-tests update mytest --clear-source-ip-address
      --async
  - error: '1: Invalid Connectivity Test. At least one of --source-instance or --source-ip-address
      must be specified.'
- execute:
  - command: network-management connectivity-tests update mytest --destination-instance=projects/proj/zones/zone/invalid-instance
  - error: |-
      1: Invalid value for flag destination_instance: projects/proj/zones/zone/invalid-instance
      Expected instance in the following format:
        projects/my-project/zones/zone/instances/my-instance
- execute:
  - command: network-management connectivity-tests update mytest --destination-network=default-network
  - error: |-
      1: Invalid value for flag destination_network: default-network
      Expected network in the following format:
        projects/my-project/global/networks/my-network
- execute:
  - command: network-management connectivity-tests delete mytest
  - prompt:
    - message: You are about to delete connectivity test [mytest]
    - input: y
  - stderr: |
      Delete request issued for: [mytest]
  - progress_tracker:
    - message: Waiting for operation [$$operation$$] to complete
    - status: SUCCESS
  - stderr: |
      Deleted connectivity test [mytest].
actions:
- execute_command:
    command: network-management connectivity-tests create mytest --source-ip-address=10.132.0.1
      --destination-instance=projects/fake-project/zones/us-central1-a/instances/instance-1
      --description='test' --protocol='UDP' --destination-port=1000 --labels key=type,value=unittest
    events:
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests?alt=json&testId=mytest
          method: POST
          headers: {}
          body:
            json:
              description: test
              destination:
                instance: projects/fake-project/zones/us-central1-a/instances/instance-1
                port: 1000
              labels:
                type: unittest
              protocol: UDP
              source:
                ipAddress: 10.132.0.1
                networkType: GCP_NETWORK
        return_response:
          headers:
            status: '200'
          body: |-
            {
             "name": "projects/fake-project/locations/global/operations/operation-1580239157445-59d3819a3c320-e9093701-61567a52",
             "metadata": {
               "@type": "type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata",
               "createTime": "2020-01-28T19:19:17.511768896Z",
               "target": "projects/fake-project/locations/global/connectivityTests/mytest",
               "verb": "create",
               "cancelRequested": false,
               "apiVersion": "v1"
             },
             "done": false
            }
    - expect_stderr: |
        Create request issued for: [mytest]
    - expect_progress_tracker:
        message: Waiting for operation [$$operation$$] to complete
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/connectivityTests/mytest",
              "protocol": "TCP",
              "createTime": "2020-01-28T19:19:17.504173656Z",
              "updateTime": "2020-01-28T19:19:23.529506702Z",
              "reachabilityDetails": {
                "result": "UNREACHABLE",
                "verifyTime": "2020-01-28T19:19:23.506936Z",
                "error": {}
              }
            }
    - expect_stderr: |
        Created connectivity test [mytest].
    - expect_exit:
        code: 0
- execute_command:
    command: network-management connectivity-tests create mytest --source-ip-address=10.132.0.1
      --destination-instance=projects/fake-project/zones/us-central1-a/instances/instance-1
      --description='test' --protocol='UDP' --destination-port=1000 --async
    events:
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests?alt=json&testId=mytest
          method: POST
          body:
            json:
              description: test
              destination:
                instance: projects/fake-project/zones/us-central1-a/instances/instance-1
                port: 1000
              protocol: UDP
              source:
                ipAddress: 10.132.0.1
                networkType: GCP_NETWORK
        return_response:
          headers:
            status: '200'
          body: |-
            {
             "name": "projects/fake-project/locations/global/operations/operation-1580239157445-59d3819a3c320-e9093701-61567a52",
             "metadata": {
               "@type": "type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata",
               "createTime": "2020-01-28T19:19:17.511768896Z",
               "target": "projects/fake-project/locations/global/connectivityTests/mytest",
               "verb": "create",
               "cancelRequested": false,
               "apiVersion": "v1"
             },
             "done": false
            }
    - expect_stderr: |
        Create request issued for: [mytest]
        Check operation [$$operation$$] for status.
    - expect_exit:
        code: 0
- execute_command:
    command: network-management connectivity-tests create mytest --source-ip-address=10.132.0.1
    events:
    - expect_stderr:
        matches: |
          ERROR: \(gcloud.*\.network-management\.connectivity-tests\.create\) argument \(--destination-instance --destination-ip-address\): Must be specified\.
          Usage: gcloud.* network-management connectivity-tests create CONNECTIVITY_TEST \(--destination-instance=DESTINATION_INSTANCE --destination-ip-address=DESTINATION_IP_ADDRESS\) \(--source-instance=SOURCE_INSTANCE --source-ip-address=SOURCE_IP_ADDRESS\) \[optional flags\]
            optional flags may be  --async | --description | --destination-instance |
                                   --destination-ip-address | --destination-network |
                                   --destination-port | --destination-project | --help |
                                   --labels | --other-projects | --protocol |
                                   --source-instance | --source-ip-address |
                                   --source-network | --source-network-type |
                                   --source-project

          For detailed information on this command and its flags, run:
            gcloud.* network-management connectivity-tests create --help
    - expect_exit:
        code: 1
        message: 'argument (--destination-instance --destination-ip-address): Must
          be specified.'
- execute_command:
    command: network-management connectivity-tests create mytest --source-instance=projects/fake-project/zones/us-central1-a/instances/instance
      --destination-instance=projects/fake-project/invalid-instance
    events:
    - expect_exit:
        code: 1
        message: |-
          Invalid value for flag destination_instance: projects/fake-project/invalid-instance
          Expected instance in the following format:
            projects/my-project/zones/zone/instances/my-instance
- execute_command:
    command: network-management connectivity-tests create mytest --source-instance=projects/fake-project/zones/us-central1-a/instances/instance
      --destination-ip-address=10.132.0.1 --destination-network=default-network
    events:
    - expect_exit:
        code: 1
        message: |-
          Invalid value for flag destination_network: default-network
          Expected network in the following format:
            projects/my-project/global/networks/my-network
- execute_command:
    command: network-management connectivity-tests describe mytest
    events:
    - api_call:
        poll_operation: false
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/connectivityTests/mytest",
              "protocol": "TCP",
              "createTime": "2020-01-28T19:19:17.504173656Z",
              "updateTime": "2020-01-28T19:19:23.529506702Z",
              "reachabilityDetails": {
                "result": "UNREACHABLE",
                "verifyTime": "2020-01-28T19:19:23.506936Z",
                "error": {}
              }
            }
    - expect_stdout: |
        createTime: '2020-01-28T19:19:17.504173656Z'
        name: projects/fake-project/locations/global/connectivityTests/mytest
        protocol: TCP
        reachabilityDetails:
          error: {}
          result: UNREACHABLE
          verifyTime: '2020-01-28T19:19:23.506936Z'
        updateTime: '2020-01-28T19:19:23.529506702Z'
    - expect_exit:
        code: 0
- execute_command:
    command: network-management connectivity-tests list --format=json
    events:
    - api_call:
        poll_operation: false
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests?alt=json
          method: GET
          body: null
        return_response:
          headers:
            status: '200'
          body:
            nextPageToken: abcd
            domains:
            - createTime: '2020-01-28T19:19:17.504173656Z'
              name: projects/fake-project/locations/global/connectivityTests/mytest
              protocol: TCP
              reachabilityDetails:
                error: {}
                result: UNREACHABLE
                verifyTime: '2020-01-28T19:19:23.506936Z'
              updateTime: '2020-01-28T19:19:23.529506702Z'
            - createTime: '2020-01-28T19:19:17.504173656Z'
              name: projects/fake-project/locations/global/connectivityTests/mytest1
              protocol: TCP
              reachabilityDetails:
                error: {}
                result: REACHABLE
                verifyTime: '2020-01-28T19:19:23.506936Z'
              updateTime: '2020-01-28T19:19:23.529506702Z'
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests?alt=json&pageToken=abcd
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: null
    - expect_stdout: |
        []
    - expect_exit:
        code: 0
- execute_command:
    command: network-management connectivity-tests update mytest --source-ip-address=ICMP  --labels
      key=type,value=updated_unittest --async
    events:
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/connectivityTests/mytest",
              "protocol": "TCP",
              "createTime": "2020-01-28T19:19:17.504173656Z",
              "updateTime": "2020-01-28T19:19:23.529506702Z",
              "reachabilityDetails": {
                "result": "UNREACHABLE",
                "verifyTime": "2020-01-28T19:19:23.506936Z",
                "error": {}
              }
            }
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json&updateMask=labels%2Csource.ipAddress
          method: PATCH
          headers: {}
          body:
            json: {}
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata",
                "createTime": "2020-01-28T20:33:01.243468876Z",
                "target": "projects/fake-project/locations/global/connectivityTests/mytest",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1"
              },
              "done": false
            }
    - expect_stderr: |
        Request issued for: [mytest]
        Check operation [projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703] for status.
        Updated connectivity test [mytest].
    - expect_stdout: |
        done: false
        metadata:
          '@type': type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata
          apiVersion: v1
          cancelRequested: false
          createTime: '2020-01-28T20:33:01.243468876Z'
          target: projects/fake-project/locations/global/connectivityTests/mytest
          verb: update
        name: projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703
    - expect_exit:
        code: 0
- execute_command:
    command: network-management connectivity-tests update mytest --clear-source-instance
      --async
    events:
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/connectivityTests/mytest",
              "protocol": "TCP",
              "createTime": "2020-01-28T19:19:17.504173656Z",
              "updateTime": "2020-01-28T19:19:23.529506702Z",
              "destination": {
                "instance": "projects/fake-project/zones/us-central1-a/instances/instance"
              },
              "source": {
                "instance": "projects/fake-project/zones/us-central1-a/instances/instance",
                "ipAddress": "10.123.0.1"
              },
              "reachabilityDetails": {
                "result": "UNREACHABLE",
                "verifyTime": "2020-01-28T19:19:23.506936Z",
                "error": {}
              }
            }
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json&updateMask=source.instance
          method: PATCH
          headers: {}
          body:
            json: {}
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata",
                "createTime": "2020-01-28T20:33:01.243468876Z",
                "target": "projects/fake-project/locations/global/connectivityTests/mytest",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1"
              },
              "done": false
            }
    - expect_stderr: |
        Request issued for: [mytest]
        Check operation [projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703] for status.
        Updated connectivity test [mytest].
    - expect_stdout: |
        done: false
        metadata:
          '@type': type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata
          apiVersion: v1
          cancelRequested: false
          createTime: '2020-01-28T20:33:01.243468876Z'
          target: projects/fake-project/locations/global/connectivityTests/mytest
          verb: update
        name: projects/fake-project/locations/global/operations/operation-1580243581223-59d39215141a7-72dd9c81-bfae7703
    - expect_exit:
        code: 0
- execute_command:
    command: network-management connectivity-tests update mytest --clear-source-ip-address
      --async
    events:
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/connectivityTests/mytest",
              "protocol": "TCP",
              "createTime": "2020-01-28T19:19:17.504173656Z",
              "updateTime": "2020-01-28T19:19:23.529506702Z",
              "destination": {
                "ipAddress": "10.123.0.1"
              },
              "source": {
                "ipAddress": "10.123.0.1"
              },
              "reachabilityDetails": {
                "result": "UNREACHABLE",
                "verifyTime": "2020-01-28T19:19:23.506936Z",
                "error": {}
              }
            }
    - expect_exit:
        code: 1
        message: Invalid Connectivity Test. At least one of --source-instance or --source-ip-address
          must be specified.
- execute_command:
    command: network-management connectivity-tests update mytest --destination-instance=projects/proj/zones/zone/invalid-instance
    events:
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/connectivityTests/mytest",
              "createTime": "2020-01-28T19:19:17.504173656Z",
              "updateTime": "2020-01-28T19:19:23.529506702Z",
              "destination": {
                "instance": "projects/fake-project/zones/us-central1-a/instances/instance"
              },
              "source": {
                "ipAddress": "10.123.0.1"
              }
            }
    - expect_exit:
        code: 1
        message: |-
          Invalid value for flag destination_instance: projects/proj/zones/zone/invalid-instance
          Expected instance in the following format:
            projects/my-project/zones/zone/instances/my-instance
- execute_command:
    command: network-management connectivity-tests update mytest --destination-network=default-network
    events:
    - api_call:
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/fake-project/locations/global/connectivityTests/mytest",
              "createTime": "2020-01-28T19:19:17.504173656Z",
              "updateTime": "2020-01-28T19:19:23.529506702Z",
              "destination": {
                "instance": "projects/fake-project/zones/us-central1-a/instances/instance"
              },
              "source": {
                "ipAddress": "10.123.0.1"
              }
            }
    - expect_exit:
        code: 1
        message: |-
          Invalid value for flag destination_network: default-network
          Expected network in the following format:
            projects/my-project/global/networks/my-network
- execute_command:
    command: network-management connectivity-tests delete mytest
    events:
    - expect_prompt_continue:
        message: You are about to delete connectivity test [mytest]
        user_input: y
    - api_call:
        poll_operation: true
        expect_request:
          uri: https://networkmanagement.googleapis.com/v1/projects/fake-project/locations/global/connectivityTests/mytest?alt=json
          method: DELETE
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {                                                                                                                                             "name": "projects/fake-project/locations/global/operations/operation-1580239157445-59d3819a3c320-e9093701-61567a52",
             "metadata": {
               "@type": "type.googleapis.com/google.cloud.networkmanagement.v1.OperationMetadata",
               "createTime": "2020-01-28T19:19:17.511768896Z",
               "target": "projects/fake-project/locations/global/connectivityTests/mytest",
               "verb": "delete",
               "cancelRequested": false,
               "apiVersion": "v1"
             },
             "done": false
            }
    - expect_stderr: |
        Delete request issued for: [mytest]
    - expect_progress_tracker:
        message: Waiting for operation [$$operation$$] to complete
        status: SUCCESS
    - expect_stderr: |
        Deleted connectivity test [mytest].
    - expect_exit:
        code: 0
