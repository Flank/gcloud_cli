title: spanner backups create test
release_tracks: [GA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - label: Test creation with expiration-date flag
  - command: spanner backups create test-backup --instance=test-instance --database=test-database
      --expiration-date=2020-03-29T10:00:00Z
  - stderr: |
      Create request issued for: [test-backup]
  - progress_tracker:
    - message: Waiting for operation [projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_da00c3d035b5e6c0]
        to complete
    - status: SUCCESS
  - stderr: |
      Created backup [test-backup].
- execute:
  - label: Test creation with retention-period flag
  - command: spanner backups create test-backup --instance=test-instance --database=test-database
      --retention-period=2w
  - stderr: |
      Create request issued for: [test-backup]
  - progress_tracker:
    - message: Waiting for operation [projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_3dc1c2b33738c7cb]
        to complete
    - status: SUCCESS
  - stderr: |
      Created backup [test-backup].
- execute:
  - label: Test create throws error when both expiration-date and retention-period
      flags are provided
  - command: spanner backups create test-backup --instance=test-instance --database=test-database
      --expiration-date=2020-03-29T10:00:00Z --retention-period=2w
  - stderr: |
      ERROR: (gcloud.spanner.backups.create) argument --expiration-date: Exactly one of (--expiration-date | --retention-period) must be specified.
      Usage: gcloud spanner backups create (BACKUP : --instance=INSTANCE) --database=DATABASE (--expiration-date=EXPIRATION_DATE | --retention-period=RETENTION_PERIOD) [optional flags]
        optional flags may be  --async | --expiration-date | --help | --instance |
                               --retention-period

      For detailed information on this command and its flags, run:
        gcloud spanner backups create --help
  - error: '1: argument --expiration-date: Exactly one of (--expiration-date | --retention-period)
      must be specified.'
- execute:
  - label: Test create throws error when database flag is missing
  - command: spanner backups create test-backup --instance=test-instance --expiration-date=2020-03-29T10:00:00Z
  - stderr: |
      ERROR: (gcloud.spanner.backups.create) argument --database: Must be specified.
      Usage: gcloud spanner backups create (BACKUP : --instance=INSTANCE) --database=DATABASE (--expiration-date=EXPIRATION_DATE | --retention-period=RETENTION_PERIOD) [optional flags]
        optional flags may be  --async | --expiration-date | --help | --instance |
                               --retention-period

      For detailed information on this command and its flags, run:
        gcloud spanner backups create --help
  - error: '1: argument --database: Must be specified.'
actions:
- execute_command:
    command: spanner backups create test-backup --instance=test-instance --database=test-database
      --expiration-date=2020-03-29T10:00:00Z
    label: Test creation with expiration-date flag
    events:
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/backups?alt=json&backupId=test-backup
          method: POST
          headers: {}
          body: |
            {
              "database": "projects/fake-project/instances/test-instance/databases/test-database",
              "expireTime": "2020-03-29T10:00:00Z"
            }
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_da00c3d035b5e6c0",
              "metadata": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata",
                "name": "projects/fake-project/instances/test-instance/backups/test-backup",
                "database": "projects/fake-project/instances/test-instance/databases/test-database",
                "progress": {
                  "startTime": "2020-02-12T16:37:23.189930Z"
                }
              }
            }
    - expect_stderr: |
        Create request issued for: [test-backup]
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_da00c3d035b5e6c0?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_da00c3d035b5e6c0",
              "metadata": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata",
                "name": "projects/fake-project/instances/test-instance/backups/test-backup",
                "database": "projects/fake-project/instances/test-instance/databases/test-database",
                "progress": {
                  "progressPercent": 100,
                  "startTime": "2020-02-12T16:37:23.189930Z",
                  "endTime": "2020-02-12T16:40:33.171305Z"
                }
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.Backup",
                "name": "projects/fake-project/instances/test-instance/backups/test-backup",
                "database": "projects/fake-project/instances/test-instance/databases/test-database",
                "expireTime": "2020-03-29T10:00:00Z",
                "createTime": "2020-02-12T16:37:23.189930Z",
                "sizeBytes": "190",
                "state": "READY"
              }
            }
    - expect_progress_tracker:
        message: Waiting for operation [projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_da00c3d035b5e6c0]
          to complete
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/backups/test-backup?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/backups/test-backup",
              "database": "projects/fake-project/instances/test-instance/databases/test-database",
              "expireTime": "2020-03-29T10:00:00Z",
              "createTime": "2020-02-12T16:37:23.189930Z",
              "sizeBytes": "190",
              "state": "READY"
            }
    - expect_stderr: |
        Created backup [test-backup].
    - expect_exit:
        code: 0
- execute_command:
    command: spanner backups create test-backup --instance=test-instance --database=test-database
      --retention-period=2w
    label: Test creation with retention-period flag
    events:
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/backups?alt=json&backupId=test-backup
          method: POST
          headers: {}
          body: |
            {
              "database": "projects/fake-project/instances/test-instance/databases/test-database",
              "expireTime": "2020-02-26T16:55:14.589155Z"
            }
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_3dc1c2b33738c7cb",
              "metadata": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata",
                "name": "projects/fake-project/instances/test-instance/backups/test-backup",
                "database": "projects/fake-project/instances/test-instance/databases/test-database",
                "progress": {
                  "startTime": "2020-02-12T16:55:14.989469Z"
                }
              }
            }
    - expect_stderr: |
        Create request issued for: [test-backup]
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_3dc1c2b33738c7cb?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_3dc1c2b33738c7cb",
              "metadata": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata",
                "name": "projects/fake-project/instances/test-instance/backups/test-backup",
                "database": "projects/fake-project/instances/test-instance/databases/test-database",
                "progress": {
                  "progressPercent": 100,
                  "startTime": "2020-02-12T16:55:14.989469Z",
                  "endTime": "2020-02-12T16:57:28.162651Z"
                }
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.Backup",
                "name": "projects/fake-project/instances/test-instance/backups/test-backup",
                "database": "projects/fake-project/instances/test-instance/databases/test-database",
                "expireTime": "2020-02-26T16:55:14.589155Z",
                "createTime": "2020-02-12T16:55:14.989469Z",
                "sizeBytes": "190",
                "state": "READY"
              }
            }
    - expect_progress_tracker:
        message: Waiting for operation [projects/fake-project/instances/test-instance/backups/test-backup/operations/_auto_op_3dc1c2b33738c7cb]
          to complete
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/backups/test-backup?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/backups/test-backup",
              "database": "projects/fake-project/instances/test-instance/databases/test-database",
              "expireTime": "2020-02-26T16:55:14.589155Z",
              "createTime": "2020-02-12T16:55:14.989469Z",
              "sizeBytes": "190",
              "state": "READY"
            }
    - expect_stderr: |
        Created backup [test-backup].
    - expect_exit:
        code: 0
- execute_command:
    command: spanner backups create test-backup --instance=test-instance --database=test-database
      --expiration-date=2020-03-29T10:00:00Z --retention-period=2w
    label: Test create throws error when both expiration-date and retention-period
      flags are provided
    events:
    - expect_stderr: |
        ERROR: (gcloud.spanner.backups.create) argument --expiration-date: Exactly one of (--expiration-date | --retention-period) must be specified.
        Usage: gcloud spanner backups create (BACKUP : --instance=INSTANCE) --database=DATABASE (--expiration-date=EXPIRATION_DATE | --retention-period=RETENTION_PERIOD) [optional flags]
          optional flags may be  --async | --expiration-date | --help | --instance |
                                 --retention-period

        For detailed information on this command and its flags, run:
          gcloud spanner backups create --help
    - expect_exit:
        code: 1
        message: 'argument --expiration-date: Exactly one of (--expiration-date |
          --retention-period) must be specified.'
- execute_command:
    command: spanner backups create test-backup --instance=test-instance --expiration-date=2020-03-29T10:00:00Z
    label: Test create throws error when database flag is missing
    events:
    - expect_stderr: |
        ERROR: (gcloud.spanner.backups.create) argument --database: Must be specified.
        Usage: gcloud spanner backups create (BACKUP : --instance=INSTANCE) --database=DATABASE (--expiration-date=EXPIRATION_DATE | --retention-period=RETENTION_PERIOD) [optional flags]
          optional flags may be  --async | --expiration-date | --help | --instance |
                                 --retention-period

        For detailed information on this command and its flags, run:
          gcloud spanner backups create --help
    - expect_exit:
        code: 1
        message: 'argument --database: Must be specified.'
