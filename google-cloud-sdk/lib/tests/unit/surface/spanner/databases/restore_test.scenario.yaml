title: spanner backups update test
release_tracks: [GA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - label: Test restore with with resource IDs
  - command: spanner databases restore --source-instance=test-instance --source-backup=test-backup
      --destination-database=restored-db --destination-instance=test-instance
  - progress_tracker:
    - message: Restoring backup test-backup to database restored-db
    - status: SUCCESS
- execute:
  - label: Test restore with full resource names
  - command: spanner databases restore --source-backup=projects/fake-project/instances/test-instance/backups/test-backup
      --destination-database=projects/fake-project/instances/test-instance/databases/restored-db
  - progress_tracker:
    - message: Restoring backup test-backup to database restored-db
    - status: SUCCESS
- execute:
  - label: Test restore throws error when --destination-database is missing
  - command: spanner databases restore --source-backup=projects/fake-project/instances/test-instance/backups/test-backup
  - stderr: |
      ERROR: (gcloud.spanner.databases.restore) argument (--destination-database : --destination-instance): Must be specified.
      Usage: gcloud spanner databases restore (--destination-database=DESTINATION_DATABASE : --destination-instance=DESTINATION_INSTANCE) (--source-backup=SOURCE_BACKUP : --source-instance=SOURCE_INSTANCE) [optional flags]
        optional flags may be  --async | --destination-instance | --help |
                               --source-instance

      For detailed information on this command and its flags, run:
        gcloud spanner databases restore --help
  - error: '1: argument (--destination-database : --destination-instance): Must be
      specified.'
actions:
- execute_command:
    command: spanner databases restore --source-instance=test-instance --source-backup=test-backup
      --destination-database=restored-db --destination-instance=test-instance
    label: Test restore with with resource IDs
    events:
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/databases:restore?alt=json
          method: POST
          headers: {}
          body:
            json:
              backup: projects/fake-project/instances/test-instance/backups/test-backup
              databaseId: restored-db
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/databases/restored-db/operations/_auto_op_49a13a3a7cc9bd68",
              "metadata": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata",
                "name": "projects/fake-project/instances/test-instance/databases/restored-db",
                "sourceType": "BACKUP",
                "backupInfo": {
                  "backup": "projects/fake-project/instances/test-instance/backups/test-backup",
                  "createTime": "2020-01-14T22:00:11.573548Z",
                  "sourceDatabase": "projects/fake-project/instances/test-instance/databases/test-database"
                },
                "progress": {
                  "startTime": "2020-02-12T20:25:04.536870Z"
                }
              }
            }
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/databases/restored-db/operations/_auto_op_49a13a3a7cc9bd68?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/databases/restored-db/operations/_auto_op_49a13a3a7cc9bd68",
              "metadata": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata",
                "name": "projects/fake-project/instances/test-instance/databases/restored-db",
                "sourceType": "BACKUP",
                "backupInfo": {
                  "backup": "projects/fake-project/instances/test-instance/backups/test-backup",
                  "createTime": "2020-01-14T22:00:11.573548Z",
                  "sourceDatabase": "projects/fake-project/instances/test-instance/databases/test-database"
                },
                "progress": {
                  "progressPercent": 100,
                  "startTime": "2020-02-12T20:25:04.536870Z",
                  "endTime": "2020-02-12T20:32:17.208912Z"
                },
                "optimizeDatabaseOperationName": "projects/fake-project/instances/test-instance/databases/restored-db/operations/_auto_op_135ddb7caafb9623"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.Database",
                "name": "projects/fake-project/instances/test-instance/databases/restored-db",
                "state": "READY_OPTIMIZING",
                "createTime": "2020-02-12T20:25:04.536870Z",
                "restoreInfo": {
                  "sourceType": "BACKUP",
                  "backupInfo": {
                    "backup": "projects/fake-project/instances/test-instance/backups/test-backup",
                    "createTime": "2020-01-14T22:00:11.573548Z",
                    "sourceDatabase": "projects/fake-project/instances/test-instance/databases/test-database"
                  }
                }
              }
            }
    - expect_progress_tracker:
        message: Restoring backup test-backup to database restored-db
        status: SUCCESS
    - expect_exit:
        code: 0
- execute_command:
    command: spanner databases restore --source-backup=projects/fake-project/instances/test-instance/backups/test-backup
      --destination-database=projects/fake-project/instances/test-instance/databases/restored-db
    label: Test restore with full resource names
    events:
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/databases:restore?alt=json
          method: POST
          headers: {}
          body:
            json:
              backup: projects/fake-project/instances/test-instance/backups/test-backup
              databaseId: restored-db
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/databases/restored-db/operations/_auto_op_49a13a3a7cc9bd68",
              "metadata": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata",
                "name": "projects/fake-project/instances/test-instance/databases/restored-db",
                "sourceType": "BACKUP",
                "backupInfo": {
                  "backup": "projects/fake-project/instances/test-instance/backups/test-backup",
                  "createTime": "2020-01-14T22:00:11.573548Z",
                  "sourceDatabase": "projects/fake-project/instances/test-instance/databases/test-database"
                },
                "progress": {
                  "startTime": "2020-02-12T20:25:04.536870Z"
                }
              }
            }
    - api_call:
        expect_request:
          uri: https://spanner.googleapis.com/v1/projects/fake-project/instances/test-instance/databases/restored-db/operations/_auto_op_49a13a3a7cc9bd68?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/fake-project/instances/test-instance/databases/restored-db/operations/_auto_op_49a13a3a7cc9bd68",
              "metadata": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata",
                "name": "projects/fake-project/instances/test-instance/databases/restored-db",
                "sourceType": "BACKUP",
                "backupInfo": {
                  "backup": "projects/fake-project/instances/test-instance/backups/test-backup",
                  "createTime": "2020-01-14T22:00:11.573548Z",
                  "sourceDatabase": "projects/fake-project/instances/test-instance/databases/test-database"
                },
                "progress": {
                  "progressPercent": 100,
                  "startTime": "2020-02-12T20:25:04.536870Z",
                  "endTime": "2020-02-12T20:32:17.208912Z"
                },
                "optimizeDatabaseOperationName": "projects/fake-project/instances/test-instance/databases/restored-db/operations/_auto_op_135ddb7caafb9623"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.spanner.admin.database.v1.Database",
                "name": "projects/fake-project/instances/test-instance/databases/restored-db",
                "state": "READY_OPTIMIZING",
                "createTime": "2020-02-12T20:25:04.536870Z",
                "restoreInfo": {
                  "sourceType": "BACKUP",
                  "backupInfo": {
                    "backup": "projects/fake-project/instances/test-instance/backups/test-backup",
                    "createTime": "2020-01-14T22:00:11.573548Z",
                    "sourceDatabase": "projects/fake-project/instances/test-instance/databases/test-database"
                  }
                }
              }
            }
    - expect_progress_tracker:
        message: Restoring backup test-backup to database restored-db
        status: SUCCESS
    - expect_exit:
        code: 0
- execute_command:
    command: spanner databases restore --source-backup=projects/fake-project/instances/test-instance/backups/test-backup
    label: Test restore throws error when --destination-database is missing
    events:
    - expect_stderr: |
        ERROR: (gcloud.spanner.databases.restore) argument (--destination-database : --destination-instance): Must be specified.
        Usage: gcloud spanner databases restore (--destination-database=DESTINATION_DATABASE : --destination-instance=DESTINATION_INSTANCE) (--source-backup=SOURCE_BACKUP : --source-instance=SOURCE_INSTANCE) [optional flags]
          optional flags may be  --async | --destination-instance | --help |
                                 --source-instance

        For detailed information on this command and its flags, run:
          gcloud spanner databases restore --help
    - expect_exit:
        code: 1
        message: 'argument (--destination-database : --destination-instance): Must
          be specified.'
