title: surface unit test for v1 asset analyze-iam-policy-longrunning
release_tracks: [GA]
summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: asset analyze-iam-policy-longrunning --organization "o1" --full-resource-name "//o1/f/p/r1"
      --roles "roles/cloudasset.r1,roles/cloudasset.r2" --permissions "a.b.get,c.d.create"
      --expand-groups --expand-roles --output-group-edges
      --gcs-output-path=gs://bucket-name/object-name
  - stderr: |
      Analyze IAM Policy in progress.
      Use [gcloud asset operations describe organizations/o1/operations/AnalyzeIamPolicyLongrunning/001] to check the status of the operation.
- execute:
  - command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --permissions "a.b.get,c.d.create"
      --expand-resources --output-resource-edges --gcs-output-path=gs://bucket-name/object-name
  - stderr: |
      Analyze IAM Policy in progress.
      Use [gcloud asset operations describe folders/f1/operations/AnalyzeIamPolicyLongrunning/002] to check the status of the operation.
- execute:
  - command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --roles "roles/cloudasset.r1,roles/cloudasset.r2"
      --expand-resources --output-resource-edges --gcs-output-path=gs://bucket-name/object-name
  - stderr: |
      Analyze IAM Policy in progress.
      Use [gcloud asset operations describe folders/f1/operations/AnalyzeIamPolicyLongrunning/002] to check the status of the operation.
actions:
- execute_command:  # with_organization and gcs_destination
    command: asset analyze-iam-policy-longrunning --organization "o1" --full-resource-name "//o1/f/p/r1"
      --roles "roles/cloudasset.r1,roles/cloudasset.r2" --permissions "a.b.get,c.d.create"
      --expand-groups --expand-roles --output-group-edges
      --gcs-output-path "gs://bucket-name/object-name"
    events:
    - api_call:
        expect_request:
          uri: https://cloudasset.googleapis.com/v1/organizations/o1:analyzeIamPolicyLongrunning?alt=json
          method: POST
          headers: {}
          body:
            json:
              analysisQuery:
                accessSelector:
                  permissions:
                  - a.b.get
                  - c.d.create
                  roles:
                  - roles/cloudasset.r1
                  - roles/cloudasset.r2
                resourceSelector:
                  fullResourceName: //o1/f/p/r1
                options:
                  expandGroups: true
                  expandRoles: true
                  outputGroupEdges: true
              outputConfig:
                gcsDestination:
                  uri: gs://bucket-name/object-name
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "organizations/o1/operations/AnalyzeIamPolicyLongrunning/001",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.asset.v1.AnalyzeIamPolicyLongrunningRequest",
                "analysisQuery": {
                  "scope": "organizations/o1",
                  "resourceSelector": {
                    "fullResourceName": "//o1/f/p/r1"
                  },
                  "accessSelector": {
                    "roles": "roles/cloudasset.r1",
                    "roles": "roles/cloudasset.r2",
                    "permissions": "a.b.get",
                    "permissions": "c.d.create"
                  }
                },
                "outputConfig": {
                  "gcsDestination": {
                    "uri": "gs://bucket-name/object-name"
                  }
                }
              }
            }
    - expect_stderr: |
        Analyze IAM Policy in progress.
        Use [gcloud asset operations describe organizations/o1/operations/AnalyzeIamPolicyLongrunning/001] to check the status of the operation.
    - expect_exit:
        code: 0
- execute_command:  # with_folder_and_permissions_specified and bigquery_destination
    command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --permissions "a.b.get,c.d.create"
      --expand-resources --output-resource-edges
      --bigquery-dataset "projects/project-id/datasets/dataset_id"
      --bigquery-table-prefix "table_prefix"
    events:
    - api_call:
        expect_request:
          uri: https://cloudasset.googleapis.com/v1/folders/f1:analyzeIamPolicyLongrunning?alt=json
          method: POST
          headers: {}
          body:
            json:
              analysisQuery:
                accessSelector:
                  permissions:
                  - a.b.get
                  - c.d.create
                identitySelector:
                  identity: user:user1@foo.com
                options:
                  expandResources: true
                  outputResourceEdges: true
              outputConfig:
                bigqueryDestination:
                  dataset: projects/project-id/datasets/dataset_id
                  tablePrefix: table_prefix
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "folders/f1/operations/AnalyzeIamPolicyLongrunning/002",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.asset.v1.AnalyzeIamPolicyLongrunningRequest",
                "analysisQuery": {
                  "scope": "folders/f1",
                  "identitySelector": {
                    "name": "user:user1@foo.com"
                  },
                  "accessSelector": {
                    "permissions": "a.b.get",
                    "permissions": "c.d.create"
                  }
                },
                "outputConfig": {
                  "bigqueryDestination": {
                    "dataset": "projects/project-id/datasets/dataset_id",
                    "tablePrefix": "table-prefix"
                  }
                }
              }
            }
    - expect_stderr: |
        Analyze IAM Policy in progress.
        Use [gcloud asset operations describe folders/f1/operations/AnalyzeIamPolicyLongrunning/002] to check the status of the operation.
    - expect_exit:
        code: 0
- execute_command:  # with_folder_and_roles_specified, bigquery_destination and write_disposition
    command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --roles "roles/cloudasset.r1,roles/cloudasset.r2"
      --expand-resources --output-resource-edges
      --bigquery-dataset "projects/project-id/datasets/dataset_id"
      --bigquery-table-prefix "table_prefix"
      --bigquery-write-disposition "WRITE_TRUNCATE"
    events:
    - api_call:
        expect_request:
          uri: https://cloudasset.googleapis.com/v1/folders/f1:analyzeIamPolicyLongrunning?alt=json
          method: POST
          headers: {}
          body:
            json:
              analysisQuery:
                accessSelector:
                  roles:
                  - roles/cloudasset.r1
                  - roles/cloudasset.r2
                identitySelector:
                  identity: user:user1@foo.com
                options:
                  expandResources: true
                  outputResourceEdges: true
              outputConfig:
                bigqueryDestination:
                  dataset: projects/project-id/datasets/dataset_id
                  tablePrefix: table_prefix
                  writeDisposition: WRITE_TRUNCATE
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "folders/f1/operations/AnalyzeIamPolicyLongrunning/002",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.asset.v1.AnalyzeIamPolicyLongrunningRequest",
                "analysisQuery": {
                  "scope": "folders/f1",
                  "identitySelector": {
                    "name": "user:user1@foo.com"
                  },
                  "accessSelector": {
                    "roles": "roles/cloudasset.r1",
                    "roles": "roles/cloudasset.r2"
                  }
                },
                "outputConfig": {
                  "bigqueryDestination": {
                    "dataset": "projects/project-id/datasets/dataset_id",
                    "tablePrefix": "table-prefix",
                    "writeDisposition": "WRITE_TRUNCATE"
                  }
                }
              }
            }
    - expect_stderr: |
        Analyze IAM Policy in progress.
        Use [gcloud asset operations describe folders/f1/operations/AnalyzeIamPolicyLongrunning/002] to check the status of the operation.
    - expect_exit:
        code: 0
- execute_command:  # with_project_and_roles_specified, bigquery_destination and partition_key
    command: asset analyze-iam-policy-longrunning --project "p1" --identity "user:user1@foo.com"
      --roles "roles/cloudasset.r1,roles/cloudasset.r2"
      --expand-resources --output-resource-edges
      --bigquery-dataset "projects/project-id/datasets/dataset_id"
      --bigquery-table-prefix "table_prefix"
      --bigquery-partition-key "REQUEST_TIME"
    events:
    - api_call:
        expect_request:
          uri: https://cloudasset.googleapis.com/v1/projects/p1:analyzeIamPolicyLongrunning?alt=json
          method: POST
          headers: {}
          body:
            json:
              analysisQuery:
                accessSelector:
                  roles:
                  - roles/cloudasset.r1
                  - roles/cloudasset.r2
                identitySelector:
                  identity: user:user1@foo.com
                options:
                  expandResources: true
                  outputResourceEdges: true
              outputConfig:
                bigqueryDestination:
                  dataset: projects/project-id/datasets/dataset_id
                  tablePrefix: table_prefix
                  partitionKey: REQUEST_TIME
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "projects/p1/operations/AnalyzeIamPolicyLongrunning/002",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.asset.v1.AnalyzeIamPolicyLongrunningRequest",
                "analysisQuery": {
                  "scope": "projects/p1",
                  "identitySelector": {
                    "name": "user:user1@foo.com"
                  },
                  "accessSelector": {
                    "roles": "roles/cloudasset.r1",
                    "roles": "roles/cloudasset.r2"
                  }
                },
                "outputConfig": {
                  "bigqueryDestination": {
                    "dataset": "projects/project-id/datasets/dataset_id",
                    "tablePrefix": "table-prefix",
                    "partitionKey": "REQUEST_TIME"
                  }
                }
              }
            }
    - expect_stderr: |
        Analyze IAM Policy in progress.
        Use [gcloud asset operations describe projects/p1/operations/AnalyzeIamPolicyLongrunning/002] to check the status of the operation.
    - expect_exit:
        code: 0
- execute_command:  # with_option_analyze-service-account-impersonation, bigquery_destination, write_disposition and partition_key
    command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --analyze-service-account-impersonation
      --bigquery-dataset "projects/project-id/datasets/dataset_id"
      --bigquery-table-prefix "table_prefix"
      --bigquery-write-disposition "WRITE_EMPTY"
      --bigquery-partition-key "PARTITION_KEY_UNSPECIFIED"
    events:
    - api_call:
        expect_request:
          uri: https://cloudasset.googleapis.com/v1/folders/f1:analyzeIamPolicyLongrunning?alt=json
          method: POST
          headers: {}
          body:
            json:
              analysisQuery:
                identitySelector:
                  identity: user:user1@foo.com
                options:
                  analyzeServiceAccountImpersonation: true
              outputConfig:
                bigqueryDestination:
                  dataset: projects/project-id/datasets/dataset_id
                  tablePrefix: table_prefix
                  writeDisposition: WRITE_EMPTY
                  partitionKey: PARTITION_KEY_UNSPECIFIED
        return_response:
          headers:
            status: '200'
          body: |
            {
              "name": "folders/f1/operations/AnalyzeIamPolicyLongrunning/002",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.asset.v1.AnalyzeIamPolicyLongrunningRequest",
                "analysisQuery": {
                  "scope": "folders/f1",
                  "identitySelector": {
                    "name": "user:user1@foo.com"
                  }
                },
                "outputConfig": {
                  "bigqueryDestination": {
                    "dataset": "projects/project-id/datasets/dataset_id",
                    "tablePrefix": "table-prefix",
                    "writeDisposition": "WRITE_EMPTY",
                    "partitionKey": "PARTITION_KEY_UNSPECIFIED"
                  }
                }
              }
            }
    - expect_stderr: |
        Analyze IAM Policy in progress.
        Use [gcloud asset operations describe folders/f1/operations/AnalyzeIamPolicyLongrunning/002] to check the status of the operation.
    - expect_exit:
        code: 0
- execute_command:  # without_output_config
    command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
    events:
    - expect_stderr:
        matches: ERROR.*
    - expect_exit:
        code: 1
        message: |-
          Exactly one of (--gcs-output-path | [--bigquery-dataset --bigquery-table-prefix : --bigquery-partition-key --bigquery-write-disposition]) must be specified.
- execute_command:  # invalid_gcs_output_path
    command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --gcs-output-path "gsssss://bucket-name/object-name"
    events:
    - expect_stderr:
        matches: ERROR.*
    - expect_exit:
        code: 1
        message: |-
          argument --gcs-output-path: Bad value [gsssss://bucket-name/object-name]: --gcs-output-path must be a Google Cloud Storage URI starting with "gs://". For example, "gs://bucket_name/object_name".
- execute_command:  # invalid_bigquery_dataset
    command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --bigquery-dataset "dataset_id"
      --bigquery-table-prefix "table_prefix"
    events:
    - expect_stderr:
        matches: ERROR.*
    - expect_exit:
        code: 1
        message: |-
          argument --bigquery-dataset: Bad value [dataset_id]: --bigquery-dataset must be a dataset relative name starting with "projects/". For example, "projects/project_id/datasets/dataset_id".
- execute_command:  # no_bigquery_dataset
    command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --bigquery-table-prefix "table_prefix"
    events:
    - expect_stderr:
        matches: ERROR.*
    - expect_exit:
        code: 1
        message: |-
          argument --bigquery-table-prefix: --bigquery-dataset must be specified.
- execute_command:  # unsupported_partition_key
    command: asset analyze-iam-policy-longrunning --folder "f1" --identity "user:user1@foo.com"
      --bigquery-dataset "projects/project-id/datasets/dataset_id"
      --bigquery-table-prefix "table_prefix"
      --bigquery-partition-key "UNSUPPORTED"
    events:
    - expect_stderr:
        matches: ERROR.*
    - expect_exit:
        code: 1
        message: |-
          argument --bigquery-partition-key: Invalid choice: 'UNSUPPORTED'.

          Valid choices are [PARTITION_KEY_UNSPECIFIED, REQUEST_TIME].
