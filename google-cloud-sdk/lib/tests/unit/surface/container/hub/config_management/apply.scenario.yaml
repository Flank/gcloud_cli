title: ACM hub feature apply config test
release_tracks: [ALPHA]

summary:
# This summary is generated by http://go/gcloud-scenario-tests on update and should not be edited.
- execute:
  - command: |
      container hub config-management enable
- execute:
  - command: container hub config-management apply --membership=unregistered-cluster
      --config=config.yaml
  - error: '1: Membership unregistered-cluster is not in Hub.'
- execute:
  - command: container hub config-management apply --membership=managed-cluster
  - stderr: |
      ERROR: (gcloud.alpha.container.hub.$$feature$$.apply) argument --config: Must be specified.
      Usage: gcloud alpha container hub $$feature$$ apply --config=CONFIG [optional flags]
        optional flags may be  --help | --membership

      For detailed information on this command and its flags, run:
        gcloud alpha container hub $$feature$$ apply --help
  - error: '1: argument --config: Must be specified.'
  - error: '1: Membership unregistered-cluster is not in Hub.'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=missing_apiVersion_field_config.yaml
  - error: '1: Only support "apiVersion: $$feature_api$$.gke.io/v1"'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_kind_field_config.yaml
  - error: '1: Only support "kind: ConfigManagement"'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_field_config.yaml
  - error: '1: Please remove illegal field .spec.cluster'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=missing_field_config.yaml
  - error: '1: Missing required field [syncRepo].'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=missing_spec_config.yaml
  - error: '1: Missing required field .spec'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_source_format.yaml
  - error: '1: Please remove illegal value of .spec.sourceFormat'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_nested_field.yaml
  - error: '1: Please remove illegal field .spec.git.invalidField'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_nested_proxy_field.yaml
  - error: '1: Please remove illegal field .spec.git.proxy.invalidProxy'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=valid_configmanagement.yaml
  - progress_tracker:
    - message: Waiting for Feature $$feature_display_name$$ to be updated
    - status: SUCCESS
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=valid_configmanagement_policy_controller.yaml
  - progress_tracker:
    - message: Waiting for Feature $$feature_display_name$$ to be updated
    - status: SUCCESS
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=disable_policy_controller.yaml
  - progress_tracker:
    - message: Waiting for Feature $$feature_display_name$$ to be updated
    - status: SUCCESS
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_disable_policy_controller.yaml
  - error: '1: Policy Controller is disabled, remove the other config fields.'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=policy_controller_no_enabled.yaml
  - error: '1: Missing required field .spec.policyController.enabled'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=policy_controller_empty.yaml
  - error: '1: Missing required field .spec.policyController.enabled'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_policy_controller_enabled.yaml
  - error: '1: policyController.enabled should be `true` or `false`'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=policy_controller_illegal_field.yaml
  - error: '1: Please remove illegal field .spec.policyController.field'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_disable_policy_controller.yaml
  - error: '1: Policy Controller is disabled, remove the other config fields.'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=enable_policy_controller.yaml
  - progress_tracker:
    - message: Waiting for Feature $$feature_display_name$$ to be updated
    - status: SUCCESS
actions:
- define_reference:
    reference: feature
    value: config-management
- define_reference:
    reference: feature_api
    value: configmanagement
- define_reference:
    reference: feature_display_name
    value: Config Management
- define_reference:
    reference: project
    value: fake-project
- define_reference:
    reference: membership
    value: managed-cluster

# Enable Configmanagement Feature
- execute_command:
    command: |
      container hub config-management enable
    validation_only: true
    events:
    - expect_exit:
        code: 0

# Test cluster not in membership
- execute_command:
    command: container hub config-management apply --membership=unregistered-cluster
      --config=config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Membership unregistered-cluster is not in Hub.

- execute_command:
    command: container hub config-management apply --membership=managed-cluster
    events:
    - expect_stderr: |
        ERROR: (gcloud.alpha.container.hub.$$feature$$.apply) argument --config: Must be specified.
        Usage: gcloud alpha container hub $$feature$$ apply --config=CONFIG [optional flags]
          optional flags may be  --help | --membership

        For detailed information on this command and its flags, run:
          gcloud alpha container hub $$feature$$ apply --help
    - expect_exit:
        code: 1
        message: 'argument --config: Must be specified.'
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Membership unregistered-cluster is not in Hub.


- write_file:
    path: missing_apiVersion_field_config.yaml
    contents: |
      kind: ConfigManagement
      spec:
        git:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=missing_apiVersion_field_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: 'Only support "apiVersion: $$feature_api$$.gke.io/v1"'
- write_file:
    path: invalid_kind_field_config.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: config-management
      spec:
        git:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_kind_field_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: 'Only support "kind: ConfigManagement"'
- write_file:
    path: invalid_field_config.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        cluster: managed-cluster
        git:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_field_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Please remove illegal field .spec.cluster


- write_file:
    path: missing_field_config.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        git:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=missing_field_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Missing required field [syncRepo].


- write_file:
    path: missing_spec_config.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=missing_spec_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Missing required field .spec


- write_file:
    path: invalid_source_format.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        sourceFormat: invalid

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_source_format.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Please remove illegal value of .spec.sourceFormat


- write_file:
    path: invalid_nested_field.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        git:
          invalidField: invalid
          syncRepo: git@github.com:/csp-config-management.git
          secretType: ssh
          syncBranch: 1.0.0

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_nested_field.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Please remove illegal field .spec.git.invalidField


- write_file:
    path: invalid_nested_proxy_field.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        git:
          proxy:
            invalidProxy: tinyproxy-service.config-management-system-test:443
          syncRepo: git@github.com:/csp-config-management.git
          secretType: ssh
          syncBranch: 1.0.0

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_nested_proxy_field.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Please remove illegal field .spec.git.proxy.invalidProxy


- write_file:
    path: valid_configmanagement.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        sourceFormat: hierarchy
        git:
          proxy:
            httpsProxy: tinyproxy-service.config-management-system-test:443
          syncRepo: git@github.com:/csp-config-management.git
          secretType: ssh
          syncBranch: 1.0.0

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=valid_configmanagement.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/$$project$$/locations/global/features/$$feature_api$$?alt=json&updateMask=$$feature_api$$_feature_spec.membership_configs
          method: PATCH
          body:
            json:
              configmanagementFeatureSpec:
                membershipConfigs:
                  managed-cluster:
                    configSync:
                      git:
                        httpsProxy: tinyproxy-service.$$feature$$-system-test:443
                        secretType: ssh
                        syncBranch: 1.0.0
                        syncRepo: git@github.com:/csp-$$feature$$.git
                      sourceFormat: hierarchy
        return_response:
          headers:
            status: '200'
            transfer-encoding: chunked
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-04-07T18:48:18.815281840Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": false
            }
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-04-07T18:48:18.815281840Z",
                "endTime": "2020-04-07T18:48:18.880466469Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/mynomos/locations/global/features/$$feature_api$$",
                "featureState": {
                  "lifecycleState": "ENABLED"
                },
                "createTime": "2020-04-07T18:30:11.232481873Z",
                "updateTime": "2020-04-07T18:48:18.817354532Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "configSync": {
                        "git": {
                          "proxy": {
                            "httpsProxy": "tinyproxy-service.$$feature$$-system-test:443"
                          },
                          "syncRepo": "git@github.com:/csp-$$feature$$.git",
                          "syncBranch": "1.0.0",
                          "secretType": "ssh"
                        },
                        "sourceFormat": "hierarchy"
                      }
                    }
                  }
                }
              }
            }

    - expect_progress_tracker:
        message: Waiting for Feature $$feature_display_name$$ to be updated
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/mynomos/locations/global/features/$$feature_api$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-04-07T18:48:18.815281840Z",
                "endTime": "2020-04-07T18:48:18.880466469Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/mynomos/locations/global/features/$$feature_api$$",
                "featureState": {
                  "lifecycleState": "ENABLED"
                },
                "createTime": "2020-04-07T18:30:11.232481873Z",
                "updateTime": "2020-04-07T18:48:18.817354532Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "configSync": {
                        "git": {
                          "proxy": {
                            "httpsProxy": "tinyproxy-service.$$feature$$-system-test:443"
                          },
                          "syncRepo": "git@github.com:/csp-$$feature$$.git",
                          "syncBranch": "1.0.0",
                          "secretType": "ssh"
                        },
                        "sourceFormat": "hierarchy"
                      }
                    }
                  }
                }
              }
            }
    - expect_exit:
        code: 0


- write_file:
    path: valid_configmanagement_policy_controller.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:
          enabled: true
          templateLibraryInstalled: false
          auditIntervalSeconds: 60
          referentialRulesEnabled: true
          exemptableNamespaces: ["not-applicable","also-not-applicable"]

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=valid_configmanagement_policy_controller.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/$$project$$/locations/global/features/$$feature_api$$?alt=json&updateMask=$$feature_api$$_feature_spec.membership_configs
          method: PATCH
          headers: {}
          body:
            json:
              configmanagementFeatureSpec:
                membershipConfigs:
                  managed-cluster:
                    policyController:
                      auditIntervalSeconds: '60'
                      enabled: true
                      exemptableNamespaces:
                      - not-applicable
                      - also-not-applicable
                      referentialRulesEnabled: true
                      templateLibraryInstalled: false
        return_response:
          headers:
            status: '200'
            transfer-encoding: chunked
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": false
            }
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "endTime": "2020-08-13T07:07:12.621323279Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/mynomos/locations/global/features/$$feature_api$$",
                "featureState": {
                  "lifecycleState": "ENABLED"
                },
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "updateTime": "2020-08-13T07:07:12.621323279Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "policyController": {
                        "enabled": true,
                        "exemptableNamespaces": ["not-applicable", "also-not-applicable"],
                        "referentialRulesEnabled": true,
                        "templateLibraryInstalled": false,
                        "auditIntervalSeconds": 60
                      }
                    }
                  }
                }
              }
            }
    - expect_progress_tracker:
        message: Waiting for Feature $$feature_display_name$$ to be updated
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/mynomos/locations/global/features/$$feature_api$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "endTime": "2020-08-13T07:07:12.621323279Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/mynomos/locations/global/features/$$feature_api$$",
                "featureState": {
                  "lifecycleState": "ENABLED"
                },
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "updateTime": "2020-08-13T07:07:12.621323279Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "policyController": {
                        "enabled": true,
                        "exemptableNamespaces": ["not-applicable", "also-not-applicable"],
                        "referentialRulesEnabled": true,
                        "templateLibraryInstalled": false,
                        "auditIntervalSeconds": 60
                      }
                    }
                  }
                }
              }
            }
    - expect_exit:
        code: 0


- write_file:
    path: disable_policy_controller.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:
          enabled: false

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=disable_policy_controller.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/$$project$$/locations/global/features/$$feature_api$$?alt=json&updateMask=$$feature_api$$_feature_spec.membership_configs
          method: PATCH
          headers: {}
          body:
            json:
              configmanagementFeatureSpec:
                membershipConfigs:
                  managed-cluster:
                    policyController:
                      enabled: false
        return_response:
          headers:
            status: '200'
            transfer-encoding: chunked
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": false
            }
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "endTime": "2020-08-13T07:07:12.621323279Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/mynomos/locations/global/features/$$feature_api$$",
                "featureState": {
                  "lifecycleState": "ENABLED"
                },
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "updateTime": "2020-08-13T07:07:12.621323279Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "policyController": {
                      }
                    }
                  }
                }
              }
            }
    - expect_progress_tracker:
        message: Waiting for Feature $$feature_display_name$$ to be updated
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/mynomos/locations/global/features/$$feature_api$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "endTime": "2020-08-13T07:07:12.621323279Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/mynomos/locations/global/features/$$feature_api$$",
                "featureState": {
                  "lifecycleState": "ENABLED"
                },
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "updateTime": "2020-08-13T07:07:12.621323279Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "policyController": {
                        "enabled": false
                      }
                    }
                  }
                }
              }
            }
    - expect_exit:
        code: 0


- write_file:
    path: invalid_disable_policy_controller.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:
          enabled: false
          templateLibraryInstalled: false
          auditIntervalSeconds: 60

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_disable_policy_controller.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$

    - expect_exit:
        code: 1
        message: Policy Controller is disabled, remove the other config fields.


- write_file:
    path: policy_controller_no_enabled.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:
          field: illegal

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=policy_controller_no_enabled.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$

    - expect_exit:
        code: 1
        message: Missing required field .spec.policyController.enabled


- write_file:
    path: policy_controller_empty.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=policy_controller_empty.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$

    - expect_exit:
        code: 1
        message: Missing required field .spec.policyController.enabled
- write_file:
    path: invalid_policy_controller_enabled.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:
          enabled: invalid

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_policy_controller_enabled.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$

    - expect_exit:
        code: 1
        message: policyController.enabled should be `true` or `false`


- write_file:
    path: policy_controller_illegal_field.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:
          enabled: true
          field: illegal

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=policy_controller_illegal_field.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$

    - expect_exit:
        code: 1
        message: Please remove illegal field .spec.policyController.field


- write_file:
    path: invalid_disable_policy_controller.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:
          enabled: false
          templateLibraryInstalled: false
          auditIntervalSeconds: 60

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_disable_policy_controller.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$

    - expect_exit:
        code: 1
        message: Policy Controller is disabled, remove the other config fields.


- write_file:
    path: enable_policy_controller.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        policyController:
          enabled: true

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=enable_policy_controller.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/$$project$$/locations/global/features/$$feature_api$$?alt=json&updateMask=$$feature_api$$_feature_spec.membership_configs
          method: PATCH
          headers: {}
          body:
            json:
              configmanagementFeatureSpec:
                membershipConfigs:
                  managed-cluster:
                    policyController:
                      enabled: true
        return_response:
          headers:
            status: '200'
            transfer-encoding: chunked
          body: |-
            {
              "name": "projects/$$project$$/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-08-13T07:07:11.621323279Z",
                "target": "projects/$$project$$/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": false
            }
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/$$project$$/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/$$project$$/locations/global/operations/operation-1600183005405-5af5ba39ce0e1-6b6c28ae-d72acf23",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-09-15T15:16:45.434175160Z",
                "endTime": "2020-09-15T15:16:45.589745815Z",
                "target": "projects/$$project$$/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/$$project$$/locations/global/features/$$feature_api$$",
                "createTime": "2020-08-29T16:16:31.261654864Z",
                "updateTime": "2020-09-15T15:16:45.487282391Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "policyController": {
                        "enabled": true
                      }
                    }
                  }
                }
              }
            }

    - expect_progress_tracker:
        message: Waiting for Feature $$feature_display_name$$ to be updated
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/$$project$$/locations/global/features/$$feature_api$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          status: 200
          headers: {}
          body: |
            {
              "name": "projects/$$project$$/locations/global/features/$$feature_api$$",
              "createTime": "2020-08-29T16:16:31.261654864Z",
              "updateTime": "2020-09-15T15:16:45.862086942Z",
              "$$feature_api$$FeatureSpec": {
                "membershipConfigs": {
                  "$$membership$$": {
                    "policyController": {
                      "enabled": true
                    }
                  }
                }
              }
            }
    - expect_exit:
        code: 0
