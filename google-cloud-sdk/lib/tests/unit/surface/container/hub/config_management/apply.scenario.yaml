title: ACM hub feature apply config test
release_tracks: [ALPHA]

summary:
# This summary is generated automatically on update and should not be edited.
- execute:
  - command: |
      container hub config-management enable
- execute:
  - command: container hub config-management apply --membership=unregistered-cluster
      --config=config.yaml
  - error: '1: Membership unregistered-cluster is not in Hub.'
- execute:
  - command: container hub config-management apply --membership=managed-cluster
  - stderr: |
      ERROR: (gcloud.alpha.container.hub.$$feature$$.apply) argument --config: Must be specified.
      Usage: gcloud alpha container hub $$feature$$ apply --config=CONFIG [optional flags]
        optional flags may be  --help | --membership

      For detailed information on this command and its flags, run:
        gcloud alpha container hub $$feature$$ apply --help
  - error: '1: argument --config: Must be specified.'
  - error: '1: Membership unregistered-cluster is not in Hub.'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=missing_apiVersion_field_config.yaml
  - error: '1: Only support "apiVersion: $$feature_api$$.gke.io/v1"'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_kind_field_config.yaml
  - error: '1: Only support "kind: ConfigManagement"'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=invalid_field_config.yaml
  - error: '1: Please remove illegal field .spec.cluster'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=missing_field_config.yaml
  - error: '1: Missing required field [syncRepo].'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=missing_git.yaml
  - error: '1: Missing .spec.git in Configmanagement template'
- execute:
  - command: container hub config-management apply --membership=managed-cluster --config=valid_configmanagement.yaml
  - progress_tracker:
    - message: Waiting for Feature $$feature_display_name$$ to be updated
    - status: SUCCESS
actions:
- define_reference:
    reference: feature
    value: config-management
- define_reference:
    reference: feature_api
    value: configmanagement
- define_reference:
    reference: feature_display_name
    value: Config Management
- define_reference:
    reference: project
    value: fake-project
- define_reference:
    reference: membership
    value: managed-cluster

# Enable Configmanagement Feature
- execute_command:
    command: |
      container hub config-management enable
    validation_only: true
    events:
    - expect_exit:
        code: 0

# Test cluster not in membership
- execute_command:
    command: container hub config-management apply --membership=unregistered-cluster
      --config=config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Membership unregistered-cluster is not in Hub.

- execute_command:
    command: container hub config-management apply --membership=managed-cluster
    events:
    - expect_stderr: |
        ERROR: (gcloud.alpha.container.hub.$$feature$$.apply) argument --config: Must be specified.
        Usage: gcloud alpha container hub $$feature$$ apply --config=CONFIG [optional flags]
          optional flags may be  --help | --membership

        For detailed information on this command and its flags, run:
          gcloud alpha container hub $$feature$$ apply --help
    - expect_exit:
        code: 1
        message: 'argument --config: Must be specified.'
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Membership unregistered-cluster is not in Hub.


- write_file:
    path: missing_apiVersion_field_config.yaml
    contents: |
      kind: ConfigManagement
      spec:
        git:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=missing_apiVersion_field_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: 'Only support "apiVersion: $$feature_api$$.gke.io/v1"'
- write_file:
    path: invalid_kind_field_config.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: config-management
      spec:
        git:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_kind_field_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: 'Only support "kind: ConfigManagement"'
- write_file:
    path: invalid_field_config.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        cluster: managed-cluster
        git:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=invalid_field_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Please remove illegal field .spec.cluster

- write_file:
    path: missing_field_config.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        git:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=missing_field_config.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Missing required field [syncRepo].

- write_file:
    path: missing_git.yaml
    contents: |
      spec:
        giit:
          syncBranch: Master

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=missing_git.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - expect_exit:
        code: 1
        message: Missing .spec.git in Configmanagement template


- write_file:
    path: valid_configmanagement.yaml
    contents: |
      apiVersion: configmanagement.gke.io/v1
      kind: ConfigManagement
      metadata:
        name: config-management
      spec:
        git:
          syncRepo: git@github.com:/csp-config-management.git
          secretType: ssh
          syncBranch: 1.0.0

- execute_command:
    command: container hub config-management apply --membership=managed-cluster --config=valid_configmanagement.yaml
    events:
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1beta1/projects/$$project$$/locations/global/memberships?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            content-type: application/json; charset=UTF-8
            status: '200'
          body:
            resources:
            - name: projects/$$project$$/locations/global/memberships/$$membership$$
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/$$project$$/locations/global/features/$$feature_api$$?alt=json&updateMask=$$feature_api$$_feature_spec.membership_configs
          method: PATCH
          body:
            json:
              configmanagementFeatureSpec:
                membershipConfigs:
                  managed-cluster:
                    configSync:
                      git:
                        secretType: ssh
                        syncBranch: 1.0.0
                        syncRepo: git@github.com:/csp-$$feature$$.git
        return_response:
          headers:
            status: '200'
            transfer-encoding: chunked
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-04-07T18:48:18.815281840Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": false
            }
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-04-07T18:48:18.815281840Z",
                "endTime": "2020-04-07T18:48:18.880466469Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/mynomos/locations/global/features/$$feature_api$$",
                "featureState": {
                  "lifecycleState": "ENABLED"
                },
                "createTime": "2020-04-07T18:30:11.232481873Z",
                "updateTime": "2020-04-07T18:48:18.817354532Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "configSync": {
                        "git": {
                          "syncRepo": "git@github.com:/csp-$$feature$$.git",
                          "syncBranch": "1.0.0",
                          "secretType": "ssh"
                        }
                      }
                    }
                  }
                }
              }
            }

    - expect_progress_tracker:
        message: Waiting for Feature $$feature_display_name$$ to be updated
        status: SUCCESS
    - api_call:
        expect_request:
          uri: https://gkehub.googleapis.com/v1alpha1/projects/mynomos/locations/global/features/$$feature_api$$?alt=json
          method: GET
          headers: {}
          body: null
        return_response:
          headers:
            status: '200'
          body: |-
            {
              "name": "projects/mynomos/locations/global/operations/operation-1586285298807-5a2b7d3bf71e6-dc2e89e1-aa08bac2",
              "metadata": {
                "@type": "type.googleapis.com/google.cloud.common.OperationMetadata",
                "createTime": "2020-04-07T18:48:18.815281840Z",
                "endTime": "2020-04-07T18:48:18.880466469Z",
                "target": "projects/mynomos/locations/global/features/$$feature_api$$",
                "verb": "update",
                "cancelRequested": false,
                "apiVersion": "v1alpha1"
              },
              "done": true,
              "response": {
                "@type": "type.googleapis.com/google.cloud.gkehub.v1alpha1.Feature",
                "name": "projects/mynomos/locations/global/features/$$feature_api$$",
                "featureState": {
                  "lifecycleState": "ENABLED"
                },
                "createTime": "2020-04-07T18:30:11.232481873Z",
                "updateTime": "2020-04-07T18:48:18.817354532Z",
                "$$feature_api$$FeatureSpec": {
                  "membershipConfigs": {
                    "$$membership$$": {
                      "configSync": {
                        "git": {
                          "syncRepo": "git@github.com:/csp-$$feature$$.git",
                          "syncBranch": "1.0.0",
                          "secretType": "ssh"
                        }
                      }
                    }
                  }
                }
              }
            }
    - expect_exit:
        code: 0
