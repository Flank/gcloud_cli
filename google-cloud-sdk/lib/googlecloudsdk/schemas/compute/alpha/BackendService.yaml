$schema: "http://json-schema.org/draft-06/schema#"

title: compute alpha BackendService export schema
description: A gcloud export/import command YAML validation schema.
type: object
additionalProperties: false
properties:
  COMMENT:
    type: object
    description: User specified info ignored by gcloud import.
    additionalProperties: false
    properties:
      template-id:
        type: string
      region:
        type: string
      description:
        type: string
      date:
        type: string
      version:
        type: string
  UNKNOWN:
    type: array
    description: Unknown API fields that cannot be imported.
    items:
      type: string
  affinityCookieTtlSec:
    description: |-
      Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If
      set to 0, the cookie is non-persistent and lasts only until the end of the
      browser session (or equivalent). The maximum allowed value for TTL is one
      day.  When the load balancing scheme is INTERNAL, this field is not used.
    type: integer
  appEngineBackend:
    description: |-
      Directs request to an App Engine app. cloudFunctionBackend and backends[]
      must be empty if this is set.
    $ref: BackendServiceAppEngineBackend.yaml
  backends:
    description: The list of backends that serve this BackendService.
    type: array
    items:
      $ref: Backend.yaml
  cdnPolicy:
    description: Cloud CDN configuration for this BackendService.
    $ref: BackendServiceCdnPolicy.yaml
  circuitBreakers:
    description: |-
      Settings controlling the volume of connections to a backend service.
      This field is applicable to either:   - A regional backend service
      with the service_protocol set to HTTP, HTTPS, or HTTP2, and
      load_balancing_scheme set to INTERNAL_MANAGED.  - A global backend
      service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
    $ref: CircuitBreakers.yaml
  cloudFunctionBackend:
    description: |-
      Directs request to a cloud function. appEngineBackend and backends[]
      must be empty if this is set.
    $ref: BackendServiceCloudFunctionBackend.yaml
  connectionDraining:
    description: A ConnectionDraining attribute.
    $ref: ConnectionDraining.yaml
  consistentHash:
    description: |-
      Consistent Hash-based load balancing can be used to provide soft
      session affinity based on HTTP headers, cookies or other properties.
      This load balancing policy is applicable only for HTTP connections.
      The affinity to a particular destination host will be lost when one or
      more hosts are added/removed from the destination service. This field
      specifies parameters that control consistent hashing. This field is
      only applicable when localityLbPolicy is set to MAGLEV or RING_HASH.
      This field is applicable to either:   - A regional backend service
      with the service_protocol set to HTTP, HTTPS, or HTTP2, and
      load_balancing_scheme set to INTERNAL_MANAGED.  - A global backend
      service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
    $ref: ConsistentHashLoadBalancerSettings.yaml
  creationTimestamp:
    description: '[Output Only] Creation timestamp in RFC3339 text format.'
    type: string
  customRequestHeaders:
    description: |-
      Headers that the HTTP/S load balancer should add to proxied requests.
    type: array
    items:
      type: string
  description:
    description: |-
      An optional description of this resource. Provide this property
      when you create the resource.
    type: string
  enableCDN:
    description: |-
      If true, enable Cloud CDN for this BackendService.  When the load
      balancing scheme is INTERNAL, this field is not used.
    type: boolean
  failoverPolicy:
    description: A BackendServiceFailoverPolicy attribute.
    $ref: BackendServiceFailoverPolicy.yaml
  healthChecks:
    description: |-
      The list of URLs to the HttpHealthCheck or HttpsHealthCheck
      resource for health checking this BackendService. Currently at
      most one health check can be specified, and a health check is
      required for Compute Engine backend services. A health check must
      not be specified for App Engine backend and Cloud Function
      backend.  For internal load balancing, a URL to a HealthCheck
      resource must be specified instead.
    type: array
    items:
      type: string
  iap:
    description: A BackendServiceIAP attribute.
    $ref: BackendServiceIAP.yaml
  kind:
    description: |-
      [Output Only] Type of resource. Always compute#backendService
      for backend services.
    type: string
  loadBalancingScheme:
    description: |-
      Indicates whether the backend service will be used with
      internal or external load balancing. A backend service created
      for one type of load balancing cannot be used with the other.
      Possible values are INTERNAL and EXTERNAL.
    type: string
    enum:
    - EXTERNAL
    - INTERNAL
    - INTERNAL_MANAGED
    - INTERNAL_SELF_MANAGED
    - INVALID_LOAD_BALANCING_SCHEME
  localityLbPolicy:
    description: |-
      The load balancing algorithm used within the scope of the
      locality. The possible values are:   - ROUND_ROBIN: This is a
      simple policy in which each healthy backend is selected in
      round robin order. This is the default.  - LEAST_REQUEST: An
      O(1) algorithm which selects two random healthy hosts and
      picks the host which has fewer active requests.  - RING_HASH:
      The ring/modulo hash load balancer implements consistent
      hashing to backends. The algorithm has the property that the
      addition/removal of a host from a set of N hosts only affects
      1/N of the requests.  - RANDOM: The load balancer selects a
      random healthy host.  -
    type: string
    enum:
    - INVALID_LB_POLICY
    - LEAST_REQUEST
    - MAGLEV
    - ORINGINAL_DESTINATION
    - RANDOM
    - RING_HASH
    - ROUND_ROBIN
  logConfig:
    description: |-
      This field denotes the logging options for the load balancer
      traffic served by this backend service. If logging is enabled,
      logs will be exported to Stackdriver.
    $ref: BackendServiceLogConfig.yaml
  name:
    description: |-
      Name of the resource. Provided by the client when the resource
      is created. The name must be 1-63 characters long, and comply
      with RFC1035. Specifically, the name must be 1-63 characters
      long and match the regular expression
      `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
      must be a lowercase letter, and all following characters must
      be a dash, lowercase letter, or digit, except the last
      character, which cannot be a dash.
    type: string
  outlierDetection:
    description: |-
      Settings controlling eviction of unhealthy hosts from the load
      balancing pool. This field is applicable to either:   - A
      regional backend service with the service_protocol set to
      HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to
      INTERNAL_MANAGED.  - A global backend service with the
      load_balancing_scheme set to INTERNAL_SELF_MANAGED.
    $ref: OutlierDetection.yaml
  port:
    description: |-
      Deprecated in favor of portName. The TCP port to connect on
      the backend. The default value is 80.  This cannot be used for
      internal load balancing.
    type: integer
  portName:
    description: |-
      Name of backend port. The same name should appear in the
      instance groups referenced by this service. Required when the
      load balancing scheme is EXTERNAL.  When the load balancing
      scheme is INTERNAL, this field is not used.
    type: string
  protocol:
    description: |-
      The protocol this BackendService uses to communicate with
      backends.  Possible values are HTTP, HTTPS, TCP, and SSL. The
      default is HTTP.  For internal load balancing, the possible
      values are TCP and UDP, and the default is TCP.
    type: string
    enum:
    - HTTP
    - HTTP2
    - HTTPS
    - SSL
    - TCP
    - UDP
  region:
    description: |-
      [Output Only] URL of the region where the regional backend
      service resides. This field is not applicable to global
      backend services. You must specify this field as part of the
      HTTP request URL. It is not settable as a field in the request
      body.
    type: string
  securityPolicy:
    description: |-
      [Output Only] The resource URL for the security policy
      associated with this backend service.
    type: string
  securitySettings:
    description: |-
      This field specifies the security policy that applies to this
      backend service. This field is applicable to either:   - A
      regional backend service with the service_protocol set to
      HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to
      INTERNAL_MANAGED.  - A global backend service with the
      load_balancing_scheme set to INTERNAL_SELF_MANAGED.
    $ref: SecuritySettings.yaml
  selfLink:
    description: '[Output Only] Server-defined URL for the resource.'
    type: string
  selfLinkWithId:
    description: |-
      [Output Only] Server-defined URL for this resource with the
      resource id.
    type: string
  sessionAffinity:
    description: |-
      Type of session affinity to use. The default is NONE. When the
      load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or
      GENERATED_COOKIE.  When the load balancing scheme is INTERNAL,
      can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or
      CLIENT_IP_PORT_PROTO.  When the protocol is UDP, this field is
      not used.
    type: string
    enum:
    - CLIENT_IP
    - CLIENT_IP_PORT_PROTO
    - CLIENT_IP_PROTO
    - GENERATED_COOKIE
    - HEADER_FIELD
    - HTTP_COOKIE
    - NONE
  timeoutSec:
    description: |-
      How many seconds to wait for the backend before considering it
      a failed request. Default is 30 seconds.
    type: integer
