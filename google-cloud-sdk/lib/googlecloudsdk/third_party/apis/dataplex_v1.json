{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "dataplex:v1",
  "name": "dataplex",
  "canonicalName": "Cloud Dataplex",
  "version": "v1",
  "revision": "0",
  "title": "Cloud Dataplex API",
  "description": "Dataplex API is used to manage the lifecycle of data lakes.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/dataplex/docs",
  "protocol": "rest",
  "rootUrl": "https://dataplex.googleapis.com/",
  "mtlsRootUrl": "https://dataplex.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://dataplex.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "schemas": {
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations\/{unique_id}.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get\/Create\/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https:\/\/github.com\/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for Empty is empty JSON object {}.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleLongrunningCancelOperationRequest": {
      "id": "GoogleLongrunningCancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1Lake": {
      "id": "GoogleCloudDataplexV1Lake",
      "description": "A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The relative resource name of the lake, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time when the lake was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time when the lake was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. User-defined labels for the lake.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. Description of the lake.",
          "type": "string"
        },
        "state": {
          "description": "Output only. Current state of the lake.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ]
        },
        "serviceAccount": {
          "description": "Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.",
          "readOnly": true,
          "type": "string"
        },
        "securitySpec": {
          "description": "Optional. Specification of the security policy applied to data in this lake. Typically it should take a few minutes for the security policy to fully propagate.",
          "$ref": "GoogleCloudDataplexV1LakeSecuritySpec"
        },
        "securityStatus": {
          "description": "Output only. Status of the security policy applied to data in this lake.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1SecurityStatus"
        },
        "metastore": {
          "description": "Optional. Settings to manage metadata publishing to a Hive Metastore from the lake.",
          "$ref": "GoogleCloudDataplexV1LakeMetastore"
        },
        "assetStatus": {
          "description": "Output only. Aggregated status of the underlying assets of the lake.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetStatus"
        },
        "actions": {
          "description": "Output only. The current set of actions required of the administrator for this lake.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Action"
          }
        }
      }
    },
    "GoogleCloudDataplexV1LakeSecuritySpec": {
      "id": "GoogleCloudDataplexV1LakeSecuritySpec",
      "description": "Settings to manage the security policy applied to data in a lake.",
      "type": "object",
      "properties": {
        "readerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataReader IAM role, that allows group members to read data being managed within a lake. By default this is inherited by all assets within a lake. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "writerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataWriter IAM role, that allows group members to update data being managed within a lake. By default this is inherited by all assets within a lake. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataOwner IAM role, that allows group members to modify the resources (including their IAM policies and child resources) managed within a lake. By default this is inherited by all assets within the lake. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1SecurityStatus": {
      "id": "GoogleCloudDataplexV1SecurityStatus",
      "description": "Status of the security policy specified on lakes & zones.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The current state of the security policy applied to data.",
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "Security policy has been successfully applied to data.",
            "Security policy is in the process of being applied to data.",
            "Security policy could not be applied to data due to errors."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "APPLYING",
            "ERROR"
          ]
        },
        "message": {
          "description": "Additional information about the current state.",
          "type": "string"
        },
        "updateTime": {
          "description": "Last update time of the status.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDataplexV1LakeMetastore": {
      "id": "GoogleCloudDataplexV1LakeMetastore",
      "description": "Settings to manage metadata publishing to a Hive Metastore from a lake.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Optional. A relative reference to the Dataproc Metastore (https:\/\/cloud.google.com\/dataproc-metastore\/docs) service instance into which metadata will be published. This is of the form: projects\/{project_number}\/locations\/{location_id}\/services\/{service_id} where the project and location matches the those of the lake.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1AssetStatus": {
      "id": "GoogleCloudDataplexV1AssetStatus",
      "description": "Aggregated status of the underlying assets of a lake or zone.",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Last update time of the status.",
          "type": "string",
          "format": "google-datetime"
        },
        "activeAssets": {
          "description": "Number of active assets.",
          "type": "integer",
          "format": "int32"
        },
        "securityPolicyApplyingAssets": {
          "description": "Number of assets that are in process of updating the security policy on attached resources.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDataplexV1Action": {
      "id": "GoogleCloudDataplexV1Action",
      "description": "Action represents an issue requiring administrator action for resolution.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The category of issue associated with the action.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified category",
            "Resource management related issues.",
            "Security policy related issues.",
            "Data and discovery related issues.",
            "Metadata publishing related issues."
          ],
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "RESOURCE_MANAGEMENT",
            "SECURITY_POLICY",
            "DATA_DISCOVERY",
            "METADATA_PUBLISHING"
          ]
        },
        "issue": {
          "description": "Detailed description of the issue requiring action.",
          "type": "string"
        },
        "locations": {
          "description": "The list of data locations associated with this action. Paths reflect the underlying storage service. Cloud Storage locations are represented as URI paths. BigQuery locations refer to resource names.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1ActionLocation"
          }
        },
        "detectTime": {
          "description": "The time that the issue was detected.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The relative resource name of the action, of the form: projects\/{project}\/locations\/{location}\/lakes\/{lake}\/actions\/{action} projects\/{project}\/locations\/{location}\/lakes\/{lake}\/zones\/{zone}\/actions\/{action} projects\/{project}\/locations\/{location}\/lakes\/{lake}\/zones\/{zone}\/assets\/{asset}\/actions\/{action}",
          "readOnly": true,
          "type": "string"
        },
        "lake": {
          "description": "Output only. The relative resource name of the lake, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
          "readOnly": true,
          "type": "string"
        },
        "zone": {
          "description": "Output only. The relative resource name of the zone, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}",
          "readOnly": true,
          "type": "string"
        },
        "asset": {
          "description": "Output only. The relative resource name of the asset, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}\/assets\/{asset_id}",
          "readOnly": true,
          "type": "string"
        },
        "dataLocations": {
          "description": "The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs:\/\/bucket\/table1\/year=2020\/month=Jan\/). BigQuery locations refer to resource names(E.g. \/\/bigquery.googleapis.com\/projects\/project-id\/datasets\/dataset-id).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "invalidDataFormat": {
          "description": "Details for issues related to invalid or unsupported data formats.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataFormat"
        },
        "incompatibleDataSchema": {
          "description": "Details for issues related to incompatible schemas detected within data.",
          "$ref": "GoogleCloudDataplexV1ActionIncompatibleDataSchema"
        },
        "invalidDataPartition": {
          "description": "Details for issues related to invalid or unsupported data partition structure.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataPartition"
        },
        "missingData": {
          "description": "Details for issues related to absence of data within managed resources.",
          "$ref": "GoogleCloudDataplexV1ActionMissingData"
        },
        "missingResource": {
          "description": "Details for issues related to absence of a managed resource.",
          "$ref": "GoogleCloudDataplexV1ActionMissingResource"
        },
        "unauthorizedResource": {
          "description": "Details for issues related to lack of permissions to access data resources.",
          "$ref": "GoogleCloudDataplexV1ActionUnauthorizedResource"
        },
        "invalidSecurityPolicy": {
          "description": "Details for issues related to invalid security policy specifications.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidSecurityPolicy"
        },
        "invalidDiscoveryConfig": {
          "description": "Details for issues related to invalid discovery configuration files.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidDiscoveryConfig"
        },
        "unauthorizedDataset": {
          "description": "Details for issues related to metadata publishing to BigQuery due to unauthorized errors.",
          "$ref": "GoogleCloudDataplexV1ActionUnauthorizedDataset"
        },
        "missingMetastore": {
          "description": "Details for issues related to metadata publishing to Dataproc Metastore due to a missing metastore service instance.",
          "$ref": "GoogleCloudDataplexV1ActionMissingMetastore"
        },
        "invalidMetastore": {
          "description": "Details for issues related to metadata publishing to Dataproc Metastore caused by issues in the metastore service instance, e.g., wrong metastore configuration.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidMetastore"
        },
        "failedSecurityPolicyApply": {
          "description": "Details for issues related to applying security policy.",
          "$ref": "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply"
        },
        "invalidDataOrganization": {
          "description": "Details for issues related to invalid data arrangement.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataOrganization"
        }
      }
    },
    "GoogleCloudDataplexV1ActionLocation": {
      "id": "GoogleCloudDataplexV1ActionLocation",
      "description": "The list of data locations associated with this action. Paths reflect the underlying storage service. Cloud Storage locations are represented as URI paths. BigQuery locations refer to resource names.",
      "type": "object",
      "properties": {
        "paths": {
          "description": "Paths (e.g., Cloud Storage paths) where issues identified in this action are found.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "table": {
          "description": "The table containing invalid data referenced by its catalog name.",
          "type": "string"
        },
        "fileset": {
          "description": "The fileset containing invalid data referenced by its catalog name.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ActionInvalidDataFormat": {
      "id": "GoogleCloudDataplexV1ActionInvalidDataFormat",
      "description": "Action details for invalid or unsupported data files detected by discovery.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionIncompatibleDataSchema": {
      "id": "GoogleCloudDataplexV1ActionIncompatibleDataSchema",
      "description": "Action details for incompatible schemas detected by discovery.",
      "type": "object",
      "properties": {
        "table": {
          "description": "The name of the table containing invalid data.",
          "type": "string"
        },
        "existingSchema": {
          "description": "The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.",
          "type": "string"
        },
        "newSchema": {
          "description": "The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ActionInvalidDataPartition": {
      "id": "GoogleCloudDataplexV1ActionInvalidDataPartition",
      "description": "Action details for invalid or unsupported partitions detected by discovery.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionMissingData": {
      "id": "GoogleCloudDataplexV1ActionMissingData",
      "description": "Action details for absence of data detected by discovery.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionMissingResource": {
      "id": "GoogleCloudDataplexV1ActionMissingResource",
      "description": "Action details for resource references in assets that cannot be located.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionUnauthorizedResource": {
      "id": "GoogleCloudDataplexV1ActionUnauthorizedResource",
      "description": "Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionInvalidSecurityPolicy": {
      "id": "GoogleCloudDataplexV1ActionInvalidSecurityPolicy",
      "description": "Action details for invalid security policy issues raised when the specified security policy cannot be applied on a managed resource.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionInvalidDiscoveryConfig": {
      "id": "GoogleCloudDataplexV1ActionInvalidDiscoveryConfig",
      "description": "Action details for invalid discovery configuration data detected by discovery.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionUnauthorizedDataset": {
      "id": "GoogleCloudDataplexV1ActionUnauthorizedDataset",
      "description": "Action details for issues of metadata publishing to BigQuery due to unauthorized errors.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionMissingMetastore": {
      "id": "GoogleCloudDataplexV1ActionMissingMetastore",
      "description": "Action details for issues of metadata publishing to Dataproc Metastore due to a missing metastore service instance.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionInvalidMetastore": {
      "id": "GoogleCloudDataplexV1ActionInvalidMetastore",
      "description": "Action details for issues of metadata publishing to Dataproc Metastore caused by issues in the metastore service instance, e.g., wrong metastore configuration.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply": {
      "id": "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply",
      "description": "Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.",
      "type": "object",
      "properties": {
        "asset": {
          "description": "Resource name of one of the assets with failing security policy application. Populated for a lake or zone resource only.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ActionInvalidDataOrganization": {
      "id": "GoogleCloudDataplexV1ActionInvalidDataOrganization",
      "description": "Action details for invalid data arrangement.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1ListLakesResponse": {
      "id": "GoogleCloudDataplexV1ListLakesResponse",
      "description": "List lakes response.",
      "type": "object",
      "properties": {
        "lakes": {
          "description": "Lakes under the given parent location.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Lake"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "unreachableLocations": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1ListActionsResponse": {
      "id": "GoogleCloudDataplexV1ListActionsResponse",
      "description": "List actions response.",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Actions under the given parent lake\/zone\/asset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Action"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ResolveLakeActionsRequest": {
      "id": "GoogleCloudDataplexV1ResolveLakeActionsRequest",
      "description": "ResolveLakeActions request.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1Zone": {
      "id": "GoogleCloudDataplexV1Zone",
      "description": "A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The relative resource name of the zone, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time when the zone was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time when the zone was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. User defined labels for the zone.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. Description of the zone.",
          "type": "string"
        },
        "state": {
          "description": "Output only. Current state of the zone.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ]
        },
        "type": {
          "description": "Required. Immutable. The type of the zone.",
          "type": "string",
          "enumDescriptions": [
            "Zone type not specified.",
            "A zone that contains data that needs further processing before it is considered generally ready for consumption and analytics workloads.",
            "A zone that contains data that is considered to be ready for broader consumption and analytics workloads. Curated structured data stored in Cloud Storage must conform to certain file formats (parquet, avro and orc) and organized in a hive-compatible directory layout."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "RAW",
            "CURATED"
          ]
        },
        "securitySpec": {
          "description": "Optional. Specification of the security policy applied to data in this zone. Typically it should take a few minutes for the security policy to fully propagate.",
          "$ref": "GoogleCloudDataplexV1ZoneSecuritySpec"
        },
        "securityStatus": {
          "description": "Output only. Status of the security policy applied to data in this zone.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1SecurityStatus"
        },
        "discoverySpec": {
          "description": "Optional. Specification of the discovery feature applied to data in this zone.",
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpec"
        },
        "resourceSpec": {
          "description": "Required. Specification of the resources that are referenced by the assets within this zone.",
          "$ref": "GoogleCloudDataplexV1ZoneResourceSpec"
        },
        "assetStatus": {
          "description": "Output only. Aggregated status of the underlying assets of the zone.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetStatus"
        },
        "actions": {
          "description": "Output only. The current set of actions required of the administrator for this zone.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Action"
          }
        }
      }
    },
    "GoogleCloudDataplexV1ZoneSecuritySpec": {
      "id": "GoogleCloudDataplexV1ZoneSecuritySpec",
      "description": "Settings to manage the security policy applied to data in a zone.",
      "type": "object",
      "properties": {
        "readerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataReader IAM role, that allows group members to read data being managed within a zone. By default this is inherited by all assets within a zone. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "writerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataWriter IAM role, that allows group members to update data being managed within a zone. By default this is inherited by all assets within a zone. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataOwner IAM role, that allows group members to modify the resources (including their IAM policies and child resources) managed within a zone. By default this is inherited by all assets within the zone. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overrideParentSpec": {
          "description": "Optional. Indicates whether the policy overrides the list of groups specified in the policy associated with the parent lake or adds to the parent policy. By default, the policy is additive. If this flag is true, the list of groups must each include at least one entry.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpec": {
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpec",
      "description": "Settings to manage the metadata discovery and publishing in a zone.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Required. Whether discovery is enabled.",
          "type": "boolean"
        },
        "includePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schedule": {
          "description": "Optional. Cron schedule (https:\/\/en.wikipedia.org\/wiki\/Cron) for running discovery jobs periodically. Discovery jobs must be scheduled at least 30 minutes apart. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"RON_TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America\/New_York 1 * * * *\", or \"TZ=America\/New_York 1 * * * *\".",
          "type": "string"
        },
        "publishing": {
          "description": "Optional. Settings to manage metadata publishing from the zone.",
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishing"
        }
      }
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishing": {
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishing",
      "description": "Settings to manage metadata publishing from a zone.",
      "type": "object",
      "properties": {
        "metastore": {
          "description": "Required. Settings to manage metadata publishing to a Hive Metastore in the zone.",
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishingMetastore"
        },
        "bigquery": {
          "description": "Required. Settings to manage metadata publishing to BigQuery in the zone.",
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishingBigQuery"
        }
      }
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishingMetastore": {
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishingMetastore",
      "description": "Settings to manage metadata publishing to a Hive Metastore from a zone.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Required. Whether to publish metadata to metastore.",
          "type": "boolean"
        },
        "databaseName": {
          "description": "Immutable. The name of the metastore database associated with the zone. The specified value is interpreted as a name template that can refer to ${lake_id} and ${zone_id} placeholders. If unspecified, this defaults to \"${lake_id}_${zone_id}\". The database is created in the metastore instance associated with the parent lake. The specified name must not already be in use. Upon creation, this field is updated to reflect the actual database name. Maximum length is 128.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishingBigQuery": {
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecMetadataPublishingBigQuery",
      "description": "Settings to manage metadata publishing to BigQuery from a zone.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Required. Whether to publish metadata to BigQuery.",
          "type": "boolean"
        },
        "datasetName": {
          "description": "Immutable. The name of the BigQuery dataset associated with the zone. The specified value is interpreted as a name template that can refer to ${lake_id} and ${zone_id} placeholders. If unspecified, this defaults to \"${lake_id}_${zone_id}\". The dataset is created in the project associated with the parent lake. The specified name must not already be in use. Upon creation, this field is updated to reflect the actual dataset name.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ZoneResourceSpec": {
      "id": "GoogleCloudDataplexV1ZoneResourceSpec",
      "description": "Settings for resources attached as assets within a zone.",
      "type": "object",
      "properties": {
        "locationType": {
          "description": "Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified location type.",
            "Resources that are associated with a single region.",
            "Resources that are associated with a multi-region location."
          ],
          "enum": [
            "LOCATION_TYPE_UNSPECIFIED",
            "SINGLE_REGION",
            "MULTI_REGION"
          ]
        }
      }
    },
    "GoogleCloudDataplexV1ListZonesResponse": {
      "id": "GoogleCloudDataplexV1ListZonesResponse",
      "description": "List zones response.",
      "type": "object",
      "properties": {
        "zones": {
          "description": "Zones under the given parent lake.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Zone"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ResolveZoneActionsRequest": {
      "id": "GoogleCloudDataplexV1ResolveZoneActionsRequest",
      "description": "ResolveZoneActions request.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudDataplexV1Asset": {
      "id": "GoogleCloudDataplexV1Asset",
      "description": "An asset represents a cloud resource that is being managed within a lake as a member of a zone.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The relative resource name of the asset, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}\/assets\/{asset_id}",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time when the asset was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time when the asset was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. User defined labels for the asset.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. Description of the asset.",
          "type": "string"
        },
        "state": {
          "description": "Output only. Current state of the asset.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ]
        },
        "resourceSpec": {
          "description": "Required. Specification of the resource that is referenced by this asset.",
          "$ref": "GoogleCloudDataplexV1AssetResourceSpec"
        },
        "resourceStatus": {
          "description": "Output only. Status of the resource referenced by this asset.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetResourceStatus"
        },
        "securitySpec": {
          "description": "Optional. Specification of the security policy applied to resource referenced by this asset. Typically it should take a few minutes for the security policy to fully propagate.",
          "$ref": "GoogleCloudDataplexV1AssetSecuritySpec"
        },
        "securityStatus": {
          "description": "Output only. Status of the security policy applied to resource referenced by this asset.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetSecurityStatus"
        },
        "discoverySpec": {
          "description": "Required. Specification of the discovery feature applied to data referenced by this asset.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpec"
        },
        "discoveryStatus": {
          "description": "Output only. Status of the discovery feature applied to data referenced by this asset.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetDiscoveryStatus"
        },
        "actions": {
          "description": "Output only. The current set of actions required of the administrator for this asset.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Action"
          }
        }
      }
    },
    "GoogleCloudDataplexV1AssetResourceSpec": {
      "id": "GoogleCloudDataplexV1AssetResourceSpec",
      "description": "Identifies the cloud resource that is referenced by this asset.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects\/{project_number}\/buckets\/{bucket_id} projects\/{project_number}\/datasets\/{dataset_id} If the creation policy indicates ATTACH behavior, then an existing resource must be provided. If the policy indicates CREATE behavior, new resource will be created with the given name.However if it is empty, nthen the resource will be created using {asset_id}-{UUID} template for name. The location of the referenced resource must always match that of the asset.",
          "type": "string"
        },
        "type": {
          "description": "Required. Immutable. Type of resource.",
          "type": "string",
          "enumDescriptions": [
            "Type not specified.",
            "Cloud Storage bucket.",
            "BigQuery dataset."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "STORAGE_BUCKET",
            "BIGQUERY_DATASET"
          ]
        },
        "creationPolicy": {
          "description": "Immutable. Creation policy for the referenced resource.",
          "type": "string",
          "enumDescriptions": [
            "Policy not specified.",
            "Attach existing resource. This is the default behavior.",
            "Create a new resource for the asset."
          ],
          "enum": [
            "CREATION_POLICY_UNSPECIFIED",
            "ATTACH_RESOURCE",
            "CREATE_RESOURCE"
          ]
        },
        "deletionPolicy": {
          "description": "Optional. Deletion policy for the referenced resource.",
          "type": "string",
          "enumDescriptions": [
            "Policy not specified.",
            "Detach resource when asset is deleted. This is the default behavior.",
            "Delete resource when the asset is deleted."
          ],
          "enum": [
            "DELETION_POLICY_UNSPECIFIED",
            "DETACH_RESOURCE",
            "DELETE_RESOURCE"
          ]
        }
      }
    },
    "GoogleCloudDataplexV1AssetResourceStatus": {
      "id": "GoogleCloudDataplexV1AssetResourceStatus",
      "description": "Status of the resource referenced by an asset.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The current state of the managed resource.",
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "Resource does not have any errors.",
            "Resource has errors."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "ERROR"
          ]
        },
        "message": {
          "description": "Additional information about the current state.",
          "type": "string"
        },
        "updateTime": {
          "description": "Last update time of the status.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDataplexV1AssetSecuritySpec": {
      "id": "GoogleCloudDataplexV1AssetSecuritySpec",
      "description": "Settings to manage the security policy applied to data referenced by an asset.",
      "type": "object",
      "properties": {
        "readerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataReader IAM role, that allows group members to read data referenced by an asset. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "writerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataWriter IAM role, that allows group members to update data referenced by an asset. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerGroups": {
          "description": "Optional. A list of groups that should be granted the roles\/dataplex.dataOwner IAM role, that allows group members to modify the resources (including their IAM policies and child resources) referenced by an asset. For example, yourgroup@yourdomain.com. It cannot be a service account, user or another type of identity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overrideParentSpec": {
          "description": "Optional. Indicates whether the policy overrides the list of groups specified in the policy associated with the parent lake and zone. By default, the policy is additive. If this flag is true, the list of groups must each include at least one entry.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDataplexV1AssetSecurityStatus": {
      "id": "GoogleCloudDataplexV1AssetSecurityStatus",
      "description": "Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake\/zone\/asset IAM policy.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The current state of the security policy applied to the attached resource.",
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "Security policy has been successfully applied to the attached resource.",
            "Security policy is in the process of being applied to the attached resource.",
            "Security policy could not be applied to the attached resource due to errors."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "APPLYING",
            "ERROR"
          ]
        },
        "message": {
          "description": "Additional information about the current state.",
          "type": "string"
        },
        "updateTime": {
          "description": "Last update time of the status.",
          "type": "string",
          "format": "google-datetime"
        },
        "appliedReaderGroups": {
          "description": "Cumulative set of reader groups that were last applied on the managed resource. These groups may have been specified at lake, zone or asset levels.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appliedWriterGroups": {
          "description": "Cumulative set of writer groups that were last applied on the managed resource. These groups may have been specified at lake, zone or asset levels.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appliedOwnerGroups": {
          "description": "Cumulative set of owner groups that were last applied on the managed resource. These groups may have been specified at lake, zone or asset levels.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoverySpec": {
      "id": "GoogleCloudDataplexV1AssetDiscoverySpec",
      "description": "Settings to manage the metadata discovery and publishing for an asset.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Optional. Whether discovery is enabled. When inheritance_mode is set to INHERIT this field is unset and ignored.",
          "type": "boolean"
        },
        "includePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names. When inheritance_mode is set to INHERIT this field is unset and ignored.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names. When inheritance_mode is set to INHERIT this field is unset and ignored.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schedule": {
          "description": "Optional. Cron schedule (https:\/\/en.wikipedia.org\/wiki\/Cron) for running discovery jobs periodically. Discovery jobs must be scheduled at least 30 minutes apart.",
          "type": "string"
        },
        "inheritanceMode": {
          "description": "Optional. Inheritance behavior for this config. By default, all fields in this config override any values specified at the zone level. When configured as INHERIT some fields in this config are ignored and the zone level configuration is used instead. All fields that behave this way are called out as such via documentation.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified inheritance mode that is interpreted as OVERRIDE.",
            "Override all zone config values with those specified at the asset level.",
            "All values specified at the zone level should replace those specified at the asset level."
          ],
          "enum": [
            "INHERITANCE_MODE_UNSPECIFIED",
            "OVERRIDE",
            "INHERIT"
          ]
        },
        "publishing": {
          "description": "Optional. Settings to manage metadata publishing for the zone.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpecMetadataPublishing"
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoverySpecMetadataPublishing": {
      "id": "GoogleCloudDataplexV1AssetDiscoverySpecMetadataPublishing",
      "description": "Settings to manage metadata publishing for an asset.",
      "type": "object",
      "properties": {
        "tableNamePrefix": {
          "description": "Immutable. The prefix for table names. If provided, table names are prefixed with the specified value.",
          "type": "string"
        },
        "filesetNamePrefix": {
          "description": "Immutable. The prefix for fileset names. If provided, fileset names are prefixed with the specified value.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoveryStatus": {
      "id": "GoogleCloudDataplexV1AssetDiscoveryStatus",
      "description": "Status of discovery for an asset.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The current status of the discovery feature.",
          "type": "string",
          "enumDescriptions": [
            "State is unspecified.",
            "Discovery for the asset is scheduled.",
            "Discovery for the asset is running.",
            "Discovery for the asset is paused and has actions to be resolved before it can be resumed.",
            "Discovery for the asset has errors.",
            "Discovery for the asset is disabled.",
            "Discovery for the asset is processing all the data in the storage resource.",
            "Discovery for the asset is processing changes to the data."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "SCHEDULED",
            "IN_PROGRESS",
            "PAUSED",
            "ERROR",
            "DISABLED",
            "PROCESSING_DATA",
            "PROCESSING_CHANGES"
          ]
        },
        "message": {
          "description": "Additional information about the current state.",
          "type": "string"
        },
        "updateTime": {
          "description": "Last update time of the status.",
          "type": "string",
          "format": "google-datetime"
        },
        "lastRunTime": {
          "description": "The time when the last discovery job started.",
          "type": "string",
          "format": "google-datetime"
        },
        "nextRunTime": {
          "description": "The time when the next scheduled discovery job will start.",
          "type": "string",
          "format": "google-datetime"
        },
        "stats": {
          "description": "Data Stats of the asset reported by discovery.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoveryStatusStats"
        },
        "lastRunDuration": {
          "description": "The duration of the last run of the discovery job of the asset.",
          "type": "string",
          "format": "google-duration"
        },
        "latestProcessedChangeTime": {
          "description": "Timestamp of the latest change to data that has been processed. This is only valid when discovery is in PROCESSING_CHANGES state.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoveryStatusStats": {
      "id": "GoogleCloudDataplexV1AssetDiscoveryStatusStats",
      "description": "The aggregated data statistics for the asset reported by discovery. The data is collected from the last run of the discovery jobs.",
      "type": "object",
      "properties": {
        "dataItems": {
          "description": "The count of data items within the referenced resource.",
          "type": "string",
          "format": "int64"
        },
        "dataSize": {
          "description": "The number of stored data bytes within the referenced resource.",
          "type": "string",
          "format": "int64"
        },
        "tables": {
          "description": "The count of table entities within the referenced resource.",
          "type": "string",
          "format": "int64"
        },
        "filesets": {
          "description": "The count of fileset entities within the referenced resource.",
          "type": "string",
          "format": "int64"
        },
        "dataRangeStartTime": {
          "description": "The earilest creation timestamp of data in the attached resource (e.g. Cloud Storage objects, or BigQuery tables).",
          "type": "string",
          "format": "google-datetime"
        },
        "dataRangeEndTime": {
          "description": "The latest update timestamp of data in the attached resource (e.g. Cloud Storage objects, or BigQuery tables).",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDataplexV1ListAssetsResponse": {
      "id": "GoogleCloudDataplexV1ListAssetsResponse",
      "description": "List assets response.",
      "type": "object",
      "properties": {
        "assets": {
          "description": "Asset under the given parent zone.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Asset"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ResolveAssetActionsRequest": {
      "id": "GoogleCloudDataplexV1ResolveAssetActionsRequest",
      "description": "ResolveAssetActions request.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudLocationListLocationsResponse": {
      "id": "GoogleCloudLocationListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudLocationLocation": {
      "id": "GoogleCloudLocationLocation",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: \"projects\/example-project\/locations\/us-east1\"",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: \"us-east1\".",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"} ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "id": "GoogleIamV1SetIamPolicyRequest",
      "description": "Request message for SetIamPolicy method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "GoogleIamV1Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: \"bindings, etag\"",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "GoogleIamV1Policy": {
      "id": "GoogleIamV1Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members to a single role. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the IAM documentation (https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of members to a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          }
        },
        "etag": {
          "description": "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "GoogleIamV1Binding": {
      "id": "GoogleIamV1Binding",
      "description": "Associates members with a role.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to members. For example, roles\/viewer, roles\/editor, or roles\/owner.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "GoogleTypeExpr"
        }
      }
    },
    "GoogleTypeExpr": {
      "id": "GoogleTypeExpr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "GoogleIamV1AuditConfig": {
      "id": "GoogleIamV1AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          }
        }
      }
    },
    "GoogleIamV1AuditLogConfig": {
      "id": "GoogleIamV1AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "description": "Request message for TestIamPermissions method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the resource. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see IAM Overview (https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "description": "Response message for TestIamPermissions method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of TestPermissionsRequest.permissions that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1OperationMetadata": {
      "id": "GoogleCloudDataplexV1OperationMetadata",
      "description": "Represents the metadata of a long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1JobEvent": {
      "id": "GoogleCloudDataplexV1JobEvent",
      "description": "The payload associated with Job logs that contains events describing jobs that have run within a Lake.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The log message.",
          "type": "string"
        },
        "jobId": {
          "description": "The unique id identifying the job.",
          "type": "string"
        },
        "startTime": {
          "description": "The time when the job started running.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time when the job ended running.",
          "type": "string",
          "format": "google-datetime"
        },
        "discovery": {
          "description": "Details about the discovery job.",
          "$ref": "GoogleCloudDataplexV1JobEventDiscoveryDetails"
        }
      }
    },
    "GoogleCloudDataplexV1JobEventDiscoveryDetails": {
      "id": "GoogleCloudDataplexV1JobEventDiscoveryDetails",
      "description": "Details about discovery jobs.",
      "type": "object",
      "properties": {
        "zoneId": {
          "description": "The id of the associated zone.",
          "type": "string"
        },
        "assetId": {
          "description": "The id of the associated asset.",
          "type": "string"
        },
        "dataItemsRead": {
          "description": "The number of data items within the asset that were read.",
          "type": "string",
          "format": "int64"
        },
        "metadataEventCount": {
          "description": "The number of metadata events logged in this job.",
          "type": "integer",
          "format": "int32"
        },
        "actionsDetected": {
          "description": "Whether the job resulted in actions on the asset.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDataplexV1MetadataEvent": {
      "id": "GoogleCloudDataplexV1MetadataEvent",
      "description": "The payload associated with Metadata logs that contains events describing entities that were discovered.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The log message.",
          "type": "string"
        },
        "assetId": {
          "description": "The id of the associated asset.",
          "type": "string"
        },
        "jobId": {
          "description": "The unique id of the discovery job that resulted in this event.",
          "type": "string"
        },
        "entityType": {
          "description": "The type of the entity being created, updated or deleted.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified entity type.",
            "An event representing a table.",
            "An event representing a fileset.",
            "An event representing a partition within a table or fileset."
          ],
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET",
            "PARTITION"
          ]
        },
        "eventType": {
          "description": "The type of event.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified event type.",
            "An event representing a metadata entity being created.",
            "An event representing a metadata entity being updated.",
            "An event representing a metadata entity being deleted."
          ],
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "CREATE",
            "UPDATE",
            "DELETE"
          ]
        },
        "table": {
          "description": "The table being created, updated or deleted.",
          "$ref": "GoogleCloudDataplexV1MetadataEventTable"
        },
        "fileset": {
          "description": "The fileset being created, updated or deleted.",
          "$ref": "GoogleCloudDataplexV1MetadataEventFileset"
        },
        "partition": {
          "description": "The partition being created or deleted.",
          "$ref": "GoogleCloudDataplexV1MetadataEventPartition"
        }
      }
    },
    "GoogleCloudDataplexV1MetadataEventTable": {
      "id": "GoogleCloudDataplexV1MetadataEventTable",
      "description": "Details about table entities being created, updated or deleted.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the table entity.",
          "type": "string"
        },
        "location": {
          "description": "The data location of the table.",
          "type": "string"
        },
        "dataFormat": {
          "description": "The format of the data within the table.",
          "type": "string"
        },
        "dataItemsCount": {
          "description": "The number of data items in the table.",
          "type": "string",
          "format": "int64"
        },
        "schema": {
          "description": "The schema of the table.",
          "type": "string"
        },
        "externalTables": {
          "description": "The list of associated external tables published for the table. This is formatted using fully-qualified names such as: dpms:project.location.service.database.table and bigquery:project.location.dataset.table",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1MetadataEventFileset": {
      "id": "GoogleCloudDataplexV1MetadataEventFileset",
      "description": "Details about fileset entities being created, updated or deleted.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the fileset entity.",
          "type": "string"
        },
        "location": {
          "description": "The data location of the fileset.",
          "type": "string"
        },
        "dataFormat": {
          "description": "The format of the data within the fileset.",
          "type": "string"
        },
        "dataItemsCount": {
          "description": "The number of data items in the fileset.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDataplexV1MetadataEventPartition": {
      "id": "GoogleCloudDataplexV1MetadataEventPartition",
      "description": "Details about paritions of entities being created or deleted.",
      "type": "object",
      "properties": {
        "entity": {
          "description": "The name of the table or fileset entity containing this partition.",
          "type": "string"
        },
        "keys": {
          "description": "The set of key\/value pairs identifying the partition.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dataItemsCount": {
          "description": "The number of data items in the partition.",
          "type": "string",
          "format": "int64"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "dataplex.projects.locations.list",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in AIP-160 (https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "dataplex.projects.locations.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "dataplex.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users\/*\/operations. To override the binding, API services can add a binding such as \"\/v1\/{name=users\/*}\/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "dataplex.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "dataplex.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED."
                },
                "cancel": {
                  "id": "dataplex.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED."
                }
              }
            },
            "lakes": {
              "methods": {
                "create": {
                  "id": "dataplex.projects.locations.lakes.create",
                  "path": "v1/{+parent}/lakes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the lake location, of the form: projects\/{project_number}\/locations\/{location_id} where location_id refers to a GCP region.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "lakeId": {
                      "description": "Required. Lake identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the customer project \/ location.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a lake resource."
                },
                "patch": {
                  "id": "dataplex.projects.locations.lakes.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The relative resource name of the lake, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Mask of fields to update.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a lake resource."
                },
                "delete": {
                  "id": "dataplex.projects.locations.lakes.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the lake: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a lake resource. All zones within the lake must be deleted before the lake can be deleted."
                },
                "list": {
                  "id": "dataplex.projects.locations.lakes.list",
                  "path": "v1/{+parent}/lakes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the lake location, of the form: projects\/{project_number}\/locations\/{location_id} where location_id refers to a GCP region.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. Maximum number of Lakes to return. The service may return fewer than this value. If unspecified, at most 10 lakes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. Page token received from a previous ListLakes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakes must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDataplexV1ListLakesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists lake resources in a project and location."
                },
                "get": {
                  "id": "dataplex.projects.locations.lakes.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the lake: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves a lake resource."
                },
                "resolveLakeActions": {
                  "id": "dataplex.projects.locations.lakes.resolveLakeActions",
                  "path": "v1/{+lake}:resolveLakeActions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:resolveLakeActions",
                  "httpMethod": "POST",
                  "parameters": {
                    "lake": {
                      "description": "Required. The name of the lake for which actions are being resolved of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "lake"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDataplexV1ResolveLakeActionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Marks actions associated with a lake as resolved."
                },
                "setIamPolicy": {
                  "id": "dataplex.projects.locations.lakes.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors."
                },
                "getIamPolicy": {
                  "id": "dataplex.projects.locations.lakes.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "dataplex.projects.locations.lakes.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
              ,
              "resources": {
                "actions": {
                  "methods": {
                    "list": {
                      "id": "dataplex.projects.locations.lakes.actions.list",
                      "path": "v1/{+parent}/actions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/actions",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. Page token received from a previous ListLakeActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakeActions must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists action resources in a lake."
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "create": {
                      "id": "dataplex.projects.locations.lakes.zones.create",
                      "path": "v1/{+parent}/zones",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "zoneId": {
                          "description": "Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the lake.",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a zone resource within a lake."
                    },
                    "patch": {
                      "id": "dataplex.projects.locations.lakes.zones.patch",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Output only. The relative resource name of the zone, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Required. Mask of fields to update.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates a zone resource."
                    },
                    "delete": {
                      "id": "dataplex.projects.locations.lakes.zones.delete",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the zone: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id} \/zones\/{zone_id}`",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a zone resource. All assets within a zone must be deleted before the zone can be deleted."
                    },
                    "list": {
                      "id": "dataplex.projects.locations.lakes.zones.list",
                      "path": "v1/{+parent}/zones",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. Maximum number of zones to return. The service may return fewer than this value. If unspecified, at most 10 zones will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. Filter request.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. Order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListZonesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists zone resources in a lake."
                    },
                    "get": {
                      "id": "dataplex.projects.locations.lakes.zones.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the zone: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id} \/zones\/{zone_id}",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Retrieves a zone resource."
                    },
                    "resolveZoneActions": {
                      "id": "dataplex.projects.locations.lakes.zones.resolveZoneActions",
                      "path": "v1/{+zone}:resolveZoneActions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:resolveZoneActions",
                      "httpMethod": "POST",
                      "parameters": {
                        "zone": {
                          "description": "Required. The name of the zone for which actions are being resolved of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "zone"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDataplexV1ResolveZoneActionsRequest"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Marks actions associated with a zone as resolved."
                    },
                    "setIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.zones.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors."
                    },
                    "getIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.zones.getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The policy format version to be returned.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "testIamPermissions": {
                      "id": "dataplex.projects.locations.lakes.zones.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                    }
                  }
                  ,
                  "resources": {
                    "actions": {
                      "methods": {
                        "list": {
                          "id": "dataplex.projects.locations.lakes.zones.actions.list",
                          "path": "v1/{+parent}/actions",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/actions",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the parent zone: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListZoneActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZoneActions must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists action resources in a zone."
                        }
                      }
                    },
                    "assets": {
                      "methods": {
                        "create": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.create",
                          "path": "v1/{+parent}/assets",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets",
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the parent zone: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id} \/zones\/{zone_id}`",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "assetId": {
                              "description": "Required. Asset identifier. This ID will be used to generate names such as table names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the zone.",
                              "location": "query",
                              "type": "string"
                            },
                            "validateOnly": {
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "location": "query",
                              "type": "boolean"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Creates an asset resource."
                        },
                        "patch": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.patch",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "httpMethod": "PATCH",
                          "parameters": {
                            "name": {
                              "description": "Output only. The relative resource name of the asset, of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}\/assets\/{asset_id}",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+\/assets\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "updateMask": {
                              "description": "Required. Mask of fields to update.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            },
                            "validateOnly": {
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "location": "query",
                              "type": "boolean"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Updates an asset resource."
                        },
                        "delete": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.delete",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "description": "Required. The resource name of the asset: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id} \/zones\/{zone_id}\/assets\/{asset_id}",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+\/assets\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Deletes an asset resource. The referenced storage resource is detached (default) or deleted based on the associated Lifecycle policy."
                        },
                        "list": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.list",
                          "path": "v1/{+parent}/assets",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the parent zone: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id} \/zones\/{zone_id}`",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. Maximum number of asset to return. The service may return fewer than this value. If unspecified, at most 10 assets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListAssets call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssets must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. Filter request.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. Order by fields for the result.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListAssetsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists asset resources in a zone."
                        },
                        "get": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.get",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The resource name of the asset: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id} \/zones\/{zone_id}\/assets\/{asset_id}",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+\/assets\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Retrieves an asset resource."
                        },
                        "resolveAssetActions": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.resolveAssetActions",
                          "path": "v1/{+asset}:resolveAssetActions",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:resolveAssetActions",
                          "httpMethod": "POST",
                          "parameters": {
                            "asset": {
                              "description": "Required. The name of the asset for which actions are being resolved of the form: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}\/assets\/{asset_id}",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+\/assets\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "asset"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDataplexV1ResolveAssetActionsRequest"
                          },
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Marks actions associated with an asset as resolved(Deprecated)."
                        },
                        "setIamPolicy": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.setIamPolicy",
                          "path": "v1/{+resource}:setIamPolicy",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:setIamPolicy",
                          "httpMethod": "POST",
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+\/assets\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "request": {
                            "$ref": "GoogleIamV1SetIamPolicyRequest"
                          },
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors."
                        },
                        "getIamPolicy": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.getIamPolicy",
                          "path": "v1/{+resource}:getIamPolicy",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:getIamPolicy",
                          "httpMethod": "GET",
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+\/assets\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "options.requestedPolicyVersion": {
                              "description": "Optional. The policy format version to be returned.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                        },
                        "testIamPermissions": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.testIamPermissions",
                          "path": "v1/{+resource}:testIamPermissions",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:testIamPermissions",
                          "httpMethod": "POST",
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+\/assets\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "request": {
                            "$ref": "GoogleIamV1TestIamPermissionsRequest"
                          },
                          "response": {
                            "$ref": "GoogleIamV1TestIamPermissionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                        }
                      }
                      ,
                      "resources": {
                        "actions": {
                          "methods": {
                            "list": {
                              "id": "dataplex.projects.locations.lakes.zones.assets.actions.list",
                              "path": "v1/{+parent}/actions",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}/actions",
                              "httpMethod": "GET",
                              "parameters": {
                                "parent": {
                                  "description": "Required. The resource name of the parent asset: projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}\/assets\/{asset_id}",
                                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/zones\/[^\/]+\/assets\/[^\/]+$",
                                  "location": "path",
                                  "required": true,
                                  "type": "string"
                                },
                                "pageSize": {
                                  "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                                  "location": "query",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "pageToken": {
                                  "description": "Optional. Page token received from a previous ListAssetActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssetActions must match the call that provided the page token.",
                                  "location": "query",
                                  "type": "string"
                                }
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Lists action resources in an asset."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "tasks": {
                  "methods": {
                    "setIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.tasks.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/tasks\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors."
                    },
                    "getIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.tasks.getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/tasks\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The policy format version to be returned.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "testIamPermissions": {
                      "id": "dataplex.projects.locations.lakes.tasks.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/tasks\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                    }
                  }
                },
                "environments": {
                  "methods": {
                    "setIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.environments.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/environments\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors."
                    },
                    "getIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.environments.getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/environments\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The policy format version to be returned.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "testIamPermissions": {
                      "id": "dataplex.projects.locations.lakes.environments.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/environments\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                    }
                  }
                },
                "content": {
                  "methods": {
                    "setIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.content.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/content\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors."
                    },
                    "getIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.content.getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/content\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The policy format version to be returned.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "testIamPermissions": {
                      "id": "dataplex.projects.locations.lakes.content.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/lakes\/[^\/]+\/content\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}