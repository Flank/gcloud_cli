{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "netapp:v1alpha1",
  "name": "netapp",
  "canonicalName": "Google Cloud NetApp Files",
  "version": "v1alpha1",
  "revision": "0",
  "title": "netapp API (prod)",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "go/netappfiles:high-level-design",
  "protocol": "rest",
  "rootUrl": "https://netapp.googleapis.com/",
  "mtlsRootUrl": "https://netapp.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://netapp.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListStoragePoolsResponse": {
      "id": "ListStoragePoolsResponse",
      "description": "ListStoragePoolsResponse",
      "type": "object",
      "properties": {
        "storagePools": {
          "description": "The list of StoragePools",
          "type": "array",
          "items": {
            "$ref": "StoragePool"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StoragePool": {
      "id": "StoragePool",
      "description": "Resources StoragePool StoragePool is a container for volumes with a service level and capacity. Volumes can be created in a storage pool of sufficient available capacity. StoragePool capacity is what you are billed for.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the storage pool",
          "type": "string"
        },
        "storagePoolId": {
          "description": "Required. Unique Id of the storage pool",
          "type": "string"
        },
        "serviceLevel": {
          "description": "Required. Service level of the storage pool",
          "type": "string",
          "enumDescriptions": [
            "Unspecified service level",
            "Premium",
            "Extreme"
          ],
          "enum": [
            "SERVICE_LEVEL_UNSPECIFIED",
            "SERVICE_LEVEL_PREMIUM",
            "SERVICE_LEVEL_EXTREME"
          ]
        },
        "capacityGib": {
          "description": "Required. Capacity in GIB of the storage pool",
          "type": "string",
          "format": "int64"
        },
        "volumeCapacityGib": {
          "description": "Output only. Allocated size of all volumes in GIB in the storage pool",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "volumeCount": {
          "description": "Output only. Volume count of the storage pool",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Output only. State of the storage pool",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified StoragePool State",
            "Ready",
            "Creating",
            "Deleting",
            "Updating"
          ],
          "enum": [
            "RESOURCE_STATE_UNSPECIFIED",
            "RESOURCE_STATE_READY",
            "RESOURCE_STATE_CREATING",
            "RESOURCE_STATE_DELETING",
            "RESOURCE_STATE_UPDATING"
          ]
        },
        "stateDetails": {
          "description": "Output only. State details of the storage pool",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time of the storage pool",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Description of the storage pool",
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListVolumesResponse": {
      "id": "ListVolumesResponse",
      "description": "ListVolumesResponse Message for response to listing Volumes",
      "type": "object",
      "properties": {
        "volumes": {
          "description": "The list of Volume",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Volume": {
      "id": "Volume",
      "description": "Volume Volume provides a filesystem that you can mount.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the volume",
          "type": "string"
        },
        "volumeId": {
          "description": "Required. Unique Id of the volume",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the volume",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified StoragePool State",
            "Ready",
            "Creating",
            "Deleting",
            "Updating",
            "Restoring",
            "Disabled"
          ],
          "enum": [
            "VOLUME_STATE_UNSPECIFIED",
            "VOLUME_STATE_READY",
            "VOLUME_STATE_CREATING",
            "VOLUME_STATE_DELETING",
            "VOLUME_STATE_UPDATING",
            "VOLUME_STATE_RESTORING",
            "VOLUME_STATE_DISABLED"
          ]
        },
        "stateDetails": {
          "description": "Output only. State details of the volume",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time of the volume",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "mountPoint": {
          "description": "Required. MountPoint or share name of the volume",
          "type": "string"
        },
        "psaRange": {
          "description": "Name of the Private Service Access allocated range. This is optional. If not provided, any available range will be chosen.",
          "type": "string"
        },
        "storagePoolName": {
          "description": "Required. StoragePool name of the volume",
          "type": "string"
        },
        "network": {
          "description": "Required. VPC Network name",
          "type": "string"
        },
        "serviceLevel": {
          "description": "Output only. Service level of the volume",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified service level",
            "Premium",
            "Extreme"
          ],
          "enum": [
            "SERVICE_LEVEL_UNSPECIFIED",
            "SERVICE_LEVEL_PREMIUM",
            "SERVICE_LEVEL_EXTREME"
          ]
        },
        "capacityGib": {
          "description": "Required. Capacity in GIB of the volume",
          "type": "string",
          "format": "int64"
        },
        "exportPolicy": {
          "description": "Required. Export policy of the volume",
          "$ref": "ExportPolicy"
        },
        "protocolTypes": {
          "description": "Required. Protocol types required for the volume",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified protocol",
              "NFS V3 protocol",
              "NFS V4 protocol",
              "SMB protocol"
            ],
            "enum": [
              "PROTOCOL_TYPE_UNSPECIFIED",
              "PROTOCOL_TYPE_NFSV3",
              "PROTOCOL_TYPE_NFSV4",
              "PROTOCOL_TYPE_SMB"
            ]
          }
        },
        "mountOptions": {
          "description": "Output only. Mount options of this volume",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "MountOption"
          }
        },
        "unixPermissions": {
          "description": "Default unix style permission (e.g. 777) the mount point will be created with. Applicable for NFS protocol types only.",
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the volume",
          "type": "string"
        }
      }
    },
    "ExportPolicy": {
      "id": "ExportPolicy",
      "description": "ExportPolicy Defined the export policy for the volume.",
      "type": "object",
      "properties": {
        "rules": {
          "description": "Required. List of export policy rules",
          "type": "array",
          "items": {
            "$ref": "SimpleExportPolicyRule"
          }
        }
      }
    },
    "SimpleExportPolicyRule": {
      "id": "SimpleExportPolicyRule",
      "description": "SimpleExportPolicyRule An export policy rule describing various export options.",
      "type": "object",
      "properties": {
        "allowedClients": {
          "description": "List of allowed clients IP addresses",
          "type": "string"
        },
        "hasRootAccess": {
          "description": "Whether Unix root access will be granted.",
          "type": "string"
        },
        "access": {
          "description": "Access type (ReadWrite, ReadOnly, None)",
          "type": "string",
          "enumDescriptions": [
            "Unspecified Access Type",
            "Read Only",
            "Read Write",
            "None"
          ],
          "enum": [
            "ACCESS_TYPE_UNSPECIFIED",
            "ACCESS_TYPE_READ_ONLY",
            "ACCESS_TYPE_READ_WRITE",
            "ACCESS_TYPE_READ_NONE"
          ]
        },
        "nfsV3": {
          "description": "NFS V3 protocol",
          "type": "boolean"
        },
        "nfsV4": {
          "description": "NFS V4 protocol",
          "type": "boolean"
        }
      }
    },
    "MountOption": {
      "id": "MountOption",
      "description": "MountOption View only mount options for a volume.",
      "type": "object",
      "properties": {
        "export": {
          "description": "Export string",
          "type": "string"
        },
        "exportFull": {
          "description": "Full export string",
          "type": "string"
        },
        "protocolType": {
          "description": "Protocol type to mount with.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified protocol",
            "NFS V3 protocol",
            "NFS V4 protocol",
            "SMB protocol"
          ],
          "enum": [
            "PROTOCOL_TYPE_UNSPECIFIED",
            "PROTOCOL_TYPE_NFSV3",
            "PROTOCOL_TYPE_NFSV4",
            "PROTOCOL_TYPE_SMB"
          ]
        },
        "instructions": {
          "description": "Instructions for mounting",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "OperationMetadata Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been canceled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "netapp.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "netapp.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "netapp.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "netapp.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "netapp.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "netapp.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "storagepools": {
              "methods": {
                "list": {
                  "id": "netapp.projects.locations.storagepools.list",
                  "path": "v1alpha1/{+parent}/storagepools",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/storagepools",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The next_page_token value to use if there are additional results to retrieve for this list request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort results. Supported values are \"name\", \"name desc\" or \"\" (unsorted).",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListStoragePoolsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "ListStoragePools Returns descriptions of all storage pools owned by the caller."
                },
                "create": {
                  "id": "netapp.projects.locations.storagepools.create",
                  "path": "v1alpha1/{+parent}/storagepools",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/storagepools",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "storagePoolId": {
                      "description": "Required. Id of the requesting storage pool If auto-generating Id server-side, remove this field and storage_pool_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "StoragePool"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "CreateStoragePool Creates a new storage pool."
                },
                "get": {
                  "id": "netapp.projects.locations.storagepools.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/storagepools/{storagepoolsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the storage pool",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/storagepools\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "StoragePool"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "GetStoragePool Returns the description of the specified storage pool by poolId."
                },
                "patch": {
                  "id": "netapp.projects.locations.storagepools.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/storagepools/{storagepoolsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the storage pool",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/storagepools\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the StoragePool resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StoragePool"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "UpdateStoragePool Updates the storage pool properties with the full spec"
                },
                "delete": {
                  "id": "netapp.projects.locations.storagepools.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/storagepools/{storagepoolsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the storage pool",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/storagepools\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "DeleteStoragePool Warning! This operation will permanently delete the storage pool."
                }
              }
            },
            "volumes": {
              "methods": {
                "list": {
                  "id": "netapp.projects.locations.volumes.list",
                  "path": "v1alpha1/{+parent}/volumes",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListVolumesRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "ListVolumes Lists Volumes in a given project."
                },
                "get": {
                  "id": "netapp.projects.locations.volumes.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the volume",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/volumes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "GetVolume Gets details of a single Volume."
                },
                "create": {
                  "id": "netapp.projects.locations.volumes.create",
                  "path": "v1alpha1/{+parent}/volumes",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "volumeId": {
                      "description": "Required. Id of the requesting volume If auto-generating Id server-side, remove this field and volume_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Volume"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "CreateVolume Creates a new Volume in a given project and location."
                },
                "patch": {
                  "id": "netapp.projects.locations.volumes.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the volume",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/volumes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the Volume resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Volume"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "UpdateVolume Updates the parameters of a single Volume."
                },
                "delete": {
                  "id": "netapp.projects.locations.volumes.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the volume",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/volumes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "DeleteVolume Deletes a single Volume."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}