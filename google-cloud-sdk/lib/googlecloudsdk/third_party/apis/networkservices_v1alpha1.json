{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "networkservices:v1alpha1",
  "name": "networkservices",
  "canonicalName": "NetworkServices",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Network Services API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/networking",
  "protocol": "rest",
  "rootUrl": "https://networkservices.googleapis.com/",
  "mtlsRootUrl": "https://networkservices.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://networkservices.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListHttpFiltersResponse": {
      "id": "ListHttpFiltersResponse",
      "description": "Response returned by the ListHttpFilters method.",
      "type": "object",
      "properties": {
        "httpFilters": {
          "description": "List of HttpFilter resources.",
          "type": "array",
          "items": {
            "$ref": "HttpFilter"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "HttpFilter": {
      "id": "HttpFilter",
      "description": "HttpFilter is a resource representing http filter definition to be programmed in the xDS API compatible clients.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the HttpFilter resource. It matches pattern `projects\/*\/locations\/global\/httpFilters\/`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the HttpFilter resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "filterName": {
          "description": "Required. Name of the HTTP filter defined in the `config` field. It is used by the xDS API client to identify specific filter implementation the `config` must be applied to. It is different from the name of the HttpFilter resource and does not have to be unique. Example: 'envoy.wasm'.",
          "type": "string"
        },
        "configTypeUrl": {
          "description": "Required. The fully qualified versioned proto3 type url that the filter expects for its configuration. For example: 'type.googleapis.com\/envoy.config.wasm.v2.WasmService'.",
          "type": "string"
        },
        "config": {
          "description": "Required. The configuration needed to enable the HTTP filter. The configuration must be JSON formatted and only contain fields defined in the protobuf identified in config_type_url.",
          "type": "string"
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        }
      }
    },
    "ListEndpointConfigSelectorsResponse": {
      "id": "ListEndpointConfigSelectorsResponse",
      "description": "Response returned by the ListEndpointConfigSelectors method.",
      "type": "object",
      "properties": {
        "endpointConfigSelectors": {
          "description": "List of EndpointConfigSelector resources.",
          "type": "array",
          "items": {
            "$ref": "EndpointConfigSelector"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "EndpointConfigSelector": {
      "id": "EndpointConfigSelector",
      "description": "EndpointConfigSelector is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply \"authentication config\" an all endpoints that serve on port 8080.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the EndpointConfigSelector resource. It matches pattern `projects\/*\/locations\/global\/endpointConfigSelectors\/`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the EndpointConfigSelector resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "Required. The type of endpoint config. This is primarily used to validate the configuration.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Represents a proxy deployed as a sidecar.",
            "Represents a proxyless gRPC backend."
          ],
          "enum": [
            "ENDPOINT_CONFIG_SELECTOR_TYPE_UNSPECIFIED",
            "SIDECAR_PROXY",
            "GRPC_SERVER"
          ]
        },
        "authorizationPolicy": {
          "description": "Optional. This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization. If this field is not specified, authorization is disabled(no authz checks) for this endpoint. Applicable only when EndpointConfigSelectorType is SIDECAR_PROXY.",
          "type": "string"
        },
        "httpFilters": {
          "description": "Optional. HTTP filters configuration for the endpoint. Applicable only when EndpointConfigSelectorType is SIDECAR_PROXY.",
          "$ref": "HttpFilters"
        },
        "endpointMatcher": {
          "description": "Required. A matcher that selects endpoints to which the policies should be applied.",
          "$ref": "EndpointMatcher"
        },
        "trafficPortSelector": {
          "description": "Optional. Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.",
          "$ref": "TrafficPortSelector"
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "serverTlsPolicy": {
          "description": "Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends. If this field is not set, authentication is disabled(open) for this endpoint.",
          "type": "string"
        },
        "clientTlsPolicy": {
          "description": "Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints. More specifically, it is applied to the outgoing traffic from the proxy to the endpoint. This is typically used for sidecar model where the proxy identifies itself as endpoint to the control plane, with the connection between sidecar and endpoint requiring authentication. If this field is not set, authentication is disabled(open). Applicable only when EndpointConfigSelectorType is SIDECAR_PROXY.",
          "type": "string"
        }
      }
    },
    "HttpFilters": {
      "id": "HttpFilters",
      "description": "HTTP filters configuration for the endpoint.",
      "type": "object",
      "properties": {
        "httpFilters": {
          "description": "Required. The list of URLs to HttpFilter resources enabled for xDS clients using this configuration. Only filters that handle inbound connection and stream events must be specified. These filters work in conjunction with a default set of HTTP filters that may already be configured by Traffic Director. Traffic Director will determine the final location of these filters within xDS configuration based on the name of the HTTP filter. If Traffic Director positions multiple filters at the same location, those filters will be in the same order as specified in this list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EndpointMatcher": {
      "id": "EndpointMatcher",
      "description": "A definition of a matcher that selects endpoints to which the policies should be applied.",
      "type": "object",
      "properties": {
        "metadataLabelMatcher": {
          "description": "The matcher is based on node metadata presented by xDS clients.",
          "$ref": "MetadataLabelMatcher"
        }
      }
    },
    "MetadataLabelMatcher": {
      "id": "MetadataLabelMatcher",
      "description": "The matcher that is based on node metadata presented by xDS clients.",
      "type": "object",
      "properties": {
        "metadataLabelMatchCriteria": {
          "description": "Specifies how matching should be done. Supported values are: MATCH_ANY: At least one of the Labels specified in the matcher should match the metadata presented by xDS client. MATCH_ALL: The metadata presented by the xDS client should contain all of the labels specified here. The selection is determined based on the best match. For example, suppose there are three EndpointConfigSelector resources P1, P2 and P3 and if P1 has a the matcher as MATCH_ANY , P2 has MATCH_ALL , and P3 has MATCH_ALL . If a client with label connects, the config from P1 will be selected. If a client with label connects, the config from P2 will be selected. If a client with label connects, the config from P3 will be selected. If there is more than one best match, (for example, if a config P4 with selector exists and if a client with label connects), an error will be thrown.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED",
            "MATCH_ANY",
            "MATCH_ALL"
          ]
        },
        "metadataLabels": {
          "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list can have at most 64 entries. The list can be empty if the match criteria is MATCH_ANY, to specify a wildcard match (i.e this matches any client).",
          "type": "array",
          "items": {
            "$ref": "MetadataLabels"
          }
        }
      }
    },
    "MetadataLabels": {
      "id": "MetadataLabels",
      "description": "Defines a name-pair value for a single label.",
      "type": "object",
      "properties": {
        "labelName": {
          "description": "Required. Label name presented as key in xDS Node Metadata.",
          "type": "string"
        },
        "labelValue": {
          "description": "Required. Label value presented as value corresponding to the above key, in xDS Node Metadata.",
          "type": "string"
        }
      }
    },
    "TrafficPortSelector": {
      "id": "TrafficPortSelector",
      "description": "Specification of a port-based selector.",
      "type": "object",
      "properties": {
        "ports": {
          "description": "Optional. A list of ports. Can be port numbers or port range (example, [80-90] specifies all ports from 80 to 90, including 80 and 90) or named ports or * to specify all ports. If the list is empty, all ports are selected.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListEdgeCacheKeysetsResponse": {
      "id": "ListEdgeCacheKeysetsResponse",
      "description": "Response returned by the ListEdgeCacheKeysets method.",
      "type": "object",
      "properties": {
        "edgeCacheKeysets": {
          "description": "List of EdgeCacheKeyset resources.",
          "type": "array",
          "items": {
            "$ref": "EdgeCacheKeyset"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "EdgeCacheKeyset": {
      "id": "EdgeCacheKeyset",
      "description": "EdgeCacheKeyset represents a collection of public keys used for validating signed requests. Next ID: 8",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the resource; provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression a-zA-Z* which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A human-readable description of the resource.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the EdgeCache resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "publicKeys": {
          "description": "Required. An ordered list of Ed25519 public keys to use for validating signed requests. You must specify at least one (1) key, and may have up to three (3) keys. Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key. You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset. You can rotate keys by appending (pushing) a new key to the list of public keys, and removing any superseded keys.",
          "type": "array",
          "items": {
            "$ref": "PublicKey"
          }
        }
      }
    },
    "PublicKey": {
      "id": "PublicKey",
      "description": "An Ed25519 public key used for validating signed requests.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. The ID of the public key. The ID must be 1-63 characters long, and comply with RFC1035. The name must be 1-64 characters long, and match the regular expression a-zA-Z* which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.",
          "type": "string"
        },
        "value": {
          "description": "Required. The base64-encoded value of the Ed25519 public key. The base64 encoding can be padded (44 bytes) or unpadded (43 bytes). Representations or encodings of the public key other than this will be rejected with an error.",
          "type": "string"
        }
      }
    },
    "ListEdgeCacheOriginsResponse": {
      "id": "ListEdgeCacheOriginsResponse",
      "description": "Response returned by the ListEdgeCacheOrigins method.",
      "type": "object",
      "properties": {
        "edgeCacheOrigins": {
          "description": "List of EdgeCacheOrigin resources.",
          "type": "array",
          "items": {
            "$ref": "EdgeCacheOrigin"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "EdgeCacheOrigin": {
      "id": "EdgeCacheOrigin",
      "description": "EdgeCacheOrigin represents a HTTP-reachable backend for an EdgeCacheService. Next ID: 14",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the resource; provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression a-zA-Z* which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. A human-readable description of the resource. Creation timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A human-readable description of the resource.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the EdgeCache resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "originAddress": {
          "description": "Required. A fully qualified domain name (FQDN) or IP address reachable over the public Internet, or the address of a Google Cloud Storage bucket. This address will be used as the origin for cache requests - e.g. FQDN: media-backend.example.com IPv4:35.218.1.1 IPv6:[2607:f8b0:4012:809::200e] Cloud Storage: gs:\/\/bucketname When providing an FQDN (hostname), it must be publicly resolvable (e.g. via Google public DNS) and IP addresses must be publicly routable. If a Cloud Storage bucket is provided, it must be in the canonical \"gs:\/\/bucketname\" format. Other forms, such as \"storage.googleapis.com\", will be rejected.",
          "type": "string"
        },
        "protocol": {
          "description": "Optional. The protocol to use to connect to the configured origin. Defaults to HTTP2, and it is strongly recommended that users use HTTP2 for both security & performance. When using HTTP2 or HTTPS as the protocol, a valid, publicly-signed, unexpired TLS (SSL) certificate must be presented by the origin server.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value. Will default to HTTP2.",
            "The HTTP\/2 protocol. HTTP\/2 refers to \"h2\", which requires TLS (HTTPS). Requires a valid (public, unexpired) TLS certificate to be present on the origin.",
            "HTTP\/1.1 with TLS (SSL). Requires a valid (public, unexpired) TLS certificate to be present on the origin.",
            "HTTP without TLS (SSL). This is not recommended, as communication outside of Google's network will be unencrypted to the public endpoint (origin)."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "HTTP2",
            "HTTPS",
            "HTTP"
          ]
        },
        "port": {
          "description": "Optional. The port to connect to the origin on. Defaults to port 443 for HTTP2 and HTTPS protocols, and port 80 for HTTP.",
          "type": "integer",
          "format": "int32"
        },
        "maxAttempts": {
          "description": "Optional. The maximum number of attempts to cache fill from this origin. Another attempt is made when a cache fill fails with one of the retry_conditions. Once max_attempts to this origin have failed the failover_origin will be used, if one is specified. That failover_origin may specify its own max_attempts, retry_conditions and failover_origin to control its own cache fill failures. The total number of allowed attempts to cache fill across this and failover origins is limited to four. The total time allowed for cache fill attempts across this and failover origins can be controlled with max_attempts_timeout. The last valid response from an origin will be returned to the client. If no origin returns a valid response, an HTTP 503 will be returned to the client. Defaults to 1. Must be a value greater than 0 and less than 4.",
          "type": "integer",
          "format": "int32"
        },
        "failoverOrigin": {
          "description": "Optional. The Origin resource to try when the current origin cannot be reached. After maxAttempts is reached, the configured failoverOrigin will be used to fulfil the request. For example, the following are both valid URLs to an EdgeCacheOrigin resource: - networkservices\/v1alpha1\/projects\/project\/global\/edgeCacheOrigins\/yourOrigin - \/global\/edgeCacheOrigins\/yourOrigin The value of timeout.maxAttemptsTimeout dictates the timeout across all origins.",
          "type": "string"
        },
        "retryConditions": {
          "description": "Optional. Specifies one or more retry conditions for the configured origin. If the failure mode during a connection attempt to the origin matches the configured retryCondition(s), the origin request will be retried up to maxAttempts times. The failoverOrigin, if configured, will then be used to satisfy the request. The default retryCondition is \"CONNECT_FAILURE\". retryConditions apply to this origin, and not subsequent failoverOrigin(s), which may specify their own retryConditions and maxAttempts. Valid values are: - CONNECT_FAILURE: Retry on failures connecting to origins, for example due to connection timeouts. - HTTP_5XX: Retry if the origin responds with any 5xx response code, or if the origin does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams. - GATEWAY_ERROR: Similar to 5xx, but only applies to response codes 502, 503 or 504. - RETRIABLE_4XX: Retry for retriable 4xx response codes, which include HTTP 409 (Conflict) and HTTP 429 (Too Many Requests) - NOT_FOUND: Retry if the origin returns a HTTP 404 (Not Found). This can be useful when generating video content, and the segment is not available yet.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified",
              "Retry on failures include routing, DNS and TLS handshake errors, as well as TCP\/UDP timeouts.",
              "Retry on any 5xx response code.",
              "Similar to 5xx, but only applies to response codes 502, 503 or 504.",
              "Retry for retriable 4xx response codes, including 409 and 429.",
              "Retry on a HTTP 404."
            ],
            "enum": [
              "RETRY_CONDITIONS_UNSPECIFIED",
              "CONNECT_FAILURE",
              "HTTP_5XX",
              "GATEWAY_ERROR",
              "RETRIABLE_4XX",
              "NOT_FOUND"
            ]
          }
        },
        "timeout": {
          "description": "Optional. The connection and HTTP timeout configuration for this origin.",
          "$ref": "Timeout"
        }
      }
    },
    "Timeout": {
      "id": "Timeout",
      "description": "The timeout configuration for this origin.",
      "type": "object",
      "properties": {
        "connectTimeout": {
          "description": "Optional. The maximum duration to wait for the origin connection to be established, including DNS lookup, TLS handshake and TCP\/QUIC connection establishment. Defaults to 5 seconds. The timeout must be a value between 1s and 15s.",
          "type": "string",
          "format": "google-duration"
        },
        "maxAttemptsTimeout": {
          "description": "Optional. The maximum time across all connection attempts to the origin, including failover origins, before returning an error to the client. A HTTP 503 will be returned if the timeout is reached before a response is returned. Defaults to 5 seconds. The timeout must be a value between 1s and 15s. If a failoverOrigin is specified, the maxAttemptsTimeout of the first configured origin takes precedence and determines the timeout for all requests.",
          "type": "string",
          "format": "google-duration"
        },
        "responseTimeout": {
          "description": "Optional. The maximum duration to wait for data to arrive when reading from the HTTP connection\/stream. Defaults to 5 seconds. The timeout must be a value between 1s and 30s. This also applies to HTTP Chunked Transfer Encoding responses, and\/or when an open-ended Range request is made to the origin. Origins that take longer to write additional bytes to the response than the configured responseTimeout will result in an error being returned to the client. If the response headers have already been written to the connection, the response will be truncated and logged.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "ListEdgeCacheServicesResponse": {
      "id": "ListEdgeCacheServicesResponse",
      "description": "Response returned by the ListEdgeCacheServices method.",
      "type": "object",
      "properties": {
        "edgeCacheServices": {
          "description": "List of EdgeCacheService resources.",
          "type": "array",
          "items": {
            "$ref": "EdgeCacheService"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "EdgeCacheService": {
      "id": "EdgeCacheService",
      "description": "EdgeCacheService defines the IP addresses, protocols, security policies, cache policies and routing configuration. Next ID: 16",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the resource; provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression a-zA-Z* which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Creation timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A human-readable description of the resource.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the EdgeCache resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "disableQuic": {
          "description": "Optional. HTTP\/3 (IETF QUIC) and Google QUIC are enabled by default.",
          "type": "boolean"
        },
        "requireTls": {
          "description": "Optional. Require TLS (HTTPS) for all clients connecting to this service. Clients who connect over HTTP (port 80) will receive a HTTP 301 to the same URL over HTTPS (port 443). You must have at least one (1) edgeSslCertificate specified to enable this.",
          "type": "boolean"
        },
        "edgeSslCertificates": {
          "description": "Optional. URLs to sslCertificate resources that are used to authenticate connections between users and the EdgeCacheService. Note that only \"global\" certificates with a \"scope\" of \"EDGE_CACHE\" can be attached to an EdgeCacheService. The following are both valid URLs to a Certificate resource: - \/v1\/projects\/project\/locations\/global\/certificates\/media-example-com-cert - \/global\/certificates\/media-example-com-cert You may specify up to 5 SSL certificates.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sslPolicy": {
          "description": "Optional. URL of the SslPolicy resource that will be associated with the EdgeCacheService. For example, the following are both valid URLs to an SslPolicy resource: - compute\/v1\/projects\/project\/global\/sslPolicies\/your-policy - \/global\/sslPolicies\/your-policy If not set, the EdgeCacheService has no SSL policy configured, and will default to the \"COMPATIBLE\" policy.",
          "type": "string"
        },
        "ipv4Addresses": {
          "description": "Output only. The IPv4 addresses associated with this service. Addresses are static for the lifetime of the service. IP addresses provisioned via Bring-Your-Own-IP (BYOIP) are not supported.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipv6Addresses": {
          "description": "Output only. The IPv6 addresses associated with this service. Addresses are static for the lifetime of the service. IP addresses provisioned via Bring-Your-Own-IP (BYOIP) are not supported.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "routing": {
          "description": "Required. Defines how requests are routed, modified, cached and\/or which origin content is filled from.",
          "$ref": "Routing"
        },
        "logConfig": {
          "description": "Optional. Specifies the logging options for the traffic served by this service. If logging is enabled, logs will be exported to Cloud Logging.",
          "$ref": "LogConfig"
        },
        "edgeSecurityPolicy": {
          "description": "Optional. Resource URL that points at the Cloud Armor edge security policy that is applied on each request against the EdgeCacheService.",
          "type": "string"
        }
      }
    },
    "Routing": {
      "id": "Routing",
      "description": "Defines how requests are routed, modified, cached and\/or which origin content is filled from.",
      "type": "object",
      "properties": {
        "hostRules": {
          "description": "Required. The list of hostRules to match against. These rules define which hostnames the EdgeCacheService will match against, and which route configurations apply. You may specify up to 5 host rules.",
          "type": "array",
          "items": {
            "$ref": "HostRule"
          }
        },
        "pathMatchers": {
          "description": "Required. The list of pathMatchers referenced via name by hostRules. PathMatcher is used to match the path portion of the URL when a HostRule matches the URL's host portion. You may specify up to 10 path matchers.",
          "type": "array",
          "items": {
            "$ref": "PathMatcher"
          }
        }
      }
    },
    "HostRule": {
      "id": "HostRule",
      "description": "The hostname configured for the EdgeCacheService. A hostRule associates a hostname (or hostnames) with a set of routing rules, which define path- and header- based configuration.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional. A human-readable description of the hostRule.",
          "type": "string"
        },
        "hosts": {
          "description": "Required. The list of host patterns to match. Host patterns must be valid hostnames with optional port numbers in the format host:port. * matches any string of ([a-z0-9-.]*). The only accepted ports are :80 and :443. Hosts are matched against the HTTP Host header, or for HTTP\/2 and HTTP\/3, the \":authority\" header, from the incoming request. You may specify up to 10 hosts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pathMatcher": {
          "description": "Required. The name of the pathMatcher associated with this hostRule.",
          "type": "string"
        }
      }
    },
    "PathMatcher": {
      "id": "PathMatcher",
      "description": "The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name to which this PathMatcher is referred by the HostRule.",
          "type": "string"
        },
        "description": {
          "description": "Optional. A human-readable description of the resource.",
          "type": "string"
        },
        "routeRules": {
          "description": "Required. The routeRules to match against. routeRules support advanced routing behaviour, and can match on paths, headers and query parameters, as well as status codes and HTTP methods. You must specify at least one (1) rule, and can specify a maximum of 64 rules.",
          "type": "array",
          "items": {
            "$ref": "RouteRule"
          }
        }
      }
    },
    "RouteRule": {
      "id": "RouteRule",
      "description": "RouteRule defines the priority of a given \"route\", including its match conditions and the actions to take on a request that matches.",
      "type": "object",
      "properties": {
        "origin": {
          "description": "Optional. The Origin resource that requests to this route should fetch from when a matching response is not in cache. Origins can be defined as short names (\"my-origin\") or fully-qualified resource URLs - e.g. \"networkservices.googleapis.com\/projects\/my-project\/global\/edgecacheorigins\/my-origin\" Only one of origin or urlRedirect can be set.",
          "type": "string"
        },
        "urlRedirect": {
          "description": "Optional. The URL redirect configuration for requests that match this route. Only one of origin or urlRedirect can be set.",
          "$ref": "UrlRedirect"
        },
        "priority": {
          "description": "Required. The priority of this route rule, where 1 is the highest priority. You cannot configure two or more routeRules with the same priority. Priority for each rule must be set to a number between 1 and 999 inclusive. Priority numbers can have gaps, which enable you to add or remove rules in the future without affecting the rest of the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the future without any impact on existing rules.",
          "type": "string",
          "format": "int64"
        },
        "description": {
          "description": "Optional. A human-readable description of the routeRule.",
          "type": "string"
        },
        "matchRules": {
          "description": "Required. The list of criteria for matching attributes of a request to this routeRule. This list has OR semantics: the request matches this routeRule when any of the matchRules are satisfied. However predicates within a given matchRule have AND semantics. All predicates within a matchRule must match for the request to match the rule.",
          "type": "array",
          "items": {
            "$ref": "MatchRule"
          }
        },
        "headerAction": {
          "description": "Optional. The header actions, including adding & removing headers, for requests that match this route.",
          "$ref": "HeaderAction"
        },
        "routeAction": {
          "description": "Optional. In response to a matching path, the routeAction performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected origin.",
          "$ref": "RouteAction"
        }
      }
    },
    "UrlRedirect": {
      "id": "UrlRedirect",
      "description": "UrlRedirect defines HTTP redirect configuration for a given request.",
      "type": "object",
      "properties": {
        "hostRedirect": {
          "description": "Optional. The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
          "type": "string"
        },
        "pathRedirect": {
          "description": "Optional. The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The path value must be between 1 and 1024 characters.",
          "type": "string"
        },
        "prefixRedirect": {
          "description": "Optional. The prefix that replaces the prefixMatch specified in the routeRule, retaining the remaining portion of the URL before redirecting the request. prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The prefix value must be between 1 and 1024 characters.",
          "type": "string"
        },
        "redirectResponseCode": {
          "description": "Optional. The HTTP Status code to use for this RedirectAction. The supported values are: - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. - FOUND, which corresponds to 302. - SEE_OTHER which corresponds to 303. - TEMPORARY_REDIRECT, which corresponds to 307. in this case, the request method will be retained. - PERMANENT_REDIRECT, which corresponds to 308. in this case, the request method will be retained.",
          "type": "string",
          "enumDescriptions": [
            "HTTP 301 Moved Permanently",
            "HTTP 302 Found",
            "HTTP 303 See Other",
            "HTTP 307 Temporary Redirect",
            "HTTP 308 Permanent Redirect"
          ],
          "enum": [
            "MOVED_PERMANENTLY_DEFAULT",
            "FOUND",
            "SEE_OTHER",
            "TEMPORARY_REDIRECT",
            "PERMANENT_REDIRECT"
          ]
        },
        "httpsRedirect": {
          "description": "Optional. If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This can only be set if there is at least one (1) edgeSslCertificate set on the service.",
          "type": "boolean"
        },
        "stripQuery": {
          "description": "Optional. If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. The default is set to false.",
          "type": "boolean"
        }
      }
    },
    "MatchRule": {
      "id": "MatchRule",
      "description": "MatchRule is a collection of match conditions (e.g. query, header, URI) for a request.",
      "type": "object",
      "properties": {
        "prefixMatch": {
          "description": "Optional. For satisfying the matchRule condition, the request's path must begin with the specified prefixMatch. prefixMatch must begin with a \/. The value must be between 1 and 1024 characters. Only one of prefixMatch or fullPathMatch must be specified.",
          "type": "string"
        },
        "fullPathMatch": {
          "description": "Optional. For satisfying the matchRule condition, the path of the request must exactly match the value specified in fullPathMatch after removing any query parameters and anchor that may be part of the original URL. fullPathMatch must be between 1 and 1024 characters. Only one of prefixMatch or fullPathMatch must be specified.",
          "type": "string"
        },
        "ignoreCase": {
          "description": "Optional. Specifies that prefixMatch and fullPathMatch matches are case sensitive. The default value is false.",
          "type": "boolean"
        },
        "headerMatches": {
          "description": "Optional. Specifies a list of header match criteria, all of which must match corresponding headers in the request. You may specify up to 3 headers to match on.",
          "type": "array",
          "items": {
            "$ref": "HeaderMatch"
          }
        },
        "queryParameterMatches": {
          "description": "Optional. Specifies a list of query parameter match criteria, all of which must match corresponding query parameters in the request. You may specify up to 5 query parameters to match on.",
          "type": "array",
          "items": {
            "$ref": "QueryParameterMatcher"
          }
        }
      }
    },
    "HeaderMatch": {
      "id": "HeaderMatch",
      "description": "HeaderMatch defines the match conditions for HTTP request headers.",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Required. The header name to match on.",
          "type": "string"
        },
        "presentMatch": {
          "description": "Optional. A header with the contents of headerName must exist. The match takes place whether or not the request's header has a value. Only one of exactMatch, prefixMatch, suffixMatch or presentMatch must be set.",
          "type": "boolean"
        },
        "exactMatch": {
          "description": "Optional. The value of the header should exactly match contents of exactMatch. Only one of exactMatch, prefixMatch, suffixMatch or presentMatch must be set.",
          "type": "string"
        },
        "prefixMatch": {
          "description": "Optional. The value of the header must start with the contents of prefixMatch. Only one of exactMatch, prefixMatch, suffixMatch or presentMatch must be set.",
          "type": "string"
        },
        "suffixMatch": {
          "description": "Optional. The value of the header must end with the contents of suffixMatch. Only one of exactMatch, prefixMatch, suffixMatch or presentMatch must be set.",
          "type": "string"
        },
        "invertMatch": {
          "description": "Optional. If set to false (default), the headerMatch is considered a match if the match criteria above are met. If set to true, the headerMatch is considered a match if the match criteria above are NOT met. The default setting is false.",
          "type": "boolean"
        }
      }
    },
    "QueryParameterMatcher": {
      "id": "QueryParameterMatcher",
      "description": "QueryParameterMatcher defines the match conditions for URI query parameters.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails.",
          "type": "string"
        },
        "presentMatch": {
          "description": "Optional. Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not. Only one of presentMatch or exactMatch must be set.",
          "type": "boolean"
        },
        "exactMatch": {
          "description": "Optional. The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch or exactMatch must be set.",
          "type": "string"
        }
      }
    },
    "HeaderAction": {
      "id": "HeaderAction",
      "description": "HeaderAction defines the addition and removal of HTTP headers for requests\/responses.",
      "type": "object",
      "properties": {
        "requestHeadersToAdd": {
          "description": "Optional. Describes a header to add. You may add a maximum of 5 request headers.",
          "type": "array",
          "items": {
            "$ref": "AddHeader"
          }
        },
        "responseHeadersToAdd": {
          "description": "Optional. Headers to add to the response prior to sending it back to the client. You may add a maximum of 5 response headers. Response headers are only sent to the client, and do not have an effect on the cache serving the response.",
          "type": "array",
          "items": {
            "$ref": "AddHeader"
          }
        },
        "requestHeadersToRemove": {
          "description": "Optional. A list of header names for headers that need to be removed from the request prior to forwarding the request to the origin. You may specify up to 10 request headers to remove.",
          "type": "array",
          "items": {
            "$ref": "RemoveHeader"
          }
        },
        "responseHeadersToRemove": {
          "description": "Optional. Headers to remove from the response prior to sending it back to the client. Response headers are only sent to the client, and do not have an effect on the cache serving the response. You may specify up to 10 response headers to remove.",
          "type": "array",
          "items": {
            "$ref": "RemoveHeader"
          }
        }
      }
    },
    "AddHeader": {
      "id": "AddHeader",
      "description": "Describes a header to add.",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Required. The name of the header to add.",
          "type": "string"
        },
        "headerValue": {
          "description": "Required. The value of the header to add.",
          "type": "string"
        },
        "replace": {
          "description": "Optional. Whether to replace all existing headers with the same name.",
          "type": "boolean"
        }
      }
    },
    "RemoveHeader": {
      "id": "RemoveHeader",
      "description": "Describes a header to remove.",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Required. The name of the header to remove.",
          "type": "string"
        }
      }
    },
    "RouteAction": {
      "id": "RouteAction",
      "description": "RouteAction defines the actions (rewrites, redirects, CORS header injection, header modification) to take for a given route match.",
      "type": "object",
      "properties": {
        "cdnPolicy": {
          "description": "Optional. The policy to use for defining caching and signed request behaviour for requests that match this route.",
          "$ref": "CDNPolicy"
        },
        "urlRewrite": {
          "description": "Optional. The URL rewrite configuration for requests that match this route.",
          "$ref": "UrlRewrite"
        },
        "corsPolicy": {
          "description": "Optional. The CORS (Cross-Origin Resource Sharing) policy for requests that match this route.",
          "$ref": "CORSPolicy"
        }
      }
    },
    "CDNPolicy": {
      "id": "CDNPolicy",
      "description": "The CDNPolicy to apply to the configured route.",
      "type": "object",
      "properties": {
        "cacheMode": {
          "description": "Optional. Cache modes allow users to control the behaviour of the cache, what content it should cache automatically, whether to respect origin headers, or whether to unconditionally cache all responses. For all cache modes, Cache-Control headers will be passed to the client. Use clientTtl to override what is sent to the client.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value. Will default to CACHE_ALL_STATIC.",
            "Automatically cache static content, including common image formats, media (video & audio), web assets (JavaScript & CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.",
            "Only cache responses with valid HTTP caching directives. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server.",
            "Cache all content, ignoring any \"private\", \"no-store\" or \"no-cache\" directives in Cache-Control response headers. Warning: this may result in caching private, per-user (user identifiable) content. You should only enable this on backends that are not serving private or dynamic content, such as storage buckets.",
            "Bypass all caching for requests that match routes with this CDNPolicy applied. Enabling this will cause the edge cache to ignore all HTTP caching directives. All responses will be fulfilled from the origin."
          ],
          "enum": [
            "CACHE_MODE_UNSPECIFIED",
            "CACHE_ALL_STATIC",
            "USE_ORIGIN_HEADERS",
            "FORCE_CACHE_ALL",
            "BYPASS_CACHE"
          ]
        },
        "clientTtl": {
          "description": "Optional. Specifies a separate client (e.g. browser client) TTL, separate from the TTL used by the edge caches. Leaving this empty will use the same cache TTL for both the CDN and the client-facing response. - The TTL must be > 0 and <= 86400s (1 day) - The clientTtl cannot be larger than the defaultTtl (if set) - Fractions of a second are not allowed. Omit this field to use the defaultTtl, or the max-age set by the origin, as the client-facing TTL. When the cache mode is set to \"USE_ORIGIN_HEADERS\" or \"BYPASS_CACHE\", you must omit this field.",
          "type": "string",
          "format": "google-duration"
        },
        "defaultTtl": {
          "description": "Optional. Specifies the default TTL for cached content served by this origin for responses that do not have an existing valid TTL (max-age or s-max-age). Defaults to 3600s (1 hour). - The TTL must be >= 0 and <= 2592000s (1 month) - Setting a TTL of \"0\" means \"always revalidate\" (equivalent to must-revalidate) - The value of defaultTTL cannot be set to a value greater than that of maxTTL. - Fractions of a second are not allowed. - When the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite the TTL set in all responses. Note that infrequently accessed objects may be evicted from the cache before the defined TTL. Objects that expire will be revalidated with the origin. When the cache mode is set to \"USE_ORIGIN_HEADERS\" or \"BYPASS_CACHE\", you must omit this field.",
          "type": "string",
          "format": "google-duration"
        },
        "maxTtl": {
          "description": "Optional. Specifies the maximum allowed TTL for cached content served by this origin. Defaults to 86400s (1 day). Cache directives that attempt to set a max-age or s-maxage higher than this, or an Expires header more than maxTtl seconds in the future will be capped at the value of maxTTL, as if it were the value of an s-maxage Cache-Control directive. - The TTL must be >= 0 and <= 2592000s (1 month) - Setting a TTL of \"0\" means \"always revalidate\" - The value of maxTtl must be equal to or greater than defaultTtl. - Fractions of a second are not allowed. When the cache mode is set to \"USE_ORIGIN_HEADERS\", \"FORCE_CACHE_ALL\", or \"BYPASS_CACHE\", you must omit this field.",
          "type": "string",
          "format": "google-duration"
        },
        "cacheKeyPolicy": {
          "description": "Optional. Defines the request parameters that contribute to the cache key.",
          "$ref": "CacheKeyPolicy"
        },
        "negativeCaching": {
          "description": "Optional. Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects. This can reduce the load on your origin and improve end-user experience by reducing response latency. By default, the CDNPolicy will apply the following default TTLs to these status codes: - HTTP 300 (Multiple Choice), 301, 308 (Permanent Redirects): 10m - HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal Reasons): 120s - HTTP 405 (Method Not Found), 414 (URI Too Long), 501 (Not Implemented): 60s These defaults can be overridden in negativeCachingPolicy",
          "type": "boolean"
        },
        "negativeCachingPolicy": {
          "description": "Optional. Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy. - Omitting the policy and leaving negativeCaching enabled will use the default TTLs for each status code, defined in negativeCaching. - TTLs must be >= 0 (where 0 is \"always revalidate\") and <= 86400s (1 day) Note that when specifying an explicit negativeCachingPolicy, you should take care to specify a cache TTL for all response codes that you wish to cache. The CDNPolicy will not apply any default negative caching when a policy exists.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "google-duration"
          }
        },
        "signedRequestMode": {
          "description": "Optional. Whether to enforce signed requests. The default value is DISABLED, which means all content is public, and does not authorize access. You must also set a signedRequestKeyset to enable signed requests. When set to REQUIRE_SIGNATURES, all matching requests will have their signature validated. Requests that were not signed with the corresponding private key, or that are otherwise invalid (expired, do not match the signature, IP address, or header) will be rejected with a HTTP 403 and (if enabled) logged.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value. Will default to DISABLED.",
            "Do not enforce signed requests.",
            "Enforce signed requests. All requests must have a valid signature. Requests that are missing the signature (URL or cookie -based) will be rejected as if the signature was invalid."
          ],
          "enum": [
            "SIGNED_REQUEST_MODE_UNSPECIFIED",
            "DISABLED",
            "REQUIRE_SIGNATURES"
          ]
        },
        "signedRequestKeyset": {
          "description": "Optional. The EdgeCacheKeyset containing the set of public keys used to validate signed requests at the edge. For example, the following are both valid URLs to an EdgeCacheKeyset resource: - networkservices\/v1alpha1\/projects\/project\/global\/edgeCacheKeysets\/yourKeyset - \/global\/edgeCacheKeysets\/yourKeyset signedRequestMode must be set to a value other than DISABLED when a keyset is provided.",
          "type": "string"
        }
      }
    },
    "CacheKeyPolicy": {
      "id": "CacheKeyPolicy",
      "description": "Defines the request parameters that contribute to the cache key.",
      "type": "object",
      "properties": {
        "includeProtocol": {
          "description": "Optional. If true, http and https requests will be cached separately.",
          "type": "boolean"
        },
        "includeQueryString": {
          "description": "Optional. If true, include query string parameters in the cache key according to includeQueryParameters and excludeQueryParameters. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.",
          "type": "boolean"
        },
        "excludeHost": {
          "description": "Optional. If true, requests to different hosts will be cached separately. Note: this should only be enabled if hosts share the same origin and content Removing the host from the cache key may inadvertently result in different objects being cached than intended, depending on which route the first user matched.",
          "type": "boolean"
        },
        "includedQueryParameters": {
          "description": "Optional. Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify includedQueryParameters or excludedQueryParameters, not both. '&' and '=' will be percent encoded and not treated as delimiters. You may include up to 10 query parameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedQueryParameters": {
          "description": "Optional. Names of query string parameters to exclude from cache keys. All other parameters will be included. Either specify includedQueryParameters or excludedQueryParameters, not both. '&' and '=' will be percent encoded and not treated as delimiters. You may exclude up to 10 query parameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includedHeaderNames": {
          "description": "Optional. Names of HTTP request headers to include in cache keys. The value of the header field will be used as part of the cache key. - Header names must be valid HTTP RFC 7230 header field values. - Header field names are case insensitive - You may specify up to five header names. - To include the HTTP method, use \":method\" Note that specifying several headers, and\/or headers that have a large range of values (e.g. per-user) will dramatically impact the cache hit rate, and may result in a higher eviction rate and reduced performance. You may specify up to 5 header names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UrlRewrite": {
      "id": "UrlRewrite",
      "description": "UrlRewrite defines URL rewrite configuration for a given request.",
      "type": "object",
      "properties": {
        "pathPrefixRewrite": {
          "description": "Optional. Prior to forwarding the request to the selected origin, the matching portion of the request's path is replaced by pathPrefixRewrite. The path value must be between 1 and 1024 characters.",
          "type": "string"
        },
        "hostRewrite": {
          "description": "Optional. Prior to forwarding the request to the selected origin, the request's host header is replaced with contents of hostRewrite. The host value must be between 1 and 255 characters.",
          "type": "string"
        }
      }
    },
    "CORSPolicy": {
      "id": "CORSPolicy",
      "description": "CORSPolicy defines Cross-Origin-Resource-Sharing configuration, including which CORS response headers will be set.",
      "type": "object",
      "properties": {
        "maxAge": {
          "description": "Required. Specifies how long results of a preflight request can be cached by a client in seconds. Note that many browser clients enforce a maximum TTL of 600s (10 minutes). - Setting the value to -1 forces a pre-flight check for all requests (not recommended) - A maximum TTL of 86400s can be set, but note that (as above) some clients may force pre-flight checks at a more regular interval. This translates to the Access-Control-Max-Age header.",
          "type": "string",
          "format": "google-duration"
        },
        "allowCredentials": {
          "description": "Optional. In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials response header.",
          "type": "boolean"
        },
        "allowOrigins": {
          "description": "Optional. Specifies the list of origins that will be allowed to do CORS requests. This translates to the Access-Control-Allow-Origin response header. You may specify up to 5 allowed origins.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowMethods": {
          "description": "Optional. Specifies the content for the Access-Control-Allow-Methods response header. You may specify up to 5 allowed methods.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowHeaders": {
          "description": "Optional. Specifies the content for the Access-Control-Allow-Headers response header. You may specify up to 5 headers to include in the Access-Control-Allow-Headers header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exposeHeaders": {
          "description": "Optional. Specifies the content for the Access-Control-Expose-Headers response header. You may specify up to 5 headers to expose in the Access-Control-Expose-Headers header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disabled": {
          "description": "Optional. If true, specifies the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.",
          "type": "boolean"
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies the logging options for the traffic served by this service. If logging is enabled, logs will be exported to Cloud Logging.",
      "type": "object",
      "properties": {
        "enable": {
          "description": "Optional. Specifies whether to enable logging for traffic served by this service. Defaults to false.",
          "type": "boolean"
        },
        "sampleRate": {
          "description": "Optional. Configures the sampling rate of requests, where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0, and the value of the field must be in [0, 1]. This field can only be specified if logging is enabled for this service.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "networkservices.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "networkservices.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "networkservices.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "networkservices.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "networkservices.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "httpFilters": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.httpFilters.list",
                  "path": "v1alpha1/{+parent}/httpFilters",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/httpFilters",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the HttpFilters should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of HttpFilters to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListHttpFiltersResponse` Indicates that this is a continuation of a prior `ListHttpFilters` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListHttpFiltersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists HttpFilters in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.httpFilters.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/httpFilters/{httpFiltersId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the HttpFilter to get. Must be in the format `projects\/*\/locations\/global\/httpFilters\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpFilters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "HttpFilter"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single HttpFilter."
                },
                "create": {
                  "id": "networkservices.projects.locations.httpFilters.create",
                  "path": "v1alpha1/{+parent}/httpFilters",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/httpFilters",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the HttpFilter. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "httpFilterId": {
                      "description": "Required. Short name of the HttpFilter resource to be created. E.g. \"CustomFilter\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "HttpFilter"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new HttpFilter in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.httpFilters.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/httpFilters/{httpFiltersId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the HttpFilter resource. It matches pattern `projects\/*\/locations\/global\/httpFilters\/`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpFilters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the HttpFilter resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "HttpFilter"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single HttpFilter."
                },
                "delete": {
                  "id": "networkservices.projects.locations.httpFilters.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/httpFilters/{httpFiltersId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the HttpFilter to delete. Must be in the format `projects\/*\/locations\/global\/httpFilters\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpFilters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single HttpFilter."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.httpFilters.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/httpFilters/{httpFiltersId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpFilters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.httpFilters.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/httpFilters/{httpFiltersId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpFilters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.httpFilters.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/httpFilters/{httpFiltersId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpFilters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "endpointConfigSelectors": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.endpointConfigSelectors.list",
                  "path": "v1alpha1/{+parent}/endpointConfigSelectors",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/endpointConfigSelectors",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the EndpointConfigSelectors should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of EndpointConfigSelectors to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListEndpointConfigSelectorsResponse` Indicates that this is a continuation of a prior `ListEndpointConfigSelectors` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEndpointConfigSelectorsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists EndpointConfigSelectors in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.endpointConfigSelectors.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/endpointConfigSelectors/{endpointConfigSelectorsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EndpointConfigSelector to get. Must be in the format `projects\/*\/locations\/global\/endpointConfigSelectors\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointConfigSelectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "EndpointConfigSelector"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single EndpointConfigSelector."
                },
                "create": {
                  "id": "networkservices.projects.locations.endpointConfigSelectors.create",
                  "path": "v1alpha1/{+parent}/endpointConfigSelectors",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/endpointConfigSelectors",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the EndpointConfigSelector. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "endpointConfigSelectorId": {
                      "description": "Required. Short name of the EndpointConfigSelector resource to be created. E.g. \"CustomECS\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EndpointConfigSelector"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new EndpointConfigSelector in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.endpointConfigSelectors.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/endpointConfigSelectors/{endpointConfigSelectorsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the EndpointConfigSelector resource. It matches pattern `projects\/*\/locations\/global\/endpointConfigSelectors\/`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointConfigSelectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the EndpointConfigSelector resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EndpointConfigSelector"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single EndpointConfigSelector."
                },
                "delete": {
                  "id": "networkservices.projects.locations.endpointConfigSelectors.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/endpointConfigSelectors/{endpointConfigSelectorsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EndpointConfigSelector to delete. Must be in the format `projects\/*\/locations\/global\/endpointConfigSelectors\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointConfigSelectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single EndpointConfigSelector."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.endpointConfigSelectors.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/endpointConfigSelectors/{endpointConfigSelectorsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointConfigSelectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.endpointConfigSelectors.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/endpointConfigSelectors/{endpointConfigSelectorsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointConfigSelectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.endpointConfigSelectors.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/endpointConfigSelectors/{endpointConfigSelectorsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointConfigSelectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "edgeCacheKeysets": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.list",
                  "path": "v1alpha1/{+parent}/edgeCacheKeysets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the EdgeCacheKeysets should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of EdgeCacheKeysets to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListEdgeCacheKeysetsResponse` Indicates that this is a continuation of a prior `ListEdgeCacheKeysets` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEdgeCacheKeysetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists EdgeCacheKeysets in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EdgeCacheKeyset to get. Must be in the format `projects\/*\/locations\/global\/edgeCacheKeysets\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "EdgeCacheKeyset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single EdgeCacheKeyset."
                },
                "create": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.create",
                  "path": "v1alpha1/{+parent}/edgeCacheKeysets",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the EdgeCacheKeyset. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "edgeCacheKeysetId": {
                      "description": "Required. Short name of the EdgeCacheKeyset resource to be created. E.g. \"MyEdgeCacheKeyset\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EdgeCacheKeyset"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new EdgeCacheKeyset in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource; provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression a-zA-Z* which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the EdgeCacheKeyset resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EdgeCacheKeyset"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single EdgeCacheKeyset."
                },
                "delete": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EdgeCacheKeyset to delete. Must be in the format `projects\/*\/locations\/global\/edgeCacheKeysets\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single EdgeCacheKeyset."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "edgeCacheOrigins": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.list",
                  "path": "v1alpha1/{+parent}/edgeCacheOrigins",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the EdgeCacheOrigins should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of EdgeCacheOrigins to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListEdgeCacheOriginsResponse` Indicates that this is a continuation of a prior `ListEdgeCacheOrigins` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEdgeCacheOriginsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists EdgeCacheOrigins in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EdgeCacheOrigin to get. Must be in the format `projects\/*\/locations\/global\/edgeCacheOrigins\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "EdgeCacheOrigin"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single EdgeCacheOrigin."
                },
                "create": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.create",
                  "path": "v1alpha1/{+parent}/edgeCacheOrigins",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the EdgeCacheOrigin. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "edgeCacheOriginId": {
                      "description": "Required. Short name of the EdgeCacheOrigin resource to be created. E.g. \"MyEdgeCacheOrigin\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EdgeCacheOrigin"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new EdgeCacheOrigin in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource; provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression a-zA-Z* which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the EdgeCacheOrigin resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EdgeCacheOrigin"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single EdgeCacheOrigin."
                },
                "delete": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EdgeCacheOrigin to delete. Must be in the format `projects\/*\/locations\/global\/edgeCacheOrigins\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single EdgeCacheOrigin."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "edgeCacheServices": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.edgeCacheServices.list",
                  "path": "v1alpha1/{+parent}/edgeCacheServices",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the EdgeCacheServices should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of EdgeCacheServices to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListEdgeCacheServicesResponse` Indicates that this is a continuation of a prior `ListEdgeCacheServices` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEdgeCacheServicesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists EdgeCacheServices in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.edgeCacheServices.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EdgeCacheService to get. Must be in the format `projects\/*\/locations\/global\/edgeCacheServices\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "EdgeCacheService"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single EdgeCacheService."
                },
                "create": {
                  "id": "networkservices.projects.locations.edgeCacheServices.create",
                  "path": "v1alpha1/{+parent}/edgeCacheServices",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the EdgeCacheService. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "edgeCacheServiceId": {
                      "description": "Required. Short name of the EdgeCacheService resource to be created. E.g. \"MyEdgeService\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EdgeCacheService"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new EdgeCacheService in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.edgeCacheServices.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource; provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression a-zA-Z* which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the EdgeCacheService resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EdgeCacheService"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single EdgeCacheService."
                },
                "delete": {
                  "id": "networkservices.projects.locations.edgeCacheServices.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EdgeCacheService to delete. Must be in the format `projects\/*\/locations\/global\/edgeCacheServices\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single EdgeCacheService."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheServices.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheServices.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.edgeCacheServices.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}