"""Generated message classes for certificatemanager version v1alpha2.

"""
# NOTE: This file is autogenerated and should not be edited by hand.

from __future__ import absolute_import

from apitools.base.protorpclite import messages as _messages
from apitools.base.py import encoding
from apitools.base.py import extra_types


package = 'certificatemanager'


class AuditConfig(_messages.Message):
  r"""Specifies the audit configuration for a service. The configuration
  determines which permission types are logged, and what identities, if any,
  are exempted from logging. An AuditConfig must have one or more
  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
  specific service, the union of the two AuditConfigs is used for that
  service: the log_types specified in each AuditConfig are enabled, and the
  exempted_members in each AuditLogConfig are exempted. Example Policy with
  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
  "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
  "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For
  sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
  logging. It also exempts jose@example.com from DATA_READ logging, and
  aliya@example.com from DATA_WRITE logging.

  Fields:
    auditLogConfigs: The configuration for logging of each type of permission.
    exemptedMembers: A string attribute.
    service: Specifies a service that will be enabled for audit logging. For
      example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
      `allServices` is a special value that covers all services.
  """

  auditLogConfigs = _messages.MessageField('AuditLogConfig', 1, repeated=True)
  exemptedMembers = _messages.StringField(2, repeated=True)
  service = _messages.StringField(3)


class AuditLogConfig(_messages.Message):
  r"""Provides the configuration for logging a type of permissions. Example: {
  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
  "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from
  DATA_READ logging.

  Enums:
    LogTypeValueValuesEnum: The log type that this config enables.

  Fields:
    exemptedMembers: Specifies the identities that do not cause logging for
      this type of permission. Follows the same format of Binding.members.
    ignoreChildExemptions: A boolean attribute.
    logType: The log type that this config enables.
  """

  class LogTypeValueValuesEnum(_messages.Enum):
    r"""The log type that this config enables.

    Values:
      LOG_TYPE_UNSPECIFIED: Default case. Should never be this.
      ADMIN_READ: Admin reads. Example: CloudIAM getIamPolicy
      DATA_WRITE: Data writes. Example: CloudSQL Users create
      DATA_READ: Data reads. Example: CloudSQL Users list
    """
    LOG_TYPE_UNSPECIFIED = 0
    ADMIN_READ = 1
    DATA_WRITE = 2
    DATA_READ = 3

  exemptedMembers = _messages.StringField(1, repeated=True)
  ignoreChildExemptions = _messages.BooleanField(2)
  logType = _messages.EnumField('LogTypeValueValuesEnum', 3)


class AuthorizationAttemptInfo(_messages.Message):
  r"""State of the latest attempt to authorize a domain for certificate
  issuance.

  Enums:
    FailureReasonValueValuesEnum: Output only. Reason for failure of the
      authorization attempt for the domain.
    StateValueValuesEnum: State of the domain for managed certificate
      issuance.

  Fields:
    details: Human readable explanation for reaching the state. Provided to
      help address the configuration issues. Not guaranteed to be stable. For
      programmatic access use Reason enum.
    domain: Domain name of the authorization attempt.
    failureReason: Output only. Reason for failure of the authorization
      attempt for the domain.
    state: State of the domain for managed certificate issuance.
  """

  class FailureReasonValueValuesEnum(_messages.Enum):
    r"""Output only. Reason for failure of the authorization attempt for the
    domain.

    Values:
      FAILURE_REASON_UNSPECIFIED: <no description>
      CONFIG: There was a problem with the user's DNS or load balancer
        configuration for this domain.
      CAA: Certificate issuance forbidden by an explicit CAA record for the
        domain or a failure to check CAA records for the domain.
      RATE_LIMITED: Reached a CA or internal rate-limit for the domain, e.g.
        for certificates per top-level private domain.
    """
    FAILURE_REASON_UNSPECIFIED = 0
    CONFIG = 1
    CAA = 2
    RATE_LIMITED = 3

  class StateValueValuesEnum(_messages.Enum):
    r"""State of the domain for managed certificate issuance.

    Values:
      STATE_UNSPECIFIED: <no description>
      AUTHORIZING: Certificate provisioning for this domain is under way. GCP
        will attempt to authorize the domain.
      AUTHORIZED: A managed certificate can be provisioned, no issues for this
        domain.
      FAILED: Attempt to authorize the domain failed. This prevents the
        Managed Certificate from being issued. See `failure_reason` and
        `details` fields for more information.
    """
    STATE_UNSPECIFIED = 0
    AUTHORIZING = 1
    AUTHORIZED = 2
    FAILED = 3

  details = _messages.StringField(1)
  domain = _messages.StringField(2)
  failureReason = _messages.EnumField('FailureReasonValueValuesEnum', 3)
  state = _messages.EnumField('StateValueValuesEnum', 4)


class AuthorizationLoggingOptions(_messages.Message):
  r"""Authorization-related information used by Cloud Audit Logging.

  Enums:
    PermissionTypeValueValuesEnum: The type of the permission that was
      checked.

  Fields:
    permissionType: The type of the permission that was checked.
  """

  class PermissionTypeValueValuesEnum(_messages.Enum):
    r"""The type of the permission that was checked.

    Values:
      PERMISSION_TYPE_UNSPECIFIED: Default. Should not be used.
      ADMIN_READ: A read of admin (meta) data.
      ADMIN_WRITE: A write of admin (meta) data.
      DATA_READ: A read of standard data.
      DATA_WRITE: A write of standard data.
    """
    PERMISSION_TYPE_UNSPECIFIED = 0
    ADMIN_READ = 1
    ADMIN_WRITE = 2
    DATA_READ = 3
    DATA_WRITE = 4

  permissionType = _messages.EnumField('PermissionTypeValueValuesEnum', 1)


class Binding(_messages.Message):
  r"""Associates `members` with a `role`.

  Fields:
    bindingId: A string attribute.
    condition: The condition that is associated with this binding. If the
      condition evaluates to `true`, then this binding applies to the current
      request. If the condition evaluates to `false`, then this binding does
      not apply to the current request. However, a different role binding
      might grant the same role to one or more of the members in this binding.
      To learn which resources support conditions in their IAM policies, see
      the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    members: Specifies the identities requesting access for a Cloud Platform
      resource. `members` can have the following values: * `allUsers`: A
      special identifier that represents anyone who is on the internet; with
      or without a Google account. * `allAuthenticatedUsers`: A special
      identifier that represents anyone who is authenticated with a Google
      account or a service account. * `user:{emailid}`: An email address that
      represents a specific Google account. For example, `alice@example.com` .
      * `serviceAccount:{emailid}`: An email address that represents a service
      account. For example, `my-other-app@appspot.gserviceaccount.com`. *
      `group:{emailid}`: An email address that represents a Google group. For
      example, `admins@example.com`. *
      `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
      identifier) representing a user that has been recently deleted. For
      example, `alice@example.com?uid=123456789012345678901`. If the user is
      recovered, this value reverts to `user:{emailid}` and the recovered user
      retains the role in the binding. *
      `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
      (plus unique identifier) representing a service account that has been
      recently deleted. For example, `my-other-
      app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the
      service account is undeleted, this value reverts to
      `serviceAccount:{emailid}` and the undeleted service account retains the
      role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An
      email address (plus unique identifier) representing a Google group that
      has been recently deleted. For example,
      `admins@example.com?uid=123456789012345678901`. If the group is
      recovered, this value reverts to `group:{emailid}` and the recovered
      group retains the role in the binding. * `domain:{domain}`: The G Suite
      domain (primary) that represents all the users of that domain. For
      example, `google.com` or `example.com`.
    role: Role that is assigned to `members`. For example, `roles/viewer`,
      `roles/editor`, or `roles/owner`.
  """

  bindingId = _messages.StringField(1)
  condition = _messages.MessageField('Expr', 2)
  members = _messages.StringField(3, repeated=True)
  role = _messages.StringField(4)


class CancelOperationRequest(_messages.Message):
  r"""The request message for Operations.CancelOperation."""


class Certificate(_messages.Message):
  r"""Defines TLS certificate.

  Enums:
    ScopeValueValuesEnum: Immutable. The scope of the certificate.

  Messages:
    LabelsValue: Set of labels associated with a Certificate.

  Fields:
    certificatePem: Output only. The certificate chain in PEM-encoded form.
    createTime: Output only. The creation timestamp of a Certificate.
    description: One or more paragraphs of text description of a certificate.
    expireTime: Output only. The expiry timestamp of a Certificate.
    labels: Set of labels associated with a Certificate.
    managed: If set, contains configuration and state of a managed
      certificate.
    name: A user-defined name of the certificate. Certificate names must be
      unique globally and match pattern
      `projects/*/locations/*/certificates/*`.
    scope: Immutable. The scope of the certificate.
    selfManaged: If set, defines data of a self-managed certificate.
    subjectAlternativeNames: Output only. The list of Subject Alternative
      Names defined in the certificate.
    updateTime: Output only. The last update timestamp of a Certificate.
  """

  class ScopeValueValuesEnum(_messages.Enum):
    r"""Immutable. The scope of the certificate.

    Values:
      DEFAULT: Certificates with default scope are served from core Google
        data centers. If unsure, choose this option.
      EDGE_CACHE: Certificates with scope EDGE_CACHE are special-purposed
        certificates, served from non-core Google data centers.
    """
    DEFAULT = 0
    EDGE_CACHE = 1

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Set of labels associated with a Certificate.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  certificatePem = _messages.StringField(1)
  createTime = _messages.StringField(2)
  description = _messages.StringField(3)
  expireTime = _messages.StringField(4)
  labels = _messages.MessageField('LabelsValue', 5)
  managed = _messages.MessageField('ManagedCertificate', 6)
  name = _messages.StringField(7)
  scope = _messages.EnumField('ScopeValueValuesEnum', 8)
  selfManaged = _messages.MessageField('SelfManagedCertificate', 9)
  subjectAlternativeNames = _messages.StringField(10, repeated=True)
  updateTime = _messages.StringField(11)


class CertificateMap(_messages.Message):
  r"""Defines a collection of certificate configurations.

  Messages:
    LabelsValue: Set of labels associated with a Certificate Map.

  Fields:
    createTime: Output only. The creation timestamp of a Certificate Map.
    description: One or more paragraphs of text description of a certificate
      map.
    gclbTargets: Output only. A list of GCLB targets which use this
      Certificate Map.
    labels: Set of labels associated with a Certificate Map.
    name: A user-defined name of the Certificate Map. Certificate Map names
      must be unique globally and match pattern
      `projects/*/locations/*/certificateMaps/*`.
    updateTime: Output only. The update timestamp of a Certificate Map.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Set of labels associated with a Certificate Map.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  gclbTargets = _messages.MessageField('GclbTarget', 3, repeated=True)
  labels = _messages.MessageField('LabelsValue', 4)
  name = _messages.StringField(5)
  updateTime = _messages.StringField(6)


class CertificateMapEntry(_messages.Message):
  r"""Defines a certificate map entry.

  Enums:
    MatcherValueValuesEnum: A predefined matcher for particular cases, other
      than SNI selection.
    StateValueValuesEnum: Output only. A serving state of this Certificate Map
      Entry.

  Messages:
    LabelsValue: Set of labels associated with a Certificate Map Entry.

  Fields:
    certificates: A set of Certificates defines for the given `hostname`.
      There can be defined up to fifteen certificates in each Certificate Map
      Entry. Each certificate must match pattern
      `projects/*/locations/*/certificates/*`.
    createTime: Output only. The creation timestamp of a Certificate Map
      Entry.
    description: One or more paragraphs of text description of a certificate
      map entry.
    hostname: A Hostname (FQDN, e.g. example.com) or a wildcard hostname
      expression (*.example.com) for a set of hostnames with common suffix.
      Used as Server Name Indication (SNI) for selecting a proper certificate.
    labels: Set of labels associated with a Certificate Map Entry.
    matcher: A predefined matcher for particular cases, other than SNI
      selection.
    name: A user-defined name of the Certificate Map Entry. Certificate Map
      Entry names must be unique globally and match pattern
      `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.
    state: Output only. A serving state of this Certificate Map Entry.
    updateTime: Output only. The update timestamp of a Certificate Map Entry.
  """

  class MatcherValueValuesEnum(_messages.Enum):
    r"""A predefined matcher for particular cases, other than SNI selection.

    Values:
      MATCHER_UNSPECIFIED: A matcher has't been recognized.
      PRIMARY: A primary certificate that is served when SNI wasn't specified
        in the request or SNI couldn't be found in the map.
    """
    MATCHER_UNSPECIFIED = 0
    PRIMARY = 1

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. A serving state of this Certificate Map Entry.

    Values:
      SERVING_STATE_UNSPECIFIED: The status is undefined.
      ACTIVE: The configuration is serving.
      PENDING: Update is in progress. Some frontends may serve this
        configuration.
    """
    SERVING_STATE_UNSPECIFIED = 0
    ACTIVE = 1
    PENDING = 2

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Set of labels associated with a Certificate Map Entry.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  certificates = _messages.StringField(1, repeated=True)
  createTime = _messages.StringField(2)
  description = _messages.StringField(3)
  hostname = _messages.StringField(4)
  labels = _messages.MessageField('LabelsValue', 5)
  matcher = _messages.EnumField('MatcherValueValuesEnum', 6)
  name = _messages.StringField(7)
  state = _messages.EnumField('StateValueValuesEnum', 8)
  updateTime = _messages.StringField(9)


class CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntriesCreateRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntrie
  sCreateRequest object.

  Fields:
    certificateMapEntry: A CertificateMapEntry resource to be passed as the
      request body.
    certificateMapEntryId: Required. A user-provided name of the certificate
      map entry.
    parent: Required. The parent resource of the certificate map entry. Must
      be in the format `projects/*/locations/*/certificateMaps/*`.
  """

  certificateMapEntry = _messages.MessageField('CertificateMapEntry', 1)
  certificateMapEntryId = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntriesDeleteRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntrie
  sDeleteRequest object.

  Fields:
    name: Required. A name of the certificate map entry to delete. Must be in
      the format
      `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntriesGetRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntrie
  sGetRequest object.

  Fields:
    name: Required. A name of the certificate map entry to describe. Must be
      in the format
      `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntriesListRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntrie
  sListRequest object.

  Fields:
    filter: Filter expression to restrict the returned Certificate Map
      Entries.
    orderBy: A list of Certificate Map Entry field names used to specify the
      order of the returned results. The default sorting order is ascending.
      To specify descending order for a field, add a suffix " desc".
    pageSize: Maximum number of certificate map entries to return. The service
      may return fewer than this value. If unspecified, at most 50 certificate
      map entries will be returned. The maximum value is 1000; values above
      1000 will be coerced to 1000.
    pageToken: The value returned by the last
      `ListCertificateMapEntriesResponse`. Indicates that this is a
      continuation of a prior `ListCertificateMapEntries` call, and that the
      system should return the next page of data.
    parent: Required. The project, location and certificate map from which the
      certificate map entries should be listed, specified in the format
      `projects/*/locations/*/certificateMaps/*`.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntriesPatchRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsCertificateMapEntrie
  sPatchRequest object.

  Fields:
    certificateMapEntry: A CertificateMapEntry resource to be passed as the
      request body.
    name: A user-defined name of the Certificate Map Entry. Certificate Map
      Entry names must be unique globally and match pattern
      `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.
    updateMask: Required. The update mask applies to the resource. For the
      `FieldMask` definition, see https://developers.google.com/protocol-
      buffers/docs/reference/google.protobuf#fieldmask.
  """

  certificateMapEntry = _messages.MessageField('CertificateMapEntry', 1)
  name = _messages.StringField(2, required=True)
  updateMask = _messages.StringField(3)


class CertificatemanagerProjectsLocationsCertificateMapsCreateRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsCreateRequest
  object.

  Fields:
    certificateMap: A CertificateMap resource to be passed as the request
      body.
    certificateMapId: Required. A user-provided name of the certificate map.
    parent: Required. The parent resource of the certificate map. Must be in
      the format `projects/*/locations/*`.
  """

  certificateMap = _messages.MessageField('CertificateMap', 1)
  certificateMapId = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class CertificatemanagerProjectsLocationsCertificateMapsDeleteRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsDeleteRequest
  object.

  Fields:
    name: Required. A name of the certificate map to delete. Must be in the
      format `projects/*/locations/*/certificateMaps/*`.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsCertificateMapsGetRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsGetRequest object.

  Fields:
    name: Required. A name of the certificate map to describe. Must be in the
      format `projects/*/locations/*/certificateMaps/*`.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsCertificateMapsListRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsListRequest object.

  Fields:
    filter: Filter expression to restrict the Certificates Maps returned.
    orderBy: A list of Certificate Map field names used to specify the order
      of the returned results. The default sorting order is ascending. To
      specify descending order for a field, add a suffix " desc".
    pageSize: Maximum number of certificate maps to return per call.
    pageToken: The value returned by the last `ListCertificateMapsResponse`.
      Indicates that this is a continuation of a prior `ListCertificateMaps`
      call, and that the system should return the next page of data.
    parent: Required. The project and location from which the certificate maps
      should be listed, specified in the format `projects/*/locations/*`.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class CertificatemanagerProjectsLocationsCertificateMapsPatchRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificateMapsPatchRequest object.

  Fields:
    certificateMap: A CertificateMap resource to be passed as the request
      body.
    name: A user-defined name of the Certificate Map. Certificate Map names
      must be unique globally and match pattern
      `projects/*/locations/*/certificateMaps/*`.
    updateMask: Required. The update mask applies to the resource. For the
      `FieldMask` definition, see https://developers.google.com/protocol-
      buffers/docs/reference/google.protobuf#fieldmask.
  """

  certificateMap = _messages.MessageField('CertificateMap', 1)
  name = _messages.StringField(2, required=True)
  updateMask = _messages.StringField(3)


class CertificatemanagerProjectsLocationsCertificatesCreateRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificatesCreateRequest object.

  Fields:
    certificate: A Certificate resource to be passed as the request body.
    certificateId: Required. A user-provided name of the certificate.
    parent: Required. The parent resource of the certificate. Must be in the
      format `projects/*/locations/*`.
  """

  certificate = _messages.MessageField('Certificate', 1)
  certificateId = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class CertificatemanagerProjectsLocationsCertificatesDeleteRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificatesDeleteRequest object.

  Fields:
    name: Required. A name of the certificate to delete. Must be in the format
      `projects/*/locations/*/certificates/*`.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsCertificatesGetIamPolicyRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificatesGetIamPolicyRequest
  object.

  Fields:
    options_requestedPolicyVersion: Optional. The policy format version to be
      returned. Valid values are 0, 1, and 3. Requests specifying an invalid
      value will be rejected. Requests for policies with any conditional
      bindings must specify version 3. Policies without any conditional
      bindings may specify any valid value or leave the field unset. To learn
      which resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for the appropriate value for this
      field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class CertificatemanagerProjectsLocationsCertificatesGetRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificatesGetRequest object.

  Fields:
    name: Required. A name of the certificate to describe. Must be in the
      format `projects/*/locations/*/certificates/*`.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsCertificatesListRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificatesListRequest object.

  Fields:
    filter: Filter expression to restrict the Certificates returned.
    orderBy: A list of Certificate field names used to specify the order of
      the returned results. The default sorting order is ascending. To specify
      descending order for a field, add a suffix " desc".
    pageSize: Maximum number of certificates to return per call.
    pageToken: The value returned by the last `ListCertificatesResponse`.
      Indicates that this is a continuation of a prior `ListCertificates`
      call, and that the system should return the next page of data.
    parent: Required. The project and location from which the certificate
      should be listed, specified in the format `projects/*/locations/*`.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class CertificatemanagerProjectsLocationsCertificatesPatchRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificatesPatchRequest object.

  Fields:
    certificate: A Certificate resource to be passed as the request body.
    name: A user-defined name of the certificate. Certificate names must be
      unique globally and match pattern
      `projects/*/locations/*/certificates/*`.
    updateMask: Required. The update mask applies to the resource. For the
      `FieldMask` definition, see https://developers.google.com/protocol-
      buffers/docs/reference/google.protobuf#fieldmask.
  """

  certificate = _messages.MessageField('Certificate', 1)
  name = _messages.StringField(2, required=True)
  updateMask = _messages.StringField(3)


class CertificatemanagerProjectsLocationsCertificatesSetIamPolicyRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsCertificatesSetIamPolicyRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for the appropriate value for this
      field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class CertificatemanagerProjectsLocationsCertificatesTestIamPermissionsRequest(_messages.Message):
  r"""A
  CertificatemanagerProjectsLocationsCertificatesTestIamPermissionsRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See the operation documentation for the appropriate value for
      this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class CertificatemanagerProjectsLocationsDnsAuthorizationsCreateRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsDnsAuthorizationsCreateRequest
  object.

  Fields:
    dnsAuthorization: A DnsAuthorization resource to be passed as the request
      body.
    dnsAuthorizationId: Required. A user-provided name of the dns
      authorization.
    parent: Required. The parent resource of the dns authorization. Must be in
      the format `projects/*/locations/*`.
  """

  dnsAuthorization = _messages.MessageField('DnsAuthorization', 1)
  dnsAuthorizationId = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class CertificatemanagerProjectsLocationsDnsAuthorizationsDeleteRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsDnsAuthorizationsDeleteRequest
  object.

  Fields:
    name: Required. A name of the dns authorization to delete. Must be in the
      format `projects/*/locations/*/dnsAuthorizations/*`.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsDnsAuthorizationsGetRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsDnsAuthorizationsGetRequest object.

  Fields:
    name: Required. A name of the dns authorization to describe. Must be in
      the format `projects/*/locations/*/dnsAuthorizations/*`.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsDnsAuthorizationsListRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsDnsAuthorizationsListRequest
  object.

  Fields:
    filter: Filter expression to restrict the Dns Authorizations returned.
    orderBy: A list of Dns Authorization field names used to specify the order
      of the returned results. The default sorting order is ascending. To
      specify descending order for a field, add a suffix " desc".
    pageSize: Maximum number of dns authorizations to return per call.
    pageToken: The value returned by the last `ListDnsAuthorizationsResponse`.
      Indicates that this is a continuation of a prior `ListDnsAuthorizations`
      call, and that the system should return the next page of data.
    parent: Required. The project and location from which the dns
      authorizations should be listed, specified in the format
      `projects/*/locations/*`.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class CertificatemanagerProjectsLocationsDnsAuthorizationsPatchRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsDnsAuthorizationsPatchRequest
  object.

  Fields:
    dnsAuthorization: A DnsAuthorization resource to be passed as the request
      body.
    name: A user-defined name of the dns authorization. DnsAuthorization names
      must be unique globally and match pattern
      `projects/*/locations/*/dnsAuthorizations/*`.
    updateMask: Required. The update mask applies to the resource. For the
      `FieldMask` definition, see https://developers.google.com/protocol-
      buffers/docs/reference/google.protobuf#fieldmask.
  """

  dnsAuthorization = _messages.MessageField('DnsAuthorization', 1)
  name = _messages.StringField(2, required=True)
  updateMask = _messages.StringField(3)


class CertificatemanagerProjectsLocationsGetRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsGetRequest object.

  Fields:
    name: Resource name for the location.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsListRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsListRequest object.

  Fields:
    filter: A filter to narrow down results to a preferred subset. The
      filtering language accepts strings like "displayName=tokyo", and is
      documented in more detail in [AIP-160](https://google.aip.dev/160).
    includeUnrevealedLocations: If true, the returned list will include
      locations which are not yet revealed.
    name: The resource that owns the locations collection, if applicable.
    pageSize: The maximum number of results to return. If not set, the service
      selects a default.
    pageToken: A page token received from the `next_page_token` field in the
      response. Send that page token to receive the subsequent page.
  """

  filter = _messages.StringField(1)
  includeUnrevealedLocations = _messages.BooleanField(2)
  name = _messages.StringField(3, required=True)
  pageSize = _messages.IntegerField(4, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(5)


class CertificatemanagerProjectsLocationsOperationsCancelRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsOperationsCancelRequest object.

  Fields:
    cancelOperationRequest: A CancelOperationRequest resource to be passed as
      the request body.
    name: The name of the operation resource to be cancelled.
  """

  cancelOperationRequest = _messages.MessageField('CancelOperationRequest', 1)
  name = _messages.StringField(2, required=True)


class CertificatemanagerProjectsLocationsOperationsDeleteRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsOperationsDeleteRequest object.

  Fields:
    name: The name of the operation resource to be deleted.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsOperationsGetRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsOperationsGetRequest object.

  Fields:
    name: The name of the operation resource.
  """

  name = _messages.StringField(1, required=True)


class CertificatemanagerProjectsLocationsOperationsListRequest(_messages.Message):
  r"""A CertificatemanagerProjectsLocationsOperationsListRequest object.

  Fields:
    filter: The standard list filter.
    name: The name of the operation's parent resource.
    pageSize: The standard list page size.
    pageToken: The standard list page token.
  """

  filter = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)


class CloudAuditOptions(_messages.Message):
  r"""Write a Cloud Audit log

  Enums:
    LogNameValueValuesEnum: The log_name to populate in the Cloud Audit
      Record.

  Fields:
    authorizationLoggingOptions: Information used by the Cloud Audit Logging
      pipeline.
    logName: The log_name to populate in the Cloud Audit Record.
  """

  class LogNameValueValuesEnum(_messages.Enum):
    r"""The log_name to populate in the Cloud Audit Record.

    Values:
      UNSPECIFIED_LOG_NAME: Default. Should not be used.
      ADMIN_ACTIVITY: Corresponds to "cloudaudit.googleapis.com/activity"
      DATA_ACCESS: Corresponds to "cloudaudit.googleapis.com/data_access"
    """
    UNSPECIFIED_LOG_NAME = 0
    ADMIN_ACTIVITY = 1
    DATA_ACCESS = 2

  authorizationLoggingOptions = _messages.MessageField('AuthorizationLoggingOptions', 1)
  logName = _messages.EnumField('LogNameValueValuesEnum', 2)


class Condition(_messages.Message):
  r"""A condition to be met.

  Enums:
    IamValueValuesEnum: Trusted attributes supplied by the IAM system.
    OpValueValuesEnum: An operator to apply the subject with.
    SysValueValuesEnum: Trusted attributes supplied by any service that owns
      resources and uses the IAM system for access control.

  Fields:
    iam: Trusted attributes supplied by the IAM system.
    op: An operator to apply the subject with.
    svc: Trusted attributes discharged by the service.
    sys: Trusted attributes supplied by any service that owns resources and
      uses the IAM system for access control.
    values: The objects of the condition.
  """

  class IamValueValuesEnum(_messages.Enum):
    r"""Trusted attributes supplied by the IAM system.

    Values:
      NO_ATTR: Default non-attribute.
      AUTHORITY: Either principal or (if present) authority selector.
      ATTRIBUTION: The principal (even if an authority selector is present),
        which must only be used for attribution, not authorization.
      SECURITY_REALM: Any of the security realms in the IAMContext
        (go/security-realms). When used with IN, the condition indicates "any
        of the request's realms match one of the given values; with NOT_IN,
        "none of the realms match any of the given values". Note that a value
        can be: - 'self' (i.e., allow connections from clients that are in the
        same security realm, which is currently but not guaranteed to be
        campus-sized) - 'self:metro' (i.e., clients that are in the same
        metro) - 'self:cloud-region' (i.e., allow connections from clients
        that are in the same cloud region) - 'guardians' (i.e., allow
        connections from its guardian realms. See go/security-realms-
        glossary#guardian for more information.) - a realm (e.g., 'campus-
        abc') - a realm group (e.g., 'realms-for-borg-cell-xx', see: go/realm-
        groups) A match is determined by a realm group membership check
        performed by a RealmAclRep object (go/realm-acl-howto). It is not
        permitted to grant access based on the *absence* of a realm, so realm
        conditions can only be used in a "positive" context (e.g., ALLOW/IN or
        DENY/NOT_IN).
      APPROVER: An approver (distinct from the requester) that has authorized
        this request. When used with IN, the condition indicates that one of
        the approvers associated with the request matches the specified
        principal, or is a member of the specified group. Approvers can only
        grant additional access, and are thus only used in a strictly positive
        context (e.g. ALLOW/IN or DENY/NOT_IN).
      JUSTIFICATION_TYPE: What types of justifications have been supplied with
        this request. String values should match enum names from
        security.credentials.JustificationType, e.g. "MANUAL_STRING". It is
        not permitted to grant access based on the *absence* of a
        justification, so justification conditions can only be used in a
        "positive" context (e.g., ALLOW/IN or DENY/NOT_IN). Multiple
        justifications, e.g., a Buganizer ID and a manually-entered reason,
        are normal and supported.
      CREDENTIALS_TYPE: What type of credentials have been supplied with this
        request. String values should match enum names from
        security_loas_l2.CredentialsType - currently, only
        CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access
        based on the *absence* of a credentials type, so the conditions can
        only be used in a "positive" context (e.g., ALLOW/IN or DENY/NOT_IN).
      CREDS_ASSERTION: EXPERIMENTAL -- DO NOT USE. The conditions can only be
        used in a "positive" context (e.g., ALLOW/IN or DENY/NOT_IN).
    """
    NO_ATTR = 0
    AUTHORITY = 1
    ATTRIBUTION = 2
    SECURITY_REALM = 3
    APPROVER = 4
    JUSTIFICATION_TYPE = 5
    CREDENTIALS_TYPE = 6
    CREDS_ASSERTION = 7

  class OpValueValuesEnum(_messages.Enum):
    r"""An operator to apply the subject with.

    Values:
      NO_OP: Default no-op.
      EQUALS: DEPRECATED. Use IN instead.
      NOT_EQUALS: DEPRECATED. Use NOT_IN instead.
      IN: The condition is true if the subject (or any element of it if it is
        a set) matches any of the supplied values.
      NOT_IN: The condition is true if the subject (or every element of it if
        it is a set) matches none of the supplied values.
      DISCHARGED: Subject is discharged
    """
    NO_OP = 0
    EQUALS = 1
    NOT_EQUALS = 2
    IN = 3
    NOT_IN = 4
    DISCHARGED = 5

  class SysValueValuesEnum(_messages.Enum):
    r"""Trusted attributes supplied by any service that owns resources and
    uses the IAM system for access control.

    Values:
      NO_ATTR: Default non-attribute type
      REGION: Region of the resource
      SERVICE: Service name
      NAME: Resource name
      IP: IP address of the caller
    """
    NO_ATTR = 0
    REGION = 1
    SERVICE = 2
    NAME = 3
    IP = 4

  iam = _messages.EnumField('IamValueValuesEnum', 1)
  op = _messages.EnumField('OpValueValuesEnum', 2)
  svc = _messages.StringField(3)
  sys = _messages.EnumField('SysValueValuesEnum', 4)
  values = _messages.StringField(5, repeated=True)


class CounterOptions(_messages.Message):
  r"""Increment a streamz counter with the specified metric and field names.
  Metric names should start with a '/', generally be lowercase-only, and end
  in "_count". Field names should not contain an initial slash. The actual
  exported metric names will have "/iam/policy" prepended. Field names
  correspond to IAM request parameters and field values are their respective
  values. Supported field names: - "authority", which is "[token]" if
  IAMContext.token is present, otherwise the value of
  IAMContext.authority_selector if present, and otherwise a representation of
  IAMContext.principal; or - "iam_principal", a representation of
  IAMContext.principal even if a token or authority selector is present; or -
  "" (empty string), resulting in a counter with no fields. Examples: counter
  { metric: "/debug_access_count" field: "iam_principal" } ==> increment
  counter /iam/policy/debug_access_count {iam_principal=[value of
  IAMContext.principal]}

  Fields:
    customFields: Custom fields.
    field: The field value to attribute.
    metric: The metric to update.
  """

  customFields = _messages.MessageField('CustomField', 1, repeated=True)
  field = _messages.StringField(2)
  metric = _messages.StringField(3)


class CreateReferenceRequest(_messages.Message):
  r"""The CreateReferenceRequest request.

  Fields:
    parent: Required. The parent resource name (target_resource of this
      reference). For example: `targetservice.googleapis.com/projects/{my-
      project}/locations/{location}/instances/{my-instance}`.
    reference: Required. The reference to be created.
    referenceId: The unique id of this resource. Can be any arbitrary string,
      either GUID or any other string. Must be unique within a scope of a
      target resource, but does not have to be globally unique. Reference ID
      is part of resource name of the reference. Resource name is generated in
      the following way: {parent}/references/{reference_id}. Reference ID
      field is currently required but id auto generation might be added in the
      future.
    requestId: Optional. Request ID is an idempotency ID of the request. It
      must be a valid UUID. Zero UUID (00000000-0000-0000-0000-000000000000)
      is not supported.
  """

  parent = _messages.StringField(1)
  reference = _messages.MessageField('Reference', 2)
  referenceId = _messages.StringField(3)
  requestId = _messages.StringField(4)


class CustomField(_messages.Message):
  r"""Custom fields. These can be used to create a counter with arbitrary
  field/value pairs. See: go/rpcsp-custom-fields.

  Fields:
    name: Name is the field name.
    value: Value is the field value. It is important that in contrast to the
      CounterOptions.field, the value here is a constant that is not derived
      from the IAMContext.
  """

  name = _messages.StringField(1)
  value = _messages.StringField(2)


class DataAccessOptions(_messages.Message):
  r"""Write a Data Access (Gin) log

  Enums:
    LogModeValueValuesEnum:

  Fields:
    logMode: A LogModeValueValuesEnum attribute.
  """

  class LogModeValueValuesEnum(_messages.Enum):
    r"""LogModeValueValuesEnum enum type.

    Values:
      LOG_MODE_UNSPECIFIED: Client is not required to write a partial Gin log
        immediately after the authorization check. If client chooses to write
        one and it fails, client may either fail open (allow the operation to
        continue) or fail closed (handle as a DENY outcome).
      LOG_FAIL_CLOSED: The application's operation in the context of which
        this authorization check is being made may only be performed if it is
        successfully logged to Gin. For instance, the authorization library
        may satisfy this obligation by emitting a partial log entry at
        authorization check time and only returning ALLOW to the application
        if it succeeds. If a matching Rule has this directive, but the client
        has not indicated that it will honor such requirements, then the IAM
        check will result in authorization failure by setting
        CheckPolicyResponse.success=false.
    """
    LOG_MODE_UNSPECIFIED = 0
    LOG_FAIL_CLOSED = 1

  logMode = _messages.EnumField('LogModeValueValuesEnum', 1)


class DeleteReferenceRequest(_messages.Message):
  r"""The DeleteReferenceRequest request.

  Fields:
    name: Required. Resource name of the reference, in the following format:
      `{targer_service}/{target_resource}/references/{reference_id}`. For
      example: `targetservice.googleapis.com/projects/{my-
      project}/locations/{location}/instances/{my-instance}/references/{xyz}`.
    requestId: Optional. Request ID is an idempotency ID of the request. It
      must be a valid UUID. Zero UUID (00000000-0000-0000-0000-000000000000)
      is not supported.
  """

  name = _messages.StringField(1)
  requestId = _messages.StringField(2)


class DnsAuthorization(_messages.Message):
  r"""A DnsAuthorization resource describes a way to perform domain
  authorization for certificate issuance.

  Messages:
    LabelsValue: Set of labels associated with a DnsAuthorization.

  Fields:
    createTime: Output only. The creation timestamp of a DnsAuthorization.
    description: One or more paragraphs of text description of a
      DnsAuthorization.
    dnsResourceRecord: Output only. DNS Resource Record that needs to be added
      to DNS configuration.
    domain: Required. Immutable. A domain which is being authorized. A
      DnsAuthorization resource covers a single domain and its wildcard, e.g.
      authorization for "example.com" can be used to issue certificates for
      "example.com" and "*.example.com".
    labels: Set of labels associated with a DnsAuthorization.
    name: A user-defined name of the dns authorization. DnsAuthorization names
      must be unique globally and match pattern
      `projects/*/locations/*/dnsAuthorizations/*`.
    updateTime: Output only. The last update timestamp of a DnsAuthorization.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Set of labels associated with a DnsAuthorization.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  dnsResourceRecord = _messages.MessageField('DnsResourceRecord', 3)
  domain = _messages.StringField(4)
  labels = _messages.MessageField('LabelsValue', 5)
  name = _messages.StringField(6)
  updateTime = _messages.StringField(7)


class DnsResourceRecord(_messages.Message):
  r"""The structure describing the DNS Resource Record that needs to be added
  to DNS configuration for the authorization to be usable by certificate.

  Fields:
    data: Output only. Data of the DNS Resource Record.
    name: Output only. Fully qualified name of the DNS Resource Record. e.g.
      "_acme-challenge.example.com."
    type: Output only. Type of the DNS Resource Record. Currently always set
      to "CNAME".
  """

  data = _messages.StringField(1)
  name = _messages.StringField(2)
  type = _messages.StringField(3)


class Empty(_messages.Message):
  r"""A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance: service Foo { rpc
  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
  representation for `Empty` is empty JSON object `{}`.
  """



class Expr(_messages.Message):
  r"""Represents a textual expression in the Common Expression Language (CEL)
  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
  are documented at https://github.com/google/cel-spec. Example (Comparison):
  title: "Summary size limit" description: "Determines if a summary is less
  than 100 chars" expression: "document.summary.size() < 100" Example
  (Equality): title: "Requestor is owner" description: "Determines if
  requestor is the document owner" expression: "document.owner ==
  request.auth.claims.email" Example (Logic): title: "Public documents"
  description: "Determine whether the document should be publicly visible"
  expression: "document.type != 'private' && document.type != 'internal'"
  Example (Data Manipulation): title: "Notification string" description:
  "Create a notification string with a timestamp." expression: "'New message
  received at ' + string(document.create_time)" The exact variables and
  functions that may be referenced within an expression are determined by the
  service that evaluates it. See the service documentation for additional
  information.

  Fields:
    description: Optional. Description of the expression. This is a longer
      text which describes the expression, e.g. when hovered over it in a UI.
    expression: Textual representation of an expression in Common Expression
      Language syntax.
    location: Optional. String indicating the location of the expression for
      error reporting, e.g. a file name and a position in the file.
    title: Optional. Title for the expression, i.e. a short string describing
      its purpose. This can be used e.g. in UIs which allow to enter the
      expression.
  """

  description = _messages.StringField(1)
  expression = _messages.StringField(2)
  location = _messages.StringField(3)
  title = _messages.StringField(4)


class GclbTarget(_messages.Message):
  r"""Describes a Target Proxy which uses this Certificate Map.

  Fields:
    ipConfigs: IP configurations for this Target Proxy where the Certificate
      Map is serving.
    targetHttpsProxy: A name must be in the format
      `projects/*/locations/*/targetHttpsProxies/*`.
    targetSslProxy: A name must be in the format
      `projects/*/locations/*/targetSslProxies/*`.
  """

  ipConfigs = _messages.MessageField('IpConfig', 1, repeated=True)
  targetHttpsProxy = _messages.StringField(2)
  targetSslProxy = _messages.StringField(3)


class GetReferenceRequest(_messages.Message):
  r"""The GetReferenceRequest request.

  Fields:
    name: Required. Resource name of the reference, in the following format:
      `{target_service}/{target_resource}/references/{reference_id}`. For
      example: `targetservice.googleapis.com/projects/{my-
      project}/locations/{location}/instances/{my-instance}/references/{xyz}`.
  """

  name = _messages.StringField(1)


class IpConfig(_messages.Message):
  r"""Defines IP configuration where this Certificate Map is serving.

  Fields:
    ipAddress: An external IP address.
    ports: Ports.
  """

  ipAddress = _messages.StringField(1)
  ports = _messages.IntegerField(2, repeated=True, variant=_messages.Variant.UINT32)


class ListCertificateMapEntriesResponse(_messages.Message):
  r"""Response for the `ListCertificateMapEntries` method.

  Fields:
    certificateMapEntries: A list of certificate map entries for the parent
      resource.
    nextPageToken: If there might be more results than those appearing in this
      response, then `next_page_token` is included. To get the next set of
      results, call this method again using the value of `next_page_token` as
      `page_token`.
    unreachable: Locations that could not be reached.
  """

  certificateMapEntries = _messages.MessageField('CertificateMapEntry', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  unreachable = _messages.StringField(3, repeated=True)


class ListCertificateMapsResponse(_messages.Message):
  r"""Response for the `ListCertificateMaps` method.

  Fields:
    certificateMaps: A list of certificate maps for the parent resource.
    nextPageToken: If there might be more results than those appearing in this
      response, then `next_page_token` is included. To get the next set of
      results, call this method again using the value of `next_page_token` as
      `page_token`.
    unreachable: Locations that could not be reached.
  """

  certificateMaps = _messages.MessageField('CertificateMap', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  unreachable = _messages.StringField(3, repeated=True)


class ListCertificatesResponse(_messages.Message):
  r"""Response for the `ListCertificates` method.

  Fields:
    certificates: A list of certificates for the parent resource.
    nextPageToken: If there might be more results than those appearing in this
      response, then `next_page_token` is included. To get the next set of
      results, call this method again using the value of `next_page_token` as
      `page_token`.
    unreachable: A list of locations that could not be reached.
  """

  certificates = _messages.MessageField('Certificate', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  unreachable = _messages.StringField(3, repeated=True)


class ListDnsAuthorizationsResponse(_messages.Message):
  r"""Response for the `ListDnsAuthorizations` method.

  Fields:
    dnsAuthorizations: A list of dns authorizations for the parent resource.
    nextPageToken: If there might be more results than those appearing in this
      response, then `next_page_token` is included. To get the next set of
      results, call this method again using the value of `next_page_token` as
      `page_token`.
    unreachable: Locations that could not be reached.
  """

  dnsAuthorizations = _messages.MessageField('DnsAuthorization', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  unreachable = _messages.StringField(3, repeated=True)


class ListLocationsResponse(_messages.Message):
  r"""The response message for Locations.ListLocations.

  Fields:
    locations: A list of locations that matches the specified filter in the
      request.
    nextPageToken: The standard List next-page token.
  """

  locations = _messages.MessageField('Location', 1, repeated=True)
  nextPageToken = _messages.StringField(2)


class ListOperationsResponse(_messages.Message):
  r"""The response message for Operations.ListOperations.

  Fields:
    nextPageToken: The standard List next-page token.
    operations: A list of operations that matches the specified filter in the
      request.
  """

  nextPageToken = _messages.StringField(1)
  operations = _messages.MessageField('Operation', 2, repeated=True)


class ListReferencesRequest(_messages.Message):
  r"""The ListResourceMetadataRequest request.

  Fields:
    pageSize: The maximum number of items to return. If unspecified, server
      will pick an appropriate default. Server may return fewer items than
      requested. A caller should only rely on response's next_page_token to
      determine if there are more References left to be queried.
    pageToken: The next_page_token value returned from a previous List
      request, if any.
    parent: Required. The parent resource name (target_resource of this
      reference). For example: `targetservice.googleapis.com/projects/{my-
      project}/locations/{location}/instances/{my-instance}`.
  """

  pageSize = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(2)
  parent = _messages.StringField(3)


class ListReferencesResponse(_messages.Message):
  r"""The ListReferencesResponse response.

  Fields:
    nextPageToken: Token to retrieve the next page of results, or empty if
      there are no more results in the list.
    references: The list of references.
  """

  nextPageToken = _messages.StringField(1)
  references = _messages.MessageField('Reference', 2, repeated=True)


class Location(_messages.Message):
  r"""A resource that represents Google Cloud Platform location.

  Messages:
    LabelsValue: Cross-service attributes for the location. For example
      {"cloud.googleapis.com/region": "us-east1"}
    MetadataValue: Service-specific metadata. For example the available
      capacity at the given location.

  Fields:
    displayName: The friendly name for this location, typically a nearby city
      name. For example, "Tokyo".
    labels: Cross-service attributes for the location. For example
      {"cloud.googleapis.com/region": "us-east1"}
    locationId: The canonical id for this location. For example: `"us-east1"`.
    metadata: Service-specific metadata. For example the available capacity at
      the given location.
    name: Resource name for the location, which may vary between
      implementations. For example: `"projects/example-project/locations/us-
      east1"`
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Cross-service attributes for the location. For example
    {"cloud.googleapis.com/region": "us-east1"}

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    r"""Service-specific metadata. For example the available capacity at the
    given location.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  displayName = _messages.StringField(1)
  labels = _messages.MessageField('LabelsValue', 2)
  locationId = _messages.StringField(3)
  metadata = _messages.MessageField('MetadataValue', 4)
  name = _messages.StringField(5)


class LogConfig(_messages.Message):
  r"""Specifies what kind of log the caller must write

  Fields:
    cloudAudit: Cloud audit options.
    counter: Counter options.
    dataAccess: Data access options.
  """

  cloudAudit = _messages.MessageField('CloudAuditOptions', 1)
  counter = _messages.MessageField('CounterOptions', 2)
  dataAccess = _messages.MessageField('DataAccessOptions', 3)


class ManagedCertificate(_messages.Message):
  r"""Configuration and state of a Managed Certificate. Certificate Manager
  provisions and renews Managed Certificates automatically, for as long as
  it's authorized to do so.

  Enums:
    StateValueValuesEnum: Output only. State of the managed certificate
      resource.

  Fields:
    authorizationAttemptInfo: Output only. Detailed state of the latest
      authorization attempt for each domain specified for managed certificate
      resource.
    dnsAuthorizations: Immutable. Authorizations that will be used for
      performing domain authorization.
    domains: Immutable. The domains for which a managed SSL certificate will
      be generated. Wildcard domains are only supported with DNS challenge
      resolution.
    provisioningIssue: Information about issues with provisioning a Managed
      Certificate.
    state: Output only. State of the managed certificate resource.
  """

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. State of the managed certificate resource.

    Values:
      STATE_UNSPECIFIED: <no description>
      PROVISIONING: Certificate Manager attempts to provision or renew the
        certificate. If the process takes longer than expected, consult the
        `provisioning_issue` field.
      FAILED: Multiple certificate provisioning attempts failed and
        Certificate Manager gave up. To try again, delete and create a new
        managed Certificate resource. For details see the `provisioning_issue`
        field.
      ACTIVE: The certificate management is working, and a certificate has
        been provisioned.
    """
    STATE_UNSPECIFIED = 0
    PROVISIONING = 1
    FAILED = 2
    ACTIVE = 3

  authorizationAttemptInfo = _messages.MessageField('AuthorizationAttemptInfo', 1, repeated=True)
  dnsAuthorizations = _messages.StringField(2, repeated=True)
  domains = _messages.StringField(3, repeated=True)
  provisioningIssue = _messages.MessageField('ProvisioningIssue', 4)
  state = _messages.EnumField('StateValueValuesEnum', 5)


class Operation(_messages.Message):
  r"""This resource represents a long-running operation that is the result of
  a network API call.

  Messages:
    MetadataValue: Service-specific metadata associated with the operation. It
      typically contains progress information and common metadata such as
      create time. Some services might not provide such metadata. Any method
      that returns a long-running operation should document the metadata type,
      if any.
    ResponseValue: The normal response of the operation in case of success. If
      the original method returns no data on success, such as `Delete`, the
      response is `google.protobuf.Empty`. If the original method is standard
      `Get`/`Create`/`Update`, the response should be the resource. For other
      methods, the response should have the type `XxxResponse`, where `Xxx` is
      the original method name. For example, if the original method name is
      `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.

  Fields:
    done: If the value is `false`, it means the operation is still in
      progress. If `true`, the operation is completed, and either `error` or
      `response` is available.
    error: The error result of the operation in case of failure or
      cancellation.
    metadata: Service-specific metadata associated with the operation. It
      typically contains progress information and common metadata such as
      create time. Some services might not provide such metadata. Any method
      that returns a long-running operation should document the metadata type,
      if any.
    name: The server-assigned name, which is only unique within the same
      service that originally returns it. If you use the default HTTP mapping,
      the `name` should be a resource name ending with
      `operations/{unique_id}`.
    response: The normal response of the operation in case of success. If the
      original method returns no data on success, such as `Delete`, the
      response is `google.protobuf.Empty`. If the original method is standard
      `Get`/`Create`/`Update`, the response should be the resource. For other
      methods, the response should have the type `XxxResponse`, where `Xxx` is
      the original method name. For example, if the original method name is
      `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    r"""Service-specific metadata associated with the operation. It typically
    contains progress information and common metadata such as create time.
    Some services might not provide such metadata. Any method that returns a
    long-running operation should document the metadata type, if any.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class ResponseValue(_messages.Message):
    r"""The normal response of the operation in case of success. If the
    original method returns no data on success, such as `Delete`, the response
    is `google.protobuf.Empty`. If the original method is standard
    `Get`/`Create`/`Update`, the response should be the resource. For other
    methods, the response should have the type `XxxResponse`, where `Xxx` is
    the original method name. For example, if the original method name is
    `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.

    Messages:
      AdditionalProperty: An additional property for a ResponseValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a ResponseValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  done = _messages.BooleanField(1)
  error = _messages.MessageField('Status', 2)
  metadata = _messages.MessageField('MetadataValue', 3)
  name = _messages.StringField(4)
  response = _messages.MessageField('ResponseValue', 5)


class OperationMetadata(_messages.Message):
  r"""Represents the metadata of the long-running operation. Output only.

  Fields:
    apiVersion: API version used to start the operation.
    createTime: The time the operation was created.
    endTime: The time the operation finished running.
    requestedCancellation: Identifies whether the user has requested
      cancellation of the operation. Operations that have successfully been
      cancelled have Operation.error value with a google.rpc.Status.code of 1,
      corresponding to `Code.CANCELLED`.
    statusMessage: Human-readable status of the operation, if any.
    target: Server-defined resource path for the target of the operation.
    verb: Name of the verb executed by the operation.
  """

  apiVersion = _messages.StringField(1)
  createTime = _messages.StringField(2)
  endTime = _messages.StringField(3)
  requestedCancellation = _messages.BooleanField(4)
  statusMessage = _messages.StringField(5)
  target = _messages.StringField(6)
  verb = _messages.StringField(7)


class Policy(_messages.Message):
  r"""An Identity and Access Management (IAM) policy, which specifies access
  controls for Google Cloud resources. A `Policy` is a collection of
  `bindings`. A `binding` binds one or more `members` to a single `role`.
  Members can be user accounts, service accounts, Google groups, and domains
  (such as G Suite). A `role` is a named list of permissions; each `role` can
  be an IAM predefined role or a user-created custom role. For some types of
  Google Cloud resources, a `binding` can also specify a `condition`, which is
  a logical expression that allows access to a resource only if the expression
  evaluates to `true`. A condition can add constraints based on attributes of
  the request, the resource, or both. To learn which resources support
  conditions in their IAM policies, see the [IAM
  documentation](https://cloud.google.com/iam/help/conditions/resource-
  policies). **JSON example:** { "bindings": [ { "role":
  "roles/resourcemanager.organizationAdmin", "members": [
  "user:mike@example.com", "group:admins@example.com", "domain:google.com",
  "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role":
  "roles/resourcemanager.organizationViewer", "members": [
  "user:eve@example.com" ], "condition": { "title": "expirable access",
  "description": "Does not grant access after Sep 2020", "expression":
  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
  user:mike@example.com - group:admins@example.com - domain:google.com -
  serviceAccount:my-project-id@appspot.gserviceaccount.com role:
  roles/resourcemanager.organizationAdmin - members: - user:eve@example.com
  role: roles/resourcemanager.organizationViewer condition: title: expirable
  access description: Does not grant access after Sep 2020 expression:
  request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= -
  version: 3 For a description of IAM and its features, see the [IAM
  documentation](https://cloud.google.com/iam/docs/).

  Fields:
    auditConfigs: Specifies cloud audit logging configuration for this policy.
    bindings: Associates a list of `members` to a `role`. Optionally, may
      specify a `condition` that determines how and when the `bindings` are
      applied. Each of the `bindings` must contain at least one member.
    etag: `etag` is used for optimistic concurrency control as a way to help
      prevent simultaneous updates of a policy from overwriting each other. It
      is strongly suggested that systems make use of the `etag` in the read-
      modify-write cycle to perform policy updates in order to avoid race
      conditions: An `etag` is returned in the response to `getIamPolicy`, and
      systems are expected to put that etag in the request to `setIamPolicy`
      to ensure that their change will be applied to the same version of the
      policy. **Important:** If you use IAM Conditions, you must include the
      `etag` field whenever you call `setIamPolicy`. If you omit this field,
      then IAM allows you to overwrite a version `3` policy with a version `1`
      policy, and all of the conditions in the version `3` policy are lost.
    iamOwned: A boolean attribute.
    rules: If more than one rule is specified, the rules are applied in the
      following manner: - All matching LOG rules are always applied. - If any
      DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be
      applied if one or more matching rule requires logging. - Otherwise, if
      any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging
      will be applied if one or more matching rule requires logging. -
      Otherwise, if no rule applies, permission is denied.
    version: Specifies the format of the policy. Valid values are `0`, `1`,
      and `3`. Requests that specify an invalid value are rejected. Any
      operation that affects conditional role bindings must specify version
      `3`. This requirement applies to the following operations: * Getting a
      policy that includes a conditional role binding * Adding a conditional
      role binding to a policy * Changing a conditional role binding in a
      policy * Removing any role binding, with or without a condition, from a
      policy that includes conditions **Important:** If you use IAM
      Conditions, you must include the `etag` field whenever you call
      `setIamPolicy`. If you omit this field, then IAM allows you to overwrite
      a version `3` policy with a version `1` policy, and all of the
      conditions in the version `3` policy are lost. If a policy does not
      include any conditions, operations on that policy may specify any valid
      version or leave the field unset. To learn which resources support
      conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
  """

  auditConfigs = _messages.MessageField('AuditConfig', 1, repeated=True)
  bindings = _messages.MessageField('Binding', 2, repeated=True)
  etag = _messages.BytesField(3)
  iamOwned = _messages.BooleanField(4)
  rules = _messages.MessageField('Rule', 5, repeated=True)
  version = _messages.IntegerField(6, variant=_messages.Variant.INT32)


class ProvisioningIssue(_messages.Message):
  r"""Information about issues with provisioning a Managed Certificate.

  Enums:
    ReasonValueValuesEnum: Reason for provisioning failures.

  Fields:
    details: Human readable explanation about the issue. Provided to help
      address the configuration issues. Not guaranteed to be stable. For
      programmatic access use Reason enum.
    reason: Reason for provisioning failures.
  """

  class ReasonValueValuesEnum(_messages.Enum):
    r"""Reason for provisioning failures.

    Values:
      REASON_UNSPECIFIED: <no description>
      AUTHORIZATION_ISSUE: Certificate provisioning failed due to an issue
        with one or more of the domains on the certificate. For details of
        which domains failed, consult the `authorization_attempt_info` field.
      RATE_LIMITED: Exceeded Certificate Authority quotas or internal rate
        limits of the system. Provisioning may take longer to complete.
    """
    REASON_UNSPECIFIED = 0
    AUTHORIZATION_ISSUE = 1
    RATE_LIMITED = 2

  details = _messages.StringField(1)
  reason = _messages.EnumField('ReasonValueValuesEnum', 2)


class Reference(_messages.Message):
  r"""Represents a reference to a resource.

  Messages:
    DetailsValueListEntry: A DetailsValueListEntry object.

  Fields:
    createTime: Output only. The creation time.
    details: Details of the reference type with no implied semantics.
      Cumulative size of the field must not be more than 1KiB. Note: For the
      Arcus Reference API, you must add the proto you store in this field to
      http://cs/symbol:cloud.cluster.reference.ReferencePayload
    name: Output only. Resource name of the reference. Includes target
      resource as a parent and reference uid
      `{target_resource}/references/{reference_id}`. For example,
      `projects/{my-project}/locations/{location}/instances/{my-
      instance}/references/{xyz}`.
    sourceResource: Required. Full resource name of the resource which refers
      the target resource. For example:
      //tpu.googleapis.com/projects/myproject/nodes/mynode
    type: Required. Type of the reference. A service might impose limits on
      number of references of a specific type.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class DetailsValueListEntry(_messages.Message):
    r"""A DetailsValueListEntry object.

    Messages:
      AdditionalProperty: An additional property for a DetailsValueListEntry
        object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a DetailsValueListEntry object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  details = _messages.MessageField('DetailsValueListEntry', 2, repeated=True)
  name = _messages.StringField(3)
  sourceResource = _messages.StringField(4)
  type = _messages.StringField(5)


class Rule(_messages.Message):
  r"""A rule to be applied in a Policy.

  Enums:
    ActionValueValuesEnum: Required

  Fields:
    action: Required
    conditions: Additional restrictions that must be met. All conditions must
      pass for the rule to match.
    description: Human-readable description of the rule.
    in_: If one or more 'in' clauses are specified, the rule matches if the
      PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
    logConfig: The config returned to callers of tech.iam.IAM.CheckPolicy for
      any entries that match the LOG action.
    notIn: If one or more 'not_in' clauses are specified, the rule matches if
      the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries. The format
      for in and not_in entries can be found at in the Local IAM documentation
      (see go/local-iam#features).
    permissions: A permission is a string of form '..' (e.g.,
      'storage.buckets.list'). A value of '*' matches all permissions, and a
      verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.
  """

  class ActionValueValuesEnum(_messages.Enum):
    r"""Required

    Values:
      NO_ACTION: Default no action.
      ALLOW: Matching 'Entries' grant access.
      ALLOW_WITH_LOG: Matching 'Entries' grant access and the caller promises
        to log the request per the returned log_configs.
      DENY: Matching 'Entries' deny access.
      DENY_WITH_LOG: Matching 'Entries' deny access and the caller promises to
        log the request per the returned log_configs.
      LOG: Matching 'Entries' tell IAM.Check callers to generate logs.
    """
    NO_ACTION = 0
    ALLOW = 1
    ALLOW_WITH_LOG = 2
    DENY = 3
    DENY_WITH_LOG = 4
    LOG = 5

  action = _messages.EnumField('ActionValueValuesEnum', 1)
  conditions = _messages.MessageField('Condition', 2, repeated=True)
  description = _messages.StringField(3)
  in_ = _messages.StringField(4, repeated=True)
  logConfig = _messages.MessageField('LogConfig', 5, repeated=True)
  notIn = _messages.StringField(6, repeated=True)
  permissions = _messages.StringField(7, repeated=True)


class SelfManagedCertificate(_messages.Message):
  r"""Certificate data for a SelfManaged Certificate. SelfManaged Certificates
  are uploaded by the user. Updating such certificates before they expire
  remains the user's responsibility.

  Fields:
    certificatePem: Input only. The certificate chain in PEM-encoded form.
      Leaf certificate comes first, followed by intermediate ones if any.
    privateKeyPem: Input only. The private key of the leaf certificate in PEM-
      encoded form.
  """

  certificatePem = _messages.StringField(1)
  privateKeyPem = _messages.StringField(2)


class SetIamPolicyRequest(_messages.Message):
  r"""Request message for `SetIamPolicy` method.

  Fields:
    policy: REQUIRED: The complete policy to be applied to the `resource`. The
      size of the policy is limited to a few 10s of KB. An empty policy is a
      valid policy but certain Cloud Platform services (such as Projects)
      might reject them.
    updateMask: OPTIONAL: A FieldMask specifying which fields of the policy to
      modify. Only the fields in the mask will be modified. If no mask is
      provided, the following default mask is used: `paths: "bindings, etag"`
  """

  policy = _messages.MessageField('Policy', 1)
  updateMask = _messages.StringField(2)


class StandardQueryParameters(_messages.Message):
  r"""Query parameters accepted by all methods.

  Enums:
    FXgafvValueValuesEnum: V1 error format.
    AltValueValuesEnum: Data format for response.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    uploadType: Legacy upload protocol for media (e.g. "media", "multipart").
    upload_protocol: Upload protocol for media (e.g. "raw", "multipart").
  """

  class AltValueValuesEnum(_messages.Enum):
    r"""Data format for response.

    Values:
      json: Responses with Content-Type of application/json
      media: Media download with context-dependent Content-Type
      proto: Responses with Content-Type of application/x-protobuf
    """
    json = 0
    media = 1
    proto = 2

  class FXgafvValueValuesEnum(_messages.Enum):
    r"""V1 error format.

    Values:
      _1: v1 error format
      _2: v2 error format
    """
    _1 = 0
    _2 = 1

  f__xgafv = _messages.EnumField('FXgafvValueValuesEnum', 1)
  access_token = _messages.StringField(2)
  alt = _messages.EnumField('AltValueValuesEnum', 3, default='json')
  callback = _messages.StringField(4)
  fields = _messages.StringField(5)
  key = _messages.StringField(6)
  oauth_token = _messages.StringField(7)
  prettyPrint = _messages.BooleanField(8, default=True)
  quotaUser = _messages.StringField(9)
  trace = _messages.StringField(10)
  uploadType = _messages.StringField(11)
  upload_protocol = _messages.StringField(12)


class Status(_messages.Message):
  r"""The `Status` type defines a logical error model that is suitable for
  different programming environments, including REST APIs and RPC APIs. It is
  used by [gRPC](https://github.com/grpc). Each `Status` message contains
  three pieces of data: error code, error message, and error details. You can
  find out more about this error model and how to work with it in the [API
  Design Guide](https://cloud.google.com/apis/design/errors).

  Messages:
    DetailsValueListEntry: A DetailsValueListEntry object.

  Fields:
    code: The status code, which should be an enum value of google.rpc.Code.
    details: A list of messages that carry the error details. There is a
      common set of message types for APIs to use.
    message: A developer-facing error message, which should be in English. Any
      user-facing error message should be localized and sent in the
      google.rpc.Status.details field, or localized by the client.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class DetailsValueListEntry(_messages.Message):
    r"""A DetailsValueListEntry object.

    Messages:
      AdditionalProperty: An additional property for a DetailsValueListEntry
        object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a DetailsValueListEntry object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  code = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  details = _messages.MessageField('DetailsValueListEntry', 2, repeated=True)
  message = _messages.StringField(3)


class TestIamPermissionsRequest(_messages.Message):
  r"""Request message for `TestIamPermissions` method.

  Fields:
    permissions: The set of permissions to check for the `resource`.
      Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
      For more information see [IAM
      Overview](https://cloud.google.com/iam/docs/overview#permissions).
  """

  permissions = _messages.StringField(1, repeated=True)


class TestIamPermissionsResponse(_messages.Message):
  r"""Response message for `TestIamPermissions` method.

  Fields:
    permissions: A subset of `TestPermissionsRequest.permissions` that the
      caller is allowed.
  """

  permissions = _messages.StringField(1, repeated=True)


encoding.AddCustomJsonFieldMapping(
    Rule, 'in_', 'in')
encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_1', '1')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_2', '2')
