{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "alloydb:v1alpha1",
  "name": "alloydb",
  "canonicalName": "Cloud AlloyDB Admin",
  "version": "v1alpha1",
  "revision": "0",
  "title": "AlloyDB API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/alloydb/",
  "protocol": "rest",
  "rootUrl": "https://alloydb.googleapis.com/",
  "mtlsRootUrl": "https://alloydb.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://alloydb.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListClustersResponse": {
      "id": "ListClustersResponse",
      "description": "Message for response to listing Clusters",
      "type": "object",
      "properties": {
        "clusters": {
          "description": "The list of Cluster",
          "type": "array",
          "items": {
            "$ref": "Cluster"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cluster": {
      "id": "Cluster",
      "description": "Message describing Cluster object NEXT_ID: 14",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the cluster resource with the format: * projects\/{project}\/locations\/{region}\/clusters\/{cluster_id} where the cluster ID segment should satisfy the regex expression \"[a-z]([a-z0-9-]{0,61}[a-z0-9])?\", e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https:\/\/google.aip.dev\/122. The prefix of the cluster resource name is the name of the parent resource: * projects\/{project}\/locations\/{region}",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. The current serving state of the cluster.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state of the cluster is unknown.",
            "The cluster is active and running.",
            "The cluster is stopped. All instances in the cluster are stopped. Customers can start a stopped cluster at any point and all their instances will come back to life with same names and IP resources. In this state, customer pays for storage.",
            "The cluster is empty and has no associated resources. All instances, associated storage and backups have been deleted.",
            "The cluster is being created.",
            "The cluster is being deleted.",
            "The creation of the cluster failed.",
            "The cluster is bootstrapping with data from some other source. Direct mutations to the cluster (e.g. adding read pool) are not allowed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "STOPPED",
            "EMPTY",
            "CREATING",
            "DELETING",
            "FAILED",
            "BOOTSTRAPPING"
          ]
        },
        "databaseVersion": {
          "description": "Output only. The database engine major version. This is an output-only field and it's populated at the Cluster creation time. This field cannot be changed after cluster creation.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is Postgres 13.",
            "The database version is Postgres 14."
          ],
          "enum": [
            "DATABASE_VERSION_UNSPECIFIED",
            "POSTGRES_13",
            "POSTGRES_14"
          ]
        },
        "network": {
          "description": "The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: \"projects\/{project_number}\/global\/networks\/{network_id}\". This is required to create a cluster. It can be updated, but it cannot be removed.",
          "type": "string"
        },
        "initialUser": {
          "description": "Input only. Initial user to setup during cluster creation. Required. If used in `RestoreCluster` this is ignored. We intend to deprecate this post private preview, once we have separate User resources.",
          "$ref": "UserPassword"
        },
        "migrationSource": {
          "readOnly": true,
          "$ref": "MigrationSource"
        }
      }
    },
    "UserPassword": {
      "id": "UserPassword",
      "description": "The username\/password for a database user. Used for specifying initial users at cluster creation time.",
      "type": "object",
      "properties": {
        "user": {
          "description": "The database username.",
          "type": "string"
        },
        "password": {
          "description": "The initial password for the user.",
          "type": "string"
        }
      }
    },
    "MigrationSource": {
      "id": "MigrationSource",
      "description": "Subset of the source instance configuration that is available when reading the cluster resource. NEXT_ID: 4",
      "type": "object",
      "properties": {
        "hostPort": {
          "description": "Output only. The host and port of the on-premises instance in host:port format",
          "readOnly": true,
          "type": "string"
        },
        "referenceId": {
          "description": "Output only. Place holder for the external source identifier(e.g DMS job name) that created the cluster.",
          "readOnly": true,
          "type": "string"
        },
        "sourceType": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "",
            "DMS source means the cluster was created via DMS migration job."
          ],
          "enum": [
            "MIGRATION_SOURCE_TYPE_UNSPECIFIED",
            "DMS"
          ]
        }
      }
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "description": "Message for response to listing Instances",
      "type": "object",
      "properties": {
        "instances": {
          "description": "The list of Instance",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Instance": {
      "id": "Instance",
      "description": "Message describing Instance object NEXT ID: 15",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the instance resource with the format: * projects\/{project}\/locations\/{region}\/clusters\/{cluster_id}\/instances\/{instance_id} where the cluster and instance ID segments should satisfy the regex expression \"[a-z]([a-z0-9-]{0,61}[a-z0-9])?\", e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https:\/\/google.aip.dev\/122. The prefix of the instance resource name is the name of the parent resource: * projects\/{project}\/locations\/{region}\/clusters\/{cluster_id}",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "instanceType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "PRIMARY instances support read and write operations.",
            "READ_POOL instances support read operations only. Each read pool instance consists of one or more homogeneous nodes. * Read pool of size 1 can only have zonal availability. * Read pools with node count of 2 or more can have regional availability (nodes are present in 2 or more zones in a region)."
          ],
          "enum": [
            "INSTANCE_TYPE_UNSPECIFIED",
            "PRIMARY",
            "READ_POOL"
          ]
        },
        "state": {
          "description": "Output only. The current serving state of the instance.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state of the instance is unknown.",
            "The instance is active and running.",
            "The instance is stopped. Instance name and IP resources are preserved.",
            "The instance is being created.",
            "The instance is being deleted.",
            "The instance is down for maintenance.",
            "The creation of the instance failed or a fatal error occurred during an operation on the instance. Note: Instances in this state would tried to be auto-repaired. And Customers should be able to restart, update or delete these instances.",
            "Index 7 is used in the producer apis for ROLLED_BACK state. Keeping that index unused in case that state also needs to exposed via consumer apis in future. The instance has been configured to sync data from some other source."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "STOPPED",
            "CREATING",
            "DELETING",
            "MAINTENANCE",
            "FAILED",
            "BOOTSTRAPPING"
          ]
        },
        "machineConfig": {
          "description": "Configurations for the machines that host the underlying database engine.",
          "$ref": "MachineConfig"
        },
        "availabilityType": {
          "description": "Availability type of an Instance. Defaults to REGIONAL for both primary and read instances. Note that primary and read instances can have different availability types.",
          "type": "string",
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal available instance.",
            "Regional (or Highly) available instance."
          ],
          "enum": [
            "AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ]
        },
        "gceZone": {
          "description": "The GCE zone that the instance should serve from. Optional. This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a ZONAL instance, instance is created in a random zone with available capacity.",
          "type": "string"
        },
        "networkConfig": {
          "description": "The settings for Network \/ IP Management. This allows to enable\/disable public IP, enable\/disable SSL and manage which external networks can connect to the instance.",
          "$ref": "NetworkConfig"
        },
        "databaseFlags": {
          "description": "Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read instance. Flags set on read instance may or may not be present on primary. ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "readPoolConfig": {
          "description": "Read pool specific config.",
          "$ref": "ReadPoolConfig"
        },
        "ipAddress": {
          "description": "Output only. The IP address for the Instance. This is the connection endpoint for an end-user application.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "MachineConfig": {
      "id": "MachineConfig",
      "description": "MachineConfig describes the configuration of a machine.",
      "type": "object",
      "properties": {
        "cpuCount": {
          "description": "The number of CPU's in the VM instance.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NetworkConfig": {
      "id": "NetworkConfig",
      "description": "Network Management configuration.",
      "type": "object",
      "properties": {
        "publicIpEnabled": {
          "description": "Whether the instance is assigned a public IP address or not.",
          "type": "boolean"
        },
        "sslRequired": {
          "description": "Whether SSL connections over IP are enforced or not.",
          "type": "boolean"
        }
      }
    },
    "ReadPoolConfig": {
      "id": "ReadPoolConfig",
      "description": "Configuration for a read pool instance.",
      "type": "object",
      "properties": {
        "nodeCount": {
          "description": "Read capacity, i.e. number of nodes in a read pool instance.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FailoverInstanceRequest": {
      "id": "FailoverInstanceRequest",
      "description": "Message for triggering failover on an Instance",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "validateOnly": {
          "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
          "type": "boolean"
        }
      }
    },
    "RestartInstanceRequest": {
      "id": "RestartInstanceRequest",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "validateOnly": {
          "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
          "type": "boolean"
        }
      }
    },
    "ListBackupsResponse": {
      "id": "ListBackupsResponse",
      "description": "Message for response to listing Backups",
      "type": "object",
      "properties": {
        "backups": {
          "description": "The list of Backup",
          "type": "array",
          "items": {
            "$ref": "Backup"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Backup": {
      "id": "Backup",
      "description": "Message describing Backup object",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the backup resource with the format: * projects\/{project}\/locations\/{region}\/backups\/{backup_id} where the cluster and backup ID segments should satisfy the regex expression \"[a-z]([a-z0-9-]{0,61}[a-z0-9])?\", e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https:\/\/google.aip.dev\/122. The prefix of the backup resource name is the name of the parent resource: * projects\/{project}\/locations\/{region}",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. The current state of the backup.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state of the backup is unknown.",
            "The backup is ready.",
            "The backup is creating.",
            "The backup failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "CREATING",
            "FAILED"
          ]
        },
        "type": {
          "description": "The backup type, which suggests the trigger for the backup.",
          "type": "string",
          "enumDescriptions": [
            "",
            "ON_DEMAND backups that were triggered by the customer (e.g., not AUTOMATED).",
            "AUTOMATED backups triggered by the managed backups scheduler pursuant to a managed backup policy."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "ON_DEMAND",
            "AUTOMATED"
          ]
        },
        "description": {
          "description": "Optional. User-provided description of the backup.",
          "type": "string"
        },
        "clusterName": {
          "description": "Required. The backup source cluster.",
          "type": "string"
        }
      }
    },
    "ListSupportedDatabaseFlagsResponse": {
      "id": "ListSupportedDatabaseFlagsResponse",
      "description": "Message for response to listing SupportedDatabaseFlags.",
      "type": "object",
      "properties": {
        "supportedDatabaseFlags": {
          "description": "The list of SupportedDatabaseFlags.",
          "type": "array",
          "items": {
            "$ref": "SupportedDatabaseFlag"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        }
      }
    },
    "SupportedDatabaseFlag": {
      "id": "SupportedDatabaseFlag",
      "description": "SupportedDatabaseFlag gives general information about a database flag, like type and allowed values. This is a static value that is defined on the server side, and it cannot be modified by callers. To set the Database flags on a particular Instance, a caller should modify the Instance.database_flags field.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the flag resource, following GCP conventions, e.g.: * projects\/{project}\/locations\/{location}\/flags\/{flag_id} This field currently has no semantic meaning.",
          "type": "string"
        },
        "flagName": {
          "description": "The name of the database flag, e.g. \"max_allowed_packets\". The is a possibly key for the Instance.database_flags map field.",
          "type": "string"
        },
        "valueType": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown flag type.",
            "String type flag.",
            "Integer type flag.",
            "Float type flag.",
            "Denotes that the flag does not accept any values."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "STRING",
            "INTEGER",
            "FLOAT",
            "NONE"
          ]
        },
        "acceptsMultipleValues": {
          "description": "Whether the database flag accepts multiple values. If true, a comma-separated list of stringified values may be specified.",
          "type": "boolean"
        },
        "supportedDbVersions": {
          "description": "Major database engine versions for which this flag is supported.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "This is an unknown database version.",
              "The database version is Postgres 13.",
              "The database version is Postgres 14."
            ],
            "enum": [
              "DATABASE_VERSION_UNSPECIFIED",
              "POSTGRES_13",
              "POSTGRES_14"
            ]
          }
        },
        "requiresDbRestart": {
          "description": "Whether setting or updating this flag on an Instance requires a database restart. If a flag that requires database restart is set, the backend will automatically restart the database (making sure to satisfy any availability SLO's).",
          "type": "boolean"
        },
        "stringRestrictions": {
          "$ref": "StringRestrictions"
        },
        "integerRestrictions": {
          "$ref": "IntegerRestrictions"
        }
      }
    },
    "StringRestrictions": {
      "id": "StringRestrictions",
      "description": "Restrictions on STRING type values",
      "type": "object",
      "properties": {
        "allowedValues": {
          "description": "The list of allowed values, if bounded. This field will be empty if there is a unbounded number of allowed values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IntegerRestrictions": {
      "id": "IntegerRestrictions",
      "description": "Restrictions on INTEGER type values.",
      "type": "object",
      "properties": {
        "minValue": {
          "description": "The minimum value that can be specified, if applicable.",
          "type": "string",
          "format": "int64"
        },
        "maxValue": {
          "description": "The maximum value that can be specified, if applicable.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "alloydb.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "alloydb.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "alloydb.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "alloydb.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "alloydb.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "alloydb.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "clusters": {
              "methods": {
                "list": {
                  "id": "alloydb.projects.locations.clusters.list",
                  "path": "v1alpha1/{+parent}/clusters",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource. For the required format, see the comment on the Cluster.name field. Additionally, you can perform an aggregated list operation by specifying a value with the following format: * projects\/{project}\/locations\/-",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Clusters in a given project and location."
                },
                "get": {
                  "id": "alloydb.projects.locations.clusters.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the resource. For the required format, see the comment on the Cluster.name field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Cluster"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Cluster."
                },
                "create": {
                  "id": "alloydb.projects.locations.clusters.create",
                  "path": "v1alpha1/{+parent}/clusters",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource. For the required format, see the comment on the Cluster.name field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and cluster_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Cluster in a given project and location."
                },
                "patch": {
                  "id": "alloydb.projects.locations.clusters.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the cluster resource with the format: * projects\/{project}\/locations\/{region}\/clusters\/{cluster_id} where the cluster ID segment should satisfy the regex expression \"[a-z]([a-z0-9-]{0,61}[a-z0-9])?\", e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https:\/\/google.aip.dev\/122. The prefix of the cluster resource name is the name of the parent resource: * projects\/{project}\/locations\/{region}",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the Cluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Cluster."
                },
                "delete": {
                  "id": "alloydb.projects.locations.clusters.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the resource. For the required format, see the comment on the Cluster.name field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. Whether to cascade delete child instances for given cluster.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Cluster."
                },
                "import": {
                  "id": "alloydb.projects.locations.clusters.import",
                  "path": "v1alpha1/{+parent}/clusters:import",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters:import",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource. For the required format, see the comment on the Cluster.name field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and cluster_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "backupSource.backupName": {
                      "description": "Required. The name of the backup resource with the format: * projects\/{project}\/locations\/{region}\/backups\/{backup_id}",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": ""
                },
                "restore": {
                  "id": "alloydb.projects.locations.clusters.restore",
                  "path": "v1alpha1/{+parent}/clusters:restore",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters:restore",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource. For the required format, see the comment on the Cluster.name field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and cluster_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "backupSource.backupName": {
                      "description": "Required. The name of the backup resource with the format: * projects\/{project}\/locations\/{region}\/backups\/{backup_id}",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Cluster in a given project and location, with a volume restored from the provided backup ID."
                }
              }
              ,
              "resources": {
                "instances": {
                  "methods": {
                    "list": {
                      "id": "alloydb.projects.locations.clusters.instances.list",
                      "path": "v1alpha1/{+parent}/instances",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the parent resource. For the required format, see the comment on the Instance.name field. Additionally, you can perform an aggregated list operation by specifying a value with one of the following formats: * projects\/{project}\/locations\/-\/clusters\/- * projects\/{project}\/locations\/{region}\/clusters\/-",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. Filtering results",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. Hint for how to order the results",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListInstancesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Instances in a given project and location."
                    },
                    "get": {
                      "id": "alloydb.projects.locations.clusters.instances.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the resource. For the required format, see the comment on the Instance.name field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+\/instances\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Instance"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Instance."
                    },
                    "create": {
                      "id": "alloydb.projects.locations.clusters.instances.create",
                      "path": "v1alpha1/{+parent}/instances",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the parent resource. For the required format, see the comment on the Instance.name field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "instanceId": {
                          "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and instance_id from the method_signature of Create RPC",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Instance"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new Instance in a given project and location."
                    },
                    "patch": {
                      "id": "alloydb.projects.locations.clusters.instances.patch",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Output only. The name of the instance resource with the format: * projects\/{project}\/locations\/{region}\/clusters\/{cluster_id}\/instances\/{instance_id} where the cluster and instance ID segments should satisfy the regex expression \"[a-z]([a-z0-9-]{0,61}[a-z0-9])?\", e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https:\/\/google.aip.dev\/122. The prefix of the instance resource name is the name of the parent resource: * projects\/{project}\/locations\/{region}\/clusters\/{cluster_id}",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+\/instances\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Optional. Field mask is used to specify the fields to be overwritten in the Instance resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Instance"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the parameters of a single Instance."
                    },
                    "delete": {
                      "id": "alloydb.projects.locations.clusters.instances.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the resource. For the required format, see the comment on the Instance.name field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+\/instances\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single Instance."
                    },
                    "failover": {
                      "id": "alloydb.projects.locations.clusters.instances.failover",
                      "path": "v1alpha1/{+name}:failover",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}:failover",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the resource. For the required format, see the comment on the Instance.name field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+\/instances\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "FailoverInstanceRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Forces a Failover for a highly available instance. Failover promotes the HA standby instance as the new primary."
                    },
                    "restart": {
                      "id": "alloydb.projects.locations.clusters.instances.restart",
                      "path": "v1alpha1/{+name}:restart",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/instances/{instancesId}:restart",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the resource. For the required format, see the comment on the Instance.name field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/clusters\/[^\/]+\/instances\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "RestartInstanceRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Restart an Instance in a cluster."
                    }
                  }
                }
              }
            },
            "backups": {
              "methods": {
                "list": {
                  "id": "alloydb.projects.locations.backups.list",
                  "path": "v1alpha1/{+parent}/backups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/backups",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListBackupsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListBackupsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Backups in a given project and location."
                },
                "get": {
                  "id": "alloydb.projects.locations.backups.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/backups/{backupsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/backups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Backup"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Backup."
                },
                "create": {
                  "id": "alloydb.projects.locations.backups.create",
                  "path": "v1alpha1/{+parent}/backups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/backups",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "backupId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and backup_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Backup"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Backup in a given project and location."
                },
                "patch": {
                  "id": "alloydb.projects.locations.backups.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/backups/{backupsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the backup resource with the format: * projects\/{project}\/locations\/{region}\/backups\/{backup_id} where the cluster and backup ID segments should satisfy the regex expression \"[a-z]([a-z0-9-]{0,61}[a-z0-9])?\", e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https:\/\/google.aip.dev\/122. The prefix of the backup resource name is the name of the parent resource: * projects\/{project}\/locations\/{region}",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/backups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the Backup resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Backup"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Backup."
                },
                "delete": {
                  "id": "alloydb.projects.locations.backups.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/backups/{backupsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource. For the required format, see the comment on the Backup.name field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/backups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, the backend validates the request, but doesn't actually execute it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Backup."
                }
              }
            },
            "supportedDatabaseFlags": {
              "methods": {
                "list": {
                  "id": "alloydb.projects.locations.supportedDatabaseFlags.list",
                  "path": "v1alpha1/{+parent}/supportedDatabaseFlags",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/supportedDatabaseFlags",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource. The required format is: * projects\/{project}\/locations\/{location} Regardless of the parent specified here, as long it is contains a valid project and location, the service will return a static list of supported flags resources. Note that we do not not yet support region-specific flags (see b\/211502903).",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSupportedDatabaseFlagsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists SupportedDatabaseFlags for a given project and location."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}