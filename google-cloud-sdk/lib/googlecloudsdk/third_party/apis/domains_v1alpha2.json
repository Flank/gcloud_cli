{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "domains:v1alpha2",
  "name": "domains",
  "canonicalName": "Cloud Domains",
  "version": "v1alpha2",
  "revision": "0",
  "title": "Cloud Domains API",
  "description": "Enables management and configuration of domain names.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/cloud-domains/",
  "protocol": "rest",
  "rootUrl": "https://domains.googleapis.com/",
  "mtlsRootUrl": "https://domains.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://domains.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`\/`Create`\/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "SearchDomainsResponse": {
      "id": "SearchDomainsResponse",
      "description": "Response for the `SearchDomains` method.",
      "type": "object",
      "properties": {
        "registerParameters": {
          "description": "Results of the domain name search.",
          "type": "array",
          "items": {
            "$ref": "RegisterParameters"
          }
        }
      }
    },
    "RegisterParameters": {
      "id": "RegisterParameters",
      "description": "Parameters required to register a new domain.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name. Unicode domain names are expressed in Punycode format.",
          "type": "string"
        },
        "availability": {
          "description": "Indicates whether the domain is available for registration. This value is\naccurate when obtained by calling `RetrieveRegisterParameters`, but is\napproximate when obtained by calling `SearchDomains`.",
          "enumDescriptions": [
            "The availability is unspecified.",
            "The domain is available for registration.",
            "The domain is not available for registration. Generally this means it is\nalready registered to another party.",
            "The domain is not currently supported by Cloud Domains, but may\nbe available elsewhere.",
            "Cloud Domains is unable to determine domain availability, generally\ndue to system maintenance at the domain name registry."
          ],
          "type": "string",
          "enum": [
            "AVAILABILITY_UNSPECIFIED",
            "AVAILABLE",
            "UNAVAILABLE",
            "UNSUPPORTED",
            "UNKNOWN"
          ]
        },
        "supportedPrivacy": {
          "description": "Contact privacy options that the domain supports.",
          "enumDescriptions": [
            "The contact privacy settings are undefined.",
            "All the data from `ContactSettings` is publicly available. When setting\nthis option, you must also provide a\n`PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the\nrequest.",
            "None of the data from `ContactSettings` is publicly available. Instead,\nproxy contact data is published for your domain. Email sent to the proxy\nemail address is forwarded to the registrant's email address. Cloud Domains\nprovides this privacy proxy service at no additional cost.",
            "Some data from `ContactSettings` is publicly available. The actual\ninformation redacted depends on the domain. For details, see [the\nregistration privacy\narticle](https:\/\/support.google.com\/domains\/answer\/3251242)."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CONTACT_PRIVACY_UNSPECIFIED",
              "PUBLIC_CONTACT_DATA",
              "PRIVATE_CONTACT_DATA",
              "REDACTED_CONTACT_DATA"
            ]
          }
        },
        "domainNotices": {
          "description": "Notices about special properties of the domain.",
          "enumDescriptions": [
            "The notice is undefined.",
            "Indicates that the domain is preloaded on the HTTP Strict Transport\nSecurity list in browsers. Serving a website on such domain requires\nan SSL certificate. For details, see\n[how to get an SSL\ncertificate](https:\/\/support.google.com\/domains\/answer\/7638036)."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "DOMAIN_NOTICE_UNSPECIFIED",
              "HSTS_PRELOADED"
            ]
          }
        },
        "yearlyPrice": {
          "description": "Price to register or renew the domain for one year.",
          "$ref": "Money"
        }
      }
    },
    "Money": {
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The 3-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RetrieveRegisterParametersResponse": {
      "id": "RetrieveRegisterParametersResponse",
      "description": "Response for the `RetrieveRegisterParameters` method.",
      "type": "object",
      "properties": {
        "registerParameters": {
          "description": "Parameters to use when calling the `RegisterDomain` method.",
          "$ref": "RegisterParameters"
        }
      }
    },
    "RegisterDomainRequest": {
      "id": "RegisterDomainRequest",
      "description": "Request for the `RegisterDomain` method.",
      "type": "object",
      "properties": {
        "registration": {
          "description": "Required. The complete `Registration` resource to be created.",
          "$ref": "Registration"
        },
        "domainNotices": {
          "description": "The list of domain notices that you acknowledge. Call\n`RetrieveRegisterParameters` to see the notices that need acknowledgement.",
          "enumDescriptions": [
            "The notice is undefined.",
            "Indicates that the domain is preloaded on the HTTP Strict Transport\nSecurity list in browsers. Serving a website on such domain requires\nan SSL certificate. For details, see\n[how to get an SSL\ncertificate](https:\/\/support.google.com\/domains\/answer\/7638036)."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "DOMAIN_NOTICE_UNSPECIFIED",
              "HSTS_PRELOADED"
            ]
          }
        },
        "contactNotices": {
          "description": "The list of contact notices that the caller acknowledges. The notices\nrequired here depend on the values specified in\n`registration.contact_settings`.",
          "enumDescriptions": [
            "The notice is undefined.",
            "Required when setting the `privacy` field of `ContactSettings` to\n`PUBLIC_CONTACT_DATA`, which exposes contact data publicly."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CONTACT_NOTICE_UNSPECIFIED",
              "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT"
            ]
          }
        },
        "yearlyPrice": {
          "description": "Required. Yearly price to register or renew the domain.\nThe value that should be put here can be obtained from\nRetrieveRegisterParameters or SearchDomains calls.",
          "$ref": "Money"
        },
        "validateOnly": {
          "description": "When true, only validation will be performed, without actually registering\nthe domain. Follows:\nhttps:\/\/cloud.google.com\/apis\/design\/design_patterns#request_validation",
          "type": "boolean"
        }
      }
    },
    "Registration": {
      "id": "Registration",
      "description": "The `Registration` resource facilitates managing and configuring domain name\nregistrations.\n\n\nTo create a new `Registration` resource, find a suitable domain name by\ncalling the `SearchDomains` method with a query to see available domain name\noptions. After choosing a name, call `RetrieveRegisterParameters` to\nensure availability and obtain information like pricing, which is needed to\nbuild a call to `RegisterDomain`.\n",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Name of the `Registration` resource, in the format\n`projects\/*\/locations\/*\/registrations\/<domain_name>`.",
          "type": "string"
        },
        "domainName": {
          "description": "Required. Immutable. The domain name. Unicode domain names must be expressed in Punycode format.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation timestamp of the `Registration` resource.",
          "type": "string",
          "format": "google-datetime"
        },
        "expireTime": {
          "description": "Output only. The expiration timestamp of the `Registration`.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. The state of the `Registration`",
          "enumDescriptions": [
            "The state is undefined.",
            "The domain is being registered.",
            "The domain registration failed. You can delete resources in this state\nto allow registration to be retried.",
            "The domain is registered and operational. The domain renews automatically\nas long as it remains in this state.",
            "The domain is suspended and inoperative. For more details, see the\n`issues` field.",
            "The domain has been exported from Cloud Domains to\n[Google Domains](https:\/\/domains.google\/). You can no longer update it\nwith this API, and information shown about it may be stale. Without further action, domains in this\nstate expire at their `expire_time`. You can delete the resource\nafter the `expire_time` has passed."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REGISTRATION_PENDING",
            "REGISTRATION_FAILED",
            "ACTIVE",
            "SUSPENDED",
            "EXPORTED"
          ]
        },
        "issues": {
          "description": "Output only. The set of issues with the `Registration` that require attention.",
          "enumDescriptions": [
            "The issue is undefined.",
            "Contact the Cloud Support team to resolve a problem with this domain.",
            "[ICANN](https:\/\/icann.org\/) requires verification of the email address\nin the `Registration`'s `contact_settings.registrant_contact` field. To\nverify the email address, follow the\ninstructions in the email the `registrant_contact` receives following\nregistration. If you do not complete email verification within\n14 days of registration, the domain is suspended. To resend the\nverification email, call ConfigureContactSettings and provide the current\n`registrant_contact.email`."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ISSUE_UNSPECIFIED",
              "CONTACT_SUPPORT",
              "UNVERIFIED_EMAIL"
            ]
          }
        },
        "labels": {
          "description": "Set of labels associated with the `Registration`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managementSettings": {
          "description": "Settings for management of the `Registration`, including renewal, billing,\nand transfer. You cannot update these with the `UpdateRegistration`\nmethod. To update these settings, use the `ConfigureManagementSettings`\nmethod.",
          "$ref": "ManagementSettings"
        },
        "dnsSettings": {
          "description": "Settings controlling the DNS configuration of the `Registration`. You\ncannot update these with the `UpdateRegistration` method. To update these\nsettings, use the `ConfigureDnsSettings` method.",
          "$ref": "DnsSettings"
        },
        "contactSettings": {
          "description": "Required. Settings for contact information linked to the `Registration`. You cannot\nupdate these with the `UpdateRegistration` method. To update these\nsettings, use the `ConfigureContactSettings` method.",
          "$ref": "ContactSettings"
        },
        "pendingContactSettings": {
          "description": "Output only. Pending contact settings for the `Registration`. Updates to the\n`contact_settings` field that change its `registrant_contact` or `privacy`\nfields require email confirmation by the `registrant_contact`\nbefore taking effect. This field is set only if there are pending updates\nto the `contact_settings` that have not yet been confirmed. To confirm the\nchanges, the `registrant_contact` must follow the instructions in the\nemail they receive.",
          "$ref": "ContactSettings"
        },
        "supportedPrivacy": {
          "description": "Output only. Set of options for the `contact_settings.privacy` field that this\n`Registration` supports.",
          "enumDescriptions": [
            "The contact privacy settings are undefined.",
            "All the data from `ContactSettings` is publicly available. When setting\nthis option, you must also provide a\n`PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the\nrequest.",
            "None of the data from `ContactSettings` is publicly available. Instead,\nproxy contact data is published for your domain. Email sent to the proxy\nemail address is forwarded to the registrant's email address. Cloud Domains\nprovides this privacy proxy service at no additional cost.",
            "Some data from `ContactSettings` is publicly available. The actual\ninformation redacted depends on the domain. For details, see [the\nregistration privacy\narticle](https:\/\/support.google.com\/domains\/answer\/3251242)."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CONTACT_PRIVACY_UNSPECIFIED",
              "PUBLIC_CONTACT_DATA",
              "PRIVATE_CONTACT_DATA",
              "REDACTED_CONTACT_DATA"
            ]
          }
        }
      }
    },
    "ManagementSettings": {
      "id": "ManagementSettings",
      "description": "Defines renewal, billing, and transfer settings for a `Registration`.",
      "type": "object",
      "properties": {
        "renewalMethod": {
          "description": "Output only. The renewal method for this `Registration`.",
          "enumDescriptions": [
            "The renewal method is undefined.",
            "The domain is automatically renewed each year .\n\nTo disable automatic renewals, export the domain by calling\n`ExportRegistration` .",
            "The domain must be explicitly renewed each year before its\n`expire_time`. This option is only available when the `Registration`\nis in state `EXPORTED`.\n\nTo manage the domain's current billing and\nrenewal settings, go to [Google Domains](https:\/\/domains.google\/)."
          ],
          "type": "string",
          "enum": [
            "RENEWAL_METHOD_UNSPECIFIED",
            "AUTOMATIC_RENEWAL",
            "MANUAL_RENEWAL"
          ]
        },
        "transferLockState": {
          "description": "Controls whether the domain can be transferred to another registrar.",
          "enumDescriptions": [
            "The state is unspecified.",
            "The domain is unlocked and can be transferred to another registrar.",
            "The domain is locked and cannot be transferred to another registrar."
          ],
          "type": "string",
          "enum": [
            "TRANSFER_LOCK_STATE_UNSPECIFIED",
            "UNLOCKED",
            "LOCKED"
          ]
        }
      }
    },
    "DnsSettings": {
      "id": "DnsSettings",
      "description": "Defines the DNS configuration of a `Registration`, including name servers,\nDNSSEC, and glue records.",
      "type": "object",
      "properties": {
        "customDns": {
          "description": "An arbitrary DNS provider identified by its name servers.",
          "$ref": "CustomDns"
        },
        "googleDomainsDns": {
          "description": "The free DNS zone provided by\n[Google Domains](https:\/\/domains.google\/).",
          "$ref": "GoogleDomainsDns"
        },
        "glueRecords": {
          "description": "The list of glue records for this `Registration`. Commonly empty.",
          "type": "array",
          "items": {
            "$ref": "GlueRecord"
          }
        }
      }
    },
    "CustomDns": {
      "id": "CustomDns",
      "description": "Configuration for an arbitrary DNS provider.",
      "type": "object",
      "properties": {
        "nameServers": {
          "description": "Required. A list of name servers that store the DNS zone for this domain. Each name\nserver is a domain name, with Unicode domain names expressed in\nPunycode format.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dsRecords": {
          "description": "The list of DS records for this domain, which are used to enable DNSSEC.\nThe domain's DNS provider can provide the values to set here. If this\nfield is empty, DNSSEC is disabled.",
          "type": "array",
          "items": {
            "$ref": "DsRecord"
          }
        }
      }
    },
    "DsRecord": {
      "id": "DsRecord",
      "description": "Defines a Delegation Signer (DS) record, which is needed to enable DNSSEC\nfor a domain. It contains a digest (hash) of a DNSKEY record that must be\npresent in the domain's DNS zone.",
      "type": "object",
      "properties": {
        "keyTag": {
          "description": "The key tag of the record. Must be set in range 0 -- 65535.",
          "type": "integer",
          "format": "int32"
        },
        "algorithm": {
          "description": "The algorithm used to generate the referenced DNSKEY.",
          "enumDescriptions": [
            "The algorithm is unspecified.",
            "DSA\/SHA1. Not recommended for new deployments.",
            "ECC. Not recommended for new deployments.",
            "RSA\/SHA-1. Not recommended for new deployments.",
            "DSA-NSEC3-SHA1. Not recommended for new deployments.",
            "RSA\/SHA1-NSEC3-SHA1. Not recommended for new deployments.",
            "RSA\/SHA-256.",
            "RSA\/SHA-512.",
            "GOST R 34.10-2001.",
            "ECDSA Curve P-256 with SHA-256.",
            "ECDSA Curve P-384 with SHA-384.",
            "Ed25519.",
            "Ed448."
          ],
          "type": "string",
          "enum": [
            "ALGORITHM_UNSPECIFIED",
            "DSA",
            "ECC",
            "RSASHA1",
            "DSANSEC3SHA1",
            "RSASHA1NSEC3SHA1",
            "RSASHA256",
            "RSASHA512",
            "ECCGOST",
            "ECDSAP256SHA256",
            "ECDSAP384SHA384",
            "ED25519",
            "ED448"
          ]
        },
        "digestType": {
          "description": "The hash function used to generate the digest of the referenced DNSKEY.",
          "enumDescriptions": [
            "The DigestType is unspecified.",
            "SHA-1. Not recommended for new deployments.",
            "SHA-256.",
            "GOST R 34.11-94.",
            "SHA-384."
          ],
          "type": "string",
          "enum": [
            "DIGEST_TYPE_UNSPECIFIED",
            "SHA1",
            "SHA256",
            "GOST3411",
            "SHA384"
          ]
        },
        "digest": {
          "description": "The digest generated from the referenced DNSKEY.",
          "type": "string"
        }
      }
    },
    "GoogleDomainsDns": {
      "id": "GoogleDomainsDns",
      "description": "Configuration for using the free DNS zone provided by Google Domains as a\n`Registration`'s `dns_provider`. You cannot configure the DNS zone itself\nusing the API. To configure the DNS zone, go to\n[Google Domains](https:\/\/domains.google\/).",
      "type": "object",
      "properties": {
        "nameServers": {
          "description": "Output only. A list of name servers that store the DNS zone for this domain. Each name\nserver is a domain name, with Unicode domain names expressed in\nPunycode format. This field is automatically populated with the name\nservers assigned to the Google Domains DNS zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dsState": {
          "description": "Required. The state of DS records for this domain. Used to enable or disable\nautomatic DNSSEC.",
          "enumDescriptions": [
            "DS state is unspecified.",
            "DNSSEC is disabled for this domain. No DS records for this domain are\npublished in the parent DNS zone.",
            "DNSSEC is enabled for this domain. Appropriate DS records for this domain\nare published in the parent DNS zone. This option is valid only if the\nDNS zone referenced in the `Registration`'s `dns_provider` field is\nalready DNSSEC-signed."
          ],
          "type": "string",
          "enum": [
            "DS_STATE_UNSPECIFIED",
            "DS_RECORDS_UNPUBLISHED",
            "DS_RECORDS_PUBLISHED"
          ]
        },
        "dsRecords": {
          "description": "Output only. The list of DS records published for this domain. The list is\nautomatically populated when `ds_state` is `DS_RECORDS_PUBLISHED`,\notherwise it remains empty.",
          "type": "array",
          "items": {
            "$ref": "DsRecord"
          }
        }
      }
    },
    "GlueRecord": {
      "id": "GlueRecord",
      "description": "Defines a host on your domain that is a DNS name server for your domain\nand\/or other domains. Glue records are a way of making the IP address of a\nname server known, even when it serves DNS queries for its parent domain.\nFor example, when `ns.example.com` is a name server for `example.com`, the\nhost `ns.example.com` must have a glue record to break the circular DNS\nreference.",
      "type": "object",
      "properties": {
        "hostName": {
          "description": "Required. Domain name of the host in Punycode format.",
          "type": "string"
        },
        "ipv4Addresses": {
          "description": "List of IPv4 addresses corresponding to this host in the standard decimal\nformat (e.g. `198.51.100.1`). At least one of `ipv4_address` and\n`ipv6_address` must be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipv6Addresses": {
          "description": "List of IPv6 addresses corresponding to this host in the standard\nhexadecimal format (e.g. `2001:db8::`). At least one of\n`ipv4_address` and `ipv6_address` must be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContactSettings": {
      "id": "ContactSettings",
      "description": "Defines the contact information associated with a `Registration`.\n\n[ICANN](https:\/\/icann.org\/) requires all domain names to have associated\ncontact information. The `registrant_contact` is considered the\ndomain's legal owner, and often the other contacts are identical.",
      "type": "object",
      "properties": {
        "privacy": {
          "description": "Required. Privacy setting for the contacts associated with the `Registration`.",
          "enumDescriptions": [
            "The contact privacy settings are undefined.",
            "All the data from `ContactSettings` is publicly available. When setting\nthis option, you must also provide a\n`PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the\nrequest.",
            "None of the data from `ContactSettings` is publicly available. Instead,\nproxy contact data is published for your domain. Email sent to the proxy\nemail address is forwarded to the registrant's email address. Cloud Domains\nprovides this privacy proxy service at no additional cost.",
            "Some data from `ContactSettings` is publicly available. The actual\ninformation redacted depends on the domain. For details, see [the\nregistration privacy\narticle](https:\/\/support.google.com\/domains\/answer\/3251242)."
          ],
          "type": "string",
          "enum": [
            "CONTACT_PRIVACY_UNSPECIFIED",
            "PUBLIC_CONTACT_DATA",
            "PRIVATE_CONTACT_DATA",
            "REDACTED_CONTACT_DATA"
          ]
        },
        "registrantContact": {
          "description": "Required. The registrant contact for the `Registration`.\n\n*Caution: Anyone with access to this email address, phone number,\nand\/or postal address can take control of the domain.*\n\n*Warning: For new `Registration`s, the registrant will receive an email\nconfirmation that they must complete within 14 days to avoid domain\nsuspension.*",
          "$ref": "Contact"
        },
        "adminContact": {
          "description": "Required. The administrative contact for the `Registration`.",
          "$ref": "Contact"
        },
        "technicalContact": {
          "description": "Required. The technical contact for the `Registration`.",
          "$ref": "Contact"
        }
      }
    },
    "Contact": {
      "id": "Contact",
      "description": "Details required for a contact associated with a `Registration`.",
      "type": "object",
      "properties": {
        "postalAddress": {
          "description": "Postal address of the contact.",
          "$ref": "PostalAddress"
        },
        "email": {
          "description": "Email address of the contact.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number of the contact in international format. For example,\n`\"+1-800-555-0123\"`.",
          "type": "string"
        }
      }
    },
    "PostalAddress": {
      "id": "PostalAddress",
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses.\nGiven a postal address, a postal service can deliver items to a premise, P.O.\nBox or similar.\nIt is not intended to model geographical locations (roads, towns,\nmountains).\n\nIn typical usage an address would be created via user input or from importing\nexisting data, depending on the type of process.\n\nAdvice on address input \/ editing:\n - Use an i18n-ready address widget such as\n   https:\/\/github.com\/google\/libaddressinput)\n- Users should not be presented with UI elements for input or editing of\n  fields outside countries where that field is used.\n\nFor more guidance on how to use this schema, please see:\nhttps:\/\/support.google.com\/business\/answer\/6397478",
      "type": "object",
      "properties": {
        "revision": {
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is\nthe latest revision.\n\nAll new revisions **must** be backward compatible with old revisions.",
          "type": "integer",
          "format": "int32"
        },
        "regionCode": {
          "description": "Required. CLDR region code of the country\/region of the address. This\nis never inferred and it is up to the user to ensure the value is\ncorrect. See http:\/\/cldr.unicode.org\/ and\nhttp:\/\/www.unicode.org\/cldr\/charts\/30\/supplemental\/territory_information.html\nfor details. Example: \"CH\" for Switzerland.",
          "type": "string"
        },
        "languageCode": {
          "description": "Optional. BCP-47 language code of the contents of this address (if\nknown). This is often the UI language of the input form or is expected\nto match one of the languages used in the address' country\/region, or their\ntransliterated equivalents.\nThis can affect formatting in certain countries, but is not critical\nto the correctness of the data and will never affect any validation or\nother non-formatting related operations.\n\nIf this value is not known, it should be omitted (rather than specifying a\npossibly incorrect default).\n\nExamples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
          "type": "string"
        },
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require\npostal codes to be present, but where they are used, they may trigger\nadditional validation with other parts of the address (e.g. state\/zip\nvalidation in the U.S.A.).",
          "type": "string"
        },
        "sortingCode": {
          "description": "Optional. Additional, country-specific, sorting code. This is not used\nin most regions. Where it is used, the value is either a string like\n\"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number\nalone, representing the \"sector code\" (Jamaica), \"delivery area indicator\"\n(Malawi) or \"post office indicator\" (e.g. C\u00F4te d'Ivoire).",
          "type": "string"
        },
        "administrativeArea": {
          "description": "Optional. Highest administrative subdivision which is used for postal\naddresses of a country or region.\nFor example, this can be a state, a province, an oblast, or a prefecture.\nSpecifically, for Spain this is the province and not the autonomous\ncommunity (e.g. \"Barcelona\" and not \"Catalonia\").\nMany countries don't use an administrative area in postal addresses. E.g.\nin Switzerland this should be left unpopulated.",
          "type": "string"
        },
        "locality": {
          "description": "Optional. Generally refers to the city\/town portion of the address.\nExamples: US city, IT comune, UK post town.\nIn regions of the world where localities are not well defined or do not fit\ninto this structure well, leave locality empty and use address_lines.",
          "type": "string"
        },
        "sublocality": {
          "description": "Optional. Sublocality of the address.\nFor example, this can be neighborhoods, boroughs, districts.",
          "type": "string"
        },
        "addressLines": {
          "description": "Unstructured address lines describing the lower levels of an address.\n\nBecause values in address_lines do not have type information and may\nsometimes contain multiple values in a single field (e.g.\n\"Austin, TX\"), it is important that the line order is clear. The order of\naddress lines should be \"envelope order\" for the country\/region of the\naddress. In places where this can vary (e.g. Japan), address_language is\nused to make it explicit (e.g. \"ja\" for large-to-small ordering and\n\"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of\nan address can be selected based on the language.\n\nThe minimum permitted structural representation of an address consists\nof a region_code with all remaining information placed in the\naddress_lines. It would be possible to format such an address very\napproximately without geocoding, but no semantic reasoning could be\nmade about any of the address components until it was at least\npartially resolved.\n\nCreating an address only containing a region_code and address_lines, and\nthen geocoding is the recommended way to handle completely unstructured\naddresses (as opposed to guessing which parts of the address should be\nlocalities or administrative areas).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "description": "Optional. The recipient at the address.\nThis field may, under certain circumstances, contain multiline information.\nFor example, it might contain \"care of\" information.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization": {
          "description": "Optional. The name of the organization at the address.",
          "type": "string"
        }
      }
    },
    "ListRegistrationsResponse": {
      "id": "ListRegistrationsResponse",
      "description": "Response for the `ListRegistrations` method.",
      "type": "object",
      "properties": {
        "registrations": {
          "description": "A list of `Registration`s.",
          "type": "array",
          "items": {
            "$ref": "Registration"
          }
        },
        "nextPageToken": {
          "description": "When present, there are more results to retrieve. Set `page_token` to this\nvalue on a subsequent call to get the next page of results.",
          "type": "string"
        }
      }
    },
    "ConfigureManagementSettingsRequest": {
      "id": "ConfigureManagementSettingsRequest",
      "description": "Request for the `ConfigureManagementSettings` method.",
      "type": "object",
      "properties": {
        "managementSettings": {
          "description": "Fields of the `ManagementSettings` to update.",
          "$ref": "ManagementSettings"
        },
        "updateMask": {
          "description": "Required. The field mask describing which fields to update as a comma-separated list.\nFor example, if only the transfer lock is being updated, the `update_mask`\nwould be `\"transfer_lock_state\"`.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "ConfigureDnsSettingsRequest": {
      "id": "ConfigureDnsSettingsRequest",
      "description": "Request for the `ConfigureDnsSettings` method.",
      "type": "object",
      "properties": {
        "dnsSettings": {
          "description": "Fields of the `DnsSettings` to update.",
          "$ref": "DnsSettings"
        },
        "updateMask": {
          "description": "Required. The field mask describing which fields to update as a comma-separated list.\nFor example, if only the name servers are being updated for an existing\nCustom DNS configuration, the `update_mask` would be\n`\"custom_dns.name_servers\"`.\n\nWhen changing the DNS provider from one type to another (e.g. `CustomDns`\nto `CloudDns`), you must pass `\"dns_provider\"` as part of the field mask.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "validateOnly": {
          "description": "Validate the request without actually updating the DNS settings.",
          "type": "boolean"
        }
      }
    },
    "ConfigureContactSettingsRequest": {
      "id": "ConfigureContactSettingsRequest",
      "description": "Request for the `ConfigureContactSettings` method.",
      "type": "object",
      "properties": {
        "contactSettings": {
          "description": "Fields of the `ContactSettings` to update.",
          "$ref": "ContactSettings"
        },
        "updateMask": {
          "description": "Required. The field mask describing which fields to update as a comma-separated list.\nFor example, if only the registrant contact is being updated, the\n`update_mask` would be `\"registrant_contact\"`.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "contactNotices": {
          "description": "The list of contact notices that the caller acknowledges. The notices\nrequired here depend on the values specified in `contact_settings`.",
          "enumDescriptions": [
            "The notice is undefined.",
            "Required when setting the `privacy` field of `ContactSettings` to\n`PUBLIC_CONTACT_DATA`, which exposes contact data publicly."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CONTACT_NOTICE_UNSPECIFIED",
              "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT"
            ]
          }
        },
        "validateOnly": {
          "description": "Validate the request without actually updating the contact settings.",
          "type": "boolean"
        }
      }
    },
    "ExportRegistrationRequest": {
      "id": "ExportRegistrationRequest",
      "description": "Request for the `ExportRegistration` method.",
      "type": "object",
      "properties": {
      }
    },
    "AuthorizationCode": {
      "id": "AuthorizationCode",
      "description": "Defines an authorization code.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Authorization Code in ASCII. It can be used to transfer the domain\nto or from another registrar.",
          "type": "string"
        }
      }
    },
    "ResetAuthorizationCodeRequest": {
      "id": "ResetAuthorizationCodeRequest",
      "description": "Request for the `ResetAuthorizationCode` method.",
      "type": "object",
      "properties": {
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles\/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles\/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY\/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "iamOwned": {
          "type": "boolean"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https:\/\/github.com\/google\/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '<service>.<resource type>.<verb>'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "type": "string",
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries can be found at in the Local IAM\ndocumentation (see go\/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the\nrule to match.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which\nmust only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go\/security-realms).\nWhen used with IN, the condition indicates \"any of the request's realms\nmatch one of the given values; with NOT_IN, \"none of the realms match\nany of the given values\". Note that a value can be:\n - 'self' (i.e., allow connections from clients that are in the same\n security realm)\n - 'self:cloud-region' (i.e., allow connections from clients that are in\n the same cloud region)\n - 'guardians' (i.e., allow connections from its guardian realms. See\n go\/security-realms-glossary#guardian for more information.)\n - a realm (e.g., 'campus-abc')\n - a realm group (e.g., 'realms-for-borg-cell-xx', see: go\/realm-groups)\nA match is determined by a realm group\nmembership check performed by a RealmAclRep object (go\/realm-acl-howto).\nIt is not permitted to grant access based on the *absence* of a realm, so\nrealm conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN\nor DENY\/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this\nrequest.\nWhen used with IN, the condition indicates that one of the approvers\nassociated with the request matches the specified principal, or is a\nmember of the specified group. Approvers can only grant additional\naccess, and are thus only used in a strictly positive context\n(e.g. ALLOW\/IN or DENY\/NOT_IN).",
            "What types of justifications have been supplied with this request.\nString values should match enum names from\nsecurity.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not\npermitted to grant access based on the *absence* of a justification, so\njustification conditions can only be used in a \"positive\" context\n(e.g., ALLOW\/IN or DENY\/NOT_IN).\n\nMultiple justifications, e.g., a Buganizer ID and a manually-entered\nreason, are normal and supported.",
            "What type of credentials have been supplied with this request.\nString values should match enum names from\nsecurity_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY\nis supported.\nIt is not permitted to grant access based on the *absence* of a\ncredentials type, so the conditions can only be used in a \"positive\"\ncontext (e.g., ALLOW\/IN or DENY\/NOT_IN)."
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "type": "string",
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is\na set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is\na set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "type": "string",
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "values": {
          "description": "The objects of the condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        }
      }
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "description": "Increment a streamz counter with the specified metric and field names.\n\nMetric names should start with a '\/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"\/iam\/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nSupported field names:\n   - \"authority\", which is \"[token]\" if IAMContext.token is present,\n     otherwise the value of IAMContext.authority_selector if present, and\n     otherwise a representation of IAMContext.principal; or\n   - \"iam_principal\", a representation of IAMContext.principal even if a\n     token or authority selector is present; or\n   - \"\" (empty string), resulting in a counter with no fields.\n\nExamples:\n  counter { metric: \"\/debug_access_count\"  field: \"iam_principal\" }\n  ==> increment counter \/iam\/policy\/debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields.",
          "type": "array",
          "items": {
            "$ref": "CustomField"
          }
        }
      }
    },
    "CustomField": {
      "id": "CustomField",
      "description": "Custom fields.\nThese can be used to create a counter with arbitrary field\/value\npairs.\nSee: go\/rpcsp-custom-fields.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the field name.",
          "type": "string"
        },
        "value": {
          "description": "Value is the field value. It is important that in contrast to the\nCounterOptions.field, the value here is a constant that is not\nderived from the IAMContext.",
          "type": "string"
        }
      }
    },
    "DataAccessOptions": {
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after\nthe authorization check. If client chooses to write one and it fails,\nclient may either fail open (allow the operation to continue) or\nfail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization\ncheck is being made may only be performed if it is successfully logged\nto Gin. For instance, the authorization library may satisfy this\nobligation by emitting a partial log entry at authorization check time\nand only returning ALLOW to the application if it succeeds.\n\nIf a matching Rule has this directive, but the client has not indicated\nthat it will honor such requirements, then the IAM check will result in\nauthorization failure by setting CheckPolicyResponse.success=false."
          ],
          "type": "string",
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      }
    },
    "CloudAuditOptions": {
      "id": "CloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "logName": {
          "description": "The log_name to populate in the Cloud Audit Record.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com\/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com\/data_access\""
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ]
        },
        "authorizationLoggingOptions": {
          "description": "Information used by the Cloud Audit Logging pipeline.",
          "$ref": "AuthorizationLoggingOptions"
        }
      }
    },
    "AuthorizationLoggingOptions": {
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "type": "string",
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation. Output only.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        },
        "statusDetail": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "apiVersion": {
          "description": "API version used to start the operation.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "domains.projects.locations.list",
              "path": "v1alpha2/{+name}/locations",
              "flatPath": "v1alpha2/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "includeUnrevealedLocations": {
                  "description": "If true, the returned list will include locations which are not yet\nrevealed.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "domains.projects.locations.get",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "domains.projects.locations.operations.list",
                  "path": "v1alpha2/{+name}/operations",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users\/*\/operations`. To\noverride the binding, API services can add a binding such as\n`\"\/v1\/{name=users\/*}\/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "domains.projects.locations.operations.get",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
                }
              }
            },
            "registrations": {
              "methods": {
                "searchDomains": {
                  "id": "domains.projects.locations.registrations.searchDomains",
                  "path": "v1alpha2/{+location}/registrations:searchDomains",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations:searchDomains",
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "description": "Required. The location. Must be in the format `projects\/*\/locations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "query": {
                      "description": "Required. String used to search for available domain names.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "SearchDomainsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Searches for available domain names similar to the provided query.\n\nAvailability results from this method are approximate; call\n`RetrieveRegisterParameters` on a domain before registering to confirm\navailability."
                },
                "retrieveRegisterParameters": {
                  "id": "domains.projects.locations.registrations.retrieveRegisterParameters",
                  "path": "v1alpha2/{+location}/registrations:retrieveRegisterParameters",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations:retrieveRegisterParameters",
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "description": "Required. The location. Must be in the format `projects\/*\/locations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "domainName": {
                      "description": "Required. The domain name. Unicode domain names must be expressed in Punycode format.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "RetrieveRegisterParametersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets parameters needed to register a new domain name, including price and\nup-to-date availability. Use the returned values to call `RegisterDomain`."
                },
                "register": {
                  "id": "domains.projects.locations.registrations.register",
                  "path": "v1alpha2/{+parent}/registrations:register",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations:register",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the `Registration`. Must be in the\nformat `projects\/*\/locations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "RegisterDomainRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Registers a new domain name and creates a corresponding `Registration`\nresource.\n\nCall `RetrieveRegisterParameters` first to check availability of the domain\nname and determine parameters like price that are needed to build a call to\nthis method.\n\nA successful call creates a `Registration` resource in state\n`REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2\nminutes, indicating that the domain was successfully registered. If the\nresource ends up in state `REGISTRATION_FAILED`, it indicates that the\ndomain was not registered successfully, and you can safely delete the\nresource and retry registration."
                },
                "list": {
                  "id": "domains.projects.locations.registrations.list",
                  "path": "v1alpha2/{+parent}/registrations",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which to list `Registration`s, specified in\nthe format `projects\/*\/locations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of results to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "When set to the `next_page_token` from a prior response, provides the next\npage of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "[Filter\nexpression](https:\/\/cloud.google.com\/sdk\/gcloud\/reference\/topic\/filters) to\nrestrict the `Registration`s returned.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListRegistrationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists the `Registration` resources in a project."
                },
                "get": {
                  "id": "domains.projects.locations.registrations.get",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the `Registration` to get, in the format\n`projects\/*\/locations\/*\/registrations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Registration"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the details of a `Registration` resource."
                },
                "patch": {
                  "id": "domains.projects.locations.registrations.patch",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. Name of the `Registration` resource, in the format\n`projects\/*\/locations\/*\/registrations\/<domain_name>`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. The field mask describing which fields to update as a comma-separated list.\nFor example, if only the labels are being updated, the `update_mask` would\nbe `\"labels\"`.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Registration"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates select fields of a `Registration` resource, notably `labels`. To\nupdate other fields, use the appropriate custom update method:\n\n* To update management settings, see `ConfigureManagementSettings`\n* To update DNS configuration, see `ConfigureDnsSettings`\n* To update contact information, see `ConfigureContactSettings`"
                },
                "configureManagementSettings": {
                  "id": "domains.projects.locations.registrations.configureManagementSettings",
                  "path": "v1alpha2/{+registration}:configureManagementSettings",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:configureManagementSettings",
                  "httpMethod": "POST",
                  "parameters": {
                    "registration": {
                      "description": "Required. The name of the `Registration` whose management settings are being updated,\nin the format `projects\/*\/locations\/*\/registrations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "registration"
                  ],
                  "request": {
                    "$ref": "ConfigureManagementSettingsRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a `Registration`'s management settings."
                },
                "configureDnsSettings": {
                  "id": "domains.projects.locations.registrations.configureDnsSettings",
                  "path": "v1alpha2/{+registration}:configureDnsSettings",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:configureDnsSettings",
                  "httpMethod": "POST",
                  "parameters": {
                    "registration": {
                      "description": "Required. The name of the `Registration` whose DNS settings are being updated,\nin the format `projects\/*\/locations\/*\/registrations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "registration"
                  ],
                  "request": {
                    "$ref": "ConfigureDnsSettingsRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a `Registration`'s DNS settings."
                },
                "configureContactSettings": {
                  "id": "domains.projects.locations.registrations.configureContactSettings",
                  "path": "v1alpha2/{+registration}:configureContactSettings",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:configureContactSettings",
                  "httpMethod": "POST",
                  "parameters": {
                    "registration": {
                      "description": "Required. The name of the `Registration` whose contact settings are being updated,\nin the format `projects\/*\/locations\/*\/registrations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "registration"
                  ],
                  "request": {
                    "$ref": "ConfigureContactSettingsRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a `Registration`'s contact settings. Some changes require\nconfirmation by the domain's registrant contact ."
                },
                "export": {
                  "id": "domains.projects.locations.registrations.export",
                  "path": "v1alpha2/{+name}:export",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:export",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the `Registration` to export,\nin the format `projects\/*\/locations\/*\/registrations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ExportRegistrationRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Exports a `Registration` that you no longer want to use with\nCloud Domains. You can continue to use the domain in\n[Google Domains](https:\/\/domains.google\/) until it expires.\n\nIf the export is successful:\n\n* The resource's `state` becomes `EXPORTED`, meaning that it is no longer\nmanaged by Cloud Domains\n* Because individual users can own domains in Google Domains, the calling\nuser becomes the domain's sole owner. Permissions for the domain are\nsubsequently managed in Google Domains.\n* Without further action, the domain does not renew automatically.\nThe new owner can set up billing in Google Domains to renew the domain\nif needed."
                },
                "delete": {
                  "id": "domains.projects.locations.registrations.delete",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the `Registration` to delete,\nin the format `projects\/*\/locations\/*\/registrations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a `Registration` resource.\n\nThis method only works on resources in one of the following states:\n\n* `state` is `EXPORTED` with `expire_time` in the past\n* `state` is `REGISTRATION_FAILED`"
                },
                "retrieveAuthorizationCode": {
                  "id": "domains.projects.locations.registrations.retrieveAuthorizationCode",
                  "path": "v1alpha2/{+registration}:retrieveAuthorizationCode",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:retrieveAuthorizationCode",
                  "httpMethod": "GET",
                  "parameters": {
                    "registration": {
                      "description": "Required. The name of the `Registration` whose authorization code is being retrieved,\nin the format `projects\/*\/locations\/*\/registrations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "registration"
                  ],
                  "response": {
                    "$ref": "AuthorizationCode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the authorization code of the `Registration` for the purpose of\ntransferring the domain to another registrar.\n\nYou can call this method only after 60 days have elapsed since the initial\ndomain registration."
                },
                "resetAuthorizationCode": {
                  "id": "domains.projects.locations.registrations.resetAuthorizationCode",
                  "path": "v1alpha2/{+registration}:resetAuthorizationCode",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:resetAuthorizationCode",
                  "httpMethod": "POST",
                  "parameters": {
                    "registration": {
                      "description": "Required. The name of the `Registration` whose authorization code is being reset,\nin the format `projects\/*\/locations\/*\/registrations\/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "registration"
                  ],
                  "request": {
                    "$ref": "ResetAuthorizationCodeRequest"
                  },
                  "response": {
                    "$ref": "AuthorizationCode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Resets the authorization code of the `Registration` to a new random string.\n\nYou can call this method only after 60 days have elapsed since the initial\ndomain registration."
                },
                "setIamPolicy": {
                  "id": "domains.projects.locations.registrations.setIamPolicy",
                  "path": "v1alpha2/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "domains.projects.locations.registrations.getIamPolicy",
                  "path": "v1alpha2/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
                },
                "testIamPermissions": {
                  "id": "domains.projects.locations.registrations.testIamPermissions",
                  "path": "v1alpha2/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/registrations/{registrationsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a `NOT_FOUND` error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}