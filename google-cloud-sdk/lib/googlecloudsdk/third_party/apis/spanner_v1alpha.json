{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "spanner:v1alpha",
  "name": "spanner",
  "canonicalName": "Spanner",
  "version": "v1alpha",
  "revision": "0",
  "title": "Cloud Spanner API",
  "description": "Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/spanner/",
  "protocol": "rest",
  "rootUrl": "https://spanner.googleapis.com/",
  "mtlsRootUrl": "https://spanner.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://spanner.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "schemas": {
    "CreateBackupMetadata": {
      "id": "CreateBackupMetadata",
      "description": "Metadata type for the operation returned by CreateBackup.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the backup being created.",
          "type": "string"
        },
        "database": {
          "description": "The name of the database the backup is created from.",
          "type": "string"
        },
        "progress": {
          "description": "The progress of the CreateBackup operation.",
          "$ref": "OperationProgress"
        },
        "cancelTime": {
          "description": "The time at which cancellation of this operation was received. Operations.CancelOperation starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "OperationProgress": {
      "id": "OperationProgress",
      "description": "Encapsulates progress related information for a Cloud Spanner long running operation.",
      "type": "object",
      "properties": {
        "progressPercent": {
          "description": "Percent completion of the operation. Values are between 0 and 100 inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "description": "Time the request was received.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "If set, the time at which this operation failed or was completed successfully.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "CreateDatabaseMetadata": {
      "id": "CreateDatabaseMetadata",
      "description": "Metadata type for the operation returned by CreateDatabase.",
      "type": "object",
      "properties": {
        "database": {
          "description": "The database being created.",
          "type": "string"
        }
      }
    },
    "CreateInstanceMetadata": {
      "id": "CreateInstanceMetadata",
      "description": "Metadata type for the operation returned by CreateInstance.",
      "type": "object",
      "properties": {
        "instance": {
          "description": "The instance being created.",
          "$ref": "Instance"
        },
        "startTime": {
          "description": "The time at which the CreateInstance request was received.",
          "type": "string",
          "format": "google-datetime"
        },
        "cancelTime": {
          "description": "The time at which this operation was cancelled. If set, this operation is in the process of undoing itself (which is guaranteed to succeed) and cannot be cancelled again.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time at which this operation failed or was completed successfully.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Instance": {
      "id": "Instance",
      "description": "An isolated set of Cloud Spanner resources on which databases can be hosted.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. A unique identifier for the instance, which cannot be changed after the instance is created. Values are of the form `projects\/\/instances\/a-z*[a-z0-9]`. The final segment of the name must be between 2 and 64 characters in length.",
          "type": "string"
        },
        "config": {
          "description": "Required. The name of the instance's configuration. Values are of the form `projects\/\/instanceConfigs\/`. See also InstanceConfig and ListInstanceConfigs.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The descriptive name for this instance as it appears in UIs. Must be unique per project and between 4 and 30 characters in length.",
          "type": "string"
        },
        "nodeCount": {
          "description": "The number of nodes allocated to this instance. This may be zero in API responses for instances that are not yet in state `READY`. See [the documentation](https:\/\/cloud.google.com\/spanner\/docs\/instances#node_count) for more information about nodes.",
          "type": "integer",
          "format": "int32"
        },
        "processingUnits": {
          "description": "The number of processing units allocated to this instance. At most one of processing_units or node_count should be present in the message. This may be zeo in API responses for instances that are not yet in state `READY`.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "Output only. The current instance state. For CreateInstance, the state must be either omitted or set to `CREATING`. For UpdateInstance, the state must be either omitted or set to `READY`.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "The instance is still being created. Resources may not be available yet, and operations such as database creation may not work.",
            "The instance is fully created and ready to do work such as creating databases."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY"
          ]
        },
        "labels": {
          "description": "Cloud Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. Cloud Labels can be used to filter collections of resources. They can be used to control how resource metrics are aggregated. And they can be used as arguments to policy management rules (e.g. route, firewall, load balancing, etc.). * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given resource. See https:\/\/goo.gl\/xmQnxf for more information on and examples of labels. If you plan to use labels in your own code, please note that additional characters may be allowed in the future. And so you are advised to use an internal label representation, such as JSON, which doesn't rely upon specific characters being disallowed. For example, representing labels as the string: name + \"_\" + value would prove problematic if we were to allow \"_\" in a future release.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endpointUris": {
          "description": "Deprecated. This field is not populated.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OptimizeRestoredDatabaseMetadata": {
      "id": "OptimizeRestoredDatabaseMetadata",
      "description": "Metadata type for the long-running operation used to track the progress of optimizations performed on a newly restored database. This long-running operation is automatically created by the system after the successful completion of a database restore, and cannot be cancelled.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the restored database being optimized.",
          "type": "string"
        },
        "progress": {
          "description": "The progress of the post-restore optimizations.",
          "$ref": "OperationProgress"
        }
      }
    },
    "RestoreDatabaseMetadata": {
      "id": "RestoreDatabaseMetadata",
      "description": "Metadata type for the long-running operation returned by RestoreDatabase.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the database being created and restored to.",
          "type": "string"
        },
        "sourceType": {
          "description": "The type of the restore source.",
          "type": "string",
          "enumDescriptions": [
            "No restore associated.",
            "A backup was used as the source of the restore."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "BACKUP"
          ]
        },
        "backupInfo": {
          "description": "Information about the backup used to restore the database.",
          "$ref": "BackupInfo"
        },
        "progress": {
          "description": "The progress of the RestoreDatabase operation.",
          "$ref": "OperationProgress"
        },
        "cancelTime": {
          "description": "The time at which cancellation of this operation was received. Operations.CancelOperation starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "string",
          "format": "google-datetime"
        },
        "optimizeDatabaseOperationName": {
          "description": "If exists, the name of the long-running operation that will be used to track the post-restore optimization process to optimize the performance of the restored database, and remove the dependency on the restore source. The name is of the form `projects\/\/instances\/\/databases\/\/operations\/` where the is the name of database being created and restored to. The metadata type of the long-running operation is OptimizeRestoredDatabaseMetadata. This long-running operation will be automatically created by the system after the RestoreDatabase long-running operation completes successfully. This operation will not be created if the restore was not successful.",
          "type": "string"
        }
      }
    },
    "BackupInfo": {
      "id": "BackupInfo",
      "description": "Information about a backup.",
      "type": "object",
      "properties": {
        "backup": {
          "description": "Name of the backup.",
          "type": "string"
        },
        "createTime": {
          "description": "The backup contains an externally consistent copy of `source_database` at the timestamp specified by `create_time`.",
          "type": "string",
          "format": "google-datetime"
        },
        "sourceDatabase": {
          "description": "Name of the database the backup was created from.",
          "type": "string"
        }
      }
    },
    "UpdateDatabaseDdlMetadata": {
      "id": "UpdateDatabaseDdlMetadata",
      "description": "Metadata type for the operation returned by UpdateDatabaseDdl.",
      "type": "object",
      "properties": {
        "database": {
          "description": "The database being modified.",
          "type": "string"
        },
        "statements": {
          "description": "For an update this list contains all the statements. For an individual statement, this list contains only that statement.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "commitTimestamps": {
          "description": "Reports the commit timestamps of all statements that have succeeded so far, where `commit_timestamps[i]` is the commit timestamp for the statement `statements[i]`.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "google-datetime"
          }
        },
        "throttled": {
          "description": "Output only. When true, indicates that the operation is throttled e.g due to resource constraints. When resources become available the operation will resume and this field will be false again.",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "UpdateInstanceMetadata": {
      "id": "UpdateInstanceMetadata",
      "description": "Metadata type for the operation returned by UpdateInstance.",
      "type": "object",
      "properties": {
        "instance": {
          "description": "The desired end state of the update.",
          "$ref": "Instance"
        },
        "startTime": {
          "description": "The time at which UpdateInstance request was received.",
          "type": "string",
          "format": "google-datetime"
        },
        "cancelTime": {
          "description": "The time at which this operation was cancelled. If set, this operation is in the process of undoing itself (which is guaranteed to succeed) and cannot be cancelled again.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time at which this operation failed or was completed successfully.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    }
  },
  "resources": {
  },
  "basePath": ""
}