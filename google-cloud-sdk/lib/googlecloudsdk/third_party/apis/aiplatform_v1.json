{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "aiplatform:v1",
  "name": "aiplatform",
  "canonicalName": "Aiplatform",
  "version": "v1",
  "revision": "0",
  "title": "Cloud AI Platform API",
  "description": "Train high-quality custom machine learning models with minimal machine learning expertise and effort.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/ai-platform-unified/docs",
  "protocol": "rest",
  "rootUrl": "https://aiplatform.googleapis.com/",
  "mtlsRootUrl": "https://aiplatform.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://aiplatform.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1Dataset": {
      "id": "GoogleCloudAiplatformV1Dataset",
      "description": "A collection of DataItems and Annotations on them.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the Dataset.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.",
          "type": "string"
        },
        "metadataSchemaUri": {
          "description": "Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs:\/\/google-cloud-aiplatform\/schema\/dataset\/metadata\/.",
          "type": "string"
        },
        "metadata": {
          "description": "Required. Additional information about the Dataset.",
          "type": "any"
        },
        "createTime": {
          "description": "Output only. Timestamp when this Dataset was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp when this Dataset was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "etag": {
          "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
          "type": "string"
        },
        "labels": {
          "description": "The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https:\/\/goo.gl\/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com\/\" and are immutable. Following system labels exist for each Dataset: * \"aiplatform.googleapis.com\/dataset_metadata_schema\": output only, its value is the metadata_schema's title.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "encryptionSpec": {
          "description": "Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.",
          "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1EncryptionSpec": {
      "id": "GoogleCloudAiplatformV1EncryptionSpec",
      "description": "Represents a customer-managed encryption key spec that can be applied to a top-level resource.",
      "type": "object",
      "properties": {
        "kmsKeyName": {
          "description": "Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects\/my-project\/locations\/my-region\/keyRings\/my-kr\/cryptoKeys\/my-key`. The key needs to be in the same region as where the compute resource is created.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ListDatasetsResponse": {
      "id": "GoogleCloudAiplatformV1ListDatasetsResponse",
      "description": "Response message for DatasetService.ListDatasets.",
      "type": "object",
      "properties": {
        "datasets": {
          "description": "A list of Datasets that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1Dataset"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ImportDataRequest": {
      "id": "GoogleCloudAiplatformV1ImportDataRequest",
      "description": "Request message for DatasetService.ImportData.",
      "type": "object",
      "properties": {
        "importConfigs": {
          "description": "Required. The desired input locations. The contents of all input locations will be imported in one batch.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1ImportDataConfig"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1ImportDataConfig": {
      "id": "GoogleCloudAiplatformV1ImportDataConfig",
      "description": "Describes the location from where we import data into a Dataset, together with the labels that will be applied to the DataItems and the Annotations.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "The Google Cloud Storage location for the input content.",
          "$ref": "GoogleCloudAiplatformV1GcsSource"
        },
        "dataItemLabels": {
          "description": "Labels that will be applied to newly imported DataItems. If an identical DataItem as one being imported already exists in the Dataset, then these labels will be appended to these of the already existing one, and if labels with identical key is imported before, the old label value will be overwritten. If two DataItems are identical in the same import data operation, the labels will be combined and if key collision happens in this case, one of the values will be picked randomly. Two DataItems are considered identical if their content bytes are identical (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "importSchemaUri": {
          "description": "Required. Points to a YAML file stored on Google Cloud Storage describing the import format. Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https:\/\/tinyurl.com\/y538mdwt).",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1GcsSource": {
      "id": "GoogleCloudAiplatformV1GcsSource",
      "description": "The Google Cloud Storage location for the input content.",
      "type": "object",
      "properties": {
        "uris": {
          "description": "Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https:\/\/cloud.google.com\/storage\/docs\/gsutil\/addlhelp\/WildcardNames.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1ExportDataRequest": {
      "id": "GoogleCloudAiplatformV1ExportDataRequest",
      "description": "Request message for DatasetService.ExportData.",
      "type": "object",
      "properties": {
        "exportConfig": {
          "description": "Required. The desired output location.",
          "$ref": "GoogleCloudAiplatformV1ExportDataConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1ExportDataConfig": {
      "id": "GoogleCloudAiplatformV1ExportDataConfig",
      "description": "Describes what part of the Dataset is to be exported, the destination of the export and how to export.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location where the output is to be written to. In the given directory a new directory will be created with name: `export-data--` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. All export output will be written into that directory. Inside that directory, annotations with the same schema will be grouped into sub directories which are named with the corresponding annotations' schema title. Inside these sub directories, a schema.yaml will be created to describe the output format.",
          "$ref": "GoogleCloudAiplatformV1GcsDestination"
        },
        "annotationsFilter": {
          "description": "A filter on Annotations of the Dataset. Only Annotations on to-be-exported DataItems(specified by data_items_filter) that match this filter will be exported. The filter syntax is the same as in ListAnnotations.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1GcsDestination": {
      "id": "GoogleCloudAiplatformV1GcsDestination",
      "description": "The Google Cloud Storage location where the output is to be written to.",
      "type": "object",
      "properties": {
        "outputUriPrefix": {
          "description": "Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '\/', a '\/' will be automatically appended. The directory is created if it doesn't exist.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ListDataItemsResponse": {
      "id": "GoogleCloudAiplatformV1ListDataItemsResponse",
      "description": "Response message for DatasetService.ListDataItems.",
      "type": "object",
      "properties": {
        "dataItems": {
          "description": "A list of DataItems that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1DataItem"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1DataItem": {
      "id": "GoogleCloudAiplatformV1DataItem",
      "description": "A piece of data in a Dataset. Could be an image, a video, a document or plain text.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the DataItem.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when this DataItem was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp when this DataItem was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. The labels with user-defined metadata to organize your DataItems. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one DataItem(System labels are excluded). See https:\/\/goo.gl\/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com\/\" and are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "payload": {
          "description": "Required. The data that the DataItem represents (for example, an image or a text snippet). The schema of the payload is stored in the parent Dataset's metadata schema's dataItemSchemaUri field.",
          "type": "any"
        },
        "etag": {
          "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1AnnotationSpec": {
      "id": "GoogleCloudAiplatformV1AnnotationSpec",
      "description": "Identifies a concept with which DataItems may be annotated with.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the AnnotationSpec.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. The user-defined name of the AnnotationSpec. The name can be up to 128 characters long and can be consist of any UTF-8 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when this AnnotationSpec was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp when AnnotationSpec was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "etag": {
          "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ListAnnotationsResponse": {
      "id": "GoogleCloudAiplatformV1ListAnnotationsResponse",
      "description": "Response message for DatasetService.ListAnnotations.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "A list of Annotations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1Annotation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1Annotation": {
      "id": "GoogleCloudAiplatformV1Annotation",
      "description": "Used to assign specific AnnotationSpec to a particular area of a DataItem or the whole part of the DataItem.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the Annotation.",
          "readOnly": true,
          "type": "string"
        },
        "payloadSchemaUri": {
          "description": "Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https:\/\/tinyurl.com\/y538mdwt). The schema files that can be used here are found in gs:\/\/google-cloud-aiplatform\/schema\/dataset\/annotation\/, note that the chosen schema must be consistent with the parent Dataset's metadata.",
          "type": "string"
        },
        "payload": {
          "description": "Required. The schema of the payload can be found in payload_schema.",
          "type": "any"
        },
        "createTime": {
          "description": "Output only. Timestamp when this Annotation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp when this Annotation was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "etag": {
          "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
          "type": "string"
        },
        "annotationSource": {
          "description": "Output only. The source of the Annotation.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1UserActionReference"
        },
        "labels": {
          "description": "Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https:\/\/goo.gl\/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com\/\" and are immutable. Following system labels exist for each Annotation: * \"aiplatform.googleapis.com\/annotation_set_name\": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * \"aiplatform.googleapis.com\/payload_schema\": output only, its value is the payload_schema's title.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1UserActionReference": {
      "id": "GoogleCloudAiplatformV1UserActionReference",
      "description": "References an API call. It contains more information about long running operation and Jobs that are triggered by the API call.",
      "type": "object",
      "properties": {
        "operation": {
          "description": "For API calls that return a long running operation. Resource name of the long running operation. Format: 'projects\/{project}\/locations\/{location}\/operations\/{operation}'",
          "type": "string"
        },
        "dataLabelingJob": {
          "description": "For API calls that start a LabelingJob. Resource name of the LabelingJob. Format: 'projects\/{project}\/locations\/{location}\/dataLabelingJobs\/{data_labeling_job}'",
          "type": "string"
        },
        "method": {
          "description": "The method name of the API call. For example, \"\/google.cloud.aiplatform.v1alpha1.DatasetService.CreateDataset\"",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1Endpoint": {
      "id": "GoogleCloudAiplatformV1Endpoint",
      "description": "Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the Endpoint.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. The display name of the Endpoint. The name can be up to 128 characters long and can be consist of any UTF-8 characters.",
          "type": "string"
        },
        "description": {
          "description": "The description of the Endpoint.",
          "type": "string"
        },
        "deployedModels": {
          "description": "Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1DeployedModel"
          }
        },
        "trafficSplit": {
          "description": "A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "etag": {
          "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
          "type": "string"
        },
        "labels": {
          "description": "The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https:\/\/goo.gl\/xmQnxf for more information and examples of labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. Timestamp when this Endpoint was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp when this Endpoint was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "encryptionSpec": {
          "description": "Customer-managed encryption key spec for an Endpoint. If set, this Endpoint and all sub-resources of this Endpoint will be secured by this key.",
          "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1DeployedModel": {
      "id": "GoogleCloudAiplatformV1DeployedModel",
      "description": "A deployment of a Model. Endpoints contain one or more DeployedModels.",
      "type": "object",
      "properties": {
        "dedicatedResources": {
          "description": "A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.",
          "$ref": "GoogleCloudAiplatformV1DedicatedResources"
        },
        "automaticResources": {
          "description": "A description of resources that to large degree are decided by AI Platform, and require only a modest additional configuration.",
          "$ref": "GoogleCloudAiplatformV1AutomaticResources"
        },
        "id": {
          "description": "Output only. The ID of the DeployedModel.",
          "readOnly": true,
          "type": "string"
        },
        "model": {
          "description": "Required. The name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when the DeployedModel was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "serviceAccount": {
          "description": "The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.",
          "type": "string"
        },
        "disableContainerLogging": {
          "description": "For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Stackdriver Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https:\/\/cloud.google.com\/stackdriver\/pricing). User can disable container logging by setting this flag to true.",
          "type": "boolean"
        },
        "enableAccessLogging": {
          "description": "These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that Stackdriver logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1DedicatedResources": {
      "id": "GoogleCloudAiplatformV1DedicatedResources",
      "description": "A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.",
      "type": "object",
      "properties": {
        "machineSpec": {
          "description": "Required. Immutable. The specification of a single machine used by the prediction.",
          "$ref": "GoogleCloudAiplatformV1MachineSpec"
        },
        "minReplicaCount": {
          "description": "Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed. Note: if machine_spec.accelerator_count is above 0, currently the model will be always deployed precisely on min_replica_count.",
          "type": "integer",
          "format": "int32"
        },
        "maxReplicaCount": {
          "description": "Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1MachineSpec": {
      "id": "GoogleCloudAiplatformV1MachineSpec",
      "description": "Specification of a single machine.",
      "type": "object",
      "properties": {
        "machineType": {
          "description": "Immutable. The type of the machine. For the machine types supported for prediction, see https:\/\/tinyurl.com\/aip-docs\/predictions\/machine-types. For machine types supported for creating a custom training job, see https:\/\/tinyurl.com\/aip-docs\/training\/configure-compute. For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.",
          "type": "string"
        },
        "acceleratorType": {
          "description": "Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified accelerator type, which means no accelerator.",
            "Nvidia Tesla K80 GPU.",
            "Nvidia Tesla P100 GPU.",
            "Nvidia Tesla V100 GPU.",
            "Nvidia Tesla P4 GPU.",
            "Nvidia Tesla T4 GPU.",
            "TPU v2.",
            "TPU v3."
          ],
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "TPU_V2",
            "TPU_V3"
          ]
        },
        "acceleratorCount": {
          "description": "The number of accelerators to attach to the machine.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1AutomaticResources": {
      "id": "GoogleCloudAiplatformV1AutomaticResources",
      "description": "A description of resources that to large degree are decided by AI Platform, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.",
      "type": "object",
      "properties": {
        "minReplicaCount": {
          "description": "Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.",
          "type": "integer",
          "format": "int32"
        },
        "maxReplicaCount": {
          "description": "Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though AI Platform may be unable to scale beyond certain replica number.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1ListEndpointsResponse": {
      "id": "GoogleCloudAiplatformV1ListEndpointsResponse",
      "description": "Response message for EndpointService.ListEndpoints.",
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "List of Endpoints in the requested page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1Endpoint"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass to ListEndpointsRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1DeployModelRequest": {
      "id": "GoogleCloudAiplatformV1DeployModelRequest",
      "description": "Request message for EndpointService.DeployModel.",
      "type": "object",
      "properties": {
        "deployedModel": {
          "description": "Required. The DeployedModel to be created within the Endpoint. Note that Endpoint.traffic_split must be updated for the DeployedModel to start receiving traffic, either as part of this call, or via EndpointService.UpdateEndpoint.",
          "$ref": "GoogleCloudAiplatformV1DeployedModel"
        },
        "trafficSplit": {
          "description": "A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint's traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a \"0\" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint's traffic_split is not updated.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1UndeployModelRequest": {
      "id": "GoogleCloudAiplatformV1UndeployModelRequest",
      "description": "Request message for EndpointService.UndeployModel.",
      "type": "object",
      "properties": {
        "deployedModelId": {
          "description": "Required. The ID of the DeployedModel to be undeployed from the Endpoint.",
          "type": "string"
        },
        "trafficSplit": {
          "description": "If this field is provided, then the Endpoint's traffic_split will be overwritten with it. If last DeployedModel is being undeployed from the Endpoint, the [Endpoint.traffic_split] will always end up empty when this call returns. A DeployedModel will be successfully undeployed only if it doesn't have any traffic assigned to it when this method executes, or if this field unassigns any traffic to it.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1CustomJob": {
      "id": "GoogleCloudAiplatformV1CustomJob",
      "description": "Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded).",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of a CustomJob.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. The display name of the CustomJob. The name can be up to 128 characters long and can be consist of any UTF-8 characters.",
          "type": "string"
        },
        "jobSpec": {
          "description": "Required. Job spec.",
          "$ref": "GoogleCloudAiplatformV1CustomJobSpec"
        },
        "state": {
          "description": "Output only. The detailed state of the job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The job state is unspecified.",
            "The job has been just created or resumed and processing has not yet begun.",
            "The service is preparing to run the job.",
            "The job is in progress.",
            "The job completed successfully.",
            "The job failed.",
            "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "The job has been cancelled.",
            "The job has been stopped, and can be resumed."
          ],
          "enum": [
            "JOB_STATE_UNSPECIFIED",
            "JOB_STATE_QUEUED",
            "JOB_STATE_PENDING",
            "JOB_STATE_RUNNING",
            "JOB_STATE_SUCCEEDED",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_PAUSED"
          ]
        },
        "createTime": {
          "description": "Output only. Time when the CustomJob was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the CustomJob was most recently updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "description": "Output only. Only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
          "readOnly": true,
          "$ref": "GoogleRpcStatus"
        },
        "labels": {
          "description": "The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https:\/\/goo.gl\/xmQnxf for more information and examples of labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "encryptionSpec": {
          "description": "Customer-managed encryption key options for a CustomJob. If this is set, then all resources created by the CustomJob will be encrypted with the provided encryption key.",
          "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1CustomJobSpec": {
      "id": "GoogleCloudAiplatformV1CustomJobSpec",
      "description": "Represents the spec of a CustomJob.",
      "type": "object",
      "properties": {
        "workerPoolSpecs": {
          "description": "Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1WorkerPoolSpec"
          }
        },
        "scheduling": {
          "description": "Scheduling options for a CustomJob.",
          "$ref": "GoogleCloudAiplatformV1Scheduling"
        },
        "serviceAccount": {
          "description": "Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the AI Platform Custom Code Service Agent for the CustomJob's project is used.",
          "type": "string"
        },
        "network": {
          "description": "The full name of the Compute Engine [network](\/compute\/docs\/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects\/12345\/global\/networks\/myVPC`. [Format](\/compute\/docs\/reference\/rest\/v1\/networks\/insert) is of the form `projects\/{project}\/global\/networks\/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.",
          "type": "string"
        },
        "baseOutputDirectory": {
          "description": "The Cloud Storage location to store the output of this CustomJob or HyperparameterTuningJob. For HyperparameterTuningJob, the baseOutputDirectory of each child CustomJob backing a Trial is set to a subdirectory of name id under its parent HyperparameterTuningJob's baseOutputDirectory. The following AI Platform environment variables will be passed to containers or python modules when this field is set: For CustomJob: * AIP_MODEL_DIR = `\/model\/` * AIP_CHECKPOINT_DIR = `\/checkpoints\/` * AIP_TENSORBOARD_LOG_DIR = `\/logs\/` For CustomJob backing a Trial of HyperparameterTuningJob: * AIP_MODEL_DIR = `\/\/model\/` * AIP_CHECKPOINT_DIR = `\/\/checkpoints\/` * AIP_TENSORBOARD_LOG_DIR = `\/\/logs\/`",
          "$ref": "GoogleCloudAiplatformV1GcsDestination"
        }
      }
    },
    "GoogleCloudAiplatformV1WorkerPoolSpec": {
      "id": "GoogleCloudAiplatformV1WorkerPoolSpec",
      "description": "Represents the spec of a worker pool in a job.",
      "type": "object",
      "properties": {
        "containerSpec": {
          "description": "The custom container task.",
          "$ref": "GoogleCloudAiplatformV1ContainerSpec"
        },
        "pythonPackageSpec": {
          "description": "The Python packaged task.",
          "$ref": "GoogleCloudAiplatformV1PythonPackageSpec"
        },
        "machineSpec": {
          "description": "Optional. Immutable. The specification of a single machine.",
          "$ref": "GoogleCloudAiplatformV1MachineSpec"
        },
        "replicaCount": {
          "description": "Optional. The number of worker replicas to use for this worker pool.",
          "type": "string",
          "format": "int64"
        },
        "diskSpec": {
          "description": "Disk spec.",
          "$ref": "GoogleCloudAiplatformV1DiskSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1ContainerSpec": {
      "id": "GoogleCloudAiplatformV1ContainerSpec",
      "description": "The spec of a Container.",
      "type": "object",
      "properties": {
        "imageUri": {
          "description": "Required. The URI of a container image in the Container Registry that is to be run on each worker replica.",
          "type": "string"
        },
        "command": {
          "description": "The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "The arguments to be passed when starting the container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Environment variables to be passed to the container.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1EnvVar"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1EnvVar": {
      "id": "GoogleCloudAiplatformV1EnvVar",
      "description": "Represents an environment variable present in a Container or Python Module.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the environment variable. Must be a valid C identifier.",
          "type": "string"
        },
        "value": {
          "description": "Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1PythonPackageSpec": {
      "id": "GoogleCloudAiplatformV1PythonPackageSpec",
      "description": "The spec of a Python packaged code.",
      "type": "object",
      "properties": {
        "executorImageUri": {
          "description": "Required. The URI of a container image in the Container Registry that will run the provided python package. AI Platform provides wide range of executor images with pre-installed packages to meet users' various use cases. Only one of the provided images can be set here.",
          "type": "string"
        },
        "packageUris": {
          "description": "Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pythonModule": {
          "description": "Required. The Python module name to run after installing the packages.",
          "type": "string"
        },
        "args": {
          "description": "Command line arguments to be passed to the Python task.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Environment variables to be passed to the python module.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1EnvVar"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1DiskSpec": {
      "id": "GoogleCloudAiplatformV1DiskSpec",
      "description": "Represents the spec of disk options.",
      "type": "object",
      "properties": {
        "bootDiskType": {
          "description": "Type of the boot disk (default is \"pd-ssd\"). Valid values: \"pd-ssd\" (Persistent Disk Solid State Drive) or \"pd-standard\" (Persistent Disk Hard Disk Drive).",
          "type": "string"
        },
        "bootDiskSizeGb": {
          "description": "Size in GB of the boot disk (default is 100GB).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1Scheduling": {
      "id": "GoogleCloudAiplatformV1Scheduling",
      "description": "All parameters related to queuing and scheduling of custom jobs.",
      "type": "object",
      "properties": {
        "timeout": {
          "description": "The maximum job running time. The default is 7 days.",
          "type": "string",
          "format": "google-duration"
        },
        "restartJobOnWorkerRestart": {
          "description": "Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1ListCustomJobsResponse": {
      "id": "GoogleCloudAiplatformV1ListCustomJobsResponse",
      "description": "Response message for JobService.ListCustomJobs",
      "type": "object",
      "properties": {
        "customJobs": {
          "description": "List of CustomJobs in the requested page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1CustomJob"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass to ListCustomJobsRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1CancelCustomJobRequest": {
      "id": "GoogleCloudAiplatformV1CancelCustomJobRequest",
      "description": "Request message for JobService.CancelCustomJob.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1DataLabelingJob": {
      "id": "GoogleCloudAiplatformV1DataLabelingJob",
      "description": "DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the DataLabelingJob.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can be consist of any UTF-8 characters. Display name of a DataLabelingJob.",
          "type": "string"
        },
        "datasets": {
          "description": "Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "annotationLabels": {
          "description": "Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https:\/\/goo.gl\/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com\/\" and are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labelerCount": {
          "description": "Required. Number of labelers to work on each DataItem.",
          "type": "integer",
          "format": "int32"
        },
        "instructionUri": {
          "description": "Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.",
          "type": "string"
        },
        "inputsSchemaUri": {
          "description": "Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https:\/\/storage.googleapis.com\/google-cloud-aiplatform bucket in the \/schema\/datalabelingjob\/inputs\/ folder.",
          "type": "string"
        },
        "inputs": {
          "description": "Required. Input config parameters for the DataLabelingJob.",
          "type": "any"
        },
        "state": {
          "description": "Output only. The detailed state of the job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The job state is unspecified.",
            "The job has been just created or resumed and processing has not yet begun.",
            "The service is preparing to run the job.",
            "The job is in progress.",
            "The job completed successfully.",
            "The job failed.",
            "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "The job has been cancelled.",
            "The job has been stopped, and can be resumed."
          ],
          "enum": [
            "JOB_STATE_UNSPECIFIED",
            "JOB_STATE_QUEUED",
            "JOB_STATE_PENDING",
            "JOB_STATE_RUNNING",
            "JOB_STATE_SUCCEEDED",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_PAUSED"
          ]
        },
        "labelingProgress": {
          "description": "Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "currentSpend": {
          "description": "Output only. Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.",
          "readOnly": true,
          "$ref": "GoogleTypeMoney"
        },
        "createTime": {
          "description": "Output only. Timestamp when this DataLabelingJob was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp when this DataLabelingJob was updated most recently.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "description": "Output only. DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
          "readOnly": true,
          "$ref": "GoogleRpcStatus"
        },
        "labels": {
          "description": "The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https:\/\/goo.gl\/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com\/\" and are immutable. Following system labels exist for each DataLabelingJob: * \"aiplatform.googleapis.com\/schema\": output only, its value is the inputs_schema's title.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "specialistPools": {
          "description": "The SpecialistPools' resource names associated with this job.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encryptionSpec": {
          "description": "Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.",
          "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
        },
        "activeLearningConfig": {
          "description": "Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.",
          "$ref": "GoogleCloudAiplatformV1ActiveLearningConfig"
        }
      }
    },
    "GoogleTypeMoney": {
      "id": "GoogleTypeMoney",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1ActiveLearningConfig": {
      "id": "GoogleCloudAiplatformV1ActiveLearningConfig",
      "description": "Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.",
      "type": "object",
      "properties": {
        "maxDataItemCount": {
          "description": "Max number of human labeled DataItems.",
          "type": "string",
          "format": "int64"
        },
        "maxDataItemPercentage": {
          "description": "Max percent of total DataItems for human labeling.",
          "type": "integer",
          "format": "int32"
        },
        "sampleConfig": {
          "description": "Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.",
          "$ref": "GoogleCloudAiplatformV1SampleConfig"
        },
        "trainingConfig": {
          "description": "CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.",
          "$ref": "GoogleCloudAiplatformV1TrainingConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1SampleConfig": {
      "id": "GoogleCloudAiplatformV1SampleConfig",
      "description": "Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.",
      "type": "object",
      "properties": {
        "initialBatchSamplePercentage": {
          "description": "The percentage of data needed to be labeled in the first batch.",
          "type": "integer",
          "format": "int32"
        },
        "followingBatchSamplePercentage": {
          "description": "The percentage of data needed to be labeled in each following batch (except the first batch).",
          "type": "integer",
          "format": "int32"
        },
        "sampleStrategy": {
          "description": "Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.",
          "type": "string",
          "enumDescriptions": [
            "Default will be treated as UNCERTAINTY.",
            "Sample the most uncertain data to label."
          ],
          "enum": [
            "SAMPLE_STRATEGY_UNSPECIFIED",
            "UNCERTAINTY"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1TrainingConfig": {
      "id": "GoogleCloudAiplatformV1TrainingConfig",
      "description": "CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.",
      "type": "object",
      "properties": {
        "timeoutTrainingMilliHours": {
          "description": "The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1ListDataLabelingJobsResponse": {
      "id": "GoogleCloudAiplatformV1ListDataLabelingJobsResponse",
      "description": "Response message for JobService.ListDataLabelingJobs.",
      "type": "object",
      "properties": {
        "dataLabelingJobs": {
          "description": "A list of DataLabelingJobs that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1DataLabelingJob"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1CancelDataLabelingJobRequest": {
      "id": "GoogleCloudAiplatformV1CancelDataLabelingJobRequest",
      "description": "Request message for DataLabelingJobService.CancelDataLabelingJob.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1HyperparameterTuningJob": {
      "id": "GoogleCloudAiplatformV1HyperparameterTuningJob",
      "description": "Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study specification and multiple CustomJobs with identical CustomJob specification.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the HyperparameterTuningJob.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can be consist of any UTF-8 characters.",
          "type": "string"
        },
        "studySpec": {
          "description": "Required. Study configuration of the HyperparameterTuningJob.",
          "$ref": "GoogleCloudAiplatformV1StudySpec"
        },
        "maxTrialCount": {
          "description": "Required. The desired total number of Trials.",
          "type": "integer",
          "format": "int32"
        },
        "parallelTrialCount": {
          "description": "Required. The desired number of Trials to run in parallel.",
          "type": "integer",
          "format": "int32"
        },
        "maxFailedTrialCount": {
          "description": "The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, AI Platform decides how many Trials must fail before the whole job fails.",
          "type": "integer",
          "format": "int32"
        },
        "trialJobSpec": {
          "description": "Required. The spec of a trial job. The same spec applies to the CustomJobs created in all the trials.",
          "$ref": "GoogleCloudAiplatformV1CustomJobSpec"
        },
        "trials": {
          "description": "Output only. Trials of the HyperparameterTuningJob.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1Trial"
          }
        },
        "state": {
          "description": "Output only. The detailed state of the job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The job state is unspecified.",
            "The job has been just created or resumed and processing has not yet begun.",
            "The service is preparing to run the job.",
            "The job is in progress.",
            "The job completed successfully.",
            "The job failed.",
            "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "The job has been cancelled.",
            "The job has been stopped, and can be resumed."
          ],
          "enum": [
            "JOB_STATE_UNSPECIFIED",
            "JOB_STATE_QUEUED",
            "JOB_STATE_PENDING",
            "JOB_STATE_RUNNING",
            "JOB_STATE_SUCCEEDED",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_PAUSED"
          ]
        },
        "createTime": {
          "description": "Output only. Time when the HyperparameterTuningJob was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the HyperparameterTuningJob was most recently updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "description": "Output only. Only populated when job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.",
          "readOnly": true,
          "$ref": "GoogleRpcStatus"
        },
        "labels": {
          "description": "The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https:\/\/goo.gl\/xmQnxf for more information and examples of labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "encryptionSpec": {
          "description": "Customer-managed encryption key options for a HyperparameterTuningJob. If this is set, then all resources created by the HyperparameterTuningJob will be encrypted with the provided encryption key.",
          "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpec": {
      "id": "GoogleCloudAiplatformV1StudySpec",
      "description": "Represents specification of a Study.",
      "type": "object",
      "properties": {
        "metrics": {
          "description": "Required. Metric specs for the Study.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1StudySpecMetricSpec"
          }
        },
        "parameters": {
          "description": "Required. The set of parameters to tune.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpec"
          }
        },
        "algorithm": {
          "description": "The search algorithm specified for the Study.",
          "type": "string",
          "enumDescriptions": [
            "The default algorithm used by AI Platform Optimization service.",
            "Simple grid search within the feasible space. To use grid search, all parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.",
            "Simple random search within the feasible space."
          ],
          "enum": [
            "ALGORITHM_UNSPECIFIED",
            "GRID_SEARCH",
            "RANDOM_SEARCH"
          ]
        },
        "observationNoise": {
          "description": "The observation noise level of the study. Currently only supported by the Vizier service. Not supported by HyperparamterTuningJob or TrainingPipeline.",
          "type": "string",
          "enumDescriptions": [
            "The default noise level chosen by the AI Platform service.",
            "AI Platform Vizier assumes that the objective function is (nearly) perfectly reproducible, and will never repeat the same Trial parameters.",
            "AI Platform Vizier will estimate the amount of noise in metric evaluations, it may repeat the same Trial parameters more than once."
          ],
          "enum": [
            "OBSERVATION_NOISE_UNSPECIFIED",
            "LOW",
            "HIGH"
          ]
        },
        "measurementSelectionType": {
          "description": "Describe which measurement selection type will be used",
          "type": "string",
          "enumDescriptions": [
            "Will be treated as LAST_MEASUREMENT.",
            "Use the last measurement reported.",
            "Use the best measurement reported."
          ],
          "enum": [
            "MEASUREMENT_SELECTION_TYPE_UNSPECIFIED",
            "LAST_MEASUREMENT",
            "BEST_MEASUREMENT"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecMetricSpec": {
      "id": "GoogleCloudAiplatformV1StudySpecMetricSpec",
      "description": "Represents a metric to optimize.",
      "type": "object",
      "properties": {
        "metricId": {
          "description": "Required. The ID of the metric. Must not contain whitespaces and must be unique amongst all MetricSpecs.",
          "type": "string"
        },
        "goal": {
          "description": "Required. The optimization goal of the metric.",
          "type": "string",
          "enumDescriptions": [
            "Goal Type will default to maximize.",
            "Maximize the goal metric.",
            "Minimize the goal metric."
          ],
          "enum": [
            "GOAL_TYPE_UNSPECIFIED",
            "MAXIMIZE",
            "MINIMIZE"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpec": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpec",
      "description": "Represents a single parameter to optimize.",
      "type": "object",
      "properties": {
        "doubleValueSpec": {
          "description": "The value spec for a 'DOUBLE' parameter.",
          "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec"
        },
        "integerValueSpec": {
          "description": "The value spec for an 'INTEGER' parameter.",
          "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec"
        },
        "categoricalValueSpec": {
          "description": "The value spec for a 'CATEGORICAL' parameter.",
          "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec"
        },
        "discreteValueSpec": {
          "description": "The value spec for a 'DISCRETE' parameter.",
          "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec"
        },
        "parameterId": {
          "description": "Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs.",
          "type": "string"
        },
        "scaleType": {
          "description": "How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.",
          "type": "string",
          "enumDescriptions": [
            "By default, no scaling is applied.",
            "Scales the feasible space to (0, 1) linearly.",
            "Scales the feasible space logarithmically to (0, 1). The entire feasible space must be strictly positive.",
            "Scales the feasible space \"reverse\" logarithmically to (0, 1). The result is that values close to the top of the feasible space are spread out more than points near the bottom. The entire feasible space must be strictly positive."
          ],
          "enum": [
            "SCALE_TYPE_UNSPECIFIED",
            "UNIT_LINEAR_SCALE",
            "UNIT_LOG_SCALE",
            "UNIT_REVERSE_LOG_SCALE"
          ]
        },
        "conditionalParameterSpecs": {
          "description": "A conditional parameter node is active if the parameter's value matches the conditional node's parent_value_condition. If two items in conditional_parameter_specs have the same name, they must have disjoint parent_value_condition.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec",
      "description": "Value specification for a parameter in `DOUBLE` type.",
      "type": "object",
      "properties": {
        "minValue": {
          "description": "Required. Inclusive minimum value of the parameter.",
          "type": "number",
          "format": "double"
        },
        "maxValue": {
          "description": "Required. Inclusive maximum value of the parameter.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec",
      "description": "Value specification for a parameter in `INTEGER` type.",
      "type": "object",
      "properties": {
        "minValue": {
          "description": "Required. Inclusive minimum value of the parameter.",
          "type": "string",
          "format": "int64"
        },
        "maxValue": {
          "description": "Required. Inclusive maximum value of the parameter.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec",
      "description": "Value specification for a parameter in `CATEGORICAL` type.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. The list of possible categories.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec",
      "description": "Value specification for a parameter in `DISCRETE` type.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. A list of possible values. The list should be in increasing order and at least 1e-10 apart. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec",
      "description": "Represents a parameter spec with condition from its parent parameter.",
      "type": "object",
      "properties": {
        "parentDiscreteValues": {
          "description": "The spec for matching values from a parent parameter of `DISCRETE` type.",
          "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition"
        },
        "parentIntValues": {
          "description": "The spec for matching values from a parent parameter of `INTEGER` type.",
          "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition"
        },
        "parentCategoricalValues": {
          "description": "The spec for matching values from a parent parameter of `CATEGORICAL` type.",
          "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition"
        },
        "parameterSpec": {
          "description": "Required. The spec for a conditional parameter.",
          "$ref": "GoogleCloudAiplatformV1StudySpecParameterSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition",
      "description": "Represents the spec to match discrete values from parent parameter.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. Matches values of the parent parameter of 'DISCRETE' type. All values must exist in `discrete_value_spec` of parent parameter. The Epsilon of the value matching is 1e-10.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition",
      "description": "Represents the spec to match integer values from parent parameter.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. Matches values of the parent parameter of 'INTEGER' type. All values must lie in `integer_value_spec` of parent parameter.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition": {
      "id": "GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition",
      "description": "Represents the spec to match categorical values from parent parameter.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. Matches values of the parent parameter of 'CATEGORICAL' type. All values must exist in `categorical_value_spec` of parent parameter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1Trial": {
      "id": "GoogleCloudAiplatformV1Trial",
      "description": "A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the Trial assigned by the service.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "Output only. The identifier of the Trial assigned by the service.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. The detailed state of the Trial.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The Trial state is unspecified.",
            "Indicates that a specific Trial has been requested, but it has not yet been suggested by the service.",
            "Indicates that the Trial has been suggested.",
            "Indicates that the Trial should stop according to the service.",
            "Indicates that the Trial is completed successfully.",
            "Indicates that the Trial should not be attempted again. The service will set a Trial to INFEASIBLE when it's done but missing the final_measurement."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "REQUESTED",
            "ACTIVE",
            "STOPPING",
            "SUCCEEDED",
            "INFEASIBLE"
          ]
        },
        "parameters": {
          "description": "Output only. The parameters of the Trial.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1TrialParameter"
          }
        },
        "finalMeasurement": {
          "description": "Output only. The final measurement containing the objective value.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1Measurement"
        },
        "startTime": {
          "description": "Output only. Time when the Trial was started.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "customJob": {
          "description": "Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1TrialParameter": {
      "id": "GoogleCloudAiplatformV1TrialParameter",
      "description": "A message representing a parameter to be tuned.",
      "type": "object",
      "properties": {
        "parameterId": {
          "description": "Output only. The ID of the parameter. The parameter should be defined in StudySpec's Parameters.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Output only. The value of the parameter. `number_value` will be set if a parameter defined in StudySpec is in type 'INTEGER', 'DOUBLE' or 'DISCRETE'. `string_value` will be set if a parameter defined in StudySpec is in type 'CATEGORICAL'.",
          "readOnly": true,
          "type": "any"
        }
      }
    },
    "GoogleCloudAiplatformV1Measurement": {
      "id": "GoogleCloudAiplatformV1Measurement",
      "description": "A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values.",
      "type": "object",
      "properties": {
        "stepCount": {
          "description": "Output only. The number of steps the machine learning model has been trained for. Must be non-negative.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "metrics": {
          "description": "Output only. A list of metrics got by evaluating the objective functions using suggested Parameter values.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1MeasurementMetric"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1MeasurementMetric": {
      "id": "GoogleCloudAiplatformV1MeasurementMetric",
      "description": "A message representing a metric in the measurement.",
      "type": "object",
      "properties": {
        "metricId": {
          "description": "Output only. The ID of the Metric. The Metric should be defined in StudySpec's Metrics.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Output only. The value for this metric.",
          "readOnly": true,
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse": {
      "id": "GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse",
      "description": "Response message for JobService.ListHyperparameterTuningJobs",
      "type": "object",
      "properties": {
        "hyperparameterTuningJobs": {
          "description": "List of HyperparameterTuningJobs in the requested page. HyperparameterTuningJob.trials of the jobs will be not be returned.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1HyperparameterTuningJob"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass to ListHyperparameterTuningJobsRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest": {
      "id": "GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest",
      "description": "Request message for JobService.CancelHyperparameterTuningJob.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1BatchPredictionJob": {
      "id": "GoogleCloudAiplatformV1BatchPredictionJob",
      "description": "A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the BatchPredictionJob.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. The user-defined name of this BatchPredictionJob.",
          "type": "string"
        },
        "model": {
          "description": "Required. The name of the Model that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources.",
          "type": "string"
        },
        "inputConfig": {
          "description": "Required. Input configuration of the instances on which predictions are performed. The schema of any single instance may be specified via the Model's PredictSchemata's instance_schema_uri.",
          "$ref": "GoogleCloudAiplatformV1BatchPredictionJobInputConfig"
        },
        "modelParameters": {
          "description": "The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.",
          "type": "any"
        },
        "outputConfig": {
          "description": "Required. The Configuration specifying where output predictions should be written. The schema of any single prediction may be specified as a concatenation of Model's PredictSchemata's instance_schema_uri and prediction_schema_uri.",
          "$ref": "GoogleCloudAiplatformV1BatchPredictionJobOutputConfig"
        },
        "dedicatedResources": {
          "description": "The config of resources used by the Model during the batch prediction. If the Model supports DEDICATED_RESOURCES this config may be provided (and the job will use these resources), if the Model doesn't support AUTOMATIC_RESOURCES, this config must be provided.",
          "$ref": "GoogleCloudAiplatformV1BatchDedicatedResources"
        },
        "manualBatchTuningParameters": {
          "description": "Immutable. Parameters configuring the batch behavior. Currently only applicable when dedicated_resources are used (in other cases AI Platform does the tuning itself).",
          "$ref": "GoogleCloudAiplatformV1ManualBatchTuningParameters"
        },
        "outputInfo": {
          "description": "Output only. Information further describing the output of this job.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1BatchPredictionJobOutputInfo"
        },
        "state": {
          "description": "Output only. The detailed state of the job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The job state is unspecified.",
            "The job has been just created or resumed and processing has not yet begun.",
            "The service is preparing to run the job.",
            "The job is in progress.",
            "The job completed successfully.",
            "The job failed.",
            "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "The job has been cancelled.",
            "The job has been stopped, and can be resumed."
          ],
          "enum": [
            "JOB_STATE_UNSPECIFIED",
            "JOB_STATE_QUEUED",
            "JOB_STATE_PENDING",
            "JOB_STATE_RUNNING",
            "JOB_STATE_SUCCEEDED",
            "JOB_STATE_FAILED",
            "JOB_STATE_CANCELLING",
            "JOB_STATE_CANCELLED",
            "JOB_STATE_PAUSED"
          ]
        },
        "error": {
          "description": "Output only. Only populated when the job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.",
          "readOnly": true,
          "$ref": "GoogleRpcStatus"
        },
        "partialFailures": {
          "description": "Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard GCP error details.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "resourcesConsumed": {
          "description": "Output only. Information about resources that had been consumed by this job. Provided in real time at best effort basis, as well as a final value once the job completes. Note: This field currently may be not populated for batch predictions that use AutoML Models.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1ResourcesConsumed"
        },
        "completionStats": {
          "description": "Output only. Statistics on completed and failed prediction instances.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1CompletionStats"
        },
        "createTime": {
          "description": "Output only. Time when the BatchPredictionJob was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the BatchPredictionJob was most recently updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https:\/\/goo.gl\/xmQnxf for more information and examples of labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "encryptionSpec": {
          "description": "Customer-managed encryption key options for a BatchPredictionJob. If this is set, then all resources created by the BatchPredictionJob will be encrypted with the provided encryption key.",
          "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1BatchPredictionJobInputConfig": {
      "id": "GoogleCloudAiplatformV1BatchPredictionJobInputConfig",
      "description": "Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model's supported input formats, and how instances should be expressed via any of them.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "The Cloud Storage location for the input instances.",
          "$ref": "GoogleCloudAiplatformV1GcsSource"
        },
        "bigquerySource": {
          "description": "The BigQuery location of the input table. The schema of the table should be in the format described by the given context OpenAPI Schema, if one is provided. The table may contain additional columns that are not described by the schema, and they will be ignored.",
          "$ref": "GoogleCloudAiplatformV1BigQuerySource"
        },
        "instancesFormat": {
          "description": "Required. The format in which instances are given, must be one of the Model's supported_input_storage_formats.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1BigQuerySource": {
      "id": "GoogleCloudAiplatformV1BigQuerySource",
      "description": "The BigQuery location for the input content.",
      "type": "object",
      "properties": {
        "inputUri": {
          "description": "Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms: * BigQuery path. For example: `bq:\/\/projectId.bqDatasetId.bqTableId`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1BatchPredictionJobOutputConfig": {
      "id": "GoogleCloudAiplatformV1BatchPredictionJobOutputConfig",
      "description": "Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for supported output formats, and how predictions are expressed via any of them.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage location of the directory where the output is to be written to. In the given directory a new directory is created. Its name is `prediction--`, where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. Inside of it files `predictions_0001.`, `predictions_0002.`, ..., `predictions_N.` are created where `` depends on chosen predictions_format, and N may equal 0001 and depends on the total number of successfully predicted instances. If the Model has both instance and prediction schemata defined then each such file contains predictions as per the predictions_format. If prediction for any instance failed (partially or completely), then an additional `errors_0001.`, `errors_0002.`,..., `errors_N.` files are created (N depends on total number of failed predictions). These files contain the failed instances, as per their schema, followed by an additional `error` field which as value has [`google.rpc.Status`](Status) containing only `code` and `message` fields.",
          "$ref": "GoogleCloudAiplatformV1GcsDestination"
        },
        "bigqueryDestination": {
          "description": "The BigQuery project location where the output is to be written to. In the given project a new dataset is created with name `prediction__` where is made BigQuery-dataset-name compatible (for example, most special characters become underscores), and timestamp is in YYYY_MM_DDThh_mm_ss_sssZ \"based on ISO-8601\" format. In the dataset two tables will be created, `predictions`, and `errors`. If the Model has both instance and prediction schemata defined then the tables have columns as follows: The `predictions` table contains instances for which the prediction succeeded, it has columns as per a concatenation of the Model's instance and prediction schemata. The `errors` table contains rows for which the prediction has failed, it has instance columns, as per the instance schema, followed by a single \"errors\" column, which as values has [`google.rpc.Status`](Status) represented as a STRUCT, and containing only `code` and `message`.",
          "$ref": "GoogleCloudAiplatformV1BigQueryDestination"
        },
        "predictionsFormat": {
          "description": "Required. The format in which AI Platform gives the predictions, must be one of the Model's supported_output_storage_formats.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1BigQueryDestination": {
      "id": "GoogleCloudAiplatformV1BigQueryDestination",
      "description": "The BigQuery location for the output content.",
      "type": "object",
      "properties": {
        "outputUri": {
          "description": "Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq:\/\/projectId` or `bq:\/\/projectId.bqDatasetId.bqTableId`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1BatchDedicatedResources": {
      "id": "GoogleCloudAiplatformV1BatchDedicatedResources",
      "description": "A description of resources that are used for performing batch operations, are dedicated to a Model, and need manual configuration.",
      "type": "object",
      "properties": {
        "machineSpec": {
          "description": "Required. Immutable. The specification of a single machine.",
          "$ref": "GoogleCloudAiplatformV1MachineSpec"
        },
        "startingReplicaCount": {
          "description": "Immutable. The number of machine replicas used at the start of the batch operation. If not set, AI Platform decides starting number, not greater than max_replica_count",
          "type": "integer",
          "format": "int32"
        },
        "maxReplicaCount": {
          "description": "Immutable. The maximum number of machine replicas the batch operation may be scaled to. The default value is 10.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1ManualBatchTuningParameters": {
      "id": "GoogleCloudAiplatformV1ManualBatchTuningParameters",
      "description": "Manual batch tuning parameters.",
      "type": "object",
      "properties": {
        "batchSize": {
          "description": "Immutable. The number of the records (e.g. instances) of the operation given in each batch to a machine replica. Machine type, and size of a single record should be considered when setting this parameter, higher value speeds up the batch operation's execution, but too high value will result in a whole batch not fitting in a machine's memory, and the whole operation will fail. The default value is 4.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1BatchPredictionJobOutputInfo": {
      "id": "GoogleCloudAiplatformV1BatchPredictionJobOutputInfo",
      "description": "Further describes this job's output. Supplements output_config.",
      "type": "object",
      "properties": {
        "gcsOutputDirectory": {
          "description": "Output only. The full path of the Cloud Storage directory created, into which the prediction output is written.",
          "readOnly": true,
          "type": "string"
        },
        "bigqueryOutputDataset": {
          "description": "Output only. The path of the BigQuery dataset created, in `bq:\/\/projectId.bqDatasetId` format, into which the prediction output is written.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ResourcesConsumed": {
      "id": "GoogleCloudAiplatformV1ResourcesConsumed",
      "description": "Statistics information about resource consumption.",
      "type": "object",
      "properties": {
        "replicaHours": {
          "description": "Output only. The number of replica hours used. Note that many replicas may run in parallel, and additionally any given work may be queued for some time. Therefore this value is not strictly related to wall time.",
          "readOnly": true,
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1CompletionStats": {
      "id": "GoogleCloudAiplatformV1CompletionStats",
      "description": "Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch.",
      "type": "object",
      "properties": {
        "successfulCount": {
          "description": "Output only. The number of entities that had been processed successfully.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "failedCount": {
          "description": "Output only. The number of entities for which any error was encountered.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "incompleteCount": {
          "description": "Output only. In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected).",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1ListBatchPredictionJobsResponse": {
      "id": "GoogleCloudAiplatformV1ListBatchPredictionJobsResponse",
      "description": "Response message for JobService.ListBatchPredictionJobs",
      "type": "object",
      "properties": {
        "batchPredictionJobs": {
          "description": "List of BatchPredictionJobs in the requested page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJob"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass to ListBatchPredictionJobsRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1CancelBatchPredictionJobRequest": {
      "id": "GoogleCloudAiplatformV1CancelBatchPredictionJobRequest",
      "description": "Request message for JobService.CancelBatchPredictionJob.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1SearchMigratableResourcesRequest": {
      "id": "GoogleCloudAiplatformV1SearchMigratableResourcesRequest",
      "description": "Request message for MigrationService.SearchMigratableResources.",
      "type": "object",
      "properties": {
        "pageSize": {
          "description": "The standard page size. The default and maximum value is 100.",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard page token.",
          "type": "string"
        },
        "filter": {
          "description": "Supported filters are: * Resource type: For a specific type of MigratableResource. * `ml_engine_model_version:*` * `automl_model:*`, * `automl_dataset:*` * `data_labeling_dataset:*`. * Migrated or not: Filter migrated resource or not by last_migrate_time. * `last_migrate_time:*` will filter migrated resources. * `NOT last_migrate_time:*` will filter not yet migrated resources.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SearchMigratableResourcesResponse": {
      "id": "GoogleCloudAiplatformV1SearchMigratableResourcesResponse",
      "description": "Response message for MigrationService.SearchMigratableResources.",
      "type": "object",
      "properties": {
        "migratableResources": {
          "description": "All migratable resources that can be migrated to the location specified in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1MigratableResource"
          }
        },
        "nextPageToken": {
          "description": "The standard next-page token. The migratable_resources may not fill page_size in SearchMigratableResourcesRequest even when there are subsequent pages.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1MigratableResource": {
      "id": "GoogleCloudAiplatformV1MigratableResource",
      "description": "Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com.",
      "type": "object",
      "properties": {
        "mlEngineModelVersion": {
          "description": "Output only. Represents one Version in ml.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion"
        },
        "automlModel": {
          "description": "Output only. Represents one Model in automl.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1MigratableResourceAutomlModel"
        },
        "automlDataset": {
          "description": "Output only. Represents one Dataset in automl.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1MigratableResourceAutomlDataset"
        },
        "dataLabelingDataset": {
          "description": "Output only. Represents one Dataset in datalabeling.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset"
        },
        "lastMigrateTime": {
          "description": "Output only. Timestamp when the last migration attempt on this MigratableResource started. Will not be set if there's no migration attempt on this MigratableResource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "lastUpdateTime": {
          "description": "Output only. Timestamp when this MigratableResource was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion": {
      "id": "GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion",
      "description": "Represents one model Version in ml.googleapis.com.",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "The ml.googleapis.com endpoint that this model Version currently lives in. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com",
          "type": "string"
        },
        "version": {
          "description": "Full resource name of ml engine model Version. Format: `projects\/{project}\/models\/{model}\/versions\/{version}`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1MigratableResourceAutomlModel": {
      "id": "GoogleCloudAiplatformV1MigratableResourceAutomlModel",
      "description": "Represents one Model in automl.googleapis.com.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Full resource name of automl Model. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "The Model's display name in automl.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1MigratableResourceAutomlDataset": {
      "id": "GoogleCloudAiplatformV1MigratableResourceAutomlDataset",
      "description": "Represents one Dataset in automl.googleapis.com.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Full resource name of automl Dataset. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "The Dataset's display name in automl.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset": {
      "id": "GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset",
      "description": "Represents one Dataset in datalabeling.googleapis.com.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Full resource name of data labeling Dataset. Format: `projects\/{project}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "The Dataset's display name in datalabeling.googleapis.com.",
          "type": "string"
        },
        "dataLabelingAnnotatedDatasets": {
          "description": "The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to the data labeling Dataset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset": {
      "id": "GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset",
      "description": "Represents one AnnotatedDataset in datalabeling.googleapis.com.",
      "type": "object",
      "properties": {
        "annotatedDataset": {
          "description": "Full resource name of data labeling AnnotatedDataset. Format: `projects\/{project}\/datasets\/{dataset}\/annotatedDatasets\/{annotated_dataset}`.",
          "type": "string"
        },
        "annotatedDatasetDisplayName": {
          "description": "The AnnotatedDataset's display name in datalabeling.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1BatchMigrateResourcesRequest": {
      "id": "GoogleCloudAiplatformV1BatchMigrateResourcesRequest",
      "description": "Request message for MigrationService.BatchMigrateResources.",
      "type": "object",
      "properties": {
        "migrateResourceRequests": {
          "description": "Required. The request messages specifying the resources to migrate. They must be in the same location as the destination. Up to 50 resources can be migrated in one batch.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1MigrateResourceRequest"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1MigrateResourceRequest": {
      "id": "GoogleCloudAiplatformV1MigrateResourceRequest",
      "description": "Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to AI Platform.",
      "type": "object",
      "properties": {
        "migrateMlEngineModelVersionConfig": {
          "description": "Config for migrating Version in ml.googleapis.com to AI Platform's Model.",
          "$ref": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig"
        },
        "migrateAutomlModelConfig": {
          "description": "Config for migrating Model in automl.googleapis.com to AI Platform's Model.",
          "$ref": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig"
        },
        "migrateAutomlDatasetConfig": {
          "description": "Config for migrating Dataset in automl.googleapis.com to AI Platform's Dataset.",
          "$ref": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig"
        },
        "migrateDataLabelingDatasetConfig": {
          "description": "Config for migrating Dataset in datalabeling.googleapis.com to AI Platform's Dataset.",
          "$ref": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig": {
      "id": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig",
      "description": "Config for migrating version in ml.googleapis.com to AI Platform's Model.",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "Required. The ml.googleapis.com endpoint that this model version should be migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com",
          "type": "string"
        },
        "modelVersion": {
          "description": "Required. Full resource name of ml engine model version. Format: `projects\/{project}\/models\/{model}\/versions\/{version}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "Required. Display name of the model in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig": {
      "id": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig",
      "description": "Config for migrating Model in automl.googleapis.com to AI Platform's Model.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Required. Full resource name of automl Model. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "Optional. Display name of the model in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig": {
      "id": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig",
      "description": "Config for migrating Dataset in automl.googleapis.com to AI Platform's Dataset.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Required. Full resource name of automl Dataset. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "Required. Display name of the Dataset in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig": {
      "id": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig",
      "description": "Config for migrating Dataset in datalabeling.googleapis.com to AI Platform's Dataset.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Required. Full resource name of data labeling Dataset. Format: `projects\/{project}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "Optional. Display name of the Dataset in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        },
        "migrateDataLabelingAnnotatedDatasetConfigs": {
          "description": "Optional. Configs for migrating AnnotatedDataset in datalabeling.googleapis.com to AI Platform's SavedQuery. The specified AnnotatedDatasets have to belong to the datalabeling Dataset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig": {
      "id": "GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig",
      "description": "Config for migrating AnnotatedDataset in datalabeling.googleapis.com to AI Platform's SavedQuery.",
      "type": "object",
      "properties": {
        "annotatedDataset": {
          "description": "Required. Full resource name of data labeling AnnotatedDataset. Format: `projects\/{project}\/datasets\/{dataset}\/annotatedDatasets\/{annotated_dataset}`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1UploadModelRequest": {
      "id": "GoogleCloudAiplatformV1UploadModelRequest",
      "description": "Request message for ModelService.UploadModel.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Required. The Model to create.",
          "$ref": "GoogleCloudAiplatformV1Model"
        }
      }
    },
    "GoogleCloudAiplatformV1Model": {
      "id": "GoogleCloudAiplatformV1Model",
      "description": "A trained machine learning Model.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the Model.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The display name of the Model. The name can be up to 128 characters long and can be consist of any UTF-8 characters.",
          "type": "string"
        },
        "description": {
          "description": "The description of the Model.",
          "type": "string"
        },
        "predictSchemata": {
          "description": "The schemata that describe formats of the Model's predictions and explanations as given and returned via PredictionService.Predict and PredictionService.Explain.",
          "$ref": "GoogleCloudAiplatformV1PredictSchemata"
        },
        "metadataSchemaUri": {
          "description": "Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object). AutoML Models always have this field populated by AI Platform, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
          "type": "string"
        },
        "metadata": {
          "description": "Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information.",
          "type": "any"
        },
        "supportedExportFormats": {
          "description": "Output only. The formats in which this Model may be exported. If empty, this Model is not available for export.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1ModelExportFormat"
          }
        },
        "trainingPipeline": {
          "description": "Output only. The resource name of the TrainingPipeline that uploaded this Model, if any.",
          "readOnly": true,
          "type": "string"
        },
        "containerSpec": {
          "description": "Input only. The specification of the container that is to be used when deploying this Model. The specification is ingested upon ModelService.UploadModel, and all binaries it contains are copied and stored internally by AI Platform. Not present for AutoML Models.",
          "$ref": "GoogleCloudAiplatformV1ModelContainerSpec"
        },
        "artifactUri": {
          "description": "Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not present for AutoML Models.",
          "type": "string"
        },
        "supportedDeploymentResourcesTypes": {
          "description": "Output only. When this Model is deployed, its prediction resources are described by the `prediction_resources` field of the Endpoint.deployed_models object. Because not all Models support all resource configuration types, the configuration types this Model supports are listed here. If no configuration types are listed, the Model cannot be deployed to an Endpoint and does not support online predictions (PredictionService.Predict or PredictionService.Explain). Such a Model can serve predictions by using a BatchPredictionJob, if it has at least one entry each in supported_input_storage_formats and supported_output_storage_formats.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Should not be used.",
              "Resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.",
              "Resources that to large degree are decided by AI Platform, and require only a modest additional configuration."
            ],
            "enum": [
              "DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED",
              "DEDICATED_RESOURCES",
              "AUTOMATIC_RESOURCES"
            ]
          }
        },
        "supportedInputStorageFormats": {
          "description": "Output only. The formats this Model supports in BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri exists, the instances should be given as per that schema. The possible formats are: * `jsonl` The JSON Lines format, where each instance is a single line. Uses GcsSource. * `csv` The CSV format, where each instance is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsSource. * `tf-record` The TFRecord format, where each instance is a single record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip` Similar to `tf-record`, but the file is gzipped. Uses GcsSource. * `bigquery` Each instance is a single row in BigQuery. Uses BigQuerySource. * `file-list` Each line of the file is the location of an instance to process, uses `gcs_source` field of the InputConfig object. If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedOutputStorageFormats": {
          "description": "Output only. The formats this Model supports in BatchPredictionJob.output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.prediction_schema_uri exist, the predictions are returned together with their instances. In other words, the prediction has the original instance data first, followed by the actual prediction content (as per the schema). The possible formats are: * `jsonl` The JSON Lines format, where each prediction is a single line. Uses GcsDestination. * `csv` The CSV format, where each prediction is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsDestination. * `bigquery` Each prediction is a single row in a BigQuery table, uses BigQueryDestination . If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. Timestamp when this Model was uploaded into AI Platform.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp when this Model was most recently updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deployedModels": {
          "description": "Output only. The pointers to DeployedModels created from this Model. Note that Model could have been deployed to Endpoints in different Locations.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1DeployedModelRef"
          }
        },
        "etag": {
          "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
          "type": "string"
        },
        "labels": {
          "description": "The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https:\/\/goo.gl\/xmQnxf for more information and examples of labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "encryptionSpec": {
          "description": "Customer-managed encryption key spec for a Model. If set, this Model and all sub-resources of this Model will be secured by this key.",
          "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1PredictSchemata": {
      "id": "GoogleCloudAiplatformV1PredictSchemata",
      "description": "Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.",
      "type": "object",
      "properties": {
        "instanceSchemaUri": {
          "description": "Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object). AutoML Models always have this field populated by AI Platform. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
          "type": "string"
        },
        "parametersSchemaUri": {
          "description": "Immutable. Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object). AutoML Models always have this field populated by AI Platform, if no parameters are supported, then it is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
          "type": "string"
        },
        "predictionSchemaUri": {
          "description": "Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object). AutoML Models always have this field populated by AI Platform. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ModelExportFormat": {
      "id": "GoogleCloudAiplatformV1ModelExportFormat",
      "description": "Represents export format supported by the Model. All formats export to Google Cloud Storage.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https:\/\/cloud.google.com\/edge-tpu\/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https:\/\/www.tensorflow.org\/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code.",
          "readOnly": true,
          "type": "string"
        },
        "exportableContents": {
          "description": "Output only. The content of this Model that may be exported.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Should not be used.",
              "Model artifact and any of its supported files. Will be exported to the location specified by the `artifactDestination` field of the ExportModelRequest.output_config object.",
              "The container image that is to be used when deploying this Model. Will be exported to the location specified by the `imageDestination` field of the ExportModelRequest.output_config object."
            ],
            "enum": [
              "EXPORTABLE_CONTENT_UNSPECIFIED",
              "ARTIFACT",
              "IMAGE"
            ]
          }
        }
      }
    },
    "GoogleCloudAiplatformV1ModelContainerSpec": {
      "id": "GoogleCloudAiplatformV1ModelContainerSpec",
      "description": "Specification of a container for serving predictions. This message is a subset of the Kubernetes Container v1 core [specification](https:\/\/tinyurl.com\/k8s-io-api\/v1.18\/#container-v1-core).",
      "type": "object",
      "properties": {
        "imageUri": {
          "description": "Required. Immutable. URI of the Docker image to be used as the custom container for serving predictions. This URI must identify an image in Artifact Registry or Container Registry. Learn more about the container publishing requirements, including permissions requirements for the AI Platform Service Agent, [here](https:\/\/tinyurl.com\/cust-cont-reqs#publishing). The container image is ingested upon ModelService.UploadModel, stored internally, and this original path is afterwards not used. To learn about the requirements for the Docker image itself, see [Custom container requirements](https:\/\/tinyurl.com\/cust-cont-reqs).",
          "type": "string"
        },
        "command": {
          "description": "Immutable. Specifies the command that runs when the container starts. This overrides the container's [ENTRYPOINT](https:\/\/docs.docker.com\/engine\/reference\/builder\/#entrypoint). Specify this field as an array of executable and arguments, similar to a Docker `ENTRYPOINT`'s \"exec\" form, not its \"shell\" form. If you do not specify this field, then the container's `ENTRYPOINT` runs, in conjunction with the args field or the container's [`CMD`](https:\/\/docs.docker.com\/engine\/reference\/builder\/#cmd), if either exists. If this field is not specified and the container does not have an `ENTRYPOINT`, then refer to the Docker documentation about how `CMD` and `ENTRYPOINT` [interact](https:\/\/tinyurl.com\/h3kdcgs). If you specify this field, then you can also specify the `args` field to provide additional arguments for this command. However, if you specify this field, then the container's `CMD` is ignored. See the [Kubernetes documentation](https:\/\/tinyurl.com\/y8bvllf4) about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`. In this field, you can reference environment variables [set by AI Platform](https:\/\/tinyurl.com\/cust-cont-reqs#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $(VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `command` field of the Kubernetes Containers [v1 core API](https:\/\/tinyurl.com\/k8s-io-api\/v1.18\/#container-v1-core).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Immutable. Specifies arguments for the command that runs when the container starts. This overrides the container's [`CMD`](https:\/\/docs.docker.com\/engine\/reference\/builder\/#cmd). Specify this field as an array of executable and arguments, similar to a Docker `CMD`'s \"default parameters\" form. If you don't specify this field but do specify the command field, then the command from the `command` field runs without any additional arguments. See the [Kubernetes documentation](https:\/\/tinyurl.com\/y8bvllf4) about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`. If you don't specify this field and don't specify the `command` field, then the container's [`ENTRYPOINT`](https:\/\/docs.docker.com\/engine\/reference\/builder\/#cmd) and `CMD` determine what runs based on their default behavior. See the Docker documentation about how `CMD` and `ENTRYPOINT` [interact](https:\/\/tinyurl.com\/h3kdcgs). In this field, you can reference environment variables [set by AI Platform](https:\/\/tinyurl.com\/cust-cont-reqs#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $(VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `args` field of the Kubernetes Containers [v1 core API](https:\/\/tinyurl.com\/k8s-io-api\/v1.18\/#container-v1-core).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Immutable. List of environment variables to set in the container. After the container starts running, code running in the container can read these environment variables. Additionally, the command and args fields can reference these variables. Later entries in this list can also reference earlier entries. For example, the following example sets the variable `VAR_2` to have the value `foo bar`: ```json [ { \"name\": \"VAR_1\", \"value\": \"foo\" }, { \"name\": \"VAR_2\", \"value\": \"$(VAR_1) bar\" } ] ``` If you switch the order of the variables in the example, then the expansion does not occur. This field corresponds to the `env` field of the Kubernetes Containers [v1 core API](https:\/\/tinyurl.com\/k8s-io-api\/v1.18\/#container-v1-core).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1EnvVar"
          }
        },
        "ports": {
          "description": "Immutable. List of ports to expose from the container. AI Platform sends any prediction requests that it receives to the first port on this list. AI Platform also sends [liveness and health checks](https:\/\/tinyurl.com\/cust-cont-reqs#health) to this port. If you do not specify this field, it defaults to following value: ```json [ { \"containerPort\": 8080 } ] ``` AI Platform does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers [v1 core API](https:\/\/tinyurl.com\/k8s-io-api\/v1.18\/#container-v1-core).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1Port"
          }
        },
        "predictRoute": {
          "description": "Immutable. HTTP path on the container to send prediction requests to. AI Platform forwards requests sent using projects.locations.endpoints.predict to this path on the container's IP address and port. AI Platform then returns the container's response in the API response. For example, if you set this field to `\/foo`, then when AI Platform receives a prediction request, it forwards the request body in a POST request to the `\/foo` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: \/v1\/endpoints\/ENDPOINT\/deployedModels\/DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints\/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (AI Platform makes this value available to your container code as the [`AIP_ENDPOINT_ID`](https:\/\/tinyurl.com\/cust-cont-reqs#aip-variables) environment variable.) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (AI Platform makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https:\/\/tinyurl.com\/cust-cont-reqs#aip-variables).)",
          "type": "string"
        },
        "healthRoute": {
          "description": "Immutable. HTTP path on the container to send health checks to. AI Platform intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy. Read more about [health checks](https:\/\/tinyurl.com\/cust-cont-reqs#checks). For example, if you set this field to `\/bar`, then AI Platform intermittently sends a GET request to the `\/bar` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: \/v1\/endpoints\/ENDPOINT\/deployedModels\/DEPLOYED_MODEL :predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints\/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (AI Platform makes this value available to your container code as the [`AIP_ENDPOINT_ID`](https:\/\/tinyurl.com\/cust-cont-reqs#aip-variables) environment variable.) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (AI Platform makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID`](https:\/\/tinyurl.com\/cust-cont-reqs#aip-variables) environment variable.)",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1Port": {
      "id": "GoogleCloudAiplatformV1Port",
      "description": "Represents a network port in a container.",
      "type": "object",
      "properties": {
        "containerPort": {
          "description": "The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1DeployedModelRef": {
      "id": "GoogleCloudAiplatformV1DeployedModelRef",
      "description": "Points to a DeployedModel.",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "Immutable. A resource name of an Endpoint.",
          "type": "string"
        },
        "deployedModelId": {
          "description": "Immutable. An ID of a DeployedModel in the above Endpoint.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ListModelsResponse": {
      "id": "GoogleCloudAiplatformV1ListModelsResponse",
      "description": "Response message for ModelService.ListModels",
      "type": "object",
      "properties": {
        "models": {
          "description": "List of Models in the requested page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1Model"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass to ListModelsRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ExportModelRequest": {
      "id": "GoogleCloudAiplatformV1ExportModelRequest",
      "description": "Request message for ModelService.ExportModel.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "Required. The desired output location and configuration.",
          "$ref": "GoogleCloudAiplatformV1ExportModelRequestOutputConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1ExportModelRequestOutputConfig": {
      "id": "GoogleCloudAiplatformV1ExportModelRequestOutputConfig",
      "description": "Output configuration for the Model export.",
      "type": "object",
      "properties": {
        "exportFormatId": {
          "description": "The ID of the format in which the Model must be exported. Each Model lists the export formats it supports. If no value is provided here, then the first from the list of the Model's supported formats is used by default.",
          "type": "string"
        },
        "artifactDestination": {
          "description": "The Cloud Storage location where the Model artifact is to be written to. Under the directory given as the destination a new one with name \"`model-export--`\", where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format, will be created. Inside, the Model and any of its supporting files will be written. This field should only be set when the `exportableContent` field of the [Model.supported_export_formats] object contains `ARTIFACT`.",
          "$ref": "GoogleCloudAiplatformV1GcsDestination"
        },
        "imageDestination": {
          "description": "The Google Container Registry or Artifact Registry uri where the Model container image will be copied to. This field should only be set when the `exportableContent` field of the [Model.supported_export_formats] object contains `IMAGE`.",
          "$ref": "GoogleCloudAiplatformV1ContainerRegistryDestination"
        }
      }
    },
    "GoogleCloudAiplatformV1ContainerRegistryDestination": {
      "id": "GoogleCloudAiplatformV1ContainerRegistryDestination",
      "description": "The Container Registry location for the container image.",
      "type": "object",
      "properties": {
        "outputUri": {
          "description": "Required. Container Registry URI of a container image. Only Google Container Registry and Artifact Registry are supported now. Accepted forms: * Google Container Registry path. For example: `gcr.io\/projectId\/imageName:tag`. * Artifact Registry path. For example: `us-central1-docker.pkg.dev\/projectId\/repoName\/imageName:tag`. If a tag is not specified, \"latest\" will be used as the default tag.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ModelEvaluation": {
      "id": "GoogleCloudAiplatformV1ModelEvaluation",
      "description": "A collection of metrics calculated by comparing Model's predictions on all of the test data against annotations from the test data.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the ModelEvaluation.",
          "readOnly": true,
          "type": "string"
        },
        "metricsSchemaUri": {
          "description": "Output only. Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object).",
          "readOnly": true,
          "type": "string"
        },
        "metrics": {
          "description": "Output only. Evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri",
          "readOnly": true,
          "type": "any"
        },
        "createTime": {
          "description": "Output only. Timestamp when this ModelEvaluation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "sliceDimensions": {
          "description": "Output only. All possible dimensions of ModelEvaluationSlices. The dimensions can be used as the filter of the ModelService.ListModelEvaluationSlices request, in the form of `slice.dimension = `.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1ListModelEvaluationsResponse": {
      "id": "GoogleCloudAiplatformV1ListModelEvaluationsResponse",
      "description": "Response message for ModelService.ListModelEvaluations.",
      "type": "object",
      "properties": {
        "modelEvaluations": {
          "description": "List of ModelEvaluations in the requested page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1ModelEvaluation"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass to ListModelEvaluationsRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ModelEvaluationSlice": {
      "id": "GoogleCloudAiplatformV1ModelEvaluationSlice",
      "description": "A collection of metrics calculated by comparing Model's predictions on a slice of the test data against ground truth annotations.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the ModelEvaluationSlice.",
          "readOnly": true,
          "type": "string"
        },
        "slice": {
          "description": "Output only. The slice of the test data that is used to evaluate the Model.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1ModelEvaluationSliceSlice"
        },
        "metricsSchemaUri": {
          "description": "Output only. Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluationSlice. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object).",
          "readOnly": true,
          "type": "string"
        },
        "metrics": {
          "description": "Output only. Sliced evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri",
          "readOnly": true,
          "type": "any"
        },
        "createTime": {
          "description": "Output only. Timestamp when this ModelEvaluationSlice was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudAiplatformV1ModelEvaluationSliceSlice": {
      "id": "GoogleCloudAiplatformV1ModelEvaluationSliceSlice",
      "description": "Definition of a slice.",
      "type": "object",
      "properties": {
        "dimension": {
          "description": "Output only. The dimension of the slice. Well-known dimensions are: * `annotationSpec`: This slice is on the test data that has either ground truth or prediction with AnnotationSpec.display_name equals to value.",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "Output only. The value of the dimension in this slice.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse": {
      "id": "GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse",
      "description": "Response message for ModelService.ListModelEvaluationSlices.",
      "type": "object",
      "properties": {
        "modelEvaluationSlices": {
          "description": "List of ModelEvaluations in the requested page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1ModelEvaluationSlice"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass to ListModelEvaluationSlicesRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1TrainingPipeline": {
      "id": "GoogleCloudAiplatformV1TrainingPipeline",
      "description": "The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the training task, and optionally may also export data from AI Platform's Dataset which becomes the training input, upload the Model to AI Platform, and evaluate the Model.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the TrainingPipeline.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. The user-defined name of this TrainingPipeline.",
          "type": "string"
        },
        "inputDataConfig": {
          "description": "Specifies AI Platform owned input data that may be used for training the Model. The TrainingPipeline's training_task_definition should make clear whether this config is used and if there are any special requirements on how it should be filled. If nothing about this config is mentioned in the training_task_definition, then it should be assumed that the TrainingPipeline does not depend on this configuration.",
          "$ref": "GoogleCloudAiplatformV1InputDataConfig"
        },
        "trainingTaskDefinition": {
          "description": "Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs:\/\/google-cloud-aiplatform\/schema\/trainingjob\/definition\/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
          "type": "string"
        },
        "trainingTaskInputs": {
          "description": "Required. The training task's parameter(s), as specified in the training_task_definition's `inputs`.",
          "type": "any"
        },
        "trainingTaskMetadata": {
          "description": "Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object.",
          "readOnly": true,
          "type": "any"
        },
        "modelToUpload": {
          "description": "Describes the Model that may be uploaded (via ModelService.UploadModel) by this TrainingPipeline. The TrainingPipeline's training_task_definition should make clear whether this Model description should be populated, and if there are any special requirements regarding how it should be filled. If nothing is mentioned in the training_task_definition, then it should be assumed that this field should not be filled and the training task either uploads the Model without a need of this information, or that training task does not support uploading a Model as part of the pipeline. When the Pipeline's state becomes `PIPELINE_STATE_SUCCEEDED` and the trained Model had been uploaded into AI Platform, then the model_to_upload's resource name is populated. The Model is always uploaded into the Project and Location in which this pipeline is.",
          "$ref": "GoogleCloudAiplatformV1Model"
        },
        "state": {
          "description": "Output only. The detailed state of the pipeline.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The pipeline state is unspecified.",
            "The pipeline has been just created or resumed and processing has not yet begun.",
            "The service is preparing to run the pipeline.",
            "The pipeline is in progress.",
            "The pipeline completed successfully.",
            "The pipeline failed.",
            "The pipeline is being cancelled. From this state the pipeline may only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or PIPELINE_STATE_CANCELLED.",
            "The pipeline has been cancelled.",
            "The pipeline has been stopped, and can be resumed."
          ],
          "enum": [
            "PIPELINE_STATE_UNSPECIFIED",
            "PIPELINE_STATE_QUEUED",
            "PIPELINE_STATE_PENDING",
            "PIPELINE_STATE_RUNNING",
            "PIPELINE_STATE_SUCCEEDED",
            "PIPELINE_STATE_FAILED",
            "PIPELINE_STATE_CANCELLING",
            "PIPELINE_STATE_CANCELLED",
            "PIPELINE_STATE_PAUSED"
          ]
        },
        "error": {
          "description": "Output only. Only populated when the pipeline's state is `PIPELINE_STATE_FAILED` or `PIPELINE_STATE_CANCELLED`.",
          "readOnly": true,
          "$ref": "GoogleRpcStatus"
        },
        "createTime": {
          "description": "Output only. Time when the TrainingPipeline was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the TrainingPipeline was most recently updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https:\/\/goo.gl\/xmQnxf for more information and examples of labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "encryptionSpec": {
          "description": "Customer-managed encryption key spec for a TrainingPipeline. If set, this TrainingPipeline will be secured by this key. Note: Model trained by this TrainingPipeline is also secured by this key if model_to_upload is not set separately.",
          "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1InputDataConfig": {
      "id": "GoogleCloudAiplatformV1InputDataConfig",
      "description": "Specifies AI Platform owned input data to be used for training, and possibly evaluating, the Model.",
      "type": "object",
      "properties": {
        "fractionSplit": {
          "description": "Split based on fractions defining the size of each set.",
          "$ref": "GoogleCloudAiplatformV1FractionSplit"
        },
        "filterSplit": {
          "description": "Split based on the provided filters for each set.",
          "$ref": "GoogleCloudAiplatformV1FilterSplit"
        },
        "predefinedSplit": {
          "description": "Supported only for tabular Datasets. Split based on a predefined key.",
          "$ref": "GoogleCloudAiplatformV1PredefinedSplit"
        },
        "timestampSplit": {
          "description": "Supported only for tabular Datasets. Split based on the timestamp of the input data pieces.",
          "$ref": "GoogleCloudAiplatformV1TimestampSplit"
        },
        "gcsDestination": {
          "description": "The Cloud Storage location where the training data is to be written to. In the given directory a new directory is created with name: `dataset---` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. All training input data is written into that directory. The AI Platform environment variables representing Cloud Storage data URIs are represented in the Cloud Storage wildcard format to support sharded data. e.g.: \"gs:\/\/...\/training-*.jsonl\" * AIP_DATA_FORMAT = \"jsonl\" for non-tabular data, \"csv\" for tabular data * AIP_TRAINING_DATA_URI = \"gcs_destination\/dataset---\/training-*.${AIP_DATA_FORMAT}\" * AIP_VALIDATION_DATA_URI = \"gcs_destination\/dataset---\/validation-*.${AIP_DATA_FORMAT}\" * AIP_TEST_DATA_URI = \"gcs_destination\/dataset---\/test-*.${AIP_DATA_FORMAT}\"",
          "$ref": "GoogleCloudAiplatformV1GcsDestination"
        },
        "bigqueryDestination": {
          "description": "Only applicable to custom training with tabular Dataset with BigQuery source. The BigQuery project location where the training data is to be written to. In the given project a new dataset is created with name `dataset___` where timestamp is in YYYY_MM_DDThh_mm_ss_sssZ format. All training input data is written into that dataset. In the dataset three tables are created, `training`, `validation` and `test`. * AIP_DATA_FORMAT = \"bigquery\". * AIP_TRAINING_DATA_URI = \"bigquery_destination.dataset___.training\" * AIP_VALIDATION_DATA_URI = \"bigquery_destination.dataset___.validation\" * AIP_TEST_DATA_URI = \"bigquery_destination.dataset___.test\"",
          "$ref": "GoogleCloudAiplatformV1BigQueryDestination"
        },
        "datasetId": {
          "description": "Required. The ID of the Dataset in the same Project and Location which data will be used to train the Model. The Dataset must use schema compatible with Model being trained, and what is compatible should be described in the used TrainingPipeline's training_task_definition. For tabular Datasets, all their data is exported to training, to pick and choose from.",
          "type": "string"
        },
        "annotationsFilter": {
          "description": "Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on (for the auto-assigned that role is decided by AI Platform). A filter with same syntax as the one used in ListAnnotations may be used, but note here it filters across all Annotations of the Dataset, and not just within a single DataItem.",
          "type": "string"
        },
        "annotationSchemaUri": {
          "description": "Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object). The schema files that can be used here are found in gs:\/\/google-cloud-aiplatform\/schema\/dataset\/annotation\/ , note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1FractionSplit": {
      "id": "GoogleCloudAiplatformV1FractionSplit",
      "description": "Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by AI Platform. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.",
      "type": "object",
      "properties": {
        "trainingFraction": {
          "description": "The fraction of the input data that is to be used to train the Model.",
          "type": "number",
          "format": "double"
        },
        "validationFraction": {
          "description": "The fraction of the input data that is to be used to validate the Model.",
          "type": "number",
          "format": "double"
        },
        "testFraction": {
          "description": "The fraction of the input data that is to be used to evaluate the Model.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1FilterSplit": {
      "id": "GoogleCloudAiplatformV1FilterSplit",
      "description": "Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets. ",
      "type": "object",
      "properties": {
        "trainingFilter": {
          "description": "Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.",
          "type": "string"
        },
        "validationFilter": {
          "description": "Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.",
          "type": "string"
        },
        "testFilter": {
          "description": "Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1PredefinedSplit": {
      "id": "GoogleCloudAiplatformV1PredefinedSplit",
      "description": "Assigns input data to training, validation, and test sets based on the value of a provided key. Supported only for tabular Datasets.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Required. The key is a name of one of the Dataset's data columns. The value of the key (either the label's value or value in the column) must be one of {`training`, `validation`, `test`}, and it defines to which set the given piece of data is assigned. If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1TimestampSplit": {
      "id": "GoogleCloudAiplatformV1TimestampSplit",
      "description": "Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets.",
      "type": "object",
      "properties": {
        "trainingFraction": {
          "description": "The fraction of the input data that is to be used to train the Model.",
          "type": "number",
          "format": "double"
        },
        "validationFraction": {
          "description": "The fraction of the input data that is to be used to validate the Model.",
          "type": "number",
          "format": "double"
        },
        "testFraction": {
          "description": "The fraction of the input data that is to be used to evaluate the Model.",
          "type": "number",
          "format": "double"
        },
        "key": {
          "description": "Required. The key is a name of one of the Dataset's data columns. The values of the key (the values in the column) must be in RFC 3339 `date-time` format, where `time-offset` = `\"Z\"` (e.g. 1985-04-12T23:20:50.52Z). If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ListTrainingPipelinesResponse": {
      "id": "GoogleCloudAiplatformV1ListTrainingPipelinesResponse",
      "description": "Response message for PipelineService.ListTrainingPipelines",
      "type": "object",
      "properties": {
        "trainingPipelines": {
          "description": "List of TrainingPipelines in the requested page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1TrainingPipeline"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass to ListTrainingPipelinesRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1CancelTrainingPipelineRequest": {
      "id": "GoogleCloudAiplatformV1CancelTrainingPipelineRequest",
      "description": "Request message for PipelineService.CancelTrainingPipeline.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1PredictRequest": {
      "id": "GoogleCloudAiplatformV1PredictRequest",
      "description": "Request message for PredictionService.Predict.",
      "type": "object",
      "properties": {
        "instances": {
          "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "parameters": {
          "description": "The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
          "type": "any"
        }
      }
    },
    "GoogleCloudAiplatformV1PredictResponse": {
      "id": "GoogleCloudAiplatformV1PredictResponse",
      "description": "Response message for PredictionService.Predict.",
      "type": "object",
      "properties": {
        "predictions": {
          "description": "The predictions that are the output of the predictions call. The schema of any single prediction may be specified via Endpoint's DeployedModels' Model's PredictSchemata's prediction_schema_uri.",
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "deployedModelId": {
          "description": "ID of the Endpoint's DeployedModel that served this prediction.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SpecialistPool": {
      "id": "GoogleCloudAiplatformV1SpecialistPool",
      "description": "SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers who are responsible for managing the labelers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and labelers work with the jobs using CrowdCompute console.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The resource name of the SpecialistPool.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can be consist of any UTF-8 characters. This field should be unique on project-level.",
          "type": "string"
        },
        "specialistManagersCount": {
          "description": "Output only. The number of Specialists in this SpecialistPool.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "specialistManagerEmails": {
          "description": "The email addresses of the specialists in the SpecialistPool.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pendingDataLabelingJobs": {
          "description": "Output only. The resource name of the pending data labeling jobs.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1ListSpecialistPoolsResponse": {
      "id": "GoogleCloudAiplatformV1ListSpecialistPoolsResponse",
      "description": "Response message for SpecialistPoolService.ListSpecialistPools.",
      "type": "object",
      "properties": {
        "specialistPools": {
          "description": "A list of SpecialistPools that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1SpecialistPool"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1BatchMigrateResourcesOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1BatchMigrateResourcesOperationMetadata",
      "description": "Runtime operation information for MigrationService.BatchMigrateResources.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        },
        "partialResults": {
          "description": "Partial results that reflect the latest migration operation progress.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1BatchMigrateResourcesOperationMetadataPartialResult"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1GenericOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata",
      "description": "Generic Metadata shared by all operations.",
      "type": "object",
      "properties": {
        "partialFailures": {
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. This field should never exceed 20 entries. Status details field will contain standard GCP error details.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "description": "Output only. Time when the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the operation was updated for the last time. If the operation has finished (successfully or not), this is the finish time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1BatchMigrateResourcesOperationMetadataPartialResult": {
      "id": "GoogleCloudAiplatformV1alpha1BatchMigrateResourcesOperationMetadataPartialResult",
      "description": "Represents a partial result in batch migration operation for one MigrateResourceRequest.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the migration request in case of failure.",
          "$ref": "GoogleRpcStatus"
        },
        "model": {
          "description": "Migrated model resource name.",
          "type": "string"
        },
        "dataset": {
          "description": "Migrated dataset resource name.",
          "type": "string"
        },
        "request": {
          "description": "It's the same as the value in MigrateResourceRequest.migrate_resource_requests.",
          "$ref": "GoogleCloudAiplatformV1alpha1MigrateResourceRequest"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigrateResourceRequest": {
      "id": "GoogleCloudAiplatformV1alpha1MigrateResourceRequest",
      "description": "Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to AI Platform.",
      "type": "object",
      "properties": {
        "migrateMlEngineModelVersionConfig": {
          "description": "Config for migrating Version in ml.googleapis.com to AI Platform's Model.",
          "$ref": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateMlEngineModelVersionConfig"
        },
        "migrateAutomlModelConfig": {
          "description": "Config for migrating Model in automl.googleapis.com to AI Platform's Model.",
          "$ref": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateAutomlModelConfig"
        },
        "migrateAutomlDatasetConfig": {
          "description": "Config for migrating Dataset in automl.googleapis.com to AI Platform's Dataset.",
          "$ref": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateAutomlDatasetConfig"
        },
        "migrateDataLabelingDatasetConfig": {
          "description": "Config for migrating Dataset in datalabeling.googleapis.com to AI Platform's Dataset.",
          "$ref": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateDataLabelingDatasetConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateMlEngineModelVersionConfig": {
      "id": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateMlEngineModelVersionConfig",
      "description": "Config for migrating version in ml.googleapis.com to AI Platform's Model.",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "Required. The ml.googleapis.com endpoint that this model version should be migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com",
          "type": "string"
        },
        "modelVersion": {
          "description": "Required. Full resource name of ml engine model version. Format: `projects\/{project}\/models\/{model}\/versions\/{version}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "Required. Display name of the model in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateAutomlModelConfig": {
      "id": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateAutomlModelConfig",
      "description": "Config for migrating Model in automl.googleapis.com to AI Platform's Model.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Required. Full resource name of automl Model. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "Optional. Display name of the model in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateAutomlDatasetConfig": {
      "id": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateAutomlDatasetConfig",
      "description": "Config for migrating Dataset in automl.googleapis.com to AI Platform's Dataset.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Required. Full resource name of automl Dataset. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "Required. Display name of the Dataset in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateDataLabelingDatasetConfig": {
      "id": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateDataLabelingDatasetConfig",
      "description": "Config for migrating Dataset in datalabeling.googleapis.com to AI Platform's Dataset.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Required. Full resource name of data labeling Dataset. Format: `projects\/{project}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "Optional. Display name of the Dataset in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        },
        "migrateDataLabelingAnnotatedDatasetConfigs": {
          "description": "Optional. Configs for migrating AnnotatedDataset in datalabeling.googleapis.com to AI Platform's SavedQuery. The specified AnnotatedDatasets have to belong to the datalabeling Dataset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig": {
      "id": "GoogleCloudAiplatformV1alpha1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig",
      "description": "Config for migrating AnnotatedDataset in datalabeling.googleapis.com to AI Platform's SavedQuery.",
      "type": "object",
      "properties": {
        "annotatedDataset": {
          "description": "Required. Full resource name of data labeling AnnotatedDataset. Format: `projects\/{project}\/datasets\/{dataset}\/annotatedDatasets\/{annotated_dataset}`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1BatchMigrateResourcesResponse": {
      "id": "GoogleCloudAiplatformV1alpha1BatchMigrateResourcesResponse",
      "description": "Response message for MigrationService.BatchMigrateResources.",
      "type": "object",
      "properties": {
        "migrateResourceResponses": {
          "description": "Successfully migrated resources.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1MigrateResourceResponse"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigrateResourceResponse": {
      "id": "GoogleCloudAiplatformV1alpha1MigrateResourceResponse",
      "description": "Describes a successfully migrated resource.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Migrated Dataset's resource name.",
          "type": "string"
        },
        "model": {
          "description": "Migrated Model's resource name.",
          "type": "string"
        },
        "migratableResource": {
          "description": "Before migration, the identifier in ml.googleapis.com, automl.googleapis.com or datalabeling.googleapis.com.",
          "$ref": "GoogleCloudAiplatformV1alpha1MigratableResource"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigratableResource": {
      "id": "GoogleCloudAiplatformV1alpha1MigratableResource",
      "description": "Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com.",
      "type": "object",
      "properties": {
        "mlEngineModelVersion": {
          "description": "Output only. Represents one Version in ml.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1alpha1MigratableResourceMlEngineModelVersion"
        },
        "automlModel": {
          "description": "Output only. Represents one Model in automl.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1alpha1MigratableResourceAutomlModel"
        },
        "automlDataset": {
          "description": "Output only. Represents one Dataset in automl.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1alpha1MigratableResourceAutomlDataset"
        },
        "dataLabelingDataset": {
          "description": "Output only. Represents one Dataset in datalabeling.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1alpha1MigratableResourceDataLabelingDataset"
        },
        "lastMigrateTime": {
          "description": "Output only. Timestamp when the last migration attempt on this MigratableResource started. Will not be set if there's no migration attempt on this MigratableResource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "lastUpdateTime": {
          "description": "Output only. Timestamp when this MigratableResource was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigratableResourceMlEngineModelVersion": {
      "id": "GoogleCloudAiplatformV1alpha1MigratableResourceMlEngineModelVersion",
      "description": "Represents one model Version in ml.googleapis.com.",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "The ml.googleapis.com endpoint that this model Version currently lives in. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com",
          "type": "string"
        },
        "version": {
          "description": "Full resource name of ml engine model Version. Format: `projects\/{project}\/models\/{model}\/versions\/{version}`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigratableResourceAutomlModel": {
      "id": "GoogleCloudAiplatformV1alpha1MigratableResourceAutomlModel",
      "description": "Represents one Model in automl.googleapis.com.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Full resource name of automl Model. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "The Model's display name in automl.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigratableResourceAutomlDataset": {
      "id": "GoogleCloudAiplatformV1alpha1MigratableResourceAutomlDataset",
      "description": "Represents one Dataset in automl.googleapis.com.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Full resource name of automl Dataset. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "The Dataset's display name in automl.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigratableResourceDataLabelingDataset": {
      "id": "GoogleCloudAiplatformV1alpha1MigratableResourceDataLabelingDataset",
      "description": "Represents one Dataset in datalabeling.googleapis.com.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Full resource name of data labeling Dataset. Format: `projects\/{project}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "The Dataset's display name in datalabeling.googleapis.com.",
          "type": "string"
        },
        "dataLabelingAnnotatedDatasets": {
          "description": "The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to the data labeling Dataset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset": {
      "id": "GoogleCloudAiplatformV1alpha1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset",
      "description": "Represents one AnnotatedDataset in datalabeling.googleapis.com.",
      "type": "object",
      "properties": {
        "annotatedDataset": {
          "description": "Full resource name of data labeling AnnotatedDataset. Format: `projects\/{project}\/datasets\/{dataset}\/annotatedDatasets\/{annotated_dataset}`.",
          "type": "string"
        },
        "annotatedDatasetDisplayName": {
          "description": "The AnnotatedDataset's display name in datalabeling.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1CreateDatasetOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1CreateDatasetOperationMetadata",
      "description": "Runtime operation information for DatasetService.CreateDataset.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1CreateEndpointOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1CreateEndpointOperationMetadata",
      "description": "Runtime operation information for EndpointService.CreateEndpoint.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1CreateIndexOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1CreateIndexOperationMetadata",
      "description": "Runtime operation information for IndexService.CreateIndex.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        },
        "nearestNeighborSearchOperationMetadata": {
          "description": "The operation metadata with regard to ScaNN Index operation.",
          "$ref": "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadata",
      "description": "Runtime operation metadata with regard to ScaNN Index.",
      "type": "object",
      "properties": {
        "contentValidationStats": {
          "description": "The validation stats of the content (per file) to be inserted or updated on the ScaNN Index resource. Populated if contentsDeltaUri is provided as part of Index.metadata. Please note that, currently for those files that are broken or has unsupported file format, we will not have the stats for those files.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadataContentValidationStats"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadataContentValidationStats": {
      "id": "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadataContentValidationStats",
      "type": "object",
      "properties": {
        "sourceGcsUri": {
          "description": "GCS uri pointing to the original file in user's bucket.",
          "type": "string"
        },
        "validRecordCount": {
          "description": "Number of records in this file that were successfully processed.",
          "type": "string",
          "format": "int64"
        },
        "invalidRecordCount": {
          "description": "Number of records in this file we skipped due to validate errors.",
          "type": "string",
          "format": "int64"
        },
        "partialErrors": {
          "description": "The detail information of the partial failures encountered for those invalid records that couldn't be parsed. Up to 50 partial errors will be reported.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadataRecordError"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadataRecordError": {
      "id": "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadataRecordError",
      "type": "object",
      "properties": {
        "errorType": {
          "description": "The error type of this record.",
          "type": "string",
          "enumDescriptions": [
            "Default, shall not be used.",
            "The record is empty.",
            "Invalid json format.",
            "Invalid csv format.",
            "Invalid avro format.",
            "The embedding id is not valid.",
            "The size of the embedding vectors does not match with the specified dimension.",
            "The `namespace` field is missing."
          ],
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "EMPTY_LINE",
            "INVALID_JSON_SYNTAX",
            "INVALID_CSV_SYNTAX",
            "INVALID_AVRO_SYNTAX",
            "INVALID_EMBEDDING_ID",
            "EMBEDDING_SIZE_MISMATCH",
            "NAMESPACE_MISSING"
          ]
        },
        "errorMessage": {
          "description": "A human-readable message that is shown to the user to help them fix the error. Note that this message may change from time to time, your code should check against error_type as the source of truth.",
          "type": "string"
        },
        "sourceGcsUri": {
          "description": "GCS uri pointing to the original file in user's bucket.",
          "type": "string"
        },
        "embeddingId": {
          "description": "Empty if the embedding id is failed to parse.",
          "type": "string"
        },
        "rawRecord": {
          "description": "The original content of this record.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1CreateIndexEndpointOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1CreateIndexEndpointOperationMetadata",
      "description": "Runtime operation information for IndexEndpointService.CreateIndexEndpoint.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1CreateSpecialistPoolOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1CreateSpecialistPoolOperationMetadata",
      "description": "Runtime operation information for SpecialistPoolService.CreateSpecialistPool.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1DeleteOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1DeleteOperationMetadata",
      "description": "Details of operations that perform deletes of any entities.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1DeployModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1DeployModelOperationMetadata",
      "description": "Runtime operation information for EndpointService.DeployModel.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1DeployModelResponse": {
      "id": "GoogleCloudAiplatformV1alpha1DeployModelResponse",
      "description": "Response message for EndpointService.DeployModel.",
      "type": "object",
      "properties": {
        "deployedModel": {
          "description": "The DeployedModel that had been deployed in the Endpoint.",
          "$ref": "GoogleCloudAiplatformV1alpha1DeployedModel"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1DeployedModel": {
      "id": "GoogleCloudAiplatformV1alpha1DeployedModel",
      "description": "A deployment of a Model. Endpoints contain one or more DeployedModels.",
      "type": "object",
      "properties": {
        "dedicatedResources": {
          "description": "A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.",
          "$ref": "GoogleCloudAiplatformV1alpha1DedicatedResources"
        },
        "automaticResources": {
          "description": "A description of resources that to large degree are decided by AI Platform, and require only a modest additional configuration.",
          "$ref": "GoogleCloudAiplatformV1alpha1AutomaticResources"
        },
        "id": {
          "description": "Output only. The ID of the DeployedModel.",
          "readOnly": true,
          "type": "string"
        },
        "model": {
          "description": "Required. The name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when the DeployedModel was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "explanationSpec": {
          "description": "Explanation configuration for this DeployedModel. When deploying a Model using EndpointService.DeployModel, this value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of explanation_spec is not populated, the value of the same field of Model.explanation_spec is inherited. If the corresponding Model.explanation_spec is not populated, all fields of the explanation_spec will be used for the explanation configuration.",
          "$ref": "GoogleCloudAiplatformV1alpha1ExplanationSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1DedicatedResources": {
      "id": "GoogleCloudAiplatformV1alpha1DedicatedResources",
      "description": "A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.",
      "type": "object",
      "properties": {
        "machineSpec": {
          "description": "Required. Immutable. The specification of a single machine used by the prediction.",
          "$ref": "GoogleCloudAiplatformV1alpha1MachineSpec"
        },
        "minReplicaCount": {
          "description": "Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed. Note: if machine_spec.accelerator_count is above 0, currently the model will be always deployed precisely on min_replica_count.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1MachineSpec": {
      "id": "GoogleCloudAiplatformV1alpha1MachineSpec",
      "description": "Specification of a single machine.",
      "type": "object",
      "properties": {
        "machineType": {
          "description": "Immutable. The type of the machine. For the machine types supported for prediction, see https:\/\/tinyurl.com\/aip-docs\/predictions\/machine-types. For machine types supported for creating a custom training job, see https:\/\/tinyurl.com\/aip-docs\/training\/configure-compute. For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.",
          "type": "string"
        },
        "acceleratorType": {
          "description": "Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified accelerator type, which means no accelerator.",
            "Nvidia Tesla K80 GPU.",
            "Nvidia Tesla P100 GPU.",
            "Nvidia Tesla V100 GPU.",
            "Nvidia Tesla P4 GPU.",
            "Nvidia Tesla T4 GPU.",
            "TPU v2.",
            "TPU v3."
          ],
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "TPU_V2",
            "TPU_V3"
          ]
        },
        "acceleratorCount": {
          "description": "The number of accelerators to attach to the machine.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1AutomaticResources": {
      "id": "GoogleCloudAiplatformV1alpha1AutomaticResources",
      "description": "A description of resources that to large degree are decided by AI Platform, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.",
      "type": "object",
      "properties": {
        "minReplicaCount": {
          "description": "Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.",
          "type": "integer",
          "format": "int32"
        },
        "maxReplicaCount": {
          "description": "Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though AI Platform may be unable to scale beyond certain replica number.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExplanationSpec": {
      "id": "GoogleCloudAiplatformV1alpha1ExplanationSpec",
      "description": "Specification of Model explanation.",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Required. Parameters that configure explaining of the Model's predictions.",
          "$ref": "GoogleCloudAiplatformV1alpha1ExplanationParameters"
        },
        "metadata": {
          "description": "Required. Metadata describing the Model's input and output for explanation.",
          "$ref": "GoogleCloudAiplatformV1alpha1ExplanationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExplanationParameters": {
      "id": "GoogleCloudAiplatformV1alpha1ExplanationParameters",
      "description": "Parameters to configure explaining for Model's predictions.",
      "type": "object",
      "properties": {
        "sampledShapleyAttribution": {
          "description": "An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features. Refer to this paper for model details: https:\/\/arxiv.org\/abs\/1306.4265.",
          "$ref": "GoogleCloudAiplatformV1alpha1SampledShapleyAttribution"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SampledShapleyAttribution": {
      "id": "GoogleCloudAiplatformV1alpha1SampledShapleyAttribution",
      "description": "An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.",
      "type": "object",
      "properties": {
        "pathCount": {
          "description": "Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExplanationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1ExplanationMetadata",
      "description": "Metadata describing the Model's input and output for explanation.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by AI Platform. For AI Platform provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudAiplatformV1alpha1ExplanationMetadataInputMetadata"
          }
        },
        "outputs": {
          "description": "Required. Map from output names to output metadata. For AI Platform provided Tensorflow images, keys can be any string user defines. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudAiplatformV1alpha1ExplanationMetadataOutputMetadata"
          }
        },
        "featureAttributionsSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object). AutoML tabular Models always have this field populated by AI Platform. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExplanationMetadataInputMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1ExplanationMetadataInputMetadata",
      "description": "Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using AI Platform-provided images for Tensorflow.",
      "type": "object",
      "properties": {
        "inputBaselines": {
          "description": "Baseline inputs for this feature. If no baseline is specified, AI Platform chooses the baseline for this feature. If multiple baselines are specified, AI Platform returns the average attributions across them in Attributions.baseline_attribution. For AI Platform provided Tensorflow images (both 1.x and 2.x), the shape of each baseline must match the shape of the input tensor. If a scalar is provided, we broadcast to the same shape as the input tensor. For custom images, the element of the baselines must be in the same format as the feature's input in the instance[]. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
          "type": "array",
          "items": {
            "type": "any"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExplanationMetadataOutputMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1ExplanationMetadataOutputMetadata",
      "description": "Metadata of the prediction output to be explained.",
      "type": "object",
      "properties": {
        "indexDisplayNameMapping": {
          "description": "Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.",
          "type": "any"
        },
        "displayNameMappingKey": {
          "description": "Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1DeployIndexOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1DeployIndexOperationMetadata",
      "description": "Runtime operation information for IndexEndpointService.DeployIndex.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1DeployIndexResponse": {
      "id": "GoogleCloudAiplatformV1alpha1DeployIndexResponse",
      "description": "Response message for IndexEndpointService.DeployIndex.",
      "type": "object",
      "properties": {
        "deployedIndex": {
          "description": "The DeployedIndex that had been deployed in the IndexEndpoint.",
          "$ref": "GoogleCloudAiplatformV1alpha1DeployedIndex"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1DeployedIndex": {
      "id": "GoogleCloudAiplatformV1alpha1DeployedIndex",
      "description": "A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.",
          "type": "string"
        },
        "index": {
          "description": "Required. The name of the Index this is the deployment of. We may refer to this Index as the DeployedIndex's \"original\" Index.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the DeployedIndex. If not provided upon creation, the Index's display_name is used.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when the DeployedIndex was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "privateEndpoints": {
          "description": "Output only. Provides paths for users to send requests directly to the deployed index services running on Cloud via private services access. This field is populated if network is configured.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1alpha1IndexPrivateEndpoints"
        },
        "indexSyncTime": {
          "description": "Output only. The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously updated in the background to reflect this changes. If this timestamp's value is at least the Index.update_time of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older, then to see which updates this DeployedIndex already contains (and which not), one must list Operations working on the original Index. Only the successfully completed Operations with Operations.metadata.generic_metadata.update_time equal or before this sync time are contained in this DeployedIndex.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "automaticResources": {
          "description": "Optional. A description of resources that the DeployedIndex uses, which to large degree are decided by AI Platform, and optionally allows only a modest additional configuration. If min_replica_count is not set, the default value is 1. If max_replica_count is not set, the default value is min_replica_count. The max allowed replica count is 1000. The user is billed for the resources (at least their minimal amount) even if the DeployedIndex receives no traffic.",
          "$ref": "GoogleCloudAiplatformV1alpha1AutomaticResources"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1IndexPrivateEndpoints": {
      "id": "GoogleCloudAiplatformV1alpha1IndexPrivateEndpoints",
      "description": "IndexPrivateEndpoints proto is used to provide paths for users to send requests via private services access.",
      "type": "object",
      "properties": {
        "matchGrpcAddress": {
          "description": "Output only. The ip address used to send match gRPC requests.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExportDataOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1ExportDataOperationMetadata",
      "description": "Runtime operation information for DatasetService.ExportData.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        },
        "gcsOutputDirectory": {
          "description": "A Google Cloud Storage directory which path ends with '\/'. The exported data is stored in the directory.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExportDataResponse": {
      "id": "GoogleCloudAiplatformV1alpha1ExportDataResponse",
      "description": "Response message for DatasetService.ExportData.",
      "type": "object",
      "properties": {
        "exportedFiles": {
          "description": "All of the files that are exported in this export operation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExportEvaluatedDataItemsOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1ExportEvaluatedDataItemsOperationMetadata",
      "description": "Details of ModelService.ExportEvaluatedDataItems operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        },
        "outputInfo": {
          "description": "Output only. Information further describing the output of this operation.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1alpha1ExportEvaluatedDataItemsOperationMetadataOutputInfo"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExportEvaluatedDataItemsOperationMetadataOutputInfo": {
      "id": "GoogleCloudAiplatformV1alpha1ExportEvaluatedDataItemsOperationMetadataOutputInfo",
      "description": "Further describes this operation's output. Supplements ExportEvaluatedDataItemsRequest.output_config.",
      "type": "object",
      "properties": {
        "bigqueryOutputDataset": {
          "description": "Output only. The path of the BigQuery dataset created, in bq:\/\/projectId.bqDatasetId.tableId format, into which the evaluated DataItems are exported.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExportEvaluatedDataItemsOperationResponse": {
      "id": "GoogleCloudAiplatformV1alpha1ExportEvaluatedDataItemsOperationResponse",
      "description": "Response of ModelService.ExportEvaluatedDataItems operation.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1alpha1ExportModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1ExportModelOperationMetadata",
      "description": "Details of ModelService.ExportModel operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        },
        "outputInfo": {
          "description": "Output only. Information further describing the output of this Model export.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1alpha1ExportModelOperationMetadataOutputInfo"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExportModelOperationMetadataOutputInfo": {
      "id": "GoogleCloudAiplatformV1alpha1ExportModelOperationMetadataOutputInfo",
      "description": "Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig.",
      "type": "object",
      "properties": {
        "gcsOutputDirectory": {
          "description": "Output only. If the Model is being exported to Google Cloud Storage this is the full path of the directory created, into which the Model files are being written to.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ExportModelResponse": {
      "id": "GoogleCloudAiplatformV1alpha1ExportModelResponse",
      "description": "Response message of ModelService.ExportModel operation.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1alpha1ImportDataOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1ImportDataOperationMetadata",
      "description": "Runtime operation information for DatasetService.ImportData.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1ImportDataResponse": {
      "id": "GoogleCloudAiplatformV1alpha1ImportDataResponse",
      "description": "Response message for DatasetService.ImportData.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1alpha1SpecialistPool": {
      "id": "GoogleCloudAiplatformV1alpha1SpecialistPool",
      "description": "SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers who are responsible for managing the labelers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and labelers work with the jobs using CrowdCompute console.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The resource name of the SpecialistPool.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can be consist of any UTF-8 characters. This field should be unique on project-level.",
          "type": "string"
        },
        "specialistManagersCount": {
          "description": "Output only. The number of Specialists in this SpecialistPool.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "specialistManagerEmails": {
          "description": "The email addresses of the specialists in the SpecialistPool.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pendingDataLabelingJobs": {
          "description": "Output only. The resource name of the pending data labeling jobs.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1UndeployModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1UndeployModelOperationMetadata",
      "description": "Runtime operation information for EndpointService.UndeployModel.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1UndeployModelResponse": {
      "id": "GoogleCloudAiplatformV1alpha1UndeployModelResponse",
      "description": "Response message for EndpointService.UndeployModel.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1alpha1UndeployIndexOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1UndeployIndexOperationMetadata",
      "description": "Runtime operation information for IndexEndpointService.UndeployIndex.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1UndeployIndexResponse": {
      "id": "GoogleCloudAiplatformV1alpha1UndeployIndexResponse",
      "description": "Response message for IndexEndpointService.UndeployIndex.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1alpha1UpdateIndexOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1UpdateIndexOperationMetadata",
      "description": "Runtime operation information for IndexService.UpdateIndex.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        },
        "nearestNeighborSearchOperationMetadata": {
          "description": "The operation metadata with regard to ScaNN Index operation.",
          "$ref": "GoogleCloudAiplatformV1alpha1NearestNeighborSearchOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1UpdateSpecialistPoolOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1UpdateSpecialistPoolOperationMetadata",
      "description": "Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool.",
      "type": "object",
      "properties": {
        "specialistPool": {
          "description": "Output only. The name of the SpecialistPool to which the specialists are being added. Format: `projects\/{project_id}\/locations\/{location_id}\/specialistPools\/{specialist_pool}`",
          "readOnly": true,
          "type": "string"
        },
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1UploadModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1UploadModelOperationMetadata",
      "description": "Details of ModelService.UploadModel operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1alpha1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1UploadModelResponse": {
      "id": "GoogleCloudAiplatformV1alpha1UploadModelResponse",
      "description": "Response message of ModelService.UploadModel operation.",
      "type": "object",
      "properties": {
        "model": {
          "description": "The name of the uploaded Model resource. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaImageBoundingBoxAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaImageBoundingBoxAnnotation",
      "description": "Annotation details specific to image object detection.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "xMin": {
          "description": "The leftmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "xMax": {
          "description": "The rightmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMin": {
          "description": "The topmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMax": {
          "description": "The bottommost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaImageClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaImageClassificationAnnotation",
      "description": "Annotation details specific to image classification.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaImageDataItem": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaImageDataItem",
      "description": "Payload of Image DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size.",
          "type": "string"
        },
        "mimeType": {
          "description": "Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image\/jpeg - image\/gif - image\/png - image\/webp - image\/bmp - image\/tiff - image\/vnd.microsoft.icon",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaImageDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaImageDatasetMetadata",
      "description": "The metadata of Datasets that contain Image DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Image DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotation",
      "description": "Annotation details specific to image segmentation.",
      "type": "object",
      "properties": {
        "maskAnnotation": {
          "description": "Mask based segmentation annotation. Only one mask annotation can exist for one image.",
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationMaskAnnotation"
        },
        "polygonAnnotation": {
          "description": "Polygon annotation.",
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationPolygonAnnotation"
        },
        "polylineAnnotation": {
          "description": "Polyline annotation.",
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationPolylineAnnotation"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationMaskAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationMaskAnnotation",
      "description": "The mask based segmentation annotation.",
      "type": "object",
      "properties": {
        "maskGcsUri": {
          "description": "Google Cloud Storage URI that points to the mask image. The image must be in PNG format. It must have the same size as the DataItem's image. Each pixel in the image mask represents the AnnotationSpec which the pixel in the image DataItem belong to. Each color is mapped to one AnnotationSpec based on annotation_spec_colors.",
          "type": "string"
        },
        "annotationSpecColors": {
          "description": "The mapping between color and AnnotationSpec for this Annotation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1SchemaAnnotationSpecColor"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaAnnotationSpecColor": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaAnnotationSpecColor",
      "description": "An entry of mapping between color and AnnotationSpec. The mapping is used in segmentation mask.",
      "type": "object",
      "properties": {
        "color": {
          "description": "The color of the AnnotationSpec in a segmentation mask.",
          "$ref": "GoogleTypeColor"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec represented by the color in the segmentation mask.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the AnnotationSpec represented by the color in the segmentation mask.",
          "type": "string"
        }
      }
    },
    "GoogleTypeColor": {
      "id": "GoogleTypeColor",
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to\/from color representations in various languages over compactness; for example, the fields of this representation can be trivially provided to the constructor of \"java.awt.Color\" in Java; it can also be trivially provided to UIColor's \"+colorWithRed:green:blue:alpha\" method in iOS; and, with just a little work, it can be easily formatted into a CSS \"rgba()\" string in JavaScript, as well. Note: this proto does not carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications SHOULD assume the sRGB color space. Note: when color equality needs to be decided, implementations, unless documented otherwise, will treat two colors to be equal if all their red, green, blue and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; \/\/ ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red \/ denominator) .setGreen(green \/ denominator) .setBlue(blue \/ denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) \/ denominator) .build()); } return resultBuilder.build(); } \/\/ ... Example (iOS \/ Obj-C): \/\/ ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } \/\/ ... Example (JavaScript): \/\/ ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor_(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor_ = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; \/\/ ...",
      "type": "object",
      "properties": {
        "red": {
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "type": "number",
          "format": "float"
        },
        "green": {
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "type": "number",
          "format": "float"
        },
        "blue": {
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "type": "number",
          "format": "float"
        },
        "alpha": {
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: pixel color = alpha * (this color) + (1.0 - alpha) * (background color) This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is to be rendered as a solid color (as if the alpha value had been explicitly given with a value of 1.0).",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationPolygonAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationPolygonAnnotation",
      "description": "Represents a polygon in image.",
      "type": "object",
      "properties": {
        "vertexes": {
          "description": "The vertexes are connected one by one and the last vertex is connected to the first one to represent a polygon.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1SchemaVertex"
          }
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaVertex": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaVertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "type": "number",
          "format": "double"
        },
        "y": {
          "description": "Y coordinate.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationPolylineAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaImageSegmentationAnnotationPolylineAnnotation",
      "description": "Represents a polyline in image.",
      "type": "object",
      "properties": {
        "vertexes": {
          "description": "The vertexes are connected one by one and the last vertex in not connected to the first one.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1alpha1SchemaVertex"
          }
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadata",
      "description": "The metadata of Datasets that contain tables data.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataInputConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataInputConfig": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataInputConfig",
      "description": "The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataGcsSource"
        },
        "bigquerySource": {
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataBigQuerySource"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataGcsSource": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataGcsSource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataBigQuerySource": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTablesDatasetMetadataBigQuerySource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of a BigQuery table. e.g. bq:\/\/projectId.bqDatasetId.bqTableId",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTextClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTextClassificationAnnotation",
      "description": "Annotation details specific to text classification.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTextDataItem": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTextDataItem",
      "description": "Payload of Text DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Output only. Google Cloud Storage URI points to the original text in user's bucket. The text file is up to 10MB in size.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTextDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTextDatasetMetadata",
      "description": "The metadata of Datasets that contain Text DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Text DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTextExtractionAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTextExtractionAnnotation",
      "description": "Annotation details specific to text extraction.",
      "type": "object",
      "properties": {
        "textSegment": {
          "description": "The segment of the text content.",
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTextSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTextSegment": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTextSegment",
      "description": "The text segment inside of DataItem.",
      "type": "object",
      "properties": {
        "startOffset": {
          "description": "Zero-based character index of the first character of the text segment (counting characters from the beginning of the text).",
          "type": "string",
          "format": "uint64"
        },
        "endOffset": {
          "description": "Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment.",
          "type": "string",
          "format": "uint64"
        },
        "content": {
          "description": "The text content in the segment for output only.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTextSentimentAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTextSentimentAnnotation",
      "description": "Annotation details specific to text sentiment.",
      "type": "object",
      "properties": {
        "sentiment": {
          "description": "The sentiment score for text.",
          "type": "integer",
          "format": "int32"
        },
        "sentimentMax": {
          "description": "The sentiment max score for text.",
          "type": "integer",
          "format": "int32"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTextSentimentSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTextSentimentSavedQueryMetadata",
      "description": "The metadata of SavedQuery contains TextSentiment Annotations.",
      "type": "object",
      "properties": {
        "sentimentMax": {
          "description": "The maximum sentiment of sentiment Anntoation in this SavedQuery.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadata",
      "description": "The metadata of Datasets that contain time series data.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataInputConfig"
        },
        "timeSeriesIdentifierColumn": {
          "description": "The column name of the time series identifier column that identifies the time series.",
          "type": "string"
        },
        "timeColumn": {
          "description": "The column name of the time column that identifies time order in the time series.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataInputConfig": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataInputConfig",
      "description": "The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataGcsSource"
        },
        "bigquerySource": {
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataBigQuerySource"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataGcsSource": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataGcsSource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataBigQuerySource": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTimeSeriesDatasetMetadataBigQuerySource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of a BigQuery table.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaVideoActionRecognitionAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaVideoActionRecognitionAnnotation",
      "description": "Annotation details specific to video action recognition.",
      "type": "object",
      "properties": {
        "timeSegment": {
          "description": "This Annotation applies to the time period represented by the TimeSegment. If it's not set, the Annotation applies to the whole video.",
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTimeSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaTimeSegment": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaTimeSegment",
      "description": "A time period inside of a DataItem that has a time dimension (e.g. video).",
      "type": "object",
      "properties": {
        "startTimeOffset": {
          "description": "Start of the time segment (inclusive), represented as the duration since the start of the DataItem.",
          "type": "string",
          "format": "google-duration"
        },
        "endTimeOffset": {
          "description": "End of the time segment (exclusive), represented as the duration since the start of the DataItem.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaVideoClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaVideoClassificationAnnotation",
      "description": "Annotation details specific to video classification.",
      "type": "object",
      "properties": {
        "timeSegment": {
          "description": "This Annotation applies to the time period represented by the TimeSegment. If it's not set, the Annotation applies to the whole video.",
          "$ref": "GoogleCloudAiplatformV1alpha1SchemaTimeSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaVideoDataItem": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaVideoDataItem",
      "description": "Payload of Video DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Required. Google Cloud Storage URI points to the original video in user's bucket. The video is up to 50 GB in size and up to 3 hour in duration.",
          "type": "string"
        },
        "mimeType": {
          "description": "Output only. The mime type of the content of the video. Only the videos in below listed mime types are supported. Supported mime_type: - video\/mp4 - video\/avi - video\/quicktime",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaVideoDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaVideoDatasetMetadata",
      "description": "The metadata of Datasets that contain Video DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Video DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaVideoObjectTrackingAnnotation": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaVideoObjectTrackingAnnotation",
      "description": "Annotation details specific to video object tracking.",
      "type": "object",
      "properties": {
        "timeOffset": {
          "description": "A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start.",
          "type": "string",
          "format": "google-duration"
        },
        "xMin": {
          "description": "The leftmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "xMax": {
          "description": "The rightmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMin": {
          "description": "The topmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMax": {
          "description": "The bottommost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "instanceId": {
          "description": "The instance of the object, expressed as a positive integer. Used to track the same object across different frames.",
          "type": "string",
          "format": "int64"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaVisualInspectionClassificationLabelSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaVisualInspectionClassificationLabelSavedQueryMetadata",
      "type": "object",
      "properties": {
        "multiLabel": {
          "description": "Whether or not the classification label is multi_label.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1alpha1SchemaVisualInspectionMaskSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1alpha1SchemaVisualInspectionMaskSavedQueryMetadata",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadata",
      "description": "Runtime operation information for MigrationService.BatchMigrateResources.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        },
        "partialResults": {
          "description": "Partial results that reflect the latest migration operation progress.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResult"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1GenericOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1GenericOperationMetadata",
      "description": "Generic Metadata shared by all operations.",
      "type": "object",
      "properties": {
        "partialFailures": {
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. This field should never exceed 20 entries. Status details field will contain standard GCP error details.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "description": "Output only. Time when the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the operation was updated for the last time. If the operation has finished (successfully or not), this is the finish time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResult": {
      "id": "GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResult",
      "description": "Represents a partial result in batch migration operation for one MigrateResourceRequest.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the migration request in case of failure.",
          "$ref": "GoogleRpcStatus"
        },
        "model": {
          "description": "Migrated model resource name.",
          "type": "string"
        },
        "dataset": {
          "description": "Migrated dataset resource name.",
          "type": "string"
        },
        "request": {
          "description": "It's the same as the value in MigrateResourceRequest.migrate_resource_requests.",
          "$ref": "GoogleCloudAiplatformV1beta1MigrateResourceRequest"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigrateResourceRequest": {
      "id": "GoogleCloudAiplatformV1beta1MigrateResourceRequest",
      "description": "Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to AI Platform.",
      "type": "object",
      "properties": {
        "migrateMlEngineModelVersionConfig": {
          "description": "Config for migrating Version in ml.googleapis.com to AI Platform's Model.",
          "$ref": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig"
        },
        "migrateAutomlModelConfig": {
          "description": "Config for migrating Model in automl.googleapis.com to AI Platform's Model.",
          "$ref": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig"
        },
        "migrateAutomlDatasetConfig": {
          "description": "Config for migrating Dataset in automl.googleapis.com to AI Platform's Dataset.",
          "$ref": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig"
        },
        "migrateDataLabelingDatasetConfig": {
          "description": "Config for migrating Dataset in datalabeling.googleapis.com to AI Platform's Dataset.",
          "$ref": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig": {
      "id": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig",
      "description": "Config for migrating version in ml.googleapis.com to AI Platform's Model.",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "Required. The ml.googleapis.com endpoint that this model version should be migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com",
          "type": "string"
        },
        "modelVersion": {
          "description": "Required. Full resource name of ml engine model version. Format: `projects\/{project}\/models\/{model}\/versions\/{version}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "Required. Display name of the model in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig": {
      "id": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig",
      "description": "Config for migrating Model in automl.googleapis.com to AI Platform's Model.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Required. Full resource name of automl Model. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "Optional. Display name of the model in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig": {
      "id": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig",
      "description": "Config for migrating Dataset in automl.googleapis.com to AI Platform's Dataset.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Required. Full resource name of automl Dataset. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "Required. Display name of the Dataset in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig": {
      "id": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig",
      "description": "Config for migrating Dataset in datalabeling.googleapis.com to AI Platform's Dataset.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Required. Full resource name of data labeling Dataset. Format: `projects\/{project}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "Optional. Display name of the Dataset in AI Platform. System will pick a display name if unspecified.",
          "type": "string"
        },
        "migrateDataLabelingAnnotatedDatasetConfigs": {
          "description": "Optional. Configs for migrating AnnotatedDataset in datalabeling.googleapis.com to AI Platform's SavedQuery. The specified AnnotatedDatasets have to belong to the datalabeling Dataset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig": {
      "id": "GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig",
      "description": "Config for migrating AnnotatedDataset in datalabeling.googleapis.com to AI Platform's SavedQuery.",
      "type": "object",
      "properties": {
        "annotatedDataset": {
          "description": "Required. Full resource name of data labeling AnnotatedDataset. Format: `projects\/{project}\/datasets\/{dataset}\/annotatedDatasets\/{annotated_dataset}`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1BatchMigrateResourcesResponse": {
      "id": "GoogleCloudAiplatformV1beta1BatchMigrateResourcesResponse",
      "description": "Response message for MigrationService.BatchMigrateResources.",
      "type": "object",
      "properties": {
        "migrateResourceResponses": {
          "description": "Successfully migrated resources.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1MigrateResourceResponse"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigrateResourceResponse": {
      "id": "GoogleCloudAiplatformV1beta1MigrateResourceResponse",
      "description": "Describes a successfully migrated resource.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Migrated Dataset's resource name.",
          "type": "string"
        },
        "model": {
          "description": "Migrated Model's resource name.",
          "type": "string"
        },
        "migratableResource": {
          "description": "Before migration, the identifier in ml.googleapis.com, automl.googleapis.com or datalabeling.googleapis.com.",
          "$ref": "GoogleCloudAiplatformV1beta1MigratableResource"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigratableResource": {
      "id": "GoogleCloudAiplatformV1beta1MigratableResource",
      "description": "Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com.",
      "type": "object",
      "properties": {
        "mlEngineModelVersion": {
          "description": "Output only. Represents one Version in ml.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion"
        },
        "automlModel": {
          "description": "Output only. Represents one Model in automl.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1beta1MigratableResourceAutomlModel"
        },
        "automlDataset": {
          "description": "Output only. Represents one Dataset in automl.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset"
        },
        "dataLabelingDataset": {
          "description": "Output only. Represents one Dataset in datalabeling.googleapis.com.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset"
        },
        "lastMigrateTime": {
          "description": "Output only. Timestamp when the last migration attempt on this MigratableResource started. Will not be set if there's no migration attempt on this MigratableResource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "lastUpdateTime": {
          "description": "Output only. Timestamp when this MigratableResource was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion": {
      "id": "GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion",
      "description": "Represents one model Version in ml.googleapis.com.",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "The ml.googleapis.com endpoint that this model Version currently lives in. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com",
          "type": "string"
        },
        "version": {
          "description": "Full resource name of ml engine model Version. Format: `projects\/{project}\/models\/{model}\/versions\/{version}`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigratableResourceAutomlModel": {
      "id": "GoogleCloudAiplatformV1beta1MigratableResourceAutomlModel",
      "description": "Represents one Model in automl.googleapis.com.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Full resource name of automl Model. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`.",
          "type": "string"
        },
        "modelDisplayName": {
          "description": "The Model's display name in automl.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset": {
      "id": "GoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset",
      "description": "Represents one Dataset in automl.googleapis.com.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Full resource name of automl Dataset. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "The Dataset's display name in automl.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset": {
      "id": "GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset",
      "description": "Represents one Dataset in datalabeling.googleapis.com.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Full resource name of data labeling Dataset. Format: `projects\/{project}\/datasets\/{dataset}`.",
          "type": "string"
        },
        "datasetDisplayName": {
          "description": "The Dataset's display name in datalabeling.googleapis.com.",
          "type": "string"
        },
        "dataLabelingAnnotatedDatasets": {
          "description": "The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to the data labeling Dataset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset": {
      "id": "GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset",
      "description": "Represents one AnnotatedDataset in datalabeling.googleapis.com.",
      "type": "object",
      "properties": {
        "annotatedDataset": {
          "description": "Full resource name of data labeling AnnotatedDataset. Format: `projects\/{project}\/datasets\/{dataset}\/annotatedDatasets\/{annotated_dataset}`.",
          "type": "string"
        },
        "annotatedDatasetDisplayName": {
          "description": "The AnnotatedDataset's display name in datalabeling.googleapis.com.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1CreateDatasetOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1CreateDatasetOperationMetadata",
      "description": "Runtime operation information for DatasetService.CreateDataset.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1CreateEndpointOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1CreateEndpointOperationMetadata",
      "description": "Runtime operation information for EndpointService.CreateEndpoint.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata",
      "description": "Runtime operation information for IndexService.CreateIndex.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        },
        "nearestNeighborSearchOperationMetadata": {
          "description": "The operation metadata with regard to ScaNN Index operation.",
          "$ref": "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata",
      "description": "Runtime operation metadata with regard to ScaNN Index.",
      "type": "object",
      "properties": {
        "contentValidationStats": {
          "description": "The validation stats of the content (per file) to be inserted or updated on the ScaNN Index resource. Populated if contentsDeltaUri is provided as part of Index.metadata. Please note that, currently for those files that are broken or has unsupported file format, we will not have the stats for those files.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStats"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStats": {
      "id": "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStats",
      "type": "object",
      "properties": {
        "sourceGcsUri": {
          "description": "GCS uri pointing to the original file in user's bucket.",
          "type": "string"
        },
        "validRecordCount": {
          "description": "Number of records in this file that were successfully processed.",
          "type": "string",
          "format": "int64"
        },
        "invalidRecordCount": {
          "description": "Number of records in this file we skipped due to validate errors.",
          "type": "string",
          "format": "int64"
        },
        "partialErrors": {
          "description": "The detail information of the partial failures encountered for those invalid records that couldn't be parsed. Up to 50 partial errors will be reported.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError": {
      "id": "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError",
      "type": "object",
      "properties": {
        "errorType": {
          "description": "The error type of this record.",
          "type": "string",
          "enumDescriptions": [
            "Default, shall not be used.",
            "The record is empty.",
            "Invalid json format.",
            "Invalid csv format.",
            "Invalid avro format.",
            "The embedding id is not valid.",
            "The size of the embedding vectors does not match with the specified dimension.",
            "The `namespace` field is missing."
          ],
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "EMPTY_LINE",
            "INVALID_JSON_SYNTAX",
            "INVALID_CSV_SYNTAX",
            "INVALID_AVRO_SYNTAX",
            "INVALID_EMBEDDING_ID",
            "EMBEDDING_SIZE_MISMATCH",
            "NAMESPACE_MISSING"
          ]
        },
        "errorMessage": {
          "description": "A human-readable message that is shown to the user to help them fix the error. Note that this message may change from time to time, your code should check against error_type as the source of truth.",
          "type": "string"
        },
        "sourceGcsUri": {
          "description": "GCS uri pointing to the original file in user's bucket.",
          "type": "string"
        },
        "embeddingId": {
          "description": "Empty if the embedding id is failed to parse.",
          "type": "string"
        },
        "rawRecord": {
          "description": "The original content of this record.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1CreateIndexEndpointOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1CreateIndexEndpointOperationMetadata",
      "description": "Runtime operation information for IndexEndpointService.CreateIndexEndpoint.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1CreateSpecialistPoolOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1CreateSpecialistPoolOperationMetadata",
      "description": "Runtime operation information for SpecialistPoolService.CreateSpecialistPool.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DeleteOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1DeleteOperationMetadata",
      "description": "Details of operations that perform deletes of any entities.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DeployModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1DeployModelOperationMetadata",
      "description": "Runtime operation information for EndpointService.DeployModel.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DeployModelResponse": {
      "id": "GoogleCloudAiplatformV1beta1DeployModelResponse",
      "description": "Response message for EndpointService.DeployModel.",
      "type": "object",
      "properties": {
        "deployedModel": {
          "description": "The DeployedModel that had been deployed in the Endpoint.",
          "$ref": "GoogleCloudAiplatformV1beta1DeployedModel"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DeployedModel": {
      "id": "GoogleCloudAiplatformV1beta1DeployedModel",
      "description": "A deployment of a Model. Endpoints contain one or more DeployedModels.",
      "type": "object",
      "properties": {
        "dedicatedResources": {
          "description": "A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.",
          "$ref": "GoogleCloudAiplatformV1beta1DedicatedResources"
        },
        "automaticResources": {
          "description": "A description of resources that to large degree are decided by AI Platform, and require only a modest additional configuration.",
          "$ref": "GoogleCloudAiplatformV1beta1AutomaticResources"
        },
        "id": {
          "description": "Output only. The ID of the DeployedModel.",
          "readOnly": true,
          "type": "string"
        },
        "model": {
          "description": "Required. The name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when the DeployedModel was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "explanationSpec": {
          "description": "Explanation configuration for this DeployedModel. When deploying a Model using EndpointService.DeployModel, this value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of explanation_spec is not populated, the value of the same field of Model.explanation_spec is inherited. If the corresponding Model.explanation_spec is not populated, all fields of the explanation_spec will be used for the explanation configuration.",
          "$ref": "GoogleCloudAiplatformV1beta1ExplanationSpec"
        },
        "serviceAccount": {
          "description": "The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.",
          "type": "string"
        },
        "enableContainerLogging": {
          "description": "If true, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Stackdriver Logging. Only supported for custom-trained Models and AutoML Tabular Models.",
          "type": "boolean"
        },
        "enableAccessLogging": {
          "description": "These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that Stackdriver logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DedicatedResources": {
      "id": "GoogleCloudAiplatformV1beta1DedicatedResources",
      "description": "A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.",
      "type": "object",
      "properties": {
        "machineSpec": {
          "description": "Required. Immutable. The specification of a single machine used by the prediction.",
          "$ref": "GoogleCloudAiplatformV1beta1MachineSpec"
        },
        "minReplicaCount": {
          "description": "Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed. Note: if machine_spec.accelerator_count is above 0, currently the model will be always deployed precisely on min_replica_count.",
          "type": "integer",
          "format": "int32"
        },
        "maxReplicaCount": {
          "description": "Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1MachineSpec": {
      "id": "GoogleCloudAiplatformV1beta1MachineSpec",
      "description": "Specification of a single machine.",
      "type": "object",
      "properties": {
        "machineType": {
          "description": "Immutable. The type of the machine. For the machine types supported for prediction, see https:\/\/tinyurl.com\/aip-docs\/predictions\/machine-types. For machine types supported for creating a custom training job, see https:\/\/tinyurl.com\/aip-docs\/training\/configure-compute. For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.",
          "type": "string"
        },
        "acceleratorType": {
          "description": "Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified accelerator type, which means no accelerator.",
            "Nvidia Tesla K80 GPU.",
            "Nvidia Tesla P100 GPU.",
            "Nvidia Tesla V100 GPU.",
            "Nvidia Tesla P4 GPU.",
            "Nvidia Tesla T4 GPU.",
            "TPU v2.",
            "TPU v3."
          ],
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "TPU_V2",
            "TPU_V3"
          ]
        },
        "acceleratorCount": {
          "description": "The number of accelerators to attach to the machine.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1AutomaticResources": {
      "id": "GoogleCloudAiplatformV1beta1AutomaticResources",
      "description": "A description of resources that to large degree are decided by AI Platform, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.",
      "type": "object",
      "properties": {
        "minReplicaCount": {
          "description": "Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.",
          "type": "integer",
          "format": "int32"
        },
        "maxReplicaCount": {
          "description": "Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though AI Platform may be unable to scale beyond certain replica number.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExplanationSpec": {
      "id": "GoogleCloudAiplatformV1beta1ExplanationSpec",
      "description": "Specification of Model explanation.",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Required. Parameters that configure explaining of the Model's predictions.",
          "$ref": "GoogleCloudAiplatformV1beta1ExplanationParameters"
        },
        "metadata": {
          "description": "Required. Metadata describing the Model's input and output for explanation.",
          "$ref": "GoogleCloudAiplatformV1beta1ExplanationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExplanationParameters": {
      "id": "GoogleCloudAiplatformV1beta1ExplanationParameters",
      "description": "Parameters to configure explaining for Model's predictions.",
      "type": "object",
      "properties": {
        "sampledShapleyAttribution": {
          "description": "An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features. Refer to this paper for model details: https:\/\/arxiv.org\/abs\/1306.4265.",
          "$ref": "GoogleCloudAiplatformV1beta1SampledShapleyAttribution"
        },
        "integratedGradientsAttribution": {
          "description": "An attribution method that computes Aumann-Shapley values taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https:\/\/arxiv.org\/abs\/1703.01365",
          "$ref": "GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution"
        },
        "xraiAttribution": {
          "description": "An attribution method that redistributes Integrated Gradients attribution to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https:\/\/arxiv.org\/abs\/1906.02825 XRAI currently performs better on natural images, like a picture of a house or an animal. If the images are taken in artificial environments, like a lab or manufacturing line, or from diagnostic equipment, like x-rays or quality-control cameras, use Integrated Gradients instead.",
          "$ref": "GoogleCloudAiplatformV1beta1XraiAttribution"
        },
        "topK": {
          "description": "If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs.",
          "type": "integer",
          "format": "int32"
        },
        "outputIndices": {
          "description": "If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it's explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indeices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes).",
          "type": "array",
          "items": {
            "type": "any"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SampledShapleyAttribution": {
      "id": "GoogleCloudAiplatformV1beta1SampledShapleyAttribution",
      "description": "An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.",
      "type": "object",
      "properties": {
        "pathCount": {
          "description": "Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution": {
      "id": "GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution",
      "description": "An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https:\/\/arxiv.org\/abs\/1703.01365",
      "type": "object",
      "properties": {
        "stepCount": {
          "description": "Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.",
          "type": "integer",
          "format": "int32"
        },
        "smoothGradConfig": {
          "description": "Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https:\/\/arxiv.org\/pdf\/1706.03825.pdf",
          "$ref": "GoogleCloudAiplatformV1beta1SmoothGradConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SmoothGradConfig": {
      "id": "GoogleCloudAiplatformV1beta1SmoothGradConfig",
      "description": "Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https:\/\/arxiv.org\/pdf\/1706.03825.pdf",
      "type": "object",
      "properties": {
        "noiseSigma": {
          "description": "This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. For more details about normalization: https:\/\/tinyurl.com\/dgc-normalization. For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https:\/\/arxiv.org\/pdf\/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.",
          "type": "number",
          "format": "float"
        },
        "featureNoiseSigma": {
          "description": "This is similar to noise_sigma, but provides additional flexibility. A separate noise sigma can be provided for each feature, which is useful if their distributions are different. No noise is added to features that are not set. If this field is unset, noise_sigma will be used for all features.",
          "$ref": "GoogleCloudAiplatformV1beta1FeatureNoiseSigma"
        },
        "noisySampleCount": {
          "description": "The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1FeatureNoiseSigma": {
      "id": "GoogleCloudAiplatformV1beta1FeatureNoiseSigma",
      "description": "Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.",
      "type": "object",
      "properties": {
        "noiseSigma": {
          "description": "Noise sigma per feature. No noise is added to features that are not set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature": {
      "id": "GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature",
      "description": "Noise sigma for a single feature.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.",
          "type": "string"
        },
        "sigma": {
          "description": "This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1XraiAttribution": {
      "id": "GoogleCloudAiplatformV1beta1XraiAttribution",
      "description": "An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https:\/\/arxiv.org\/abs\/1906.02825 Supported only by image Models.",
      "type": "object",
      "properties": {
        "stepCount": {
          "description": "Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively.",
          "type": "integer",
          "format": "int32"
        },
        "smoothGradConfig": {
          "description": "Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https:\/\/arxiv.org\/pdf\/1706.03825.pdf",
          "$ref": "GoogleCloudAiplatformV1beta1SmoothGradConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExplanationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1ExplanationMetadata",
      "description": "Metadata describing the Model's input and output for explanation.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by AI Platform. For AI Platform provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata"
          }
        },
        "outputs": {
          "description": "Required. Map from output names to output metadata. For AI Platform provided Tensorflow images, keys can be any string user defines. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata"
          }
        },
        "featureAttributionsSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https:\/\/tinyurl.com\/y538mdwt#schema-object). AutoML tabular Models always have this field populated by AI Platform. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata": {
      "id": "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata",
      "description": "Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using AI Platform-provided images for Tensorflow.",
      "type": "object",
      "properties": {
        "inputBaselines": {
          "description": "Baseline inputs for this feature. If no baseline is specified, AI Platform chooses the baseline for this feature. If multiple baselines are specified, AI Platform returns the average attributions across them in Attributions.baseline_attribution. For AI Platform provided Tensorflow images (both 1.x and 2.x), the shape of each baseline must match the shape of the input tensor. If a scalar is provided, we broadcast to the same shape as the input tensor. For custom images, the element of the baselines must be in the same format as the feature's input in the instance[]. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "inputTensorName": {
          "description": "Name of the input tensor for this feature. Required and is only applicable to AI Platform provided images for Tensorflow.",
          "type": "string"
        },
        "encoding": {
          "description": "Defines how the feature is encoded into the input tensor. Defaults to IDENTITY.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This is the same as IDENTITY.",
            "The tensor represents one feature.",
            "The tensor represents a bag of features where each index maps to a feature. InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [27, 6.0, 150] index_feature_mapping = [\"age\", \"height\", \"weight\"] ```",
            "The tensor represents a bag of features where each index maps to a feature. Zero values in the tensor indicates feature being non-existent. InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [2, 0, 5, 0, 1] index_feature_mapping = [\"a\", \"b\", \"c\", \"d\", \"e\"] ```",
            "The tensor is a list of binaries representing whether a feature exists or not (1 indicates existence). InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [1, 0, 1, 0, 1] index_feature_mapping = [\"a\", \"b\", \"c\", \"d\", \"e\"] ```",
            "The tensor is encoded into a 1-dimensional array represented by an encoded tensor. InputMetadata.encoded_tensor_name must be provided for this encoding. For example: ``` input = [\"This\", \"is\", \"a\", \"test\", \".\"] encoded = [0.1, 0.2, 0.3, 0.4, 0.5] ```",
            "Select this encoding when the input tensor is encoded into a 2-dimensional array represented by an encoded tensor. InputMetadata.encoded_tensor_name must be provided for this encoding. The first dimension of the encoded tensor's shape is the same as the input tensor's shape. For example: ``` input = [\"This\", \"is\", \"a\", \"test\", \".\"] encoded = [[0.1, 0.2, 0.3, 0.4, 0.5], [0.2, 0.1, 0.4, 0.3, 0.5], [0.5, 0.1, 0.3, 0.5, 0.4], [0.5, 0.3, 0.1, 0.2, 0.4], [0.4, 0.3, 0.2, 0.5, 0.1]] ```"
          ],
          "enum": [
            "ENCODING_UNSPECIFIED",
            "IDENTITY",
            "BAG_OF_FEATURES",
            "BAG_OF_FEATURES_SPARSE",
            "INDICATOR",
            "COMBINED_EMBEDDING",
            "CONCAT_EMBEDDING"
          ]
        },
        "modality": {
          "description": "Modality of the feature. Valid values are: numeric, image. Defaults to numeric.",
          "type": "string"
        },
        "featureValueDomain": {
          "description": "The domain details of the input feature value. Like min\/max, original mean or standard deviation if normalized.",
          "$ref": "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain"
        },
        "indicesTensorName": {
          "description": "Specifies the index of the values of the input tensor. Required when the input tensor is a sparse representation. Refer to Tensorflow documentation for more details: https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/sparse\/SparseTensor.",
          "type": "string"
        },
        "denseShapeTensorName": {
          "description": "Specifies the shape of the values of the input if the input is a sparse representation. Refer to Tensorflow documentation for more details: https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/sparse\/SparseTensor.",
          "type": "string"
        },
        "indexFeatureMapping": {
          "description": "A list of feature names for each index in the input tensor. Required when the input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE, INDICATOR.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encodedTensorName": {
          "description": "Encoded tensor is a transformation of the input tensor. Must be provided if choosing Integrated Gradients attribution or XRAI attribution and the input tensor is not differentiable. An encoded tensor is generated if the input tensor is encoded by a lookup table.",
          "type": "string"
        },
        "encodedBaselines": {
          "description": "A list of baselines for the encoded tensor. The shape of each baseline should match the shape of the encoded tensor. If a scalar is provided, AI Platform broadcast to the same shape as the encoded tensor.",
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "visualization": {
          "description": "Visualization configurations for image explanation.",
          "$ref": "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization"
        },
        "groupName": {
          "description": "Name of the group that the input belongs to. Features with the same group name will be treated as one feature when computing attributions. Features grouped together can have different shapes in value. If provided, there will be one single attribution generated in featureAttributions, keyed by the group name.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain": {
      "id": "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain",
      "description": "Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained.",
      "type": "object",
      "properties": {
        "minValue": {
          "description": "The minimum permissible value for this feature.",
          "type": "number",
          "format": "float"
        },
        "maxValue": {
          "description": "The maximum permissible value for this feature.",
          "type": "number",
          "format": "float"
        },
        "originalMean": {
          "description": "If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization.",
          "type": "number",
          "format": "float"
        },
        "originalStddev": {
          "description": "If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization": {
      "id": "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization",
      "description": "Visualization configurations for image explanation.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the image visualization. Only applicable to Integrated Gradients attribution. OUTLINES shows regions of attribution, while PIXELS shows per-pixel attribution. Defaults to OUTLINES.",
          "type": "string",
          "enumDescriptions": [
            "Should not be used.",
            "Shows which pixel contributed to the image prediction.",
            "Shows which region contributed to the image prediction by outlining the region."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "PIXELS",
            "OUTLINES"
          ]
        },
        "polarity": {
          "description": "Whether to only highlight pixels with positive contributions, negative or both. Defaults to POSITIVE.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This is the same as POSITIVE.",
            "Highlights the pixels\/outlines that were most influential to the model's prediction.",
            "Setting polarity to negative highlights areas that does not lead to the models's current prediction.",
            "Shows both positive and negative attributions."
          ],
          "enum": [
            "POLARITY_UNSPECIFIED",
            "POSITIVE",
            "NEGATIVE",
            "BOTH"
          ]
        },
        "colorMap": {
          "description": "The color scheme used for the highlighted areas. Defaults to PINK_GREEN for Integrated Gradients attribution, which shows positive attributions in green and negative in pink. Defaults to VIRIDIS for XRAI attribution, which highlights the most influential regions in yellow and the least influential in blue.",
          "type": "string",
          "enumDescriptions": [
            "Should not be used.",
            "Positive: green. Negative: pink.",
            "Viridis color map: A perceptually uniform color mapping which is easier to see by those with colorblindness and progresses from yellow to green to blue. Positive: yellow. Negative: blue.",
            "Positive: red. Negative: red.",
            "Positive: green. Negative: green.",
            "Positive: green. Negative: red.",
            "PiYG palette."
          ],
          "enum": [
            "COLOR_MAP_UNSPECIFIED",
            "PINK_GREEN",
            "VIRIDIS",
            "RED",
            "GREEN",
            "RED_GREEN",
            "PINK_WHITE_GREEN"
          ]
        },
        "clipPercentUpperbound": {
          "description": "Excludes attributions above the specified percentile from the highlighted areas. Using the clip_percent_upperbound and clip_percent_lowerbound together can be useful for filtering out noise and making it easier to see areas of strong attribution. Defaults to 99.9.",
          "type": "number",
          "format": "float"
        },
        "clipPercentLowerbound": {
          "description": "Excludes attributions below the specified percentile, from the highlighted areas. Defaults to 35.",
          "type": "number",
          "format": "float"
        },
        "overlayType": {
          "description": "How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization. Defaults to NONE.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This is the same as NONE.",
            "No overlay.",
            "The attributions are shown on top of the original image.",
            "The attributions are shown on top of grayscaled version of the original image.",
            "The attributions are used as a mask to reveal predictive parts of the image and hide the un-predictive parts."
          ],
          "enum": [
            "OVERLAY_TYPE_UNSPECIFIED",
            "NONE",
            "ORIGINAL",
            "GRAYSCALE",
            "MASK_BLACK"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata": {
      "id": "GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata",
      "description": "Metadata of the prediction output to be explained.",
      "type": "object",
      "properties": {
        "indexDisplayNameMapping": {
          "description": "Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.",
          "type": "any"
        },
        "displayNameMappingKey": {
          "description": "Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.",
          "type": "string"
        },
        "outputTensorName": {
          "description": "Name of the output tensor. Required and is only applicable to AI Platform provided images for Tensorflow.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DeployIndexOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1DeployIndexOperationMetadata",
      "description": "Runtime operation information for IndexEndpointService.DeployIndex.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DeployIndexResponse": {
      "id": "GoogleCloudAiplatformV1beta1DeployIndexResponse",
      "description": "Response message for IndexEndpointService.DeployIndex.",
      "type": "object",
      "properties": {
        "deployedIndex": {
          "description": "The DeployedIndex that had been deployed in the IndexEndpoint.",
          "$ref": "GoogleCloudAiplatformV1beta1DeployedIndex"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DeployedIndex": {
      "id": "GoogleCloudAiplatformV1beta1DeployedIndex",
      "description": "A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.",
          "type": "string"
        },
        "index": {
          "description": "Required. The name of the Index this is the deployment of. We may refer to this Index as the DeployedIndex's \"original\" Index.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the DeployedIndex. If not provided upon creation, the Index's display_name is used.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when the DeployedIndex was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "privateEndpoints": {
          "description": "Output only. Provides paths for users to send requests directly to the deployed index services running on Cloud via private services access. This field is populated if network is configured.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1beta1IndexPrivateEndpoints"
        },
        "indexSyncTime": {
          "description": "Output only. The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously updated in the background to reflect this changes. If this timestamp's value is at least the Index.update_time of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older, then to see which updates this DeployedIndex already contains (and which not), one must list Operations working on the original Index. Only the successfully completed Operations with Operations.metadata.generic_metadata.update_time equal or before this sync time are contained in this DeployedIndex.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "automaticResources": {
          "description": "Optional. A description of resources that the DeployedIndex uses, which to large degree are decided by AI Platform, and optionally allows only a modest additional configuration. If min_replica_count is not set, the default value is 1. If max_replica_count is not set, the default value is min_replica_count. The max allowed replica count is 1000. The user is billed for the resources (at least their minimal amount) even if the DeployedIndex receives no traffic.",
          "$ref": "GoogleCloudAiplatformV1beta1AutomaticResources"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1IndexPrivateEndpoints": {
      "id": "GoogleCloudAiplatformV1beta1IndexPrivateEndpoints",
      "description": "IndexPrivateEndpoints proto is used to provide paths for users to send requests via private services access.",
      "type": "object",
      "properties": {
        "matchGrpcAddress": {
          "description": "Output only. The ip address used to send match gRPC requests.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExportDataOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1ExportDataOperationMetadata",
      "description": "Runtime operation information for DatasetService.ExportData.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        },
        "gcsOutputDirectory": {
          "description": "A Google Cloud Storage directory which path ends with '\/'. The exported data is stored in the directory.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExportDataResponse": {
      "id": "GoogleCloudAiplatformV1beta1ExportDataResponse",
      "description": "Response message for DatasetService.ExportData.",
      "type": "object",
      "properties": {
        "exportedFiles": {
          "description": "All of the files that are exported in this export operation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExportModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1ExportModelOperationMetadata",
      "description": "Details of ModelService.ExportModel operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        },
        "outputInfo": {
          "description": "Output only. Information further describing the output of this Model export.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfo"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfo": {
      "id": "GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfo",
      "description": "Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig.",
      "type": "object",
      "properties": {
        "artifactOutputUri": {
          "description": "Output only. If the Model artifact is being exported to Google Cloud Storage this is the full path of the directory created, into which the Model files are being written to.",
          "readOnly": true,
          "type": "string"
        },
        "imageOutputUri": {
          "description": "Output only. If the Model image is being exported to Google Container Registry or Artifact Registry this is the full path of the image created.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ExportModelResponse": {
      "id": "GoogleCloudAiplatformV1beta1ExportModelResponse",
      "description": "Response message of ModelService.ExportModel operation.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1beta1ImportDataOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1ImportDataOperationMetadata",
      "description": "Runtime operation information for DatasetService.ImportData.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ImportDataResponse": {
      "id": "GoogleCloudAiplatformV1beta1ImportDataResponse",
      "description": "Response message for DatasetService.ImportData.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1beta1SpecialistPool": {
      "id": "GoogleCloudAiplatformV1beta1SpecialistPool",
      "description": "SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers who are responsible for managing the labelers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and labelers work with the jobs using CrowdCompute console.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The resource name of the SpecialistPool.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can be consist of any UTF-8 characters. This field should be unique on project-level.",
          "type": "string"
        },
        "specialistManagersCount": {
          "description": "Output only. The number of Specialists in this SpecialistPool.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "specialistManagerEmails": {
          "description": "The email addresses of the specialists in the SpecialistPool.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pendingDataLabelingJobs": {
          "description": "Output only. The resource name of the pending data labeling jobs.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1UndeployModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1UndeployModelOperationMetadata",
      "description": "Runtime operation information for EndpointService.UndeployModel.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1UndeployModelResponse": {
      "id": "GoogleCloudAiplatformV1beta1UndeployModelResponse",
      "description": "Response message for EndpointService.UndeployModel.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1beta1UndeployIndexOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1UndeployIndexOperationMetadata",
      "description": "Runtime operation information for IndexEndpointService.UndeployIndex.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1UndeployIndexResponse": {
      "id": "GoogleCloudAiplatformV1beta1UndeployIndexResponse",
      "description": "Response message for IndexEndpointService.UndeployIndex.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1beta1UpdateIndexOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1UpdateIndexOperationMetadata",
      "description": "Runtime operation information for IndexService.UpdateIndex.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        },
        "nearestNeighborSearchOperationMetadata": {
          "description": "The operation metadata with regard to ScaNN Index operation.",
          "$ref": "GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1UpdateSpecialistPoolOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1UpdateSpecialistPoolOperationMetadata",
      "description": "Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool.",
      "type": "object",
      "properties": {
        "specialistPool": {
          "description": "Output only. The name of the SpecialistPool to which the specialists are being added. Format: `projects\/{project_id}\/locations\/{location_id}\/specialistPools\/{specialist_pool}`",
          "readOnly": true,
          "type": "string"
        },
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1UploadModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1UploadModelOperationMetadata",
      "description": "Details of ModelService.UploadModel operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1beta1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1UploadModelResponse": {
      "id": "GoogleCloudAiplatformV1beta1UploadModelResponse",
      "description": "Response message of ModelService.UploadModel operation.",
      "type": "object",
      "properties": {
        "model": {
          "description": "The name of the uploaded Model resource. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageClassificationPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageClassificationPredictionInstance",
      "description": "Prediction input format for Image Classification.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The image bytes or GCS URI to make the prediction on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image\/jpeg - image\/gif - image\/png - image\/webp - image\/bmp - image\/tiff - image\/vnd.microsoft.icon",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageObjectDetectionPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageObjectDetectionPredictionInstance",
      "description": "Prediction input format for Image Object Detection.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The image bytes or GCS URI to make the prediction on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image\/jpeg - image\/gif - image\/png - image\/webp - image\/bmp - image\/tiff - image\/vnd.microsoft.icon",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageSegmentationPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageSegmentationPredictionInstance",
      "description": "Prediction input format for Image Segmentation.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The image bytes to make the predictions on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image\/jpeg - image\/png",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextClassificationPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextClassificationPredictionInstance",
      "description": "Prediction input format for Text Classification.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The text snippet to make the predictions on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the text snippet. The supported MIME types are listed below. - text\/plain",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextExtractionPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextExtractionPredictionInstance",
      "description": "Prediction input format for Text Extraction.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The text snippet to make the predictions on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the text snippet. The supported MIME types are listed below. - text\/plain",
          "type": "string"
        },
        "key": {
          "description": "This field is only used for batch prediction. If a key is provided, the batch prediction result will by mapped to this key. If omitted, then the batch prediction result will contain the entire input instance. AI Platform will not check if keys in the request are duplicates, so it is up to the caller to ensure the keys are unique.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextSentimentPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextSentimentPredictionInstance",
      "description": "Prediction input format for Text Sentiment.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The text snippet to make the predictions on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the text snippet. The supported MIME types are listed below. - text\/plain",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoActionRecognitionPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoActionRecognitionPredictionInstance",
      "description": "Prediction input format for Video Action Recognition.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The Google Cloud Storage location of the video on which to perform the prediction.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the video. Only the following are supported: video\/mp4 video\/avi video\/quicktime",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision.",
          "type": "string"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision, and \"inf\" or \"Infinity\" is allowed, which means the end of the video.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoClassificationPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoClassificationPredictionInstance",
      "description": "Prediction input format for Video Classification.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The Google Cloud Storage location of the video on which to perform the prediction.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the video. Only the following are supported: video\/mp4 video\/avi video\/quicktime",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision.",
          "type": "string"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision, and \"inf\" or \"Infinity\" is allowed, which means the end of the video.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoObjectTrackingPredictionInstance": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoObjectTrackingPredictionInstance",
      "description": "Prediction input format for Video Object Tracking.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The Google Cloud Storage location of the video on which to perform the prediction.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the video. Only the following are supported: video\/mp4 video\/avi video\/quicktime",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision.",
          "type": "string"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision, and \"inf\" or \"Infinity\" is allowed, which means the end of the video.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictParamsImageClassificationPredictionParams": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictParamsImageClassificationPredictionParams",
      "description": "Prediction model parameters for Image Classification.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams",
      "description": "Prediction model parameters for Image Object Detection.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata's predictionsLimit. Default value is 10.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictParamsImageSegmentationPredictionParams": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictParamsImageSegmentationPredictionParams",
      "description": "Prediction model parameters for Image Segmentation.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "When the model predicts category of pixels of the image, it will only provide predictions for pixels that it is at least this much confident about. All other pixels will be classified as background. Default value is 0.5.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoActionRecognitionPredictionParams": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoActionRecognitionPredictionParams",
      "description": "Prediction model parameters for Video Action Recognition.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams",
      "description": "Prediction model parameters for Video Classification.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000.",
          "type": "integer",
          "format": "int32"
        },
        "segmentClassification": {
          "description": "Set to true to request segment-level classification. AI Platform returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true",
          "type": "boolean"
        },
        "shotClassification": {
          "description": "Set to true to request shot-level classification. AI Platform determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. AI Platform then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false",
          "type": "boolean"
        },
        "oneSecIntervalClassification": {
          "description": "Set to true to request classification for a video at one-second intervals. AI Platform returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoObjectTrackingPredictionParams": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoObjectTrackingPredictionParams",
      "description": "Prediction model parameters for Video Object Tracking.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.",
          "type": "integer",
          "format": "int32"
        },
        "minBoundingBoxSize": {
          "description": "Only bounding boxes with shortest edge at least that long as a relative value of video frame size are returned. Default value is 0.0.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionClassificationPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionClassificationPredictionResult",
      "description": "Prediction output format for Image and Text Classification.",
      "type": "object",
      "properties": {
        "ids": {
          "description": "The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "displayNames": {
          "description": "The display names of the AnnotationSpecs that had been identified, order matches the IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confidences": {
          "description": "The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult",
      "description": "Prediction output format for Image Object Detection.",
      "type": "object",
      "properties": {
        "ids": {
          "description": "The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "displayNames": {
          "description": "The display names of the AnnotationSpecs that had been identified, order matches the IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confidences": {
          "description": "The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "bboxes": {
          "description": "Bounding boxes, i.e. the rectangles over the image, that pinpoint the found AnnotationSpecs. Given in order that matches the IDs. Each bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and `yMax`, which represent the extremal coordinates of the box. They are relative to the image size, and the point 0,0 is in the top left of the image.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "any"
            }
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult",
      "description": "Prediction output format for Image Segmentation.",
      "type": "object",
      "properties": {
        "categoryMask": {
          "description": "A PNG image where each pixel in the mask represents the category in which the pixel in the original image was predicted to belong to. The size of this image will be the same as the original image. The mapping between the AnntoationSpec and the color can be found in model's metadata. The model will choose the most likely category and if none of the categories reach the confidence threshold, the pixel will be marked as background.",
          "type": "string"
        },
        "confidenceMask": {
          "description": "A one channel image which is encoded as an 8bit lossless PNG. The size of the image will be the same as the original image. For a specific pixel, darker color means less confidence in correctness of the cateogry in the categoryMask for the corresponding pixel. Black means no confidence and white means complete confidence.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult",
      "description": "Prediction output format for Tabular Classification.",
      "type": "object",
      "properties": {
        "classes": {
          "description": "The name of the classes being classified, contains all possible values of the target column.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scores": {
          "description": "The model's confidence in each class being correct, higher value means higher confidence. The N-th score corresponds to the N-th class in classes.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularRegressionPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularRegressionPredictionResult",
      "description": "Prediction output format for Tabular Regression.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The regression value.",
          "type": "number",
          "format": "float"
        },
        "lowerBound": {
          "description": "The lower bound of the prediction interval.",
          "type": "number",
          "format": "float"
        },
        "upperBound": {
          "description": "The upper bound of the prediction interval.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextExtractionPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextExtractionPredictionResult",
      "description": "Prediction output format for Text Extraction.",
      "type": "object",
      "properties": {
        "ids": {
          "description": "The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "displayNames": {
          "description": "The display names of the AnnotationSpecs that had been identified, order matches the IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "textSegmentStartOffsets": {
          "description": "The start offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "textSegmentEndOffsets": {
          "description": "The end offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "confidences": {
          "description": "The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextSentimentPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextSentimentPredictionResult",
      "description": "Prediction output format for Text Sentiment",
      "type": "object",
      "properties": {
        "sentiment": {
          "description": "The integer sentiment labels between 0 (inclusive) and sentimentMax label (inclusive), while 0 maps to the least positive sentiment and sentimentMax maps to the most positive one. The higher the score is, the more positive the sentiment in the text snippet is. Note: sentimentMax is an integer value between 1 (inclusive) and 10 (inclusive).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTimeSeriesForecastingPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionTimeSeriesForecastingPredictionResult",
      "description": "Prediction output format for Time Series Forecasting.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The regression value.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoActionRecognitionPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoActionRecognitionPredictionResult",
      "description": "Prediction output format for Video Action Recognition.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "confidence": {
          "description": "The Model's confidence in correction of this prediction, higher value means higher confidence.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoClassificationPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoClassificationPredictionResult",
      "description": "Prediction output format for Video Classification.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "type": {
          "description": "The type of the prediction. The requested types can be configured via parameters. This will be one of - segment-classification - shot-classification - one-sec-interval-classification",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentStart' from the input instance, for other types it is the start of a shot or a 1 second interval respectively.",
          "type": "string",
          "format": "google-duration"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentEnd' from the input instance, for other types it is the end of a shot or a 1 second interval respectively.",
          "type": "string",
          "format": "google-duration"
        },
        "confidence": {
          "description": "The Model's confidence in correction of this prediction, higher value means higher confidence.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResult",
      "description": "Prediction output format for Video Object Tracking.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "timeSegmentEnd": {
          "description": "The end, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "confidence": {
          "description": "The Model's confidence in correction of this prediction, higher value means higher confidence.",
          "type": "number",
          "format": "float"
        },
        "frames": {
          "description": "All of the frames of the video in which a single object instance has been detected. The bounding boxes in the frames identify the same object.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame",
      "description": "The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e. the rectangle over the video frame pinpointing the found AnnotationSpec. The coordinates are relative to the frame size, and the point 0,0 is in the top left of the frame.",
      "type": "object",
      "properties": {
        "timeOffset": {
          "description": "A time (frame) of a video in which the object has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "xMin": {
          "description": "The leftmost coordinate of the bounding box.",
          "type": "number",
          "format": "float"
        },
        "xMax": {
          "description": "The rightmost coordinate of the bounding box.",
          "type": "number",
          "format": "float"
        },
        "yMin": {
          "description": "The topmost coordinate of the bounding box.",
          "type": "number",
          "format": "float"
        },
        "yMax": {
          "description": "The bottommost coordinate of the bounding box.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecasting": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecasting",
      "description": "A TrainingJob that trains and uploads an AutoML Forecasting Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputs"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputs",
      "type": "object",
      "properties": {
        "targetColumn": {
          "description": "The name of the column that the model is to predict.",
          "type": "string"
        },
        "timeSeriesIdentifierColumn": {
          "description": "The name of the column that identifies the time series.",
          "type": "string"
        },
        "timeColumn": {
          "description": "The name of the column that identifies time order in the time series.",
          "type": "string"
        },
        "transformations": {
          "description": "Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using \".\" as the delimiter.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation"
          }
        },
        "optimizationObjective": {
          "description": "Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: \"minimize-rmse\" (default) - Minimize root-mean-squared error (RMSE). \"minimize-mae\" - Minimize mean-absolute error (MAE). \"minimize-rmsle\" - Minimize root-mean-squared log error (RMSLE). \"minimize-rmspe\" - Minimize root-mean-squared percentage error (RMSPE). \"minimize-wape-mae\" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). \"minimize-quantile-loss\" - Minimize the quantile loss at the quantiles defined in `quantiles`.",
          "type": "string"
        },
        "trainBudgetMilliNodeHours": {
          "description": "Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.",
          "type": "string",
          "format": "int64"
        },
        "weightColumn": {
          "description": "Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.",
          "type": "string"
        },
        "staticColumns": {
          "description": "Column names that should be used as static columns. The value of these columns are static per time series.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeVariantPastOnlyColumns": {
          "description": "Column names that should be used as time variant past only columns. This column contains information for the given entity (identified by the time_series_identifier_column) that is known for the past but not the future (e.g. population of a city in a given year, or weather on a given day).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeVariantPastAndFutureColumns": {
          "description": "Column names that should be used as time variant past and future columns. This column contains information for the given entity (identified by the key column) that is known for the past and the future",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "period": {
          "description": "Expected difference in time granularity between rows in the data. If it is not set, the period is inferred from data.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsPeriod"
        },
        "forecastWindowStart": {
          "description": "The number of periods offset into the future as the start of the forecast window (the window of future values to predict, relative to the present.), where each period is one unit of granularity as defined by the `period` field above. Default to 0. Inclusive.",
          "type": "string",
          "format": "int64"
        },
        "forecastWindowEnd": {
          "description": "The number of periods offset into the future as the end of the forecast window (the window of future values to predict, relative to the present.), where each period is one unit of granularity as defined by the `period` field above. Inclusive.",
          "type": "string",
          "format": "int64"
        },
        "pastHorizon": {
          "description": "The number of periods offset into the past to restrict past sequence, where each period is one unit of granularity as defined by the `period`. Default value 0 means that it lets algorithm to define the value. Inclusive.",
          "type": "string",
          "format": "int64"
        },
        "exportEvaluatedDataItemsConfig": {
          "description": "Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig"
        },
        "quantiles": {
          "description": "Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "validationOptions": {
          "description": "Validation options for the data validation component. The available options are: \"fail-pipeline\" - default, will validate against the validation and fail the pipeline if it fails. \"ignore-validation\" - ignore the results of the validation and continue",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation",
      "type": "object",
      "properties": {
        "auto": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation"
        },
        "numeric": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation"
        },
        "categorical": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation"
        },
        "timestamp": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation"
        },
        "text": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation"
        },
        "repeatedNumeric": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericArrayTransformation"
        },
        "repeatedCategorical": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalArrayTransformation"
        },
        "repeatedText": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextArrayTransformation"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation",
      "description": "Training pipeline will infer the proper transformation based on the statistic of dataset.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation",
      "description": "Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation",
      "description": "Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the \"unknown\" category. The \"unknown\" category gets its own special lookup index and resulting embedding.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation",
      "description": "Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "timeFormat": {
          "description": "The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `\"Z\"` (e.g. 1985-04-12T23:20:50.52Z)",
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation",
      "description": "Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericArrayTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericArrayTransformation",
      "description": "Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalArrayTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalArrayTransformation",
      "description": "Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextArrayTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextArrayTransformation",
      "description": "Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (\" \") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsPeriod": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsPeriod",
      "description": "A duration of time expressed in time granularity units.",
      "type": "object",
      "properties": {
        "unit": {
          "description": "The time granularity unit of this time period. The supported unit are: \"minute\" \"hour\" \"day\" \"week\" \"month\" \"year\"",
          "type": "string"
        },
        "quantity": {
          "description": "The number of units per period, e.g. 3 weeks or 2 months.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig",
      "description": "Configuration for exporting test set predictions to a BigQuery table.",
      "type": "object",
      "properties": {
        "destinationBigqueryUri": {
          "description": "URI of desired destination BigQuery table. Expected format: bq:\/\/:: If not specified, then results are exported to the following auto-created BigQuery table: :export_evaluated_examples__.evaluated_examples",
          "type": "string"
        },
        "overrideExistingTable": {
          "description": "If true and an export destination is specified, then the contents of the destination are overwritten. Otherwise, if the export destination already exists, then the export operation fails.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadata",
      "description": "Model metadata specific to AutoML Forecasting.",
      "type": "object",
      "properties": {
        "trainCostMilliNodeHours": {
          "description": "Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassification": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassification",
      "description": "A TrainingJob that trains and uploads an AutoML Image Classification Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A Model best tailored to be used within Google Cloud, and which cannot be exported. Default.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device with afterwards.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other mobile models."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD",
            "MOBILE_TF_LOW_LATENCY_1",
            "MOBILE_TF_VERSATILE_1",
            "MOBILE_TF_HIGH_ACCURACY_1"
          ]
        },
        "baseModelId": {
          "description": "The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.",
          "type": "string"
        },
        "budgetMilliNodeHours": {
          "description": "The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 8,000 and 800,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time, considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.",
          "type": "string",
          "format": "int64"
        },
        "disableEarlyStopping": {
          "description": "Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Classification might stop training before the entire training budget has been used.",
          "type": "boolean"
        },
        "multiLabel": {
          "description": "If false, a single-label (multi-class) Model will be trained (i.e. assuming that for each image just up to one annotation may be applicable). If true, a multi-label Model will be trained (i.e. assuming that for each image multiple annotations may be applicable).",
          "type": "boolean"
        },
        "evaluationExplanationSpec": {
          "description": "Specification for explaining the evaluation results. If specified, the ModelEvaluation of the trained Model will include explanations for predictions on the test data. Each prediction will be explained twice, using integrated gradients and XRAI attribution methods respectively.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageExplanationSpecGroup"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageExplanationSpecGroup": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageExplanationSpecGroup",
      "description": "Specification for explaining the evaluation results.",
      "type": "object",
      "properties": {
        "imageGcsDestination": {
          "description": "The Cloud Storage location to store the images explaining the evaluation result of the images in the test data.",
          "type": "string"
        },
        "integratedGradients": {
          "description": "Specification for explaining the evaluation results using integrated gradients attribution method. The full ExplanationSpec used for explaining the evaluation can be found in the ModelEvaluation.explanationSpecs object.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageExplanationSpec"
        },
        "xrai": {
          "description": "Specification for explaining the evaluation results using XRAI attribution method. The full ExplanationSpec used for explaining the evaluation can be found in the ModelEvaluation.explanationSpecs object.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageExplanationSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageExplanationSpec": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageExplanationSpec",
      "description": "Specification of a specified explanation attribution method.",
      "type": "object",
      "properties": {
        "stepCount": {
          "description": "The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.",
          "type": "integer",
          "format": "int32"
        },
        "visualization": {
          "description": "Visualization configurations for image explanation.",
          "$ref": "GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata",
      "type": "object",
      "properties": {
        "costMilliNodeHours": {
          "description": "The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.",
          "type": "string",
          "format": "int64"
        },
        "successfulStopReason": {
          "description": "For successful job completions, this is the reason why the job has finished.",
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "The inputs.budgetMilliNodeHours had been reached.",
            "Further training of the Model ceased to increase its quality, since it already has converged."
          ],
          "enum": [
            "SUCCESSFUL_STOP_REASON_UNSPECIFIED",
            "BUDGET_REACHED",
            "MODEL_CONVERGED"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetection": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetection",
      "description": "A TrainingJob that trains and uploads an AutoML Image Object Detection Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs"
        },
        "metadata": {
          "description": "The metadata information",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model best tailored to be used within Google Cloud, and which cannot be exported. Expected to have a higher latency, but should also have a higher prediction quality than other cloud models.",
            "A model best tailored to be used within Google Cloud, and which cannot be exported. Expected to have a low latency, but may have lower prediction quality than other cloud models.",
            "A model that, in addition to being available within Google Cloud can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models.",
            "A model that, in addition to being available within Google Cloud can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other mobile models."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD_HIGH_ACCURACY_1",
            "CLOUD_LOW_LATENCY_1",
            "MOBILE_TF_LOW_LATENCY_1",
            "MOBILE_TF_VERSATILE_1",
            "MOBILE_TF_HIGH_ACCURACY_1"
          ]
        },
        "budgetMilliNodeHours": {
          "description": "The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.",
          "type": "string",
          "format": "int64"
        },
        "disableEarlyStopping": {
          "description": "Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata",
      "type": "object",
      "properties": {
        "costMilliNodeHours": {
          "description": "The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.",
          "type": "string",
          "format": "int64"
        },
        "successfulStopReason": {
          "description": "For successful job completions, this is the reason why the job has finished.",
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "The inputs.budgetMilliNodeHours had been reached.",
            "Further training of the Model ceased to increase its quality, since it already has converged."
          ],
          "enum": [
            "SUCCESSFUL_STOP_REASON_UNSPECIFIED",
            "BUDGET_REACHED",
            "MODEL_CONVERGED"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentation",
      "description": "A TrainingJob that trains and uploads an AutoML Image Segmentation Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model to be used via prediction calls to uCAIP API. Expected to have a higher latency, but should also have a higher prediction quality than other models.",
            "A model to be used via prediction calls to uCAIP API. Expected to have a lower latency but relatively lower prediction quality.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow model and used on a mobile or edge device afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD_HIGH_ACCURACY_1",
            "CLOUD_LOW_ACCURACY_1",
            "MOBILE_TF_LOW_LATENCY_1"
          ]
        },
        "budgetMilliNodeHours": {
          "description": "The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. Or actaul_wall_clock_hours = train_budget_milli_node_hours \/ (number_of_nodes_involved * 1000) For modelType `cloud-high-accuracy-1`(default), the budget must be between 20,000 and 2,000,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time (1000 milli * 24 hours * 8 nodes).",
          "type": "string",
          "format": "int64"
        },
        "baseModelId": {
          "description": "The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata",
      "type": "object",
      "properties": {
        "costMilliNodeHours": {
          "description": "The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.",
          "type": "string",
          "format": "int64"
        },
        "successfulStopReason": {
          "description": "For successful job completions, this is the reason why the job has finished.",
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "The inputs.budgetMilliNodeHours had been reached.",
            "Further training of the Model ceased to increase its quality, since it already has converged."
          ],
          "enum": [
            "SUCCESSFUL_STOP_REASON_UNSPECIFIED",
            "BUDGET_REACHED",
            "MODEL_CONVERGED"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTables": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTables",
      "description": "A TrainingJob that trains and uploads an AutoML Tables Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs",
      "type": "object",
      "properties": {
        "optimizationObjectiveRecallValue": {
          "description": "Required when optimization_objective is \"maximize-precision-at-recall\". Must be between 0 and 1, inclusive.",
          "type": "number",
          "format": "float"
        },
        "optimizationObjectivePrecisionValue": {
          "description": "Required when optimization_objective is \"maximize-recall-at-precision\". Must be between 0 and 1, inclusive.",
          "type": "number",
          "format": "float"
        },
        "predictionType": {
          "description": "The type of prediction the Model is to produce. \"classification\" - Predict one out of multiple target values is picked for each row. \"regression\" - Predict a value based on its relation to other values. This type is available only to columns that contain semantically numeric values, i.e. integers or floating point number, even if stored as e.g. strings.",
          "type": "string"
        },
        "targetColumn": {
          "description": "The column name of the target column that the model is to predict.",
          "type": "string"
        },
        "transformations": {
          "description": "Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using \".\" as the delimiter.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation"
          }
        },
        "optimizationObjective": {
          "description": "Objective function the model is optimizing towards. The training process creates a model that maximizes\/minimizes the value of the objective function over the validation set. The supported optimization objectives depend on the prediction type. If the field is not set, a default objective function is used. classification (binary): \"maximize-au-roc\" (default) - Maximize the area under the receiver operating characteristic (ROC) curve. \"minimize-log-loss\" - Minimize log loss. \"maximize-au-prc\" - Maximize the area under the precision-recall curve. \"maximize-precision-at-recall\" - Maximize precision for a specified recall value. \"maximize-recall-at-precision\" - Maximize recall for a specified precision value. classification (multi-class): \"minimize-log-loss\" (default) - Minimize log loss. regression: \"minimize-rmse\" (default) - Minimize root-mean-squared error (RMSE). \"minimize-mae\" - Minimize mean-absolute error (MAE). \"minimize-rmsle\" - Minimize root-mean-squared log error (RMSLE).",
          "type": "string"
        },
        "trainBudgetMilliNodeHours": {
          "description": "Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.",
          "type": "string",
          "format": "int64"
        },
        "disableEarlyStopping": {
          "description": "Use the entire training budget. This disables the early stopping feature. By default, the early stopping feature is enabled, which means that AutoML Tables might stop training before the entire training budget has been used.",
          "type": "boolean"
        },
        "weightColumnName": {
          "description": "Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.",
          "type": "string"
        },
        "exportEvaluatedDataItemsConfig": {
          "description": "Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation",
      "type": "object",
      "properties": {
        "auto": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation"
        },
        "numeric": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation"
        },
        "categorical": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation"
        },
        "timestamp": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation"
        },
        "text": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation"
        },
        "repeatedNumeric": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation"
        },
        "repeatedCategorical": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation"
        },
        "repeatedText": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation",
      "description": "Training pipeline will infer the proper transformation based on the statistic of dataset.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation",
      "description": "Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation",
      "description": "Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the \"unknown\" category. The \"unknown\" category gets its own special lookup index and resulting embedding.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation",
      "description": "Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "timeFormat": {
          "description": "The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `\"Z\"` (e.g. 1985-04-12T23:20:50.52Z)",
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation",
      "description": "Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation",
      "description": "Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation",
      "description": "Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation",
      "description": "Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (\" \") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadata",
      "description": "Model metadata specific to AutoML Tables.",
      "type": "object",
      "properties": {
        "trainCostMilliNodeHours": {
          "description": "Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassification": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassification",
      "description": "A TrainingJob that trains and uploads an AutoML Text Classification Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs",
      "type": "object",
      "properties": {
        "multiLabel": {
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtraction": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtraction",
      "description": "A TrainingJob that trains and uploads an AutoML Text Extraction Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentiment": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentiment",
      "description": "A TrainingJob that trains and uploads an AutoML Text Sentiment Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs",
      "type": "object",
      "properties": {
        "sentimentMax": {
          "description": "A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentimentMax (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. Only the Annotations with this sentimentMax will be used for training. sentimentMax value must be between 1 and 10 (inclusive).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition",
      "description": "A TrainingJob that trains and uploads an AutoML Video Action Recognition Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model best tailored to be used within Google Cloud, and which c annot be exported. Default.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD",
            "MOBILE_VERSATILE_1"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassification": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassification",
      "description": "A TrainingJob that trains and uploads an AutoML Video Classification Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model best tailored to be used within Google Cloud, and which cannot be exported. Default.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) to a Jetson device afterwards."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD",
            "MOBILE_VERSATILE_1",
            "MOBILE_JETSON_VERSATILE_1"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking",
      "description": "A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model best tailored to be used within Google Cloud, and which c annot be exported. Default.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards.",
            "A versatile model that is meant to be exported (see ModelService.ExportModel) and used on a Google Coral device.",
            "A model that trades off quality for low latency, to be exported (see ModelService.ExportModel) and used on a Google Coral device.",
            "A versatile model that is meant to be exported (see ModelService.ExportModel) and used on an NVIDIA Jetson device.",
            "A model that trades off quality for low latency, to be exported (see ModelService.ExportModel) and used on an NVIDIA Jetson device."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD",
            "MOBILE_VERSATILE_1",
            "MOBILE_CORAL_VERSATILE_1",
            "MOBILE_CORAL_LOW_LATENCY_1",
            "MOBILE_JETSON_VERSATILE_1",
            "MOBILE_JETSON_LOW_LATENCY_1"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomTask": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomTask",
      "description": "A TrainingJob that trains a custom code Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this CustomTask.",
          "$ref": "GoogleCloudAiplatformV1beta1CustomJobSpec"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1CustomJobSpec": {
      "id": "GoogleCloudAiplatformV1beta1CustomJobSpec",
      "description": "Represents the spec of a CustomJob.",
      "type": "object",
      "properties": {
        "workerPoolSpecs": {
          "description": "Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1WorkerPoolSpec"
          }
        },
        "scheduling": {
          "description": "Scheduling options for a CustomJob.",
          "$ref": "GoogleCloudAiplatformV1beta1Scheduling"
        },
        "serviceAccount": {
          "description": "Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the AI Platform Custom Code Service Agent for the CustomJob's project is used.",
          "type": "string"
        },
        "network": {
          "description": "The full name of the Compute Engine [network](\/compute\/docs\/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects\/12345\/global\/networks\/myVPC`. [Format](\/compute\/docs\/reference\/rest\/v1\/networks\/insert) is of the form `projects\/{project}\/global\/networks\/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.",
          "type": "string"
        },
        "baseOutputDirectory": {
          "description": "The Cloud Storage location to store the output of this CustomJob or HyperparameterTuningJob. For HyperparameterTuningJob, the baseOutputDirectory of each child CustomJob backing a Trial is set to a subdirectory of name id under its parent HyperparameterTuningJob's baseOutputDirectory. The following AI Platform environment variables will be passed to containers or python modules when this field is set: For CustomJob: * AIP_MODEL_DIR = `\/model\/` * AIP_CHECKPOINT_DIR = `\/checkpoints\/` * AIP_TENSORBOARD_LOG_DIR = `\/logs\/` For CustomJob backing a Trial of HyperparameterTuningJob: * AIP_MODEL_DIR = `\/\/model\/` * AIP_CHECKPOINT_DIR = `\/\/checkpoints\/` * AIP_TENSORBOARD_LOG_DIR = `\/\/logs\/`",
          "$ref": "GoogleCloudAiplatformV1beta1GcsDestination"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1WorkerPoolSpec": {
      "id": "GoogleCloudAiplatformV1beta1WorkerPoolSpec",
      "description": "Represents the spec of a worker pool in a job.",
      "type": "object",
      "properties": {
        "containerSpec": {
          "description": "The custom container task.",
          "$ref": "GoogleCloudAiplatformV1beta1ContainerSpec"
        },
        "pythonPackageSpec": {
          "description": "The Python packaged task.",
          "$ref": "GoogleCloudAiplatformV1beta1PythonPackageSpec"
        },
        "machineSpec": {
          "description": "Optional. Immutable. The specification of a single machine.",
          "$ref": "GoogleCloudAiplatformV1beta1MachineSpec"
        },
        "replicaCount": {
          "description": "Optional. The number of worker replicas to use for this worker pool.",
          "type": "string",
          "format": "int64"
        },
        "diskSpec": {
          "description": "Disk spec.",
          "$ref": "GoogleCloudAiplatformV1beta1DiskSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1ContainerSpec": {
      "id": "GoogleCloudAiplatformV1beta1ContainerSpec",
      "description": "The spec of a Container.",
      "type": "object",
      "properties": {
        "imageUri": {
          "description": "Required. The URI of a container image in the Container Registry that is to be run on each worker replica.",
          "type": "string"
        },
        "command": {
          "description": "The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "The arguments to be passed when starting the container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1PythonPackageSpec": {
      "id": "GoogleCloudAiplatformV1beta1PythonPackageSpec",
      "description": "The spec of a Python packaged code.",
      "type": "object",
      "properties": {
        "executorImageUri": {
          "description": "Required. The URI of a container image in the Container Registry that will run the provided python package. AI Platform provides wide range of executor images with pre-installed packages to meet users' various use cases. Only one of the provided images can be set here.",
          "type": "string"
        },
        "packageUris": {
          "description": "Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pythonModule": {
          "description": "Required. The Python module name to run after installing the packages.",
          "type": "string"
        },
        "args": {
          "description": "Command line arguments to be passed to the Python task.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1DiskSpec": {
      "id": "GoogleCloudAiplatformV1beta1DiskSpec",
      "description": "Represents the spec of disk options.",
      "type": "object",
      "properties": {
        "bootDiskType": {
          "description": "Type of the boot disk (default is \"pd-ssd\"). Valid values: \"pd-ssd\" (Persistent Disk Solid State Drive) or \"pd-standard\" (Persistent Disk Hard Disk Drive).",
          "type": "string"
        },
        "bootDiskSizeGb": {
          "description": "Size in GB of the boot disk (default is 100GB).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1Scheduling": {
      "id": "GoogleCloudAiplatformV1beta1Scheduling",
      "description": "All parameters related to queuing and scheduling of custom jobs.",
      "type": "object",
      "properties": {
        "timeout": {
          "description": "The maximum job running time. The default is 7 days.",
          "type": "string",
          "format": "google-duration"
        },
        "restartJobOnWorkerRestart": {
          "description": "Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1GcsDestination": {
      "id": "GoogleCloudAiplatformV1beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output is to be written to.",
      "type": "object",
      "properties": {
        "outputUriPrefix": {
          "description": "Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '\/', a '\/' will be automatically appended. The directory is created if it doesn't exist.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadata",
      "type": "object",
      "properties": {
        "backingCustomJob": {
          "description": "The resource name of the CustomJob that has been created to carry out this custom task.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningTask": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningTask",
      "description": "A TrainingJob that tunes Hypererparameters of a custom code Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this HyperparameterTuningTask.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec",
      "type": "object",
      "properties": {
        "studySpec": {
          "description": "Study configuration of the HyperparameterTuningJob.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpec"
        },
        "trialJobSpec": {
          "description": "The spec of a trial job. The same spec applies to the CustomJobs created in all the trials.",
          "$ref": "GoogleCloudAiplatformV1beta1CustomJobSpec"
        },
        "maxTrialCount": {
          "description": "The desired total number of Trials.",
          "type": "integer",
          "format": "int32"
        },
        "parallelTrialCount": {
          "description": "The desired number of Trials to run in parallel.",
          "type": "integer",
          "format": "int32"
        },
        "maxFailedTrialCount": {
          "description": "The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, AI Platform decides how many Trials must fail before the whole job fails.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpec": {
      "id": "GoogleCloudAiplatformV1beta1StudySpec",
      "description": "Represents specification of a Study.",
      "type": "object",
      "properties": {
        "metrics": {
          "description": "Required. Metric specs for the Study.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1StudySpecMetricSpec"
          }
        },
        "parameters": {
          "description": "Required. The set of parameters to tune.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpec"
          }
        },
        "algorithm": {
          "description": "The search algorithm specified for the Study.",
          "type": "string",
          "enumDescriptions": [
            "The default algorithm used by AI Platform Optimization service.",
            "Simple grid search within the feasible space. To use grid search, all parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.",
            "Simple random search within the feasible space."
          ],
          "enum": [
            "ALGORITHM_UNSPECIFIED",
            "GRID_SEARCH",
            "RANDOM_SEARCH"
          ]
        },
        "observationNoise": {
          "description": "The observation noise level of the study. Currently only supported by the Vizier service. Not supported by HyperparamterTuningJob or TrainingPipeline.",
          "type": "string",
          "enumDescriptions": [
            "The default noise level chosen by the AI Platform service.",
            "AI Platform Vizier assumes that the objective function is (nearly) perfectly reproducible, and will never repeat the same Trial parameters.",
            "AI Platform Vizier will estimate the amount of noise in metric evaluations, it may repeat the same Trial parameters more than once."
          ],
          "enum": [
            "OBSERVATION_NOISE_UNSPECIFIED",
            "LOW",
            "HIGH"
          ]
        },
        "measurementSelectionType": {
          "description": "Describe which measurement selection type will be used",
          "type": "string",
          "enumDescriptions": [
            "Will be treated as LAST_MEASUREMENT.",
            "Use the last measurement reported.",
            "Use the best measurement reported."
          ],
          "enum": [
            "MEASUREMENT_SELECTION_TYPE_UNSPECIFIED",
            "LAST_MEASUREMENT",
            "BEST_MEASUREMENT"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecMetricSpec": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecMetricSpec",
      "description": "Represents a metric to optimize.",
      "type": "object",
      "properties": {
        "metricId": {
          "description": "Required. The ID of the metric. Must not contain whitespaces and must be unique amongst all MetricSpecs.",
          "type": "string"
        },
        "goal": {
          "description": "Required. The optimization goal of the metric.",
          "type": "string",
          "enumDescriptions": [
            "Goal Type will default to maximize.",
            "Maximize the goal metric.",
            "Minimize the goal metric."
          ],
          "enum": [
            "GOAL_TYPE_UNSPECIFIED",
            "MAXIMIZE",
            "MINIMIZE"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpec": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpec",
      "description": "Represents a single parameter to optimize.",
      "type": "object",
      "properties": {
        "doubleValueSpec": {
          "description": "The value spec for a 'DOUBLE' parameter.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpec"
        },
        "integerValueSpec": {
          "description": "The value spec for an 'INTEGER' parameter.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpec"
        },
        "categoricalValueSpec": {
          "description": "The value spec for a 'CATEGORICAL' parameter.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpec"
        },
        "discreteValueSpec": {
          "description": "The value spec for a 'DISCRETE' parameter.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpec"
        },
        "parameterId": {
          "description": "Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs.",
          "type": "string"
        },
        "scaleType": {
          "description": "How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.",
          "type": "string",
          "enumDescriptions": [
            "By default, no scaling is applied.",
            "Scales the feasible space to (0, 1) linearly.",
            "Scales the feasible space logarithmically to (0, 1). The entire feasible space must be strictly positive.",
            "Scales the feasible space \"reverse\" logarithmically to (0, 1). The result is that values close to the top of the feasible space are spread out more than points near the bottom. The entire feasible space must be strictly positive."
          ],
          "enum": [
            "SCALE_TYPE_UNSPECIFIED",
            "UNIT_LINEAR_SCALE",
            "UNIT_LOG_SCALE",
            "UNIT_REVERSE_LOG_SCALE"
          ]
        },
        "conditionalParameterSpecs": {
          "description": "A conditional parameter node is active if the parameter's value matches the conditional node's parent_value_condition. If two items in conditional_parameter_specs have the same name, they must have disjoint parent_value_condition.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpec"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpec": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpec",
      "description": "Value specification for a parameter in `DOUBLE` type.",
      "type": "object",
      "properties": {
        "minValue": {
          "description": "Required. Inclusive minimum value of the parameter.",
          "type": "number",
          "format": "double"
        },
        "maxValue": {
          "description": "Required. Inclusive maximum value of the parameter.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpec": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpec",
      "description": "Value specification for a parameter in `INTEGER` type.",
      "type": "object",
      "properties": {
        "minValue": {
          "description": "Required. Inclusive minimum value of the parameter.",
          "type": "string",
          "format": "int64"
        },
        "maxValue": {
          "description": "Required. Inclusive maximum value of the parameter.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpec": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpec",
      "description": "Value specification for a parameter in `CATEGORICAL` type.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. The list of possible categories.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpec": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpec",
      "description": "Value specification for a parameter in `DISCRETE` type.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. A list of possible values. The list should be in increasing order and at least 1e-10 apart. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpec": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpec",
      "description": "Represents a parameter spec with condition from its parent parameter.",
      "type": "object",
      "properties": {
        "parentDiscreteValues": {
          "description": "The spec for matching values from a parent parameter of `DISCRETE` type.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition"
        },
        "parentIntValues": {
          "description": "The spec for matching values from a parent parameter of `INTEGER` type.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueCondition"
        },
        "parentCategoricalValues": {
          "description": "The spec for matching values from a parent parameter of `CATEGORICAL` type.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition"
        },
        "parameterSpec": {
          "description": "Required. The spec for a conditional parameter.",
          "$ref": "GoogleCloudAiplatformV1beta1StudySpecParameterSpec"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition",
      "description": "Represents the spec to match discrete values from parent parameter.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. Matches values of the parent parameter of 'DISCRETE' type. All values must exist in `discrete_value_spec` of parent parameter. The Epsilon of the value matching is 1e-10.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueCondition": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueCondition",
      "description": "Represents the spec to match integer values from parent parameter.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. Matches values of the parent parameter of 'INTEGER' type. All values must lie in `integer_value_spec` of parent parameter.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition": {
      "id": "GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition",
      "description": "Represents the spec to match categorical values from parent parameter.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. Matches values of the parent parameter of 'CATEGORICAL' type. All values must exist in `categorical_value_spec` of parent parameter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata",
      "type": "object",
      "properties": {
        "backingHyperparameterTuningJob": {
          "description": "The resource name of the HyperparameterTuningJob that has been created to carry out this HyperparameterTuning task.",
          "type": "string"
        },
        "bestTrialBackingCustomJob": {
          "description": "The resource name of the CustomJob that has been created to run the best Trial of this HyperparameterTuning task.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictionResult": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictionResult",
      "description": "Represents a line of JSONL in the batch prediction output file.",
      "type": "object",
      "properties": {
        "instance": {
          "description": "User's input instance. Struct is used here instead of Any so that JsonFormat does not append an extra \"@type\" field when we convert the proto to JSON.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "key": {
          "description": "Optional user-provided key from the input instance.",
          "type": "string"
        },
        "prediction": {
          "description": "The prediction result. Value is used here instead of Any so that JsonFormat does not append an extra \"@type\" field when we convert the proto to JSON and so we can represent array of objects. Do not set error if this is set.",
          "type": "any"
        },
        "error": {
          "description": "The error result. Do not set prediction if this is set.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaPredictionResultError"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaPredictionResultError": {
      "id": "GoogleCloudAiplatformV1beta1SchemaPredictionResultError",
      "type": "object",
      "properties": {
        "status": {
          "description": "Error status. This will be serialized into the enum name e.g. \"NOT_FOUND\".",
          "type": "string",
          "enumDescriptions": [
            "Not an error; returned on success HTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
            "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level (e.g., when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence). (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. E.g., if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported\/enabled in this service. HTTP Mapping: 501 Not Implemented",
            "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
          ],
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ]
        },
        "message": {
          "description": "Error message with additional details.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaImageBoundingBoxAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaImageBoundingBoxAnnotation",
      "description": "Annotation details specific to image object detection.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "xMin": {
          "description": "The leftmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "xMax": {
          "description": "The rightmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMin": {
          "description": "The topmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMax": {
          "description": "The bottommost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaImageClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaImageClassificationAnnotation",
      "description": "Annotation details specific to image classification.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaImageDataItem": {
      "id": "GoogleCloudAiplatformV1beta1SchemaImageDataItem",
      "description": "Payload of Image DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size.",
          "type": "string"
        },
        "mimeType": {
          "description": "Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image\/jpeg - image\/gif - image\/png - image\/webp - image\/bmp - image\/tiff - image\/vnd.microsoft.icon",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaImageDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaImageDatasetMetadata",
      "description": "The metadata of Datasets that contain Image DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Image DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotation",
      "description": "Annotation details specific to image segmentation.",
      "type": "object",
      "properties": {
        "maskAnnotation": {
          "description": "Mask based segmentation annotation. Only one mask annotation can exist for one image.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotation"
        },
        "polygonAnnotation": {
          "description": "Polygon annotation.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotation"
        },
        "polylineAnnotation": {
          "description": "Polyline annotation.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotation"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotation",
      "description": "The mask based segmentation annotation.",
      "type": "object",
      "properties": {
        "maskGcsUri": {
          "description": "Google Cloud Storage URI that points to the mask image. The image must be in PNG format. It must have the same size as the DataItem's image. Each pixel in the image mask represents the AnnotationSpec which the pixel in the image DataItem belong to. Each color is mapped to one AnnotationSpec based on annotation_spec_colors.",
          "type": "string"
        },
        "annotationSpecColors": {
          "description": "The mapping between color and AnnotationSpec for this Annotation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor": {
      "id": "GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor",
      "description": "An entry of mapping between color and AnnotationSpec. The mapping is used in segmentation mask.",
      "type": "object",
      "properties": {
        "color": {
          "description": "The color of the AnnotationSpec in a segmentation mask.",
          "$ref": "GoogleTypeColor"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec represented by the color in the segmentation mask.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the AnnotationSpec represented by the color in the segmentation mask.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotation",
      "description": "Represents a polygon in image.",
      "type": "object",
      "properties": {
        "vertexes": {
          "description": "The vertexes are connected one by one and the last vertex is connected to the first one to represent a polygon.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1SchemaVertex"
          }
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaVertex": {
      "id": "GoogleCloudAiplatformV1beta1SchemaVertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "type": "number",
          "format": "double"
        },
        "y": {
          "description": "Y coordinate.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotation",
      "description": "Represents a polyline in image.",
      "type": "object",
      "properties": {
        "vertexes": {
          "description": "The vertexes are connected one by one and the last vertex in not connected to the first one.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1beta1SchemaVertex"
          }
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadata",
      "description": "The metadata of Datasets that contain tables data.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig",
      "description": "The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource"
        },
        "bigquerySource": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of a BigQuery table. e.g. bq:\/\/projectId.bqDatasetId.bqTableId",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTextClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTextClassificationAnnotation",
      "description": "Annotation details specific to text classification.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTextDataItem": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTextDataItem",
      "description": "Payload of Text DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Output only. Google Cloud Storage URI points to the original text in user's bucket. The text file is up to 10MB in size.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTextDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTextDatasetMetadata",
      "description": "The metadata of Datasets that contain Text DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Text DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation",
      "description": "Annotation details specific to text extraction.",
      "type": "object",
      "properties": {
        "textSegment": {
          "description": "The segment of the text content.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTextSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTextSegment": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTextSegment",
      "description": "The text segment inside of DataItem.",
      "type": "object",
      "properties": {
        "startOffset": {
          "description": "Zero-based character index of the first character of the text segment (counting characters from the beginning of the text).",
          "type": "string",
          "format": "uint64"
        },
        "endOffset": {
          "description": "Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment.",
          "type": "string",
          "format": "uint64"
        },
        "content": {
          "description": "The text content in the segment for output only.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTextSentimentAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTextSentimentAnnotation",
      "description": "Annotation details specific to text sentiment.",
      "type": "object",
      "properties": {
        "sentiment": {
          "description": "The sentiment score for text.",
          "type": "integer",
          "format": "int32"
        },
        "sentimentMax": {
          "description": "The sentiment max score for text.",
          "type": "integer",
          "format": "int32"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTextSentimentSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTextSentimentSavedQueryMetadata",
      "description": "The metadata of SavedQuery contains TextSentiment Annotations.",
      "type": "object",
      "properties": {
        "sentimentMax": {
          "description": "The maximum sentiment of sentiment Anntoation in this SavedQuery.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadata",
      "description": "The metadata of Datasets that contain time series data.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfig"
        },
        "timeSeriesIdentifierColumn": {
          "description": "The column name of the time series identifier column that identifies the time series.",
          "type": "string"
        },
        "timeColumn": {
          "description": "The column name of the time column that identifies time order in the time series.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfig": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfig",
      "description": "The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSource"
        },
        "bigquerySource": {
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySource"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSource": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySource": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of a BigQuery table.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaVideoActionRecognitionAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaVideoActionRecognitionAnnotation",
      "description": "Annotation details specific to video action recognition.",
      "type": "object",
      "properties": {
        "timeSegment": {
          "description": "This Annotation applies to the time period represented by the TimeSegment. If it's not set, the Annotation applies to the whole video.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTimeSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaTimeSegment": {
      "id": "GoogleCloudAiplatformV1beta1SchemaTimeSegment",
      "description": "A time period inside of a DataItem that has a time dimension (e.g. video).",
      "type": "object",
      "properties": {
        "startTimeOffset": {
          "description": "Start of the time segment (inclusive), represented as the duration since the start of the DataItem.",
          "type": "string",
          "format": "google-duration"
        },
        "endTimeOffset": {
          "description": "End of the time segment (exclusive), represented as the duration since the start of the DataItem.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaVideoClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaVideoClassificationAnnotation",
      "description": "Annotation details specific to video classification.",
      "type": "object",
      "properties": {
        "timeSegment": {
          "description": "This Annotation applies to the time period represented by the TimeSegment. If it's not set, the Annotation applies to the whole video.",
          "$ref": "GoogleCloudAiplatformV1beta1SchemaTimeSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaVideoDataItem": {
      "id": "GoogleCloudAiplatformV1beta1SchemaVideoDataItem",
      "description": "Payload of Video DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Required. Google Cloud Storage URI points to the original video in user's bucket. The video is up to 50 GB in size and up to 3 hour in duration.",
          "type": "string"
        },
        "mimeType": {
          "description": "Output only. The mime type of the content of the video. Only the videos in below listed mime types are supported. Supported mime_type: - video\/mp4 - video\/avi - video\/quicktime",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaVideoDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaVideoDatasetMetadata",
      "description": "The metadata of Datasets that contain Video DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Video DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaVideoObjectTrackingAnnotation": {
      "id": "GoogleCloudAiplatformV1beta1SchemaVideoObjectTrackingAnnotation",
      "description": "Annotation details specific to video object tracking.",
      "type": "object",
      "properties": {
        "timeOffset": {
          "description": "A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start.",
          "type": "string",
          "format": "google-duration"
        },
        "xMin": {
          "description": "The leftmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "xMax": {
          "description": "The rightmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMin": {
          "description": "The topmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMax": {
          "description": "The bottommost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "instanceId": {
          "description": "The instance of the object, expressed as a positive integer. Used to track the same object across different frames.",
          "type": "string",
          "format": "int64"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaVisualInspectionClassificationLabelSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaVisualInspectionClassificationLabelSavedQueryMetadata",
      "type": "object",
      "properties": {
        "multiLabel": {
          "description": "Whether or not the classification label is multi_label.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1beta1SchemaVisualInspectionMaskSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1beta1SchemaVisualInspectionMaskSavedQueryMetadata",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata": {
      "id": "GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata",
      "description": "Runtime operation information for MigrationService.BatchMigrateResources.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        },
        "partialResults": {
          "description": "Partial results that reflect the latest migration operation progress.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1GenericOperationMetadata": {
      "id": "GoogleCloudAiplatformV1GenericOperationMetadata",
      "description": "Generic Metadata shared by all operations.",
      "type": "object",
      "properties": {
        "partialFailures": {
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. This field should never exceed 20 entries. Status details field will contain standard GCP error details.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "description": "Output only. Time when the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the operation was updated for the last time. If the operation has finished (successfully or not), this is the finish time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult": {
      "id": "GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult",
      "description": "Represents a partial result in batch migration operation for one MigrateResourceRequest.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the migration request in case of failure.",
          "$ref": "GoogleRpcStatus"
        },
        "model": {
          "description": "Migrated model resource name.",
          "type": "string"
        },
        "dataset": {
          "description": "Migrated dataset resource name.",
          "type": "string"
        },
        "request": {
          "description": "It's the same as the value in MigrateResourceRequest.migrate_resource_requests.",
          "$ref": "GoogleCloudAiplatformV1MigrateResourceRequest"
        }
      }
    },
    "GoogleCloudAiplatformV1BatchMigrateResourcesResponse": {
      "id": "GoogleCloudAiplatformV1BatchMigrateResourcesResponse",
      "description": "Response message for MigrationService.BatchMigrateResources.",
      "type": "object",
      "properties": {
        "migrateResourceResponses": {
          "description": "Successfully migrated resources.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1MigrateResourceResponse"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1MigrateResourceResponse": {
      "id": "GoogleCloudAiplatformV1MigrateResourceResponse",
      "description": "Describes a successfully migrated resource.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Migrated Dataset's resource name.",
          "type": "string"
        },
        "model": {
          "description": "Migrated Model's resource name.",
          "type": "string"
        },
        "migratableResource": {
          "description": "Before migration, the identifier in ml.googleapis.com, automl.googleapis.com or datalabeling.googleapis.com.",
          "$ref": "GoogleCloudAiplatformV1MigratableResource"
        }
      }
    },
    "GoogleCloudAiplatformV1CreateDatasetOperationMetadata": {
      "id": "GoogleCloudAiplatformV1CreateDatasetOperationMetadata",
      "description": "Runtime operation information for DatasetService.CreateDataset.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1CreateEndpointOperationMetadata": {
      "id": "GoogleCloudAiplatformV1CreateEndpointOperationMetadata",
      "description": "Runtime operation information for EndpointService.CreateEndpoint.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata": {
      "id": "GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata",
      "description": "Runtime operation information for SpecialistPoolService.CreateSpecialistPool.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1DeleteOperationMetadata": {
      "id": "GoogleCloudAiplatformV1DeleteOperationMetadata",
      "description": "Details of operations that perform deletes of any entities.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1DeployModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1DeployModelOperationMetadata",
      "description": "Runtime operation information for EndpointService.DeployModel.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1DeployModelResponse": {
      "id": "GoogleCloudAiplatformV1DeployModelResponse",
      "description": "Response message for EndpointService.DeployModel.",
      "type": "object",
      "properties": {
        "deployedModel": {
          "description": "The DeployedModel that had been deployed in the Endpoint.",
          "$ref": "GoogleCloudAiplatformV1DeployedModel"
        }
      }
    },
    "GoogleCloudAiplatformV1ExportDataOperationMetadata": {
      "id": "GoogleCloudAiplatformV1ExportDataOperationMetadata",
      "description": "Runtime operation information for DatasetService.ExportData.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        },
        "gcsOutputDirectory": {
          "description": "A Google Cloud Storage directory which path ends with '\/'. The exported data is stored in the directory.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ExportDataResponse": {
      "id": "GoogleCloudAiplatformV1ExportDataResponse",
      "description": "Response message for DatasetService.ExportData.",
      "type": "object",
      "properties": {
        "exportedFiles": {
          "description": "All of the files that are exported in this export operation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1ExportModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1ExportModelOperationMetadata",
      "description": "Details of ModelService.ExportModel operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        },
        "outputInfo": {
          "description": "Output only. Information further describing the output of this Model export.",
          "readOnly": true,
          "$ref": "GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo"
        }
      }
    },
    "GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo": {
      "id": "GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo",
      "description": "Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig.",
      "type": "object",
      "properties": {
        "artifactOutputUri": {
          "description": "Output only. If the Model artifact is being exported to Google Cloud Storage this is the full path of the directory created, into which the Model files are being written to.",
          "readOnly": true,
          "type": "string"
        },
        "imageOutputUri": {
          "description": "Output only. If the Model image is being exported to Google Container Registry or Artifact Registry this is the full path of the image created.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1ExportModelResponse": {
      "id": "GoogleCloudAiplatformV1ExportModelResponse",
      "description": "Response message of ModelService.ExportModel operation.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1ImportDataOperationMetadata": {
      "id": "GoogleCloudAiplatformV1ImportDataOperationMetadata",
      "description": "Runtime operation information for DatasetService.ImportData.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1ImportDataResponse": {
      "id": "GoogleCloudAiplatformV1ImportDataResponse",
      "description": "Response message for DatasetService.ImportData.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1UndeployModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1UndeployModelOperationMetadata",
      "description": "Runtime operation information for EndpointService.UndeployModel.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1UndeployModelResponse": {
      "id": "GoogleCloudAiplatformV1UndeployModelResponse",
      "description": "Response message for EndpointService.UndeployModel.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata": {
      "id": "GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata",
      "description": "Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool.",
      "type": "object",
      "properties": {
        "specialistPool": {
          "description": "Output only. The name of the SpecialistPool to which the specialists are being added. Format: `projects\/{project_id}\/locations\/{location_id}\/specialistPools\/{specialist_pool}`",
          "readOnly": true,
          "type": "string"
        },
        "genericMetadata": {
          "description": "The operation generic information.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1UploadModelOperationMetadata": {
      "id": "GoogleCloudAiplatformV1UploadModelOperationMetadata",
      "description": "Details of ModelService.UploadModel operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The common part of the operation metadata.",
          "$ref": "GoogleCloudAiplatformV1GenericOperationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1UploadModelResponse": {
      "id": "GoogleCloudAiplatformV1UploadModelResponse",
      "description": "Response message of ModelService.UploadModel operation.",
      "type": "object",
      "properties": {
        "model": {
          "description": "The name of the uploaded Model resource. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance",
      "description": "Prediction input format for Image Classification.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The image bytes or GCS URI to make the prediction on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image\/jpeg - image\/gif - image\/png - image\/webp - image\/bmp - image\/tiff - image\/vnd.microsoft.icon",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance",
      "description": "Prediction input format for Image Object Detection.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The image bytes or GCS URI to make the prediction on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image\/jpeg - image\/gif - image\/png - image\/webp - image\/bmp - image\/tiff - image\/vnd.microsoft.icon",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance",
      "description": "Prediction input format for Image Segmentation.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The image bytes to make the predictions on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image\/jpeg - image\/png",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance",
      "description": "Prediction input format for Text Classification.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The text snippet to make the predictions on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the text snippet. The supported MIME types are listed below. - text\/plain",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance",
      "description": "Prediction input format for Text Extraction.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The text snippet to make the predictions on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the text snippet. The supported MIME types are listed below. - text\/plain",
          "type": "string"
        },
        "key": {
          "description": "This field is only used for batch prediction. If a key is provided, the batch prediction result will by mapped to this key. If omitted, then the batch prediction result will contain the entire input instance. AI Platform will not check if keys in the request are duplicates, so it is up to the caller to ensure the keys are unique.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance",
      "description": "Prediction input format for Text Sentiment.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The text snippet to make the predictions on.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the text snippet. The supported MIME types are listed below. - text\/plain",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance",
      "description": "Prediction input format for Video Action Recognition.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The Google Cloud Storage location of the video on which to perform the prediction.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the video. Only the following are supported: video\/mp4 video\/avi video\/quicktime",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision.",
          "type": "string"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision, and \"inf\" or \"Infinity\" is allowed, which means the end of the video.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance",
      "description": "Prediction input format for Video Classification.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The Google Cloud Storage location of the video on which to perform the prediction.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the video. Only the following are supported: video\/mp4 video\/avi video\/quicktime",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision.",
          "type": "string"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision, and \"inf\" or \"Infinity\" is allowed, which means the end of the video.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance": {
      "id": "GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance",
      "description": "Prediction input format for Video Object Tracking.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The Google Cloud Storage location of the video on which to perform the prediction.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the content of the video. Only the following are supported: video\/mp4 video\/avi video\/quicktime",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision.",
          "type": "string"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with \"s\" appended at the end. Fractions are allowed, up to a microsecond precision, and \"inf\" or \"Infinity\" is allowed, which means the end of the video.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams": {
      "id": "GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams",
      "description": "Prediction model parameters for Image Classification.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams": {
      "id": "GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams",
      "description": "Prediction model parameters for Image Object Detection.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata's predictionsLimit. Default value is 10.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams": {
      "id": "GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams",
      "description": "Prediction model parameters for Image Segmentation.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "When the model predicts category of pixels of the image, it will only provide predictions for pixels that it is at least this much confident about. All other pixels will be classified as background. Default value is 0.5.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams": {
      "id": "GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams",
      "description": "Prediction model parameters for Video Action Recognition.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams": {
      "id": "GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams",
      "description": "Prediction model parameters for Video Classification.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000.",
          "type": "integer",
          "format": "int32"
        },
        "segmentClassification": {
          "description": "Set to true to request segment-level classification. AI Platform returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true",
          "type": "boolean"
        },
        "shotClassification": {
          "description": "Set to true to request shot-level classification. AI Platform determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. AI Platform then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false",
          "type": "boolean"
        },
        "oneSecIntervalClassification": {
          "description": "Set to true to request classification for a video at one-second intervals. AI Platform returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams": {
      "id": "GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams",
      "description": "Prediction model parameters for Video Object Tracking.",
      "type": "object",
      "properties": {
        "confidenceThreshold": {
          "description": "The Model only returns predictions with at least this confidence score. Default value is 0.0",
          "type": "number",
          "format": "float"
        },
        "maxPredictions": {
          "description": "The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.",
          "type": "integer",
          "format": "int32"
        },
        "minBoundingBoxSize": {
          "description": "Only bounding boxes with shortest edge at least that long as a relative value of video frame size are returned. Default value is 0.0.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult",
      "description": "Prediction output format for Image and Text Classification.",
      "type": "object",
      "properties": {
        "ids": {
          "description": "The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "displayNames": {
          "description": "The display names of the AnnotationSpecs that had been identified, order matches the IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confidences": {
          "description": "The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult",
      "description": "Prediction output format for Image Object Detection.",
      "type": "object",
      "properties": {
        "ids": {
          "description": "The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "displayNames": {
          "description": "The display names of the AnnotationSpecs that had been identified, order matches the IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confidences": {
          "description": "The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "bboxes": {
          "description": "Bounding boxes, i.e. the rectangles over the image, that pinpoint the found AnnotationSpecs. Given in order that matches the IDs. Each bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and `yMax`, which represent the extremal coordinates of the box. They are relative to the image size, and the point 0,0 is in the top left of the image.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "any"
            }
          }
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult",
      "description": "Prediction output format for Image Segmentation.",
      "type": "object",
      "properties": {
        "categoryMask": {
          "description": "A PNG image where each pixel in the mask represents the category in which the pixel in the original image was predicted to belong to. The size of this image will be the same as the original image. The mapping between the AnntoationSpec and the color can be found in model's metadata. The model will choose the most likely category and if none of the categories reach the confidence threshold, the pixel will be marked as background.",
          "type": "string"
        },
        "confidenceMask": {
          "description": "A one channel image which is encoded as an 8bit lossless PNG. The size of the image will be the same as the original image. For a specific pixel, darker color means less confidence in correctness of the cateogry in the categoryMask for the corresponding pixel. Black means no confidence and white means complete confidence.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult",
      "description": "Prediction output format for Tabular Classification.",
      "type": "object",
      "properties": {
        "classes": {
          "description": "The name of the classes being classified, contains all possible values of the target column.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scores": {
          "description": "The model's confidence in each class being correct, higher value means higher confidence. The N-th score corresponds to the N-th class in classes.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult",
      "description": "Prediction output format for Tabular Regression.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The regression value.",
          "type": "number",
          "format": "float"
        },
        "lowerBound": {
          "description": "The lower bound of the prediction interval.",
          "type": "number",
          "format": "float"
        },
        "upperBound": {
          "description": "The upper bound of the prediction interval.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult",
      "description": "Prediction output format for Text Extraction.",
      "type": "object",
      "properties": {
        "ids": {
          "description": "The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "displayNames": {
          "description": "The display names of the AnnotationSpecs that had been identified, order matches the IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "textSegmentStartOffsets": {
          "description": "The start offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "textSegmentEndOffsets": {
          "description": "The end offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "confidences": {
          "description": "The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult",
      "description": "Prediction output format for Text Sentiment",
      "type": "object",
      "properties": {
        "sentiment": {
          "description": "The integer sentiment labels between 0 (inclusive) and sentimentMax label (inclusive), while 0 maps to the least positive sentiment and sentimentMax maps to the most positive one. The higher the score is, the more positive the sentiment in the text snippet is. Note: sentimentMax is an integer value between 1 (inclusive) and 10 (inclusive).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult",
      "description": "Prediction output format for Time Series Forecasting.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The regression value.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult",
      "description": "Prediction output format for Video Action Recognition.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "confidence": {
          "description": "The Model's confidence in correction of this prediction, higher value means higher confidence.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult",
      "description": "Prediction output format for Video Classification.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "type": {
          "description": "The type of the prediction. The requested types can be configured via parameters. This will be one of - segment-classification - shot-classification - one-sec-interval-classification",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentStart' from the input instance, for other types it is the start of a shot or a 1 second interval respectively.",
          "type": "string",
          "format": "google-duration"
        },
        "timeSegmentEnd": {
          "description": "The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentEnd' from the input instance, for other types it is the end of a shot or a 1 second interval respectively.",
          "type": "string",
          "format": "google-duration"
        },
        "confidence": {
          "description": "The Model's confidence in correction of this prediction, higher value means higher confidence.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult",
      "description": "Prediction output format for Video Object Tracking.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that had been identified.",
          "type": "string"
        },
        "timeSegmentStart": {
          "description": "The beginning, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "timeSegmentEnd": {
          "description": "The end, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "confidence": {
          "description": "The Model's confidence in correction of this prediction, higher value means higher confidence.",
          "type": "number",
          "format": "float"
        },
        "frames": {
          "description": "All of the frames of the video in which a single object instance has been detected. The bounding boxes in the frames identify the same object.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame": {
      "id": "GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame",
      "description": "The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e. the rectangle over the video frame pinpointing the found AnnotationSpec. The coordinates are relative to the frame size, and the point 0,0 is in the top left of the frame.",
      "type": "object",
      "properties": {
        "timeOffset": {
          "description": "A time (frame) of a video in which the object has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with \"s\" appended at the end.",
          "type": "string",
          "format": "google-duration"
        },
        "xMin": {
          "description": "The leftmost coordinate of the bounding box.",
          "type": "number",
          "format": "float"
        },
        "xMax": {
          "description": "The rightmost coordinate of the bounding box.",
          "type": "number",
          "format": "float"
        },
        "yMin": {
          "description": "The topmost coordinate of the bounding box.",
          "type": "number",
          "format": "float"
        },
        "yMax": {
          "description": "The bottommost coordinate of the bounding box.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting",
      "description": "A TrainingJob that trains and uploads an AutoML Forecasting Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs",
      "type": "object",
      "properties": {
        "targetColumn": {
          "description": "The name of the column that the model is to predict.",
          "type": "string"
        },
        "timeSeriesIdentifierColumn": {
          "description": "The name of the column that identifies the time series.",
          "type": "string"
        },
        "timeColumn": {
          "description": "The name of the column that identifies time order in the time series.",
          "type": "string"
        },
        "transformations": {
          "description": "Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using \".\" as the delimiter.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation"
          }
        },
        "optimizationObjective": {
          "description": "Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: \"minimize-rmse\" (default) - Minimize root-mean-squared error (RMSE). \"minimize-mae\" - Minimize mean-absolute error (MAE). \"minimize-rmsle\" - Minimize root-mean-squared log error (RMSLE). \"minimize-rmspe\" - Minimize root-mean-squared percentage error (RMSPE). \"minimize-wape-mae\" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). \"minimize-quantile-loss\" - Minimize the quantile loss at the quantiles defined in `quantiles`.",
          "type": "string"
        },
        "trainBudgetMilliNodeHours": {
          "description": "Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.",
          "type": "string",
          "format": "int64"
        },
        "weightColumn": {
          "description": "Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.",
          "type": "string"
        },
        "staticColumns": {
          "description": "Column names that should be used as static columns. The value of these columns are static per time series.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeVariantPastOnlyColumns": {
          "description": "Column names that should be used as time variant past only columns. This column contains information for the given entity (identified by the time_series_identifier_column) that is known for the past but not the future (e.g. population of a city in a given year, or weather on a given day).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeVariantPastAndFutureColumns": {
          "description": "Column names that should be used as time variant past and future columns. This column contains information for the given entity (identified by the key column) that is known for the past and the future",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "period": {
          "description": "Expected difference in time granularity between rows in the data. If it is not set, the period is inferred from data.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsPeriod"
        },
        "forecastWindowStart": {
          "description": "The number of periods offset into the future as the start of the forecast window (the window of future values to predict, relative to the present.), where each period is one unit of granularity as defined by the `period` field above. Default to 0. Inclusive.",
          "type": "string",
          "format": "int64"
        },
        "forecastWindowEnd": {
          "description": "The number of periods offset into the future as the end of the forecast window (the window of future values to predict, relative to the present.), where each period is one unit of granularity as defined by the `period` field above. Inclusive.",
          "type": "string",
          "format": "int64"
        },
        "pastHorizon": {
          "description": "The number of periods offset into the past to restrict past sequence, where each period is one unit of granularity as defined by the `period`. Default value 0 means that it lets algorithm to define the value. Inclusive.",
          "type": "string",
          "format": "int64"
        },
        "exportEvaluatedDataItemsConfig": {
          "description": "Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig"
        },
        "quantiles": {
          "description": "Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "validationOptions": {
          "description": "Validation options for the data validation component. The available options are: \"fail-pipeline\" - default, will validate against the validation and fail the pipeline if it fails. \"ignore-validation\" - ignore the results of the validation and continue",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation",
      "type": "object",
      "properties": {
        "auto": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation"
        },
        "numeric": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation"
        },
        "categorical": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation"
        },
        "timestamp": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation"
        },
        "text": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation"
        },
        "repeatedNumeric": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericArrayTransformation"
        },
        "repeatedCategorical": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalArrayTransformation"
        },
        "repeatedText": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextArrayTransformation"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation",
      "description": "Training pipeline will infer the proper transformation based on the statistic of dataset.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation",
      "description": "Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation",
      "description": "Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the \"unknown\" category. The \"unknown\" category gets its own special lookup index and resulting embedding.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation",
      "description": "Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "timeFormat": {
          "description": "The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `\"Z\"` (e.g. 1985-04-12T23:20:50.52Z)",
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation",
      "description": "Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericArrayTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericArrayTransformation",
      "description": "Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalArrayTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalArrayTransformation",
      "description": "Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextArrayTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextArrayTransformation",
      "description": "Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (\" \") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsPeriod": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsPeriod",
      "description": "A duration of time expressed in time granularity units.",
      "type": "object",
      "properties": {
        "unit": {
          "description": "The time granularity unit of this time period. The supported unit are: \"minute\" \"hour\" \"day\" \"week\" \"month\" \"year\"",
          "type": "string"
        },
        "quantity": {
          "description": "The number of units per period, e.g. 3 weeks or 2 months.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig",
      "description": "Configuration for exporting test set predictions to a BigQuery table.",
      "type": "object",
      "properties": {
        "destinationBigqueryUri": {
          "description": "URI of desired destination BigQuery table. Expected format: bq:\/\/:: If not specified, then results are exported to the following auto-created BigQuery table: :export_evaluated_examples__.evaluated_examples",
          "type": "string"
        },
        "overrideExistingTable": {
          "description": "If true and an export destination is specified, then the contents of the destination are overwritten. Otherwise, if the export destination already exists, then the export operation fails.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata",
      "description": "Model metadata specific to AutoML Forecasting.",
      "type": "object",
      "properties": {
        "trainCostMilliNodeHours": {
          "description": "Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification",
      "description": "A TrainingJob that trains and uploads an AutoML Image Classification Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A Model best tailored to be used within Google Cloud, and which cannot be exported. Default.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device with afterwards.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow or Core ML model and used on a mobile or edge device afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other mobile models."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD",
            "MOBILE_TF_LOW_LATENCY_1",
            "MOBILE_TF_VERSATILE_1",
            "MOBILE_TF_HIGH_ACCURACY_1"
          ]
        },
        "baseModelId": {
          "description": "The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.",
          "type": "string"
        },
        "budgetMilliNodeHours": {
          "description": "The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 8,000 and 800,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time, considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.",
          "type": "string",
          "format": "int64"
        },
        "disableEarlyStopping": {
          "description": "Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Classification might stop training before the entire training budget has been used.",
          "type": "boolean"
        },
        "multiLabel": {
          "description": "If false, a single-label (multi-class) Model will be trained (i.e. assuming that for each image just up to one annotation may be applicable). If true, a multi-label Model will be trained (i.e. assuming that for each image multiple annotations may be applicable).",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata",
      "type": "object",
      "properties": {
        "costMilliNodeHours": {
          "description": "The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.",
          "type": "string",
          "format": "int64"
        },
        "successfulStopReason": {
          "description": "For successful job completions, this is the reason why the job has finished.",
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "The inputs.budgetMilliNodeHours had been reached.",
            "Further training of the Model ceased to increase its quality, since it already has converged."
          ],
          "enum": [
            "SUCCESSFUL_STOP_REASON_UNSPECIFIED",
            "BUDGET_REACHED",
            "MODEL_CONVERGED"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection",
      "description": "A TrainingJob that trains and uploads an AutoML Image Object Detection Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs"
        },
        "metadata": {
          "description": "The metadata information",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model best tailored to be used within Google Cloud, and which cannot be exported. Expected to have a higher latency, but should also have a higher prediction quality than other cloud models.",
            "A model best tailored to be used within Google Cloud, and which cannot be exported. Expected to have a low latency, but may have lower prediction quality than other cloud models.",
            "A model that, in addition to being available within Google Cloud can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models.",
            "A model that, in addition to being available within Google Cloud can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other mobile models."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD_HIGH_ACCURACY_1",
            "CLOUD_LOW_LATENCY_1",
            "MOBILE_TF_LOW_LATENCY_1",
            "MOBILE_TF_VERSATILE_1",
            "MOBILE_TF_HIGH_ACCURACY_1"
          ]
        },
        "budgetMilliNodeHours": {
          "description": "The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.",
          "type": "string",
          "format": "int64"
        },
        "disableEarlyStopping": {
          "description": "Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata",
      "type": "object",
      "properties": {
        "costMilliNodeHours": {
          "description": "The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.",
          "type": "string",
          "format": "int64"
        },
        "successfulStopReason": {
          "description": "For successful job completions, this is the reason why the job has finished.",
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "The inputs.budgetMilliNodeHours had been reached.",
            "Further training of the Model ceased to increase its quality, since it already has converged."
          ],
          "enum": [
            "SUCCESSFUL_STOP_REASON_UNSPECIFIED",
            "BUDGET_REACHED",
            "MODEL_CONVERGED"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation",
      "description": "A TrainingJob that trains and uploads an AutoML Image Segmentation Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model to be used via prediction calls to uCAIP API. Expected to have a higher latency, but should also have a higher prediction quality than other models.",
            "A model to be used via prediction calls to uCAIP API. Expected to have a lower latency but relatively lower prediction quality.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as TensorFlow model and used on a mobile or edge device afterwards. Expected to have low latency, but may have lower prediction quality than other mobile models."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD_HIGH_ACCURACY_1",
            "CLOUD_LOW_ACCURACY_1",
            "MOBILE_TF_LOW_LATENCY_1"
          ]
        },
        "budgetMilliNodeHours": {
          "description": "The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. Or actaul_wall_clock_hours = train_budget_milli_node_hours \/ (number_of_nodes_involved * 1000) For modelType `cloud-high-accuracy-1`(default), the budget must be between 20,000 and 2,000,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time (1000 milli * 24 hours * 8 nodes).",
          "type": "string",
          "format": "int64"
        },
        "baseModelId": {
          "description": "The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata",
      "type": "object",
      "properties": {
        "costMilliNodeHours": {
          "description": "The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.",
          "type": "string",
          "format": "int64"
        },
        "successfulStopReason": {
          "description": "For successful job completions, this is the reason why the job has finished.",
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "The inputs.budgetMilliNodeHours had been reached.",
            "Further training of the Model ceased to increase its quality, since it already has converged."
          ],
          "enum": [
            "SUCCESSFUL_STOP_REASON_UNSPECIFIED",
            "BUDGET_REACHED",
            "MODEL_CONVERGED"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables",
      "description": "A TrainingJob that trains and uploads an AutoML Tables Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs",
      "type": "object",
      "properties": {
        "optimizationObjectiveRecallValue": {
          "description": "Required when optimization_objective is \"maximize-precision-at-recall\". Must be between 0 and 1, inclusive.",
          "type": "number",
          "format": "float"
        },
        "optimizationObjectivePrecisionValue": {
          "description": "Required when optimization_objective is \"maximize-recall-at-precision\". Must be between 0 and 1, inclusive.",
          "type": "number",
          "format": "float"
        },
        "predictionType": {
          "description": "The type of prediction the Model is to produce. \"classification\" - Predict one out of multiple target values is picked for each row. \"regression\" - Predict a value based on its relation to other values. This type is available only to columns that contain semantically numeric values, i.e. integers or floating point number, even if stored as e.g. strings.",
          "type": "string"
        },
        "targetColumn": {
          "description": "The column name of the target column that the model is to predict.",
          "type": "string"
        },
        "transformations": {
          "description": "Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using \".\" as the delimiter.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation"
          }
        },
        "optimizationObjective": {
          "description": "Objective function the model is optimizing towards. The training process creates a model that maximizes\/minimizes the value of the objective function over the validation set. The supported optimization objectives depend on the prediction type. If the field is not set, a default objective function is used. classification (binary): \"maximize-au-roc\" (default) - Maximize the area under the receiver operating characteristic (ROC) curve. \"minimize-log-loss\" - Minimize log loss. \"maximize-au-prc\" - Maximize the area under the precision-recall curve. \"maximize-precision-at-recall\" - Maximize precision for a specified recall value. \"maximize-recall-at-precision\" - Maximize recall for a specified precision value. classification (multi-class): \"minimize-log-loss\" (default) - Minimize log loss. regression: \"minimize-rmse\" (default) - Minimize root-mean-squared error (RMSE). \"minimize-mae\" - Minimize mean-absolute error (MAE). \"minimize-rmsle\" - Minimize root-mean-squared log error (RMSLE).",
          "type": "string"
        },
        "trainBudgetMilliNodeHours": {
          "description": "Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.",
          "type": "string",
          "format": "int64"
        },
        "disableEarlyStopping": {
          "description": "Use the entire training budget. This disables the early stopping feature. By default, the early stopping feature is enabled, which means that AutoML Tables might stop training before the entire training budget has been used.",
          "type": "boolean"
        },
        "weightColumnName": {
          "description": "Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.",
          "type": "string"
        },
        "exportEvaluatedDataItemsConfig": {
          "description": "Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation",
      "type": "object",
      "properties": {
        "auto": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation"
        },
        "numeric": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation"
        },
        "categorical": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation"
        },
        "timestamp": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation"
        },
        "text": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation"
        },
        "repeatedNumeric": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation"
        },
        "repeatedCategorical": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation"
        },
        "repeatedText": {
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation",
      "description": "Training pipeline will infer the proper transformation based on the statistic of dataset.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation",
      "description": "Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation",
      "description": "Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the \"unknown\" category. The \"unknown\" category gets its own special lookup index and resulting embedding.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation",
      "description": "Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "timeFormat": {
          "description": "The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `\"Z\"` (e.g. 1985-04-12T23:20:50.52Z)",
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation",
      "description": "Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation",
      "description": "Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "invalidValuesAllowed": {
          "description": "If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation",
      "description": "Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation",
      "description": "Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (\" \") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata",
      "description": "Model metadata specific to AutoML Tables.",
      "type": "object",
      "properties": {
        "trainCostMilliNodeHours": {
          "description": "Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification",
      "description": "A TrainingJob that trains and uploads an AutoML Text Classification Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs",
      "type": "object",
      "properties": {
        "multiLabel": {
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction",
      "description": "A TrainingJob that trains and uploads an AutoML Text Extraction Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment",
      "description": "A TrainingJob that trains and uploads an AutoML Text Sentiment Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs",
      "type": "object",
      "properties": {
        "sentimentMax": {
          "description": "A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentimentMax (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. Only the Annotations with this sentimentMax will be used for training. sentimentMax value must be between 1 and 10 (inclusive).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition",
      "description": "A TrainingJob that trains and uploads an AutoML Video Action Recognition Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model best tailored to be used within Google Cloud, and which c annot be exported. Default.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD",
            "MOBILE_VERSATILE_1"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification",
      "description": "A TrainingJob that trains and uploads an AutoML Video Classification Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model best tailored to be used within Google Cloud, and which cannot be exported. Default.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) to a Jetson device afterwards."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD",
            "MOBILE_VERSATILE_1",
            "MOBILE_JETSON_VERSATILE_1"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking",
      "description": "A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this TrainingJob.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs",
      "type": "object",
      "properties": {
        "modelType": {
          "type": "string",
          "enumDescriptions": [
            "Should not be set.",
            "A model best tailored to be used within Google Cloud, and which c annot be exported. Default.",
            "A model that, in addition to being available within Google Cloud, can also be exported (see ModelService.ExportModel) as a TensorFlow or TensorFlow Lite model and used on a mobile or edge device afterwards.",
            "A versatile model that is meant to be exported (see ModelService.ExportModel) and used on a Google Coral device.",
            "A model that trades off quality for low latency, to be exported (see ModelService.ExportModel) and used on a Google Coral device.",
            "A versatile model that is meant to be exported (see ModelService.ExportModel) and used on an NVIDIA Jetson device.",
            "A model that trades off quality for low latency, to be exported (see ModelService.ExportModel) and used on an NVIDIA Jetson device."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "CLOUD",
            "MOBILE_VERSATILE_1",
            "MOBILE_CORAL_VERSATILE_1",
            "MOBILE_CORAL_LOW_LATENCY_1",
            "MOBILE_JETSON_VERSATILE_1",
            "MOBILE_JETSON_LOW_LATENCY_1"
          ]
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask",
      "description": "A TrainingJob that trains a custom code Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this CustomTask.",
          "$ref": "GoogleCloudAiplatformV1CustomJobSpec"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata",
      "type": "object",
      "properties": {
        "backingCustomJob": {
          "description": "The resource name of the CustomJob that has been created to carry out this custom task.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask",
      "description": "A TrainingJob that tunes Hypererparameters of a custom code Model.",
      "type": "object",
      "properties": {
        "inputs": {
          "description": "The input parameters of this HyperparameterTuningTask.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec"
        },
        "metadata": {
          "description": "The metadata information.",
          "$ref": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec",
      "type": "object",
      "properties": {
        "studySpec": {
          "description": "Study configuration of the HyperparameterTuningJob.",
          "$ref": "GoogleCloudAiplatformV1StudySpec"
        },
        "trialJobSpec": {
          "description": "The spec of a trial job. The same spec applies to the CustomJobs created in all the trials.",
          "$ref": "GoogleCloudAiplatformV1CustomJobSpec"
        },
        "maxTrialCount": {
          "description": "The desired total number of Trials.",
          "type": "integer",
          "format": "int32"
        },
        "parallelTrialCount": {
          "description": "The desired number of Trials to run in parallel.",
          "type": "integer",
          "format": "int32"
        },
        "maxFailedTrialCount": {
          "description": "The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, AI Platform decides how many Trials must fail before the whole job fails.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata",
      "type": "object",
      "properties": {
        "backingHyperparameterTuningJob": {
          "description": "The resource name of the HyperparameterTuningJob that has been created to carry out this HyperparameterTuning task.",
          "type": "string"
        },
        "bestTrialBackingCustomJob": {
          "description": "The resource name of the CustomJob that has been created to run the best Trial of this HyperparameterTuning task.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictionResult": {
      "id": "GoogleCloudAiplatformV1SchemaPredictionResult",
      "description": "Represents a line of JSONL in the batch prediction output file.",
      "type": "object",
      "properties": {
        "instance": {
          "description": "User's input instance. Struct is used here instead of Any so that JsonFormat does not append an extra \"@type\" field when we convert the proto to JSON.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "key": {
          "description": "Optional user-provided key from the input instance.",
          "type": "string"
        },
        "prediction": {
          "description": "The prediction result. Value is used here instead of Any so that JsonFormat does not append an extra \"@type\" field when we convert the proto to JSON and so we can represent array of objects. Do not set error if this is set.",
          "type": "any"
        },
        "error": {
          "description": "The error result. Do not set prediction if this is set.",
          "$ref": "GoogleCloudAiplatformV1SchemaPredictionResultError"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaPredictionResultError": {
      "id": "GoogleCloudAiplatformV1SchemaPredictionResultError",
      "type": "object",
      "properties": {
        "status": {
          "description": "Error status. This will be serialized into the enum name e.g. \"NOT_FOUND\".",
          "type": "string",
          "enumDescriptions": [
            "Not an error; returned on success HTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
            "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level (e.g., when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence). (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. E.g., if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported\/enabled in this service. HTTP Mapping: 501 Not Implemented",
            "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
          ],
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ]
        },
        "message": {
          "description": "Error message with additional details.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation",
      "description": "Annotation details specific to image object detection.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "xMin": {
          "description": "The leftmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "xMax": {
          "description": "The rightmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMin": {
          "description": "The topmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMax": {
          "description": "The bottommost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaImageClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaImageClassificationAnnotation",
      "description": "Annotation details specific to image classification.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaImageDataItem": {
      "id": "GoogleCloudAiplatformV1SchemaImageDataItem",
      "description": "Payload of Image DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size.",
          "type": "string"
        },
        "mimeType": {
          "description": "Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image\/jpeg - image\/gif - image\/png - image\/webp - image\/bmp - image\/tiff - image\/vnd.microsoft.icon",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaImageDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaImageDatasetMetadata",
      "description": "The metadata of Datasets that contain Image DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Image DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation",
      "description": "Annotation details specific to image segmentation.",
      "type": "object",
      "properties": {
        "maskAnnotation": {
          "description": "Mask based segmentation annotation. Only one mask annotation can exist for one image.",
          "$ref": "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation"
        },
        "polygonAnnotation": {
          "description": "Polygon annotation.",
          "$ref": "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation"
        },
        "polylineAnnotation": {
          "description": "Polyline annotation.",
          "$ref": "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation",
      "description": "The mask based segmentation annotation.",
      "type": "object",
      "properties": {
        "maskGcsUri": {
          "description": "Google Cloud Storage URI that points to the mask image. The image must be in PNG format. It must have the same size as the DataItem's image. Each pixel in the image mask represents the AnnotationSpec which the pixel in the image DataItem belong to. Each color is mapped to one AnnotationSpec based on annotation_spec_colors.",
          "type": "string"
        },
        "annotationSpecColors": {
          "description": "The mapping between color and AnnotationSpec for this Annotation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1SchemaAnnotationSpecColor"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaAnnotationSpecColor": {
      "id": "GoogleCloudAiplatformV1SchemaAnnotationSpecColor",
      "description": "An entry of mapping between color and AnnotationSpec. The mapping is used in segmentation mask.",
      "type": "object",
      "properties": {
        "color": {
          "description": "The color of the AnnotationSpec in a segmentation mask.",
          "$ref": "GoogleTypeColor"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec represented by the color in the segmentation mask.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the AnnotationSpec represented by the color in the segmentation mask.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation",
      "description": "Represents a polygon in image.",
      "type": "object",
      "properties": {
        "vertexes": {
          "description": "The vertexes are connected one by one and the last vertex is connected to the first one to represent a polygon.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1SchemaVertex"
          }
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaVertex": {
      "id": "GoogleCloudAiplatformV1SchemaVertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "type": "number",
          "format": "double"
        },
        "y": {
          "description": "Y coordinate.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation",
      "description": "Represents a polyline in image.",
      "type": "object",
      "properties": {
        "vertexes": {
          "description": "The vertexes are connected one by one and the last vertex in not connected to the first one.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudAiplatformV1SchemaVertex"
          }
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTablesDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTablesDatasetMetadata",
      "description": "The metadata of Datasets that contain tables data.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig": {
      "id": "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig",
      "description": "The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource"
        },
        "bigquerySource": {
          "$ref": "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource": {
      "id": "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource": {
      "id": "GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of a BigQuery table. e.g. bq:\/\/projectId.bqDatasetId.bqTableId",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTextClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaTextClassificationAnnotation",
      "description": "Annotation details specific to text classification.",
      "type": "object",
      "properties": {
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTextDataItem": {
      "id": "GoogleCloudAiplatformV1SchemaTextDataItem",
      "description": "Payload of Text DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Output only. Google Cloud Storage URI points to the original text in user's bucket. The text file is up to 10MB in size.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTextDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTextDatasetMetadata",
      "description": "The metadata of Datasets that contain Text DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Text DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTextExtractionAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaTextExtractionAnnotation",
      "description": "Annotation details specific to text extraction.",
      "type": "object",
      "properties": {
        "textSegment": {
          "description": "The segment of the text content.",
          "$ref": "GoogleCloudAiplatformV1SchemaTextSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTextSegment": {
      "id": "GoogleCloudAiplatformV1SchemaTextSegment",
      "description": "The text segment inside of DataItem.",
      "type": "object",
      "properties": {
        "startOffset": {
          "description": "Zero-based character index of the first character of the text segment (counting characters from the beginning of the text).",
          "type": "string",
          "format": "uint64"
        },
        "endOffset": {
          "description": "Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment.",
          "type": "string",
          "format": "uint64"
        },
        "content": {
          "description": "The text content in the segment for output only.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTextSentimentAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaTextSentimentAnnotation",
      "description": "Annotation details specific to text sentiment.",
      "type": "object",
      "properties": {
        "sentiment": {
          "description": "The sentiment score for text.",
          "type": "integer",
          "format": "int32"
        },
        "sentimentMax": {
          "description": "The sentiment max score for text.",
          "type": "integer",
          "format": "int32"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata",
      "description": "The metadata of SavedQuery contains TextSentiment Annotations.",
      "type": "object",
      "properties": {
        "sentimentMax": {
          "description": "The maximum sentiment of sentiment Anntoation in this SavedQuery.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata",
      "description": "The metadata of Datasets that contain time series data.",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig"
        },
        "timeSeriesIdentifierColumn": {
          "description": "The column name of the time series identifier column that identifies the time series.",
          "type": "string"
        },
        "timeColumn": {
          "description": "The column name of the time column that identifies time order in the time series.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig": {
      "id": "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig",
      "description": "The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource"
        },
        "bigquerySource": {
          "$ref": "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource": {
      "id": "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource": {
      "id": "GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of a BigQuery table.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation",
      "description": "Annotation details specific to video action recognition.",
      "type": "object",
      "properties": {
        "timeSegment": {
          "description": "This Annotation applies to the time period represented by the TimeSegment. If it's not set, the Annotation applies to the whole video.",
          "$ref": "GoogleCloudAiplatformV1SchemaTimeSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaTimeSegment": {
      "id": "GoogleCloudAiplatformV1SchemaTimeSegment",
      "description": "A time period inside of a DataItem that has a time dimension (e.g. video).",
      "type": "object",
      "properties": {
        "startTimeOffset": {
          "description": "Start of the time segment (inclusive), represented as the duration since the start of the DataItem.",
          "type": "string",
          "format": "google-duration"
        },
        "endTimeOffset": {
          "description": "End of the time segment (exclusive), represented as the duration since the start of the DataItem.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation",
      "description": "Annotation details specific to video classification.",
      "type": "object",
      "properties": {
        "timeSegment": {
          "description": "This Annotation applies to the time period represented by the TimeSegment. If it's not set, the Annotation applies to the whole video.",
          "$ref": "GoogleCloudAiplatformV1SchemaTimeSegment"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaVideoDataItem": {
      "id": "GoogleCloudAiplatformV1SchemaVideoDataItem",
      "description": "Payload of Video DataItem.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Required. Google Cloud Storage URI points to the original video in user's bucket. The video is up to 50 GB in size and up to 3 hour in duration.",
          "type": "string"
        },
        "mimeType": {
          "description": "Output only. The mime type of the content of the video. Only the videos in below listed mime types are supported. Supported mime_type: - video\/mp4 - video\/avi - video\/quicktime",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaVideoDatasetMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaVideoDatasetMetadata",
      "description": "The metadata of Datasets that contain Video DataItems.",
      "type": "object",
      "properties": {
        "dataItemSchemaUri": {
          "description": "Points to a YAML file stored on Google Cloud Storage describing payload of the Video DataItems that belong to this Dataset.",
          "type": "string"
        },
        "gcsBucket": {
          "description": "Google Cloud Storage Bucket name that contains the blob data of this Dataset.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation": {
      "id": "GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation",
      "description": "Annotation details specific to video object tracking.",
      "type": "object",
      "properties": {
        "timeOffset": {
          "description": "A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start.",
          "type": "string",
          "format": "google-duration"
        },
        "xMin": {
          "description": "The leftmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "xMax": {
          "description": "The rightmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMin": {
          "description": "The topmost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "yMax": {
          "description": "The bottommost coordinate of the bounding box.",
          "type": "number",
          "format": "double"
        },
        "instanceId": {
          "description": "The instance of the object, expressed as a positive integer. Used to track the same object across different frames.",
          "type": "string",
          "format": "int64"
        },
        "annotationSpecId": {
          "description": "The resource Id of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the AnnotationSpec that this Annotation pertains to.",
          "type": "string"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata",
      "type": "object",
      "properties": {
        "multiLabel": {
          "description": "Whether or not the classification label is multi_label.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata": {
      "id": "GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "aiplatform.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "aiplatform.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "aiplatform.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                },
                "wait": {
                  "id": "aiplatform.projects.locations.operations.wait",
                  "path": "v1/{+name}:wait",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:wait",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to wait on.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "timeout": {
                      "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP\/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
                      "location": "query",
                      "type": "string",
                      "format": "google-duration"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP\/RPC timeout, the HTTP\/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done."
                }
              }
            },
            "datasets": {
              "methods": {
                "create": {
                  "id": "aiplatform.projects.locations.datasets.create",
                  "path": "v1/{+parent}/datasets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to create the Dataset in. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1Dataset"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a Dataset."
                },
                "get": {
                  "id": "aiplatform.projects.locations.datasets.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Dataset resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/datasets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1Dataset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a Dataset."
                },
                "patch": {
                  "id": "aiplatform.projects.locations.datasets.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource name of the Dataset.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/datasets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see [FieldMask](https:\/\/tinyurl.com\/protobufs\/google.protobuf#fieldmask). Updatable fields: * `display_name` * `description` * `labels`",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1Dataset"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1Dataset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a Dataset."
                },
                "list": {
                  "id": "aiplatform.projects.locations.datasets.list",
                  "path": "v1/{+parent}/datasets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the Dataset's parent resource. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "orderBy": {
                      "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListDatasetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Datasets in a Location."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.datasets.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the Dataset to delete. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/datasets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a Dataset."
                },
                "import": {
                  "id": "aiplatform.projects.locations.datasets.import",
                  "path": "v1/{+name}:import",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:import",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Dataset resource. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/datasets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1ImportDataRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Imports data into a Dataset."
                },
                "export": {
                  "id": "aiplatform.projects.locations.datasets.export",
                  "path": "v1/{+name}:export",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:export",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Dataset resource. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/datasets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1ExportDataRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Exports data from a Dataset."
                }
              }
              ,
              "resources": {
                "dataItems": {
                  "methods": {
                    "list": {
                      "id": "aiplatform.projects.locations.datasets.dataItems.list",
                      "path": "v1/{+parent}/dataItems",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the Dataset to list DataItems from. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}`",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/datasets\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "filter": {
                          "description": "The standard list filter.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The standard list page size.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The standard list page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "readMask": {
                          "description": "Mask specifying which fields to read.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "orderBy": {
                          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudAiplatformV1ListDataItemsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists DataItems in a Dataset."
                    }
                  }
                  ,
                  "resources": {
                    "annotations": {
                      "methods": {
                        "list": {
                          "id": "aiplatform.projects.locations.datasets.dataItems.annotations.list",
                          "path": "v1/{+parent}/annotations",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/dataItems/{dataItemsId}/annotations",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the DataItem to list Annotations from. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}\/dataItems\/{data_item}`",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/datasets\/[^\/]+\/dataItems\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "filter": {
                              "description": "The standard list filter.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "The standard list page size.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "The standard list page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "readMask": {
                              "description": "Mask specifying which fields to read.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            },
                            "orderBy": {
                              "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudAiplatformV1ListAnnotationsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists Annotations belongs to a dataitem"
                        }
                      }
                    }
                  }
                },
                "annotationSpecs": {
                  "methods": {
                    "get": {
                      "id": "aiplatform.projects.locations.datasets.annotationSpecs.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}/annotationSpecs/{annotationSpecsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the AnnotationSpec resource. Format: `projects\/{project}\/locations\/{location}\/datasets\/{dataset}\/annotationSpecs\/{annotation_spec}`",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/datasets\/[^\/]+\/annotationSpecs\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "readMask": {
                          "description": "Mask specifying which fields to read.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudAiplatformV1AnnotationSpec"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an AnnotationSpec."
                    }
                  }
                }
              }
            },
            "endpoints": {
              "methods": {
                "create": {
                  "id": "aiplatform.projects.locations.endpoints.create",
                  "path": "v1/{+parent}/endpoints",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to create the Endpoint in. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1Endpoint"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates an Endpoint."
                },
                "get": {
                  "id": "aiplatform.projects.locations.endpoints.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Endpoint resource. Format: `projects\/{project}\/locations\/{location}\/endpoints\/{endpoint}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1Endpoint"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets an Endpoint."
                },
                "list": {
                  "id": "aiplatform.projects.locations.endpoints.list",
                  "path": "v1/{+parent}/endpoints",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location from which to list the Endpoints. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `endpoint` supports = and !=. `endpoint` represents the Endpoint ID, i.e. the last segment of the Endpoint's resource name. * `display_name` supports = and, != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `endpoint=1` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The standard list page token. Typically obtained via ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints call.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Optional. Mask specifying which fields to read.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "orderBy": {
                      "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListEndpointsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Endpoints in a Location."
                },
                "patch": {
                  "id": "aiplatform.projects.locations.endpoints.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource name of the Endpoint.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. See [FieldMask](https:\/\/tinyurl.com\/protobufs\/google.protobuf#fieldmask).",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1Endpoint"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1Endpoint"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an Endpoint."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.endpoints.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Endpoint resource to be deleted. Format: `projects\/{project}\/locations\/{location}\/endpoints\/{endpoint}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an Endpoint."
                },
                "deployModel": {
                  "id": "aiplatform.projects.locations.endpoints.deployModel",
                  "path": "v1/{+endpoint}:deployModel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:deployModel",
                  "httpMethod": "POST",
                  "parameters": {
                    "endpoint": {
                      "description": "Required. The name of the Endpoint resource into which to deploy a Model. Format: `projects\/{project}\/locations\/{location}\/endpoints\/{endpoint}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "endpoint"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1DeployModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deploys a Model into this Endpoint, creating a DeployedModel within it."
                },
                "undeployModel": {
                  "id": "aiplatform.projects.locations.endpoints.undeployModel",
                  "path": "v1/{+endpoint}:undeployModel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:undeployModel",
                  "httpMethod": "POST",
                  "parameters": {
                    "endpoint": {
                      "description": "Required. The name of the Endpoint resource from which to undeploy a Model. Format: `projects\/{project}\/locations\/{location}\/endpoints\/{endpoint}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "endpoint"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1UndeployModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources it's using."
                },
                "predict": {
                  "id": "aiplatform.projects.locations.endpoints.predict",
                  "path": "v1/{+endpoint}:predict",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:predict",
                  "httpMethod": "POST",
                  "parameters": {
                    "endpoint": {
                      "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects\/{project}\/locations\/{location}\/endpoints\/{endpoint}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "endpoint"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1PredictRequest"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1PredictResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Perform an online prediction."
                }
              }
            },
            "customJobs": {
              "methods": {
                "create": {
                  "id": "aiplatform.projects.locations.customJobs.create",
                  "path": "v1/{+parent}/customJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to create the CustomJob in. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1CustomJob"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1CustomJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a CustomJob. A created CustomJob right away will be attempted to be run."
                },
                "get": {
                  "id": "aiplatform.projects.locations.customJobs.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the CustomJob resource. Format: `projects\/{project}\/locations\/{location}\/customJobs\/{custom_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/customJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1CustomJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a CustomJob."
                },
                "list": {
                  "id": "aiplatform.projects.locations.customJobs.list",
                  "path": "v1/{+parent}/customJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to list the CustomJobs from. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter. Supported fields: * `display_name` supports = and !=. * `state` supports = and !=. Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name=\"my_job\"` * `state=\"JOB_STATE_RUNNING\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `state=\"JOB_STATE_FAILED\"`",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token. Typically obtained via ListCustomJobsResponse.next_page_token of the previous JobService.ListCustomJobs call.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListCustomJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists CustomJobs in a Location."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.customJobs.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the CustomJob resource to be deleted. Format: `projects\/{project}\/locations\/{location}\/customJobs\/{custom_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/customJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a CustomJob."
                },
                "cancel": {
                  "id": "aiplatform.projects.locations.customJobs.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customJobs/{customJobsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the CustomJob to cancel. Format: `projects\/{project}\/locations\/{location}\/customJobs\/{custom_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/customJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1CancelCustomJobRequest"
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Cancels a CustomJob. Starts asynchronous cancellation on the CustomJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetCustomJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the CustomJob is not deleted; instead it becomes a job with a CustomJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and CustomJob.state is set to `CANCELLED`."
                }
              }
            },
            "dataLabelingJobs": {
              "methods": {
                "create": {
                  "id": "aiplatform.projects.locations.dataLabelingJobs.create",
                  "path": "v1/{+parent}/dataLabelingJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent of the DataLabelingJob. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1DataLabelingJob"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1DataLabelingJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a DataLabelingJob."
                },
                "get": {
                  "id": "aiplatform.projects.locations.dataLabelingJobs.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the DataLabelingJob. Format: `projects\/{project}\/locations\/{location}\/dataLabelingJobs\/{data_labeling_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataLabelingJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1DataLabelingJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a DataLabelingJob."
                },
                "list": {
                  "id": "aiplatform.projects.locations.dataLabelingJobs.list",
                  "path": "v1/{+parent}/dataLabelingJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent of the DataLabelingJob. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter. Supported fields: * `display_name` supports = and !=. * `state` supports = and !=. Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name=\"my_job\"` * `state=\"JOB_STATE_RUNNING\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `state=\"JOB_STATE_FAILED\"`",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read. FieldMask represents a set of symbolic field paths. For example, the mask can be `paths: \"name\"`. The \"name\" here is a field in DataLabelingJob. If this field is not set, all fields of the DataLabelingJob are returned.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "orderBy": {
                      "description": "A comma-separated list of fields to order by, sorted in ascending order by default. Use `desc` after a field name for descending.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListDataLabelingJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists DataLabelingJobs in a Location."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.dataLabelingJobs.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the DataLabelingJob to be deleted. Format: `projects\/{project}\/locations\/{location}\/dataLabelingJobs\/{data_labeling_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataLabelingJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a DataLabelingJob."
                },
                "cancel": {
                  "id": "aiplatform.projects.locations.dataLabelingJobs.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataLabelingJobs/{dataLabelingJobsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the DataLabelingJob. Format: `projects\/{project}\/locations\/{location}\/dataLabelingJobs\/{data_labeling_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataLabelingJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1CancelDataLabelingJobRequest"
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Cancels a DataLabelingJob. Success of cancellation is not guaranteed."
                }
              }
            },
            "hyperparameterTuningJobs": {
              "methods": {
                "create": {
                  "id": "aiplatform.projects.locations.hyperparameterTuningJobs.create",
                  "path": "v1/{+parent}/hyperparameterTuningJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to create the HyperparameterTuningJob in. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1HyperparameterTuningJob"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1HyperparameterTuningJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a HyperparameterTuningJob"
                },
                "get": {
                  "id": "aiplatform.projects.locations.hyperparameterTuningJobs.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the HyperparameterTuningJob resource. Format: `projects\/{project}\/locations\/{location}\/hyperparameterTuningJobs\/{hyperparameter_tuning_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/hyperparameterTuningJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1HyperparameterTuningJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a HyperparameterTuningJob"
                },
                "list": {
                  "id": "aiplatform.projects.locations.hyperparameterTuningJobs.list",
                  "path": "v1/{+parent}/hyperparameterTuningJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter. Supported fields: * `display_name` supports = and !=. * `state` supports = and !=. Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name=\"my_job\"` * `state=\"JOB_STATE_RUNNING\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `state=\"JOB_STATE_FAILED\"`",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token. Typically obtained via ListHyperparameterTuningJobsResponse.next_page_token of the previous JobService.ListHyperparameterTuningJobs call.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists HyperparameterTuningJobs in a Location."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.hyperparameterTuningJobs.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the HyperparameterTuningJob resource to be deleted. Format: `projects\/{project}\/locations\/{location}\/hyperparameterTuningJobs\/{hyperparameter_tuning_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/hyperparameterTuningJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a HyperparameterTuningJob."
                },
                "cancel": {
                  "id": "aiplatform.projects.locations.hyperparameterTuningJobs.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/hyperparameterTuningJobs/{hyperparameterTuningJobsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the HyperparameterTuningJob to cancel. Format: `projects\/{project}\/locations\/{location}\/hyperparameterTuningJobs\/{hyperparameter_tuning_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/hyperparameterTuningJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest"
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Cancels a HyperparameterTuningJob. Starts asynchronous cancellation on the HyperparameterTuningJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetHyperparameterTuningJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the HyperparameterTuningJob is not deleted; instead it becomes a job with a HyperparameterTuningJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and HyperparameterTuningJob.state is set to `CANCELLED`."
                }
              }
            },
            "batchPredictionJobs": {
              "methods": {
                "create": {
                  "id": "aiplatform.projects.locations.batchPredictionJobs.create",
                  "path": "v1/{+parent}/batchPredictionJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to create the BatchPredictionJob in. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1BatchPredictionJob"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1BatchPredictionJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start."
                },
                "get": {
                  "id": "aiplatform.projects.locations.batchPredictionJobs.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs/{batchPredictionJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the BatchPredictionJob resource. Format: `projects\/{project}\/locations\/{location}\/batchPredictionJobs\/{batch_prediction_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/batchPredictionJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1BatchPredictionJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a BatchPredictionJob"
                },
                "list": {
                  "id": "aiplatform.projects.locations.batchPredictionJobs.list",
                  "path": "v1/{+parent}/batchPredictionJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to list the BatchPredictionJobs from. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter. Supported fields: * `display_name` supports = and !=. * `state` supports = and !=. * `model_display_name` supports = and != Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name=\"my_job\"` * `state=\"JOB_STATE_RUNNING\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `state=\"JOB_STATE_FAILED\"`",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token. Typically obtained via ListBatchPredictionJobsResponse.next_page_token of the previous JobService.ListBatchPredictionJobs call.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListBatchPredictionJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists BatchPredictionJobs in a Location."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.batchPredictionJobs.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs/{batchPredictionJobsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the BatchPredictionJob resource to be deleted. Format: `projects\/{project}\/locations\/{location}\/batchPredictionJobs\/{batch_prediction_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/batchPredictionJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a BatchPredictionJob. Can only be called on jobs that already finished."
                },
                "cancel": {
                  "id": "aiplatform.projects.locations.batchPredictionJobs.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batchPredictionJobs/{batchPredictionJobsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the BatchPredictionJob to cancel. Format: `projects\/{project}\/locations\/{location}\/batchPredictionJobs\/{batch_prediction_job}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/batchPredictionJobs\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1CancelBatchPredictionJobRequest"
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Cancels a BatchPredictionJob. Starts asynchronous cancellation on the BatchPredictionJob. The server makes the best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetBatchPredictionJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On a successful cancellation, the BatchPredictionJob is not deleted;instead its BatchPredictionJob.state is set to `CANCELLED`. Any files already outputted by the job are not deleted."
                }
              }
            },
            "migratableResources": {
              "methods": {
                "search": {
                  "id": "aiplatform.projects.locations.migratableResources.search",
                  "path": "v1/{+parent}/migratableResources:search",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migratableResources:search",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The location that the migratable resources should be searched from. It's the AI Platform location that the resources can be migrated to, not the resources' original location. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1SearchMigratableResourcesRequest"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1SearchMigratableResourcesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com that can be migrated to AI Platform's given location."
                },
                "batchMigrate": {
                  "id": "aiplatform.projects.locations.migratableResources.batchMigrate",
                  "path": "v1/{+parent}/migratableResources:batchMigrate",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migratableResources:batchMigrate",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The location of the migrated resource will live in. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1BatchMigrateResourcesRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and datalabeling.googleapis.com to AI Platform (Unified)."
                }
              }
            },
            "models": {
              "methods": {
                "upload": {
                  "id": "aiplatform.projects.locations.models.upload",
                  "path": "v1/{+parent}/models:upload",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models:upload",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location into which to upload the Model. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1UploadModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Uploads a Model artifact into AI Platform."
                },
                "get": {
                  "id": "aiplatform.projects.locations.models.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Model resource. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/models\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1Model"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a Model."
                },
                "list": {
                  "id": "aiplatform.projects.locations.models.list",
                  "path": "v1/{+parent}/models",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to list the Models from. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `model` supports = and !=. `model` represents the Model ID, i.e. the last segment of the Model's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `model=1234` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token. Typically obtained via ListModelsResponse.next_page_token of the previous ModelService.ListModels call.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "orderBy": {
                      "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListModelsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Models in a Location."
                },
                "patch": {
                  "id": "aiplatform.projects.locations.models.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the Model.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/models\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see [FieldMask](https:\/\/tinyurl.com\/protobufs\/google.protobuf#fieldmask).",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1Model"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1Model"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a Model."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.models.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Model resource to be deleted. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/models\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a Model. Note: Model can only be deleted if there are no DeployedModels created from it."
                },
                "export": {
                  "id": "aiplatform.projects.locations.models.export",
                  "path": "v1/{+name}:export",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:export",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the Model to export. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/models\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1ExportModelRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Exports a trained, exportable, Model to a location specified by the user. A Model is considered to be exportable if it has at least one supported export format."
                }
              }
              ,
              "resources": {
                "evaluations": {
                  "methods": {
                    "get": {
                      "id": "aiplatform.projects.locations.models.evaluations.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the ModelEvaluation resource. Format: `projects\/{project}\/locations\/{location}\/models\/{model}\/evaluations\/{evaluation}`",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/models\/[^\/]+\/evaluations\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudAiplatformV1ModelEvaluation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets a ModelEvaluation."
                    },
                    "list": {
                      "id": "aiplatform.projects.locations.models.evaluations.list",
                      "path": "v1/{+parent}/evaluations",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the Model to list the ModelEvaluations from. Format: `projects\/{project}\/locations\/{location}\/models\/{model}`",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/models\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "filter": {
                          "description": "The standard list filter.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The standard list page size.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The standard list page token. Typically obtained via ListModelEvaluationsResponse.next_page_token of the previous ModelService.ListModelEvaluations call.",
                          "location": "query",
                          "type": "string"
                        },
                        "readMask": {
                          "description": "Mask specifying which fields to read.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudAiplatformV1ListModelEvaluationsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists ModelEvaluations in a Model."
                    }
                  }
                  ,
                  "resources": {
                    "slices": {
                      "methods": {
                        "get": {
                          "id": "aiplatform.projects.locations.models.evaluations.slices.get",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/slices/{slicesId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the ModelEvaluationSlice resource. Format: `projects\/{project}\/locations\/{location}\/models\/{model}\/evaluations\/{evaluation}\/slices\/{slice}`",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/models\/[^\/]+\/evaluations\/[^\/]+\/slices\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudAiplatformV1ModelEvaluationSlice"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets a ModelEvaluationSlice."
                        },
                        "list": {
                          "id": "aiplatform.projects.locations.models.evaluations.slices.list",
                          "path": "v1/{+parent}/slices",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}/evaluations/{evaluationsId}/slices",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format: `projects\/{project}\/locations\/{location}\/models\/{model}\/evaluations\/{evaluation}`",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/models\/[^\/]+\/evaluations\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "filter": {
                              "description": "The standard list filter. * `slice.dimension` - for =.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "The standard list page size.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "The standard list page token. Typically obtained via ListModelEvaluationSlicesResponse.next_page_token of the previous ModelService.ListModelEvaluationSlices call.",
                              "location": "query",
                              "type": "string"
                            },
                            "readMask": {
                              "description": "Mask specifying which fields to read.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists ModelEvaluationSlices in a ModelEvaluation."
                        }
                      }
                    }
                  }
                }
              }
            },
            "trainingPipelines": {
              "methods": {
                "create": {
                  "id": "aiplatform.projects.locations.trainingPipelines.create",
                  "path": "v1/{+parent}/trainingPipelines",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to create the TrainingPipeline in. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1TrainingPipeline"
                  },
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1TrainingPipeline"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run."
                },
                "get": {
                  "id": "aiplatform.projects.locations.trainingPipelines.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the TrainingPipeline resource. Format: `projects\/{project}\/locations\/{location}\/trainingPipelines\/{training_pipeline}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/trainingPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1TrainingPipeline"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a TrainingPipeline."
                },
                "list": {
                  "id": "aiplatform.projects.locations.trainingPipelines.list",
                  "path": "v1/{+parent}/trainingPipelines",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the Location to list the TrainingPipelines from. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter. Supported fields: * `display_name` supports = and !=. * `state` supports = and !=. Some examples of using the filter are: * `state=\"PIPELINE_STATE_SUCCEEDED\" AND display_name=\"my_pipeline\"` * `state=\"PIPELINE_STATE_RUNNING\" OR display_name=\"my_pipeline\"` * `NOT display_name=\"my_pipeline\"` * `state=\"PIPELINE_STATE_FAILED\"`",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token. Typically obtained via ListTrainingPipelinesResponse.next_page_token of the previous PipelineService.ListTrainingPipelines call.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListTrainingPipelinesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists TrainingPipelines in a Location."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.trainingPipelines.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the TrainingPipeline resource to be deleted. Format: `projects\/{project}\/locations\/{location}\/trainingPipelines\/{training_pipeline}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/trainingPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a TrainingPipeline."
                },
                "cancel": {
                  "id": "aiplatform.projects.locations.trainingPipelines.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trainingPipelines/{trainingPipelinesId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the TrainingPipeline to cancel. Format: `projects\/{project}\/locations\/{location}\/trainingPipelines\/{training_pipeline}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/trainingPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1CancelTrainingPipelineRequest"
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Cancels a TrainingPipeline. Starts asynchronous cancellation on the TrainingPipeline. The server makes a best effort to cancel the pipeline, but success is not guaranteed. Clients can use PipelineService.GetTrainingPipeline or other methods to check whether the cancellation succeeded or whether the pipeline completed despite cancellation. On successful cancellation, the TrainingPipeline is not deleted; instead it becomes a pipeline with a TrainingPipeline.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and TrainingPipeline.state is set to `CANCELLED`."
                }
              }
            },
            "specialistPools": {
              "methods": {
                "create": {
                  "id": "aiplatform.projects.locations.specialistPools.create",
                  "path": "v1/{+parent}/specialistPools",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/specialistPools",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent Project name for the new SpecialistPool. The form is `projects\/{project}\/locations\/{location}`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1SpecialistPool"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a SpecialistPool."
                },
                "get": {
                  "id": "aiplatform.projects.locations.specialistPools.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the SpecialistPool resource. The form is `projects\/{project}\/locations\/{location}\/specialistPools\/{specialist_pool}`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/specialistPools\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1SpecialistPool"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a SpecialistPool."
                },
                "list": {
                  "id": "aiplatform.projects.locations.specialistPools.list",
                  "path": "v1/{+parent}/specialistPools",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/specialistPools",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the SpecialistPool's parent resource. Format: `projects\/{project}\/locations\/{location}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token. Typically obtained by ListSpecialistPoolsResponse.next_page_token of the previous SpecialistPoolService.ListSpecialistPools call. Return first page if empty.",
                      "location": "query",
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Mask specifying which fields to read. FieldMask represents a set of",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudAiplatformV1ListSpecialistPoolsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists SpecialistPools in a Location."
                },
                "delete": {
                  "id": "aiplatform.projects.locations.specialistPools.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the SpecialistPool to delete. Format: `projects\/{project}\/locations\/{location}\/specialistPools\/{specialist_pool}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/specialistPools\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "force": {
                      "description": "If set to true, any specialist managers in this SpecialistPool will also be deleted. (Otherwise, the request will only work if the SpecialistPool has no specialist managers.)",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a SpecialistPool as well as all Specialists in the pool."
                },
                "patch": {
                  "id": "aiplatform.projects.locations.specialistPools.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/specialistPools/{specialistPoolsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the SpecialistPool.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/specialistPools\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudAiplatformV1SpecialistPool"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a SpecialistPool."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}